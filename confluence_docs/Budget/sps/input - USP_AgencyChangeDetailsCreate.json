{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "input",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_AgencyChangeDetailsCreate",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_AgencyChangeDetailsCreate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to insert records into the "
        },
        {
          "type": "text",
          "text": "input.agencychangedetail",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table based on the data provided in a user-defined table type parameter. It processes each row of the input data, assigns a new "
        },
        {
          "type": "text",
          "text": "agencychangedetailentityid",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", and inserts the data into the table. After processing all rows, it updates the "
        },
        {
          "type": "text",
          "text": "ModifiedDate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "text": "ModifiedBy",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " fields in the "
        },
        {
          "type": "text",
          "text": "input.AgencyChange",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table and sets the status of related records in the "
        },
        {
          "type": "text",
          "text": "budget.Scenario",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table to 'REQUIRERECALC' if they are currently 'CALCULATED'."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple operations, including cursor-based iteration over input data, conditional updates, and handling of multiple tables. While the logic is straightforward, the use of cursors and multiple table updates increases the complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@details AS input.UDT_AgencyChangeDetail READONLY",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A table-valued parameter that contains the details of agency changes. This parameter is expected to be a structured data type that includes fields corresponding to the columns in the "
                },
                {
                  "type": "text",
                  "text": "input.agencychangedetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@actionBy AS VARCHAR(25) = 'SYSTEM'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An optional parameter that specifies who performed the action. Defaults to 'SYSTEM' if not provided."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure starts by setting "
                },
                {
                  "type": "text",
                  "text": "nocount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to ON to prevent the sending of DONE_IN_PROC messages to the client, which can improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variable Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It declares variables to hold data for each column in the "
                },
                {
                  "type": "text",
                  "text": "input.agencychangedetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Entity ID Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the next "
                },
                {
                  "type": "text",
                  "text": "agencychangedetailentityid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " by finding the maximum current ID and adding one."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A cursor is declared and opened to iterate over the rows in the "
                },
                {
                  "type": "text",
                  "text": "@details",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table-valued parameter."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": For each row fetched by the cursor, an INSERT operation is performed to add the data to the "
                },
                {
                  "type": "text",
                  "text": "input.agencychangedetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The cursor is closed and deallocated after processing all rows."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "input.AgencyChange",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table is updated to set the "
                        },
                        {
                          "type": "text",
                          "text": "ModifiedDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "ModifiedBy",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " fields."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "budget.Scenario",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table is updated to change the status to 'REQUIRERECALC' for records related to the "
                        },
                        {
                          "type": "text",
                          "text": "AgencyChangeID",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " that are currently 'CALCULATED'."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can lead to performance issues, especially with large datasets, as it processes rows one at a time. Consider using set-based operations if possible."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Entity ID Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculation of "
                },
                {
                  "type": "text",
                  "text": "agencychangedetailentityid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " using "
                },
                {
                  "type": "text",
                  "text": "MAX",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can be a bottleneck if the table is large, as it requires a full scan."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not handle concurrency issues that might arise from multiple simultaneous executions, which could lead to duplicate "
                },
                {
                  "type": "text",
                  "text": "agencychangedetailentityid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " values."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency and Race Conditions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculation of the next "
                },
                {
                  "type": "text",
                  "text": "agencychangedetailentityid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is not protected against concurrent executions, which could result in duplicate IDs if two instances of the procedure run simultaneously."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks error handling, which means any failure during execution (e.g., due to data type mismatches or constraint violations) will not be gracefully managed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor may not scale well with large datasets, potentially leading to long execution times."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Defaults",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The default value for "
                },
                {
                  "type": "text",
                  "text": "@actionBy",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is hardcoded as 'SYSTEM', which may not be appropriate for all use cases and could lead to incorrect audit trails if not explicitly set by the caller."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [input].[USP_AgencyChangeDetailsCreate]\n(\r\n\t@details AS input.UDT_AgencyChangeDetail READONLY\r\n\t,@actionBy AS VARCHAR(25) = 'SYSTEM'\r\n)\r\nAS\r\nBEGIN\r\n    SET nocount ON; \r\n\r\n    DECLARE @AgencyChangeDetailEntityID AS INT, @AgencyChangeID AS INT, @AgencyCode AS VARCHAR(6), @FacilityNo AS VARCHAR(10)\r\n        ,@FacilityName AS VARCHAR(100), @IsNewAddition AS BIT = 0, @EntireYear AS BIT = 0, @ActionDescription AS VARCHAR(100)\r\n        ,@AddRemoveFacility AS VARCHAR(100), @EffectiveDate AS DATETIME, @Notes AS VARCHAR(200), @BudgetGroupID AS INT, @BillingPeriod AS INT\r\n        ,@DemandUsage AS DECIMAL(18, 5) = 0.0, @EnergyUsage AS DECIMAL(18, 5) = 0.0, @EnergyUsagePeakPercentage AS DECIMAL(18, 5) = 0.0\r\n        ,@EnergyUsageReactivePower AS DECIMAL(18, 5) = 0.0, @StreetLightingFacilityPoints AS DECIMAL(18, 5) = 0.0;\r\n\r\n    SELECT @AgencyChangeDetailEntityID = MAX(agencychangedetailentityid) + 1 FROM input.agencychangedetail;\r\n\r\n    DECLARE @detailCursor AS CURSOR;\r\n    SET @detailCursor =  CURSOR FOR SELECT agencychangeid,\r\n        agencycode,\r\n        facilityno,\r\n\t\tfacilityname,\r\n        isnewaddition,\r\n\t\tentireyear,\r\n\t\tactionDescription,\r\n\t\taddRemoveFacility,\r\n        effectivedate,\r\n\t\tnotes,\r\n        budgetgroupid,\r\n        billingperiod,\r\n        demandusage,\r\n        energyusage,\r\n        energyusagepeakpercentage,\r\n        energyusagereactivepower,\r\n        streetlightingfacilitypoints\r\n    FROM @details;\r\n    OPEN @detailCursor; \r\n    FETCH NEXT FROM  @detailCursor INTO @AgencyChangeID, \r\n        @AgencyCode, \r\n        @FacilityNo, \r\n\t    @FacilityName,\r\n        @IsNewAddition, \r\n\t    @EntireYear,\r\n\t    @ActionDescription,\r\n\t    @AddRemoveFacility,\r\n        @EffectiveDate,\r\n\t    @Notes,\r\n        @BudgetGroupID, \r\n        @BillingPeriod, \r\n        @DemandUsage, \r\n        @EnergyUsage, \r\n        @EnergyUsagePeakPercentage, \r\n        @EnergyUsageReactivePower, \r\n        @StreetLightingFacilityPoints;\r\n\r\n    WHILE (@@FETCH_STATUS = 0)\r\n    BEGIN\r\n        INSERT INTO input.agencychangedetail \r\n            (agencychangedetailentityid,\r\n            agencychangeid,\r\n            agencycode,\r\n            facilityno,\r\n\t\t    facilityname,\r\n            budgetgroupid,\r\n            isnewaddition,\r\n\t\t    entireyear,\r\n\t\t    actionDescription,\r\n\t\t    addRemoveFacility,\r\n            effectivedate,\r\n\t\t    notes,\r\n            billingperiod,\r\n            demandusage,\r\n            energyusage,\r\n            energyusagepeakpercentage,\r\n            energyusagereactivepower,\r\n            streetlightingfacilitypoints) \r\n        VALUES (@AgencyChangeDetailEntityID,\r\n            @AgencyChangeID,\r\n            @AgencyCode,\r\n            @FacilityNo,\r\n\t        @FacilityName,\r\n\t        @BudgetGroupID,\r\n            @IsNewAddition,\r\n\t        @EntireYear,\r\n\t        @ActionDescription,\r\n\t        @AddRemoveFacility,\r\n            @EffectiveDate,\r\n\t        @Notes,\r\n            @BillingPeriod,\r\n            @DemandUsage,\r\n            @EnergyUsage,\r\n            @EnergyUsagePeakPercentage,\r\n            @EnergyUsageReactivePower,\r\n            @StreetLightingFacilityPoints);\r\n        FETCH NEXT FROM  @detailCursor INTO  @AgencyChangeID, \r\n           @AgencyCode, \r\n           @FacilityNo,\r\n\t       @FacilityName, \r\n           @IsNewAddition,\r\n\t       @EntireYear,\r\n\t       @ActionDescription,\r\n\t       @AddRemoveFacility,\r\n           @EffectiveDate,\r\n\t       @Notes,  \r\n           @BudgetGroupID, \r\n           @BillingPeriod, \r\n           @DemandUsage, \r\n           @EnergyUsage, \r\n           @EnergyUsagePeakPercentage, \r\n           @EnergyUsageReactivePower, \r\n           @StreetLightingFacilityPoints\r\n    END;\r\n\r\n    CLOSE @detailCursor;\r\n    DEALLOCATE @detailCursor;\r\n\t\r\n    UPDATE input.AgencyChange SET ModifiedDate=GETDATE(), ModifiedBy=@actionBy WHERE id=@AgencyChangeID;\r\n\r\n    UPDATE budget.Scenario SET [Status] = 'REQUIRERECALC' WHERE AgencyChangeID=@AgencyChangeID AND [Status] IN ('CALCULATED');\r\nEND;\r"
        }
      ]
    }
  ]
}
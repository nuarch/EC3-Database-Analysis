{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Preload",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_PreloadTier4REC",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_PreloadTier4REC",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to manage data in the "
        },
        {
          "type": "text",
          "text": "budget.StagingBudget",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. It performs two main operations: deleting existing records based on certain criteria and inserting new aggregated data into the same table. The procedure is part of a larger budgeting system, dealing specifically with a budget group identified by "
        },
        {
          "type": "text",
          "text": "BudgetGroupID = 77",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". It processes data related to energy usage and costs, likely for a specific fiscal year ("
        },
        {
          "type": "text",
          "text": "FY",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ") and scenario ("
        },
        {
          "type": "text",
          "text": "ScenarioId",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ")."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple table joins and subqueries."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses conditional logic within aggregate functions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles both deletion and insertion operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes a UNION operation to combine results from two different query sets."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@fy AS INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the fiscal year. If not provided, the procedure defaults to using the fiscal year present in the data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@scenarioId AS INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the scenario identifier. If not provided, the procedure defaults to using the scenario ID present in the data."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Deletion Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure deletes records from "
                        },
                        {
                          "type": "text",
                          "text": "budget.StagingBudget",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where the fiscal year and scenario ID match the provided parameters (or all records if parameters are NULL), and the "
                        },
                        {
                          "type": "text",
                          "text": "BudgetGroupID",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is 77."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insertion Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure inserts aggregated data into "
                        },
                        {
                          "type": "text",
                          "text": "budget.StagingBudget",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ":"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "First Query",
                                  "marks": [
                                    {
                                      "type": "strong"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ": Aggregates data for agencies not in a specific list of codes. It calculates "
                                },
                                {
                                  "type": "text",
                                  "text": "EnergyDollars",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ", "
                                },
                                {
                                  "type": "text",
                                  "text": "TotalDollars",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ", and "
                                },
                                {
                                  "type": "text",
                                  "text": "EnergyUsage",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " using complex expressions involving multiple tables ("
                                },
                                {
                                  "type": "text",
                                  "text": "Tier4REC",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ", "
                                },
                                {
                                  "type": "text",
                                  "text": "Agency",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ", "
                                },
                                {
                                  "type": "text",
                                  "text": "vwBudgetRates",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ", and a subquery on "
                                },
                                {
                                  "type": "text",
                                  "text": "AgencyByFY",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ")."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Second Query",
                                  "marks": [
                                    {
                                      "type": "strong"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ": Similar to the first, but targets agencies within the specified list of codes. It only calculates "
                                },
                                {
                                  "type": "text",
                                  "text": "EnergyUsage",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ", setting "
                                },
                                {
                                  "type": "text",
                                  "text": "EnergyDollars",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " and "
                                },
                                {
                                  "type": "text",
                                  "text": "TotalDollars",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " to zero."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Grouping and Union",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Both queries group results by "
                        },
                        {
                          "type": "text",
                          "text": "ScenarioId",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "BudgetStageID",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "BudgetBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "AgencyCodeOEC",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The results of the two queries are combined using a UNION operation."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the columns used in joins and where clauses ("
                },
                {
                  "type": "text",
                  "text": "FY",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "ScenarioId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "BudgetBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "BudgetGroupID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") are indexed to improve query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of SUM and CASE statements within the aggregation can be computationally expensive, especially if the underlying tables are large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Subqueries",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The subquery in the join condition for "
                },
                {
                  "type": "text",
                  "text": "AgencyByFY",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could be optimized or indexed to prevent performance bottlenecks."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "NULL Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "ISNULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " in the WHERE clause and calculations could lead to unexpected results if not all scenarios are accounted for."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The deletion step removes data based on the fiscal year and scenario ID, which could lead to data loss if not carefully managed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If this procedure is run concurrently by multiple processes, it could lead to locking issues or race conditions, especially during the delete and insert operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions in case of failures."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Preload].[USP_PreloadTier4REC]\n(\r\n\t@fy AS INT = NULL\r\n\t,@scenarioId AS INT = NULL\r\n)\r\nAS\r\nBEGIN\r\n\tDELETE FROM budget.StagingBudget\r\n\tWHERE FY = ISNULL(@fy, FY)\r\n\t\tAND ScenarioId = ISNULL(@scenarioId, ScenarioId)\r\n\t\tAND BudgetGroupID = 77;\r\n\r\n\tINSERT INTO budget.StagingBudget(ScenarioId\r\n\t\t,BudgetStageID\r\n\t\t,AgencyCodeOEC\r\n\t\t,BudgetGroupID\r\n\t\t,BudgetBillingPeriod\r\n\t\t,EnergyDollars\r\n\t\t,TotalDollars\r\n\t\t,EnergyUsage)\r\n\t(SELECT SB.ScenarioId\r\n\t\t,SB.BudgetStageID\r\n\t\t,SB.AgencyCodeOEC\r\n\t\t,77 AS BudgetGroupID\r\n\t\t,SB.BudgetBillingPeriod\r\n\t\t,SUM(CASE WHEN ISNULL(BR.BudgetCommodityConsumption, 0) <> 0 THEN ((ISNULL(BR.BudgetCommodityConsumption, 0) + ISNULL(BR.BudgetCommodityConsumptionAdder, 0)) \r\n\t\t\t\t* ISNULL(BR.CommodityMultiplier, 0) \r\n\t\t\t\t* (ISNULL(SB.EnergyUsage, 0) + (ISNULL(SB.EnergyUsage, 0) * ISNULL(REC.QuantityAlignmentAdjustment, 0))))\r\n\t\t\tELSE 0 END) AS EnergyDollars\r\n\t\t,SUM(CASE WHEN ISNULL(BR.BudgetCommodityConsumption, 0) <> 0 THEN ((ISNULL(BR.BudgetCommodityConsumption, 0) + ISNULL(BR.BudgetCommodityConsumptionAdder, 0))\r\n\t\t\t\t* ISNULL(BR.CommodityMultiplier, 0) \r\n\t\t\t\t* (ISNULL(SB.EnergyUsage, 0) + (ISNULL(SB.EnergyUsage, 0) * ISNULL(REC.QuantityAlignmentAdjustment, 0))))\r\n\t\t\tELSE 0 END) AS TotalDollars\r\n\t\t,SUM(CASE WHEN ISNULL(BR.BudgetCommodityConsumption, 0) <> 0 THEN (ISNULL(SB.EnergyUsage, 0) + (ISNULL(SB.EnergyUsage, 0) * ISNULL(REC.QuantityAlignmentAdjustment, 0)))\r\n\t\t\tELSE 0 END) AS EnergyUsage\r\n\tFROM budget.StagingBudget AS SB\r\n\t\tINNER JOIN input.Tier4REC AS REC ON SB.FY = REC.FY\r\n\t\tINNER JOIN Preload.Agency AS A ON A.AgencyCodeOEC = SB.AgencyCodeOEC\r\n\t\tINNER JOIN input.vwBudgetRates AS BR ON BR.ScenarioId = SB.ScenarioId AND BR.BillingPeriod = SB.BudgetBillingPeriod AND BR.BudgetGroupID = 77\r\n\t\tINNER JOIN (SELECT DISTINCT AgencyId FROM Preload.AgencyByFY\r\n\t\t\tWHERE AgencyId NOT IN (SELECT DISTINCT AgencyId FROM Preload.Agency WHERE AgencyCodeOEC IN ('042002', '960000', '126036', '801002'))\r\n\t\t\t\tAND (ParentAgencyId NOT IN(SELECT DISTINCT AgencyId FROM Preload.Agency WHERE AgencyCodeOEC IN ('042002', '960000', '126036', '801002')) OR ParentAgencyID IS NULL)) AS FA ON FA.AgencyId = A.AgencyId\r\n\tWHERE SB.FY = ISNULL(@fy, SB.FY)\r\n\t\tAND SB.ScenarioId = ISNULL(@scenarioId, SB.ScenarioId)\r\n\t\tAND SB.BudgetGroupID IN (SELECT DISTINCT BudgetGroupID FROM Preload.BudgetGroup WHERE BudgetGroupName LIKE '%NYPA%')\r\n\tGROUP BY SB.ScenarioId, SB.BudgetStageID, SB.BudgetBillingPeriod, SB.AgencyCodeOEC\r\n\tUNION\r\n\tSELECT SB.ScenarioId\r\n\t\t,SB.BudgetStageID\r\n\t\t,SB.AgencyCodeOEC\r\n\t\t,77 AS BudgetGroupID\r\n\t\t,SB.BudgetBillingPeriod\r\n\t\t,0 AS EnergyDollars\r\n\t\t,0 AS TotalDollars\r\n\t\t,SUM(CASE WHEN ISNULL(BR.BudgetCommodityConsumption, 0) <> 0 THEN (ISNULL(SB.EnergyUsage, 0) + (ISNULL(SB.EnergyUsage, 0) * ISNULL(REC.QuantityAlignmentAdjustment, 0)))\r\n\t\t\tELSE 0 END) AS EnergyUsage\r\n\tFROM budget.StagingBudget AS SB\r\n\t\tINNER JOIN input.Tier4REC AS REC ON SB.FY = REC.FY\r\n\t\tINNER JOIN Preload.Agency AS A ON A.AgencyCodeOEC = SB.AgencyCodeOEC\r\n\t\tINNER JOIN input.vwBudgetRates AS BR ON BR.ScenarioId = SB.ScenarioId AND BR.BillingPeriod = SB.BudgetBillingPeriod AND BR.BudgetGroupID = 77\r\n\t\tINNER JOIN (SELECT DISTINCT AgencyId FROM Preload.AgencyByFY\r\n\t\t\tWHERE AgencyId IN (SELECT DISTINCT AgencyId FROM Preload.Agency WHERE AgencyCodeOEC IN ('042002', '960000', '126036', '801002'))\r\n\t\t\t\tOR ParentAgencyId IN(SELECT DISTINCT AgencyId FROM Preload.Agency WHERE AgencyCodeOEC IN ('042002', '960000', '126036', '801002'))) AS FA ON FA.AgencyId = A.AgencyId\r\n\tWHERE SB.FY = ISNULL(@fy, SB.FY)\r\n\t\tAND SB.ScenarioId = ISNULL(@scenarioId, SB.ScenarioId)\r\n\t\tAND SB.BudgetGroupID IN (SELECT DISTINCT BudgetGroupID FROM Preload.BudgetGroup WHERE BudgetGroupName LIKE '%NYPA%')\r\n\tGROUP BY SB.ScenarioId, SB.BudgetStageID, SB.BudgetBillingPeriod, SB.AgencyCodeOEC);\r\nEND;\r"
        }
      ]
    }
  ]
}
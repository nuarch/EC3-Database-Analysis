{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_ReportBaseUsageForBudgetGroups",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_ReportBaseUsageForBudgetGroups",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report on energy usage and demand for specified budget groups within a given fiscal year. It processes and aggregates energy usage data, both base and normalized, for each budget group and organizes this data into a pivot table format. The results are then grouped and ordered for reporting purposes, providing a comprehensive view of energy consumption across different months."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including data transformation, aggregation, and pivoting, which adds to its complexity. It uses common table expressions (CTEs) and dynamic filtering based on input parameters, making it moderately complex."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@fy AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the fiscal year for which the report is generated. It is a mandatory parameter."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@budgetGroupIds AS VARCHAR(MAX) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A comma-separated list of budget group IDs to filter the report. It is optional; if not provided, the report includes all budget groups for the specified fiscal year."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initial Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Disables "
                        },
                        {
                          "type": "text",
                          "text": "FMTONLY",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and sets "
                        },
                        {
                          "type": "text",
                          "text": "NOCOUNT",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to ON to improve performance by reducing unnecessary metadata and message output."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Sets the transaction isolation level to "
                        },
                        {
                          "type": "text",
                          "text": "READ UNCOMMITTED",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to allow dirty reads, which can improve performance but may lead to reading uncommitted data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Converts the comma-separated "
                        },
                        {
                          "type": "text",
                          "text": "@budgetGroupIds",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into a table format using a user-defined table type "
                        },
                        {
                          "type": "text",
                          "text": "UDT_IDList",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and a function "
                        },
                        {
                          "type": "text",
                          "text": "UDF_SplitToTable",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Extraction and Transformation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A CTE "
                        },
                        {
                          "type": "text",
                          "text": "dataTbl",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is used to extract and aggregate energy usage data from "
                        },
                        {
                          "type": "text",
                          "text": "preload.EC3BaseData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Preload.BudgetGroup",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " tables."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Filters data based on fiscal year, budget group IDs, and existence in related fiscal year and agency tables."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pivoting Data",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Another CTE "
                        },
                        {
                          "type": "text",
                          "text": "pivotTbl",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " pivots the aggregated data to organize it by month, creating separate entries for base and normalized energy and demand usage."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Summarization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "sumTbl",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " CTE further aggregates the pivoted data to calculate total usage and demand for each budget group and subtype, ensuring only non-zero totals are included."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The final SELECT statement joins the summarized data with the "
                        },
                        {
                          "type": "text",
                          "text": "budget.BudgetStage",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to include budget stage descriptions and calculates a "
                        },
                        {
                          "type": "text",
                          "text": "Level1Rowspan",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for formatting purposes in reports."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking overhead but risks reading uncommitted changes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pivot Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Pivoting large datasets can be resource-intensive. Ensuring indexes on join and filter columns can help mitigate performance issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of dynamic filtering based on "
                },
                {
                  "type": "text",
                  "text": "@budgetGroupIds",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to varying execution plans. Consider using "
                },
                {
                  "type": "text",
                  "text": "OPTION (RECOMPILE)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " if parameter sniffing becomes an issue."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " isolation level may lead to inconsistencies if data is being modified concurrently."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@budgetGroupIds",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is too large, it may exceed the maximum size for a "
                },
                {
                  "type": "text",
                  "text": "VARCHAR(MAX)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter, leading to truncation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the pivot and aggregation operations may become a bottleneck. Regular performance monitoring and indexing strategies should be considered."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions in case of failures."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [report].[USP_ReportBaseUsageForBudgetGroups]\n(\r\n\t@fy AS INT\r\n\t,@budgetGroupIds AS VARCHAR(MAX) = NULL\r\n)\r\nAS\r\nBEGIN\r\n\tSET FMTONLY OFF;\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @budgetGroupIdList AS input.UDT_IDList;\r\n\tINSERT INTO @budgetGroupIdList (ID) SELECT ID FROM dbo.UDF_SplitToTable(@budgetGroupIds, ',');\r\n\r\n\tWITH dataTbl AS (\r\n\t\tSELECT a.BudgetGroupDEM, b.BudgetGroupName, b.EnergyType, b.EnergyUnit\r\n\t\t\t,a.BillingPeriod, a.BillingPeriod % 100 AS mm\r\n\t\t\t,SUM(a.BaseEnergyUsage) AS BaseEnergyUsage, SUM(a.BaseDemandUsage) AS BaseDemandUsage\r\n\t\t\t,SUM(a.NormalizedEnergyUsage) AS NormalizedEnergyUsage, SUM(a.NormalizedDemandUsage) AS NormalizedDemandUsage\r\n\t\tFROM preload.EC3BaseData a JOIN Preload.BudgetGroup b ON a.BudgetGroupDEM = b.BudgetGroupID\r\n\t\tWHERE a.fy = @fy AND (@budgetGroupIds IS NULL OR (@budgetGroupIds IS NOT NULL AND b.BudgetGroupID IN (SELECT ID FROM @budgetGroupIdList)))\r\n\t\t\tAND EXISTS (SELECT 1 \r\n\t\t\t\tFROM Preload.BudgetGroupByFY \r\n\t\t\t\tWHERE fy=@fy AND BudgetGroupID = b.BudgetGroupID)\r\n\t\t\tAND EXISTS (SELECT 1 \r\n\t\t\t\tFROM Preload.AgencyByFY a1 JOIN Preload.Agency b1 ON a1.AgencyID=b1.AgencyID \r\n\t\t\t\tWHERE a1.fy=@fy AND b1.AgencyCodeOEC =  a.AgencyCodeOEC)\r\n\t\tGROUP BY a.BudgetGroupDEM, b.BudgetGroupName, b.EnergyType, b.EnergyUnit, a.BillingPeriod\r\n\t)\r\n\t,pivotTbl AS ( \r\n\t\tSELECT 1 AS BudgetStagetID, EnergyType + ' Energy Usage (' + EnergyUnit + ')' AS Subtype, BudgetGroupDEM, BudgetGroupName--, EnergyType, EnergyUnit\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(BaseEnergyUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t\tUNION all\r\n\t\tSELECT 1 AS BudgetStagetID, 'Demand Usage (KW)' AS Subtype, BudgetGroupDEM, BudgetGroupName--, EnergyType, EnergyUnit\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(BaseDemandUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t\tUNION all\r\n\t\tSELECT 2 AS BudgetStagetID, EnergyType + ' Energy Usage (' + EnergyUnit + ')' AS Subtype, BudgetGroupDEM, BudgetGroupName--, EnergyType, EnergyUnit\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(NormalizedEnergyUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t\tUNION all\r\n\t\tSELECT 2 AS BudgetStagetID, 'Demand Usage (KW)' AS Subtype, BudgetGroupDEM, BudgetGroupName--, EnergyType, EnergyUnit\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(NormalizedDemandUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t)\r\n\t,sumTbl AS\r\n    (\r\n\t\tSELECT BudgetGroupDEM, BudgetGroupName, BudgetStagetID, Subtype --EnergyType, EnergyUnit, SubtypeDesc,\r\n\t\t\t,SUM(total) AS Total\r\n\t\t\t,SUM(JUL) AS JUL, SUM(AUG) AS AUG, SUM(SEP) AS SEP, SUM(OCT) AS OCT, SUM(NOV) AS NOV, SUM(DEC) AS DEC\r\n\t\t\t,SUM(JAN) AS JAN, SUM(FEB) AS FEB, SUM(MAR) AS MAR, SUM(APR) AS APR, SUM(MAY) AS MAY, SUM(JUN) AS JUN\r\n\t\tFROM pivotTbl\r\n\t\tGROUP BY BudgetGroupDEM, BudgetGroupName, BudgetStagetID, Subtype --EnergyType, EnergyUnit, SubtypeDesc\r\n\t\tHAVING SUM(total) <> 0\r\n\t)\r\n\tSELECT @fy AS FY, a.BudgetGroupDEM, a.BudgetGroupName\r\n\t\t,a.BudgetStagetID, b.BudgetStageDesc, a.Subtype\r\n\t\t,a.Total\r\n\t\t,a.JUL, a.AUG, a.SEP, a.OCT, a.NOV, a.DEC\r\n\t\t,a.JAN, a.FEB, a.MAR, a.APR, a.MAY, a.JUN\r\n\t\t,CAST(CEILING((COUNT(1) OVER (PARTITION BY a.BudgetGroupDEM)) / 2.0) AS INTEGER) AS Level1Rowspan\r\n\tFROM sumTbl a JOIN budget.BudgetStage b ON a.BudgetStagetID = b.BudgetStageID\r\n\tORDER BY a.BudgetGroupDEM, a.BudgetStagetID, a.Subtype;\r\nEND;\r"
        }
      ]
    }
  ]
}
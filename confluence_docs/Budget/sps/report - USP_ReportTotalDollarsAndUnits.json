{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_ReportTotalDollarsAndUnits",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_ReportTotalDollarsAndUnits",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report summarizing total dollars and energy units by funding type and energy type for a given scenario. It aggregates data from various tables and views, performs calculations, and organizes the results into a pivot table format. The procedure is intended to provide insights into energy consumption and financial allocations across different funding sources and energy types over a fiscal year."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure is complex due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple nested queries, including Common Table Expressions (CTEs) and subqueries."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs data aggregation and transformation using SQL PIVOT operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles multiple business rules and conditions for categorizing and summarizing data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves complex joins across several tables and views."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@scenarioId AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter specifies the scenario for which the report is generated. It is used to filter data from the "
                },
                {
                  "type": "text",
                  "text": "budget.Scenario",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table and other related tables."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to avoid locking issues and initializes several variables for fiscal year, funding sequence IDs, and category labels."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scenario Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It retrieves the fiscal year ("
                },
                {
                  "type": "text",
                  "text": "FY",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") and the actual data end month for the given scenario ID from the "
                },
                {
                  "type": "text",
                  "text": "budget.Scenario",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A CTE named "
                        },
                        {
                          "type": "text",
                          "text": "totalByFundingTypeEnergyType",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " aggregates data from the "
                        },
                        {
                          "type": "text",
                          "text": "budget.vwTotalBudget",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " view and related tables. It calculates total dollars, energy, and demand for each combination of funding type and energy type, considering various conditions such as grid charges and tenant charges."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The CTE uses multiple UNION ALL operations to combine results from different conditions and scenarios."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pivot Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Another CTE, "
                        },
                        {
                          "type": "text",
                          "text": "pivotTotalTbl",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", transforms the aggregated data into a pivot table format. It calculates subtotals for dollars, energy usage, and demand usage by funding type and energy type."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The pivot operation organizes data by month, allowing for a comprehensive view of financial and energy metrics over the fiscal year."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Data Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure selects and formats the final report data, applying additional business rules to categorize and label the results."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It includes UNION operations to calculate totals for funded categories and overall totals."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ordering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The final result set is ordered by "
                },
                {
                  "type": "text",
                  "text": "AgencyFundingSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and a custom logic for "
                },
                {
                  "type": "text",
                  "text": "Subtype",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to ensure a meaningful presentation of the data."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may result in reading uncommitted or dirty data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Aggregations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves complex joins and aggregations, which can be resource-intensive, especially on large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pivot Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of PIVOT can be computationally expensive, particularly when dealing with a large number of columns or rows."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensuring that appropriate indexes exist on the tables involved can significantly improve query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Consistency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " may lead to data consistency issues, as it allows reading data that might not be committed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity of the procedure may affect its scalability, particularly if the underlying data grows significantly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's complexity and the use of hardcoded values (e.g., funding sequence IDs) can make maintenance challenging."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions or errors during execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Bottlenecks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The extensive use of UNION ALL and PIVOT operations could become performance bottlenecks if not optimized properly."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [report].[USP_ReportTotalDollarsAndUnits]\n(\r\n\t@scenarioId AS INT\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @fy AS INT, @selfFundingSeqId AS INT = 6, @newTechFundingSeqId AS INT = 9, @fundedCat AS VARCHAR(25) = 'Funded Category'\r\n\t\t,@allCat AS VARCHAR(20) = 'ALL', @actualDataEndMonth AS INT;\r\n\r\n\tSELECT @fy = FY, @actualDataEndMonth = ISNULL(ActualDataEndMonth, 0)\r\n\tFROM budget.Scenario\r\n\tWHERE ID = @scenarioId;\r\n\r\n\tWITH totalByFundingTypeEnergyType AS\r\n\t\t(SELECT a.mm\r\n\t\t\t,b.AgencyFundingSeqId\r\n\t\t\t,b.FundingSourceDescription AS FundingType\r\n\t\t\t,a.EnergyType\r\n\t\t\t,SUM(a.TotalDollar) AS Dollar\r\n\t\t\t,SUM(a.TotalEnergy) AS Energy\r\n\t\t\t,SUM(a.TotalDemand) AS Demand\r\n\t\tFROM (SELECT RIGHT(CAST(a.BudgetBillingPeriod AS VARCHAR(6)), 2) AS mm\r\n\t\t\t\t,b.AgencyFundingSeqId\r\n\t\t\t\t,a.EnergyType\r\n\t\t\t\t,SUM(a.TotalDollars) AS TotalDollar\r\n\t\t\t\t,SUM(CASE WHEN a.BudgetGroupID = 77 THEN 0 ELSE ISNULL(a.EnergyUsage, 0) END) AS TotalEnergy\r\n\t\t\t\t,SUM(ISNULL(a.DemandUsage, 0)) AS TotalDemand\r\n\t\t\tFROM budget.vwTotalBudget AS a\r\n\t\t\t\tINNER JOIN Preload.Agency AS b ON a.AgencyCodeOEc = b.AgencyCodeOEC\r\n\t\t\t\tINNER JOIN preload.AgencyByFY AS c ON b.AgencyId = c.AgencyId\r\n\t\t\tWHERE a.ScenarioId = @scenarioId AND c.FY = @fy AND a.EnergyType <> 'TNC'\r\n\t\t\tGROUP BY a.BudgetBillingPeriod, b.AgencyFundingSeqId, a.EnergyType\r\n\t\t\tUNION ALL\r\n\t\t\t--grid charges\r\n\t\t\tSELECT RIGHT(CAST(a.BudgetBillingPeriod AS VARCHAR(6)), 2) AS mm\r\n\t\t\t\t,b.AgencyFundingSeqId\r\n\t\t\t\t,'ELE Grid' AS EnergyType\r\n\t\t\t\t,SUM(a.TotalDollars) AS TotalDollar\r\n\t\t\t\t,0 AS TotalEnergy\r\n\t\t\t\t,0 AS TotalDemand\r\n\t\t\tFROM budget.vwTotalBudget AS a\r\n\t\t\t\tINNER JOIN Preload.Agency AS b ON a.AgencyCodeOEc = b.AgencyCodeOEC\r\n\t\t\t\tINNER JOIN preload.AgencyByFY AS c ON b.AgencyId = c.AgencyId\r\n\t\t\tWHERE a.ScenarioId = @scenarioId AND c.FY = @fy AND a.EnergyType = 'ELE' AND a.BudgetGroupID <> 77\r\n\t\t\tGROUP BY a.BudgetBillingPeriod, b.AgencyFundingSeqId, a.EnergyType\r\n\t\t\tUNION ALL\r\n\t\t\t--grid charges (including ELE tenant charges)\r\n\t\t\tSELECT RIGHT(CAST(dcas.BudgetBillingPeriod AS VARCHAR(6)), 2) AS mm\r\n\t\t\t\t,tenantChargeByGrp.AgencyFundingSeqId\r\n\t\t\t\t,'ELE Grid' AS EnergyType\r\n\t\t\t\t,TotalDollar * tenantChargeByGrp.TenantChg AS TotalDollar\r\n\t\t\t\t,0 AS TotalEnergy\r\n\t\t\t\t,0 AS TotalDemand\r\n\t\t\tFROM (SELECT BudgetBillingPeriod, EnergyType\r\n\t\t\t\t\t,SUM(TotalDollars) AS TotalDollar\r\n\t\t\t\t\t,SUM(ISNULL(EnergyUsage,0)) AS TotalEnergy\r\n\t\t\t\t\t,SUM(ISNULL(DemandUsage,0)) AS TotalDemand\r\n\t\t\t\tFROM budget.vwTotalBudget\r\n\t\t\t\tWHERE ScenarioId=@scenarioId AND AgencyCodeOEC = '856001' AND EnergyType = 'ELE' AND BudgetGroupID <> 77\r\n\t\t\t\t\tAND BudgetBillingPeriod > @actualDataEndMonth\r\n\t\t\t\tGROUP BY EnergyType, BudgetBillingPeriod) AS dcas,\r\n\t\t\t\t(SELECT DISTINCT a.AgencyFundingSeqId, SUM(b.ChargePercentage) AS TenantChg\r\n\t\t\t\tFROM Preload.Agency AS a\r\n\t\t\t\t\tINNER JOIN input.TenantChargeDetail b ON a.AgencyCodeOEC = b.AgencyCode \r\n\t\t\t\t\tINNER JOIN budget.Scenario AS c ON b.TenantChargeID = c.TenantChargeID\r\n\t\t\t\t\tINNER JOIN preload.AgencyByFY AS d ON a.AgencyId = d.AgencyId\r\n\t\t\t\tWHERE c.Id = @scenarioId AND d.FY = @fy\r\n\t\t\t\tGROUP BY a.AgencyFundingSeqId) AS tenantChargeByGrp\r\n\t\t\tUNION ALL\r\n\t\t\t--REC charges\r\n\t\t\tSELECT RIGHT(CAST(a.BudgetBillingPeriod AS VARCHAR(6)), 2) AS mm\r\n\t\t\t\t,b.AgencyFundingSeqId\r\n\t\t\t\t,'ELE REC' AS EnergyType\r\n\t\t\t\t,SUM(a.TotalDollars) AS TotalDollar\r\n\t\t\t\t,0 AS TotalEnergy\r\n\t\t\t\t,0 AS TotalDemand\r\n\t\t\tFROM budget.vwTotalBudget AS a\r\n\t\t\t\tINNER JOIN Preload.agency AS b ON a.AgencyCodeOEc = b.AgencyCodeOEC\r\n\t\t\t\tINNER JOIN preload.AgencyByFY AS c ON b.AgencyId = c.AgencyId\r\n\t\t\tWHERE a.ScenarioId = @scenarioId AND c.FY = @fy AND a.EnergyType = 'ELE' AND a.BudgetGroupID = 77\r\n\t\t\tGROUP BY a.BudgetBillingPeriod, b.AgencyFundingSeqId, a.EnergyType\r\n\t\t\tUNION ALL\r\n\t\t\t--tenant charges\r\n\t\t\tSELECT RIGHT(CAST(dcas.BudgetBillingPeriod AS VARCHAR(6)), 2) AS mm\r\n\t\t\t\t,tenantChargeByGrp.AgencyFundingSeqId\r\n\t\t\t\t,dcas.EnergyType\r\n\t\t\t\t,TotalDollar * tenantChargeByGrp.TenantChg AS TotalDollar\r\n\t\t\t\t,TotalEnergy * tenantChargeByGrp.TenantChg AS TotalEnergy\r\n\t\t\t\t,TotalDemand * tenantChargeByGrp.TenantChg AS TotalDemand\r\n\t\t\tFROM (SELECT BudgetBillingPeriod, EnergyType, \r\n\t\t\t\t\tSUM(TotalDollars) AS TotalDollar,\r\n\t\t\t\t\tSUM(ISNULL(EnergyUsage,0)) AS TotalEnergy,\r\n\t\t\t\t\tSUM(ISNULL(DemandUsage,0)) AS TotalDemand\r\n\t\t\t\tFROM budget.vwTotalBudget\r\n\t\t\t\tWHERE ScenarioId = @scenarioId AND AgencyCodeOEC = '856001' AND EnergyType <> 'TNC'\r\n\t\t\t\t\tAND BudgetBillingPeriod > @actualDataEndMonth AND BudgetGroupID <> 77\r\n\t\t\t\tGROUP BY EnergyType, BudgetBillingPeriod) AS dcas,\r\n\t\t\t\t(SELECT DISTINCT a.AgencyFundingSeqId, SUM(b.ChargePercentage) AS TenantChg\r\n\t\t\t\tFROM Preload.Agency AS a\r\n\t\t\t\t\tINNER JOIN input.TenantChargeDetail b ON a.AgencyCodeOEC = b.AgencyCode \r\n\t\t\t\t\tINNER JOIN budget.Scenario AS c ON b.TenantChargeID = c.TenantChargeID\r\n\t\t\t\t\tINNER JOIN preload.AgencyByFY AS d ON a.AgencyId = d.AgencyId\r\n\t\t\t\tWHERE c.Id = @scenarioId AND d.FY = @fy\r\n\t\t\t\tGROUP BY a.AgencyFundingSeqId) AS tenantChargeByGrp\r\n\t\t) AS a\r\n\t\tINNER JOIN (SELECT DISTINCT a.AgencyFundingSeqId, a.FundingSourceDescription\r\n\t\t\t\t\tFROM Preload.Agency AS a\r\n\t\t\t\t\t\tINNER JOIN Preload.AgencyByFY AS b ON a.AgencyId = b.AgencyId\r\n\t\t\t\t\tWHERE b.FY = @fy AND a.AgencyFundingSeqId IS NOT NULL\r\n\t\t) AS b\r\n\t\tON a.AgencyFundingSeqId = b.AgencyFundingSeqId\r\n\t\tGROUP BY mm, b.AgencyFundingSeqId, b.FundingSourceDescription, EnergyType)\r\n\t,pivotTotalTbl AS (-- Subtotal Dollars by funded, self-funding, new tech\r\n\t\tSELECT AgencyFundingSeqId, FundingType, 'Subtotal Dollars' AS Subtype\r\n\t\t\t,[07] + [08] + [09] + [10] + [11] + [12] + [01] + [02] + [03] + [04] + [05] + [06] AS Total\r\n\t\t\t,[07] AS JUL, [08] AS AUG, [09] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS [DEC]\r\n\t\t\t,[01] AS JAN, [02] AS FEB, [03] AS MAR, [04] AS APR, [05] AS MAY, [06] AS JUN\r\n\t\tFROM (SELECT mm, CASE WHEN AgencyFundingSeqId NOT IN (@selfFundingSeqId, @newTechFundingSeqId) THEN 0 ELSE AgencyFundingSeqId END AS AgencyFundingSeqId, \r\n\t\t\t\tCASE WHEN AgencyFundingSeqId NOT IN (@selfFundingSeqId, @newTechFundingSeqId) THEN @fundedCat ELSE FundingType END AS FundingType, \r\n\t\t\t\tSUM(Dollar) AS Dollar\r\n\t\t\tFROM totalByFundingTypeEnergyType\r\n\t\t\tWHERE EnergyType NOT IN ('ELE Grid', 'ELE REC')\r\n\t\t\tGROUP BY mm, CASE WHEN AgencyFundingSeqId NOT IN (@selfFundingSeqId, @newTechFundingSeqId) THEN 0 ELSE AgencyFundingSeqId END,\r\n\t\t\t\tCASE WHEN AgencyFundingSeqId NOT IN (@selfFundingSeqId, @newTechFundingSeqId) THEN @fundedCat ELSE FundingType END) a\r\n\t\tPIVOT (SUM(Dollar) FOR mm IN ([07], [08], [09], [10], [11], [12], [01], [02], [03], [04], [05], [06])) AS Total\r\n\t\tUNION\r\n\t\t-- Subtotal Dollars by detailed funding types and energy types\r\n\t\tSELECT  AgencyFundingSeqId, FundingType, 'Subtotal ' + EnergyType + ' ($)' AS Subtype\r\n\t\t\t,[07] + [08] + [09] + [10] + [11] + [12] + [01] + [02] + [03] + [04] + [05] + [06] AS Total\r\n\t\t\t,[07] AS JUL, [08] AS AUG, [09] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS [DEC]\r\n\t\t\t,[01] AS JAN, [02] AS FEB, [03] AS MAR, [04] AS APR, [05] AS MAY, [06] AS JUN\r\n\t\tFROM (SELECT mm, AgencyFundingSeqId, FundingType, EnergyType, Dollar\r\n\t\t\t\tFROM totalByFundingTypeEnergyType) AS a\r\n\t\tPIVOT (SUM(Dollar) FOR mm IN ([07], [08], [09], [10], [11], [12], [01], [02], [03], [04], [05], [06])) AS Total\r\n\t\tUNION\r\n\t\t-- Subtotal energy usage by detailed funding types and energy types\r\n\t\tSELECT AgencyFundingSeqId\r\n\t\t\t,FundingType\r\n\t\t\t,'Subtotal ' + EnergyType + ' (' + \r\n\t\t\t\tCASE WHEN EnergyType LIKE 'ELE' THEN 'kWh'\r\n\t\t\t\tWHEN EnergyType='GAS' THEN 'therms'\r\n\t\t\t\tWHEN EnergyType='STM' THEN 'Mlbs'\r\n\t\t\t\tWHEN EnergyType='CHW' THEN 'Mlbs' END + ')' AS Subtype\r\n\t\t\t,[07] + [08] + [09] + [10] + [11] + [12] + [01] + [02] + [03] + [04] + [05] + [06] AS Total\r\n\t\t\t,[07] AS JUL, [08] AS AUG, [09] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[01] AS JAN, [02] AS FEB, [03] AS MAR, [04] AS APR, [05] AS MAY, [06] AS JUN \r\n\t\tFROM (SELECT mm, AgencyFundingSeqId, FundingType, EnergyType, Energy\r\n\t\t\tFROM totalByFundingTypeEnergyType WHERE EnergyType NOT IN ('ELE Grid', 'ELE REC')) AS a\r\n\t\tPIVOT (SUM(Energy) FOR mm IN ([07], [08], [09], [10], [11], [12], [01], [02], [03], [04], [05], [06])) AS Total\r\n\t\tUNION\r\n\t\t-- Subtotal demand usage by detailed funding types\r\n\t\tSELECT AgencyFundingSeqId, FundingType, 'Subtotal Demand (KW)' AS Subtype\r\n\t\t\t,[07] + [08] + [09] + [10] + [11] + [12] + [01] + [02] + [03] + [04] + [05] + [06] AS Total\r\n\t\t\t,[07] AS JUL, [08] AS AUG, [09] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[01] AS JAN, [02] AS FEB, [03] AS MAR, [04] AS APR, [05] AS MAY, [06] AS JUN\r\n\t\tFROM (SELECT mm, AgencyFundingSeqId, FundingType, SUM(Demand) AS Demand\r\n\t\t\tFROM totalByFundingTypeEnergyType\r\n\t\t\tGROUP BY mm, AgencyFundingSeqId, FundingType) AS a\r\n\t\tPIVOT (SUM(Demand) FOR mm IN ([07], [08], [09], [10], [11], [12], [01], [02], [03], [04], [05], [06])) AS Total\r\n\t)\r\n\t\r\n\tSELECT @scenarioId AS ScenarioId, \r\n\t\tCASE WHEN AgencyFundingSeqId NOT IN (0, 999, @selfFundingSeqId, @newTechFundingSeqId) THEN @fundedCat ELSE b.FundingType END AS FundingType, \r\n\t\tCASE WHEN AgencyFundingSeqId NOT IN (0, 999, @selfFundingSeqId, @newTechFundingSeqId) THEN REPLACE(Subtype, 'Subtotal', FundingType + ' -') ELSE b.Subtype END AS Subtype, \r\n\t\tTotal, JUL, AUG, SEP, OCT, NOV, [DEC], JAN, FEB, MAR, APR, MAY, JUN\r\n\tFROM (SELECT P.AgencyFundingSeqId,\r\n            P.FundingType,\r\n            P.Subtype,\r\n            P.Total,\r\n            P.JUL,\r\n            P.AUG,\r\n            P.SEP,\r\n            P.OCT,\r\n            P.NOV,\r\n            P.[DEC],\r\n            P.JAN,\r\n            P.FEB,\r\n            P.MAR,\r\n            P.APR,\r\n            P.MAY,\r\n            P.JUN\r\n\t\tFROM pivotTotalTbl AS P\r\n\t\tWHERE P.Total <> 0\r\n\t\tUNION\r\n\t\t--funded categories total of energy usage and demand usage\r\n\t\tSELECT 0 AS AgencyFundingSeqId\r\n\t\t\t,@fundedCat AS FundingType\r\n\t\t\t,Subtype\r\n\t\t\t,SUM(total) AS Total\r\n\t\t\t,SUM(JUL) AS JUL\r\n\t\t\t,SUM(AUG) AS AUG\r\n\t\t\t,SUM(SEP) AS SEP\r\n\t\t\t,SUM(OCT) AS OCT\r\n\t\t\t,SUM(NOV) AS NOV\r\n\t\t\t,SUM([DEC]) AS [DEC]\r\n\t\t\t,SUM(JAN) AS JAN\r\n\t\t\t,SUM(FEB) AS FEB\r\n\t\t\t,SUM(MAR) AS MAR\r\n\t\t\t,SUM(APR) AS APR\r\n\t\t\t,SUM(MAY) AS MAY\r\n\t\t\t,SUM(JUN) AS JUN\r\n\t\tFROM pivotTotalTbl\r\n\t\tWHERE AgencyFundingSeqId NOT IN (@selfFundingSeqId, @newTechFundingSeqId) AND Subtype <> 'Subtotal Dollars'\r\n\t\tGROUP BY Subtype\r\n\t\tHAVING SUM(Total) <> 0\r\n\t\tUNION\r\n\t\tSELECT 999 AS AgencyFundingSeqId\r\n\t\t\t,@allCat AS FundingType\r\n\t\t\t,REPLACE(subtype, 'Subtotal', 'Total') AS Subtype\r\n\t\t\t,SUM(total) AS Total\r\n\t\t\t,SUM(JUL) AS JUL\r\n\t\t\t,SUM(AUG) AS AUG\r\n\t\t\t,SUM(SEP) AS SEP\r\n\t\t\t,SUM(OCT) AS OCT\r\n\t\t\t,SUM(NOV) AS NOV\r\n\t\t\t,SUM([DEC]) AS [DEC]\r\n\t\t\t,SUM(JAN) AS JAN\r\n\t\t\t,SUM(FEB) AS FEB\r\n\t\t\t,SUM(MAR) AS MAR\r\n\t\t\t,SUM(APR) AS APR\r\n\t\t\t,SUM(MAY) AS MAY\r\n\t\t\t,SUM(JUN) AS JUN\r\n\t\tFROM pivotTotalTbl\r\n\t\tGROUP BY Subtype\r\n\t\tHAVING SUM(Total) <> 0) AS b\r\n\tORDER BY AgencyFundingSeqId\r\n\t\t,CASE WHEN CHARINDEX('Subtotal ELE Grid ($)', Subtype) > 0 THEN 'Subtotal ELE ($Grid)'\r\n\t\t\tWHEN CHARINDEX('Subtotal ELE REC ($)', Subtype) > 0 THEN 'Subtotal ELE ($REC)'\r\n\t\t\tWHEN CHARINDEX('Total ELE Grid ($)', Subtype) > 0 THEN 'Total ELE ($Grid)'\r\n\t\t\tWHEN CHARINDEX('Total ELE REC ($)', Subtype) > 0 THEN 'Total ELE ($REC)'\r\n\t\t\tWHEN CHARINDEX('CHW', Subtype) > 0 THEN 'z' \r\n\t\t\tWHEN CHARINDEX('Demand', Subtype) > 0 THEN 'zz' ELSE Subtype END;\r\nEND;\r"
        }
      ]
    }
  ]
}
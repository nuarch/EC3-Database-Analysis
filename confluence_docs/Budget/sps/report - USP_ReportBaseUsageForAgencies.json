{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_ReportBaseUsageForAgencies",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_ReportBaseUsageForAgencies",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report on energy usage for various agencies within a specified fiscal year. It processes energy consumption data, organizes it by agency, and outputs a structured summary that includes both base and normalized energy and demand usage. The procedure uses several Common Table Expressions (CTEs) to transform and aggregate data, ultimately producing a detailed report that can be used for analysis and decision-making."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple CTEs for data transformation and aggregation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses dynamic SQL constructs like PIVOT to reshape data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It incorporates hierarchical data processing and ranking."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic for data filtering and sorting."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@fy AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the fiscal year for which the report is generated. It is a mandatory parameter."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@agencyIds AS VARCHAR(MAX) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A comma-separated list of agency IDs to filter the report. It is optional; if not provided, the report includes all agencies."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting the transaction isolation level to READ UNCOMMITTED to avoid locking issues and improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency ID List Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It converts the comma-separated "
                },
                {
                  "type": "text",
                  "text": "@agencyIds",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " into a table format using a user-defined function "
                },
                {
                  "type": "text",
                  "text": "UDF_SplitToTable",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Extraction and Transformation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "dataTbl CTE",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Joins "
                        },
                        {
                          "type": "text",
                          "text": "EC3BaseData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "BudgetGroup",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " tables to extract relevant energy usage data for the specified fiscal year. It filters data based on the existence of related records in "
                        },
                        {
                          "type": "text",
                          "text": "BudgetGroupByFY",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "AgencyByFY",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "agencySortingTbl CTE",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Determines sorting codes for agencies based on their hierarchical levels and relationships."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Pivoting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "pivotTbl CTE",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Uses the PIVOT operator to transform monthly energy usage data into a tabular format with columns for each month and total usage."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "sumTbl CTE",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Aggregates the pivoted data by agency and subtype, filtering out records with zero total usage."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hierarchical Data Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "hasAgencyTbl CTE",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Joins with "
                        },
                        {
                          "type": "text",
                          "text": "vwAgencyHierarchy",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to incorporate hierarchical agency information, including funding sources and ranks."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Selection and Ordering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The final SELECT statement aggregates and orders the data, applying additional calculations for row spans and sorting based on agency hierarchy and funding source."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Improves performance by reducing locking but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use of CTEs",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While CTEs improve readability, they can impact performance if not optimized, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "PIVOT Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": These can be resource-intensive, particularly with large datasets and multiple columns."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on tables like "
                },
                {
                  "type": "text",
                  "text": "EC3BaseData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "BudgetGroup",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "AgencyByFY",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can significantly enhance performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of READ UNCOMMITTED may result in reading uncommitted data, which could lead to inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's complexity and use of multiple CTEs and PIVOT operations may affect scalability with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions during execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on External Functions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on "
                },
                {
                  "type": "text",
                  "text": "UDF_SplitToTable",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and other views, which must be correctly implemented and performant."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Assumption of Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that related data exists in all joined tables, which may not always be the case, potentially leading to incomplete results."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [report].[USP_ReportBaseUsageForAgencies]\n(\r\n\t@fy AS INT\r\n    ,@agencyIds AS VARCHAR(MAX) = NULL\r\n)\r\nAS\r\nBEGIN\r\n\tSET FMTONLY OFF;\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @agencyIdList AS input.UDT_IDList;\r\n\r\n\tINSERT INTO @agencyIdList(ID)\r\n\tSELECT ID FROM dbo.UDF_SplitToTable(@agencyIds,',');\r\n\r\n\tWITH dataTbl AS (SELECT a.AgencyCodeOEC, b.EnergyType, b.EnergyUnit,\r\n\t\t\ta.BillingPeriod, a.BillingPeriod % 100 AS mm,\r\n\t\t\ta.BaseEnergyUsage, a.BaseDemandUsage,\r\n\t\t\ta.NormalizedEnergyUsage, a.NormalizedDemandUsage\r\n\t\tFROM preload.EC3BaseData a JOIN Preload.BudgetGroup b ON a.BudgetGroupDEM=b.BudgetGroupID\r\n\t\tWHERE a.fy=@fy\r\n\t\t\tAND EXISTS (SELECT 1 FROM Preload.BudgetGroupByFY where a.fy=fy AND a.BudgetGroupDEM=BudgetGroupID)\r\n\t\t\tAND EXISTS (SELECT 1 FROM Preload.AgencyByFY a1 JOIN Preload.Agency b1 ON a1.AgencyId=b1.AgencyId WHERE a1.fy=@fy AND a.AgencyCodeOEC=b1.AgencyCodeOEC))\r\n\t,agencySortingTbl AS (SELECT a.agencyid, c.AgencyCodeOEC AS SortingAgencyCode1, b.AgencyCodeOEC AS SortingAgencyCode2\r\n\t\t\t,CASE WHEN b.AgencyCodeOEC=d.AgencyCodeOEC THEN '' ELSE d.AgencyCodeOEC END AS SortingAgencyCode3\r\n\t\tFROM Preload.AgencyByFY a\r\n\t\t\tINNER JOIN Preload.Agency b ON CASE WHEN a.AgencyDivisionHierarchy.GetLevel()=1 THEN  a.AgencyId\r\n\t\t\t\tWHEN a.AgencyDivisionHierarchy.GetLevel()=2 THEN  a.AgencyId\r\n\t\t\t\tELSE CAST(REPLACE(REPLACE(AgencyDivisionHierarchy.GetAncestor(1).ToString(), AgencyDivisionHierarchy.GetAncestor(2).ToString(), ''), '/', '') AS INT)\r\n\t\t\t\tEND=b.AgencyId\r\n\t\t\tINNER JOIN Preload.Agency c ON CASE WHEN a.AgencyDivisionHierarchy.GetLevel()=1 THEN a.AgencyId\r\n\t\t\t\tWHEN a.AgencyDivisionHierarchy.GetLevel()=2 THEN CAST(REPLACE(a.AgencyDivisionHierarchy.GetAncestor(1).ToString(), '/', '') AS INT)\r\n\t\t\t\tELSE CAST(REPLACE(a.AgencyDivisionHierarchy.GetAncestor(2).ToString(), '/', '') AS INT)\r\n\t\t\t\tEND=c.AgencyId\r\n\t\t\tINNER JOIN Preload.Agency d ON a.AgencyId=d.AgencyId\r\n\t\tWHERE a.fy=@fy)\r\n\t,pivotTbl AS (SELECT 1 AS BudgetStagetID, EnergyType + ' Energy Usage (' + EnergyUnit + ')' AS Subtype , AgencyCodeOEC\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(BaseEnergyUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t\tUNION all\r\n\t\tSELECT 1 AS BudgetStagetID, 'Demand Usage (KW)' AS Subtype, AgencyCodeOEC\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(BaseDemandUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t\tUNION all\r\n\t\tSELECT 2 AS BudgetStagetID, EnergyType + ' Energy Usage (' + EnergyUnit + ')' AS Subtype, AgencyCodeOEC\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(NormalizedEnergyUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total\r\n\t\tUNION all\r\n\t\tSELECT 2 AS BudgetStagetID, 'Demand Usage (KW)' AS Subtype, AgencyCodeOEC\r\n\t\t\t,ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0)+ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0) AS Total\r\n\t\t\t,[7] AS JUL, [8] AS AUG, [9] AS SEP, [10] AS OCT, [11] AS NOV, [12] AS DEC\r\n\t\t\t,[1] AS JAN, [2] AS FEB, [3] AS MAR, [4] AS APR, [5] AS MAY, [6] AS JUN\r\n\t\tFROM dataTbl\r\n\t\tPIVOT (SUM(NormalizedDemandUsage) FOR mm IN ([7],[8],[9],[10],[11],[12],[1],[2],[3],[4],[5],[6])) AS Total)\r\n\t,sumTbl AS (SELECT AgencyCodeOEC, BudgetStagetID, Subtype,\r\n\t\t\tSUM(total) AS Total,\r\n\t\t\tSUM(JUL) AS JUL, SUM(AUG) AS AUG, SUM(SEP) AS SEP, SUM(OCT) AS OCT, SUM(NOV) AS NOV, SUM(DEC) AS DEC,\r\n\t\t\tSUM(JAN) AS JAN, SUM(FEB) AS FEB, SUM(MAR) AS MAR, SUM(APR) AS APR, SUM(MAY) AS MAY, SUM(JUN) AS JUN\r\n\t\tFROM pivotTbl\r\n\t\tGROUP BY AgencyCodeOEC, BudgetStagetID, Subtype\r\n\t\tHAVING SUM(total) <> 0)\r\n\t,hasAgencyTbl AS (SELECT b.ParentAgencyId, b.ParentAgencyCodeOEC, c.AgencyDescription AS ParentAgencyName, f.AgencyDivisionHierarchy.ToString() AS AgencyParents, \r\n\t\t\tb.ChildAgencyId, b.ChildAgencyCodeOEC, d.AgencyDescription AS ChildAgencyName,\r\n\t\t\td.AgencyFundingSeqId AS ChildAgencyFundingSeqId, a.Subtype,\r\n\t\t\tDENSE_RANK() OVER (PARTITION BY b.ParentAgencyId ORDER BY IIF(d.AgencyFundingSeqId NOT IN (6,9), 0, d.AgencyFundingSeqId)) AS fundingRank,\r\n\t\t\tDENSE_RANK() OVER (PARTITION BY b.ParentAgencyId ORDER BY a.Subtype) AS subtypeRank,\r\n\t\t\tCASE WHEN d.AgencyFundingSeqId NOT IN (6,9) THEN 'Funded Category' ELSE d.FundingSourceDescription END AS ChildFundingSourceDescription,\r\n\t\t\tIIF(b.ParentAgencyId<>b.ChildAgencyId, 1, 0) AS IsRoot,\r\n\t\t\ta.BudgetStagetID, e.BudgetStageName,\r\n\t\t\ta.Total,\r\n\t\t\ta.JUL, a.AUG, a.SEP, a.OCT, a.NOV, a.DEC,\r\n\t\t\ta.JAN, a.FEB, a.MAR, a.APR, a.MAY, a.JUN\r\n\t\tFROM sumTbl a JOIN Preload.vwAgencyHierarchy b ON a.AgencyCodeOEC=b.childAgencyCodeOEC\r\n\t\t\tINNER JOIN preload.Agency c ON b.ParentAgencyId=c.AgencyId\r\n\t\t\tINNER JOIN Preload.Agency d ON b.ChildAgencyId=d.AgencyId\r\n\t\t\tINNER JOIN budget.BudgetStage e ON a.BudgetStagetID=e.BudgetStageID\r\n\t\t\tINNER JOIN Preload.AgencyByFY f ON f.fy=@fy AND b.ParentAgencyId=f.AgencyId\r\n\t\tWHERE b.fy = @fy AND (@agencyIds IS NULL OR (@agencyIds IS NOT NULL AND b.ParentAgencyId IN (SELECT ID FROM @agencyIdList))))\r\n\r\n\tSELECT @fy AS FY, a.ParentAgencyId AS AgencyId, a.ParentAgencyCodeOEC AS AgencyCodeOEC, a.ParentAgencyName AS AgencyDescription, a.AgencyParents,\r\n\t\ta.ChildFundingSourceDescription, a.IsRoot, a.BudgetStageName, a.Subtype, \r\n\t\tSUM(a.total) AS Total,\r\n\t\tSUM(JUL) AS JUL, SUM(AUG) AS AUG, SUM(SEP) AS SEP, SUM(OCT) AS OCT, SUM(NOV) AS NOV, SUM(DEC) AS [DEC],\r\n\t\tSUM(JAN) AS JAN, SUM(FEB) AS FEB, SUM(MAR) AS MAR, SUM(APR) AS APR, SUM(MAY) AS MAY, SUM(JUN) AS JUN,\r\n\t\tCASE WHEN MAX(a.fundingRank) OVER (PARTITION BY a.ParentAgencyId)=1 THEN 0 ELSE 1 END AS ShowAgencyTotal,\r\n\t\t(COUNT(1) OVER (PARTITION BY a.ParentAgencyId))/2 + (CASE WHEN MAX(a.fundingRank) OVER (PARTITION BY a.ParentAgencyId)=1 THEN 0 ELSE MAX(a.subtypeRank) OVER (PARTITION BY a.ParentAgencyId) END) AS Level1Rowspan, \r\n\t\t(COUNT(1) OVER (PARTITION BY a.ParentAgencyId, a.ChildFundingSourceDescription))/2 AS Level2Rowspan,\r\n\t\tMAX(a.subtypeRank) OVER (PARTITION BY a.ParentAgencyId) AS SubtotalRowspan,\r\n\t\tb.SortingAgencyCode1, b.SortingAgencyCode2, b.SortingAgencyCode3\r\n\tFROM hasAgencyTbl a\r\n\t\tINNER JOIN agencySortingTbl b ON a.ParentAgencyId=b.AgencyId\r\n\tGROUP BY a.ParentAgencyId, a.ParentAgencyCodeOEC, a.ParentAgencyName, a.AgencyParents, a.ChildFundingSourceDescription, a.IsRoot\r\n\t\t,a.BudgetStageName, a.Subtype, a.fundingRank, a.subtypeRank, b.SortingAgencyCode1, b.SortingAgencyCode2, b.SortingAgencyCode3\r\n\tORDER BY b.SortingAgencyCode1, b.SortingAgencyCode2, b.SortingAgencyCode3, a.ChildFundingSourceDescription, a.BudgetStageName\r\n\t\t,CASE WHEN LEFT(a.Subtype,1)='C' THEN 'yyy' WHEN LEFT(a.Subtype,1)='D' THEN 'zzz' ELSE a.Subtype END;\r\nEND;\r"
        }
      ]
    }
  ]
}
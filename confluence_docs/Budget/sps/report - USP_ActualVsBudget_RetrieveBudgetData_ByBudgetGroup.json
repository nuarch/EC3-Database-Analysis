{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_ActualVsBudget_RetrieveBudgetData_ByBudgetGroup",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_ActualVsBudget_RetrieveBudgetData_ByBudgetGroup",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve budget data by budget group for a specified billing period range. It compares actual financial data against budgeted data, potentially including projections, and can generate detailed breakdown reports. The procedure handles both mid-year and full-year budget scenarios, adjusting its logic based on whether the data is for a projection or a breakdown report."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional logic based on fiscal year, projection status, and report type."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use of temporary tables to manage intermediate data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Integration with user-defined functions and other stored procedures."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Handling of both mid-year and full-year budget scenarios."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@startBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The start of the billing period in 'YYYYMM' format."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@endBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The end of the billing period in 'YYYYMM' format."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsProjection AS BIT = 0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A flag indicating whether the data should include projections (1 for true, 0 for false)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsBreakDownReport AS BIT = 1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A flag indicating whether the report should be a detailed breakdown (1 for true, 0 for false)."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initial Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Sets the transaction isolation level to "
                        },
                        {
                          "type": "text",
                          "text": "READ UNCOMMITTED",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to avoid locking issues."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Determines the fiscal year ("
                        },
                        {
                          "type": "text",
                          "text": "@fy",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ") based on the "
                        },
                        {
                          "type": "text",
                          "text": "@endBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scenario Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Selects the current budget scenario ID based on whether projections are included."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Actual Data End Month",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves the end month for actual data from the budget scenario."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Non Mid-Year Budget",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Directly retrieves budget data using a user-defined function and joins with budget group information."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Mid-Year Budget",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ":"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Determines the appropriate billing periods for actual and budget data."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Retrieves actual data using another stored procedure."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Retrieves budget data if the end billing period exceeds the actual data end month."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Consolidation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Combines actual and budget data into a final result set using "
                        },
                        {
                          "type": "text",
                          "text": "UNION ALL",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may lead to reading uncommitted data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of temporary tables can impact performance, especially if the data volume is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains multiple conditional branches, which can affect execution time depending on the complexity of the conditions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "External Dependencies",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Calls to user-defined functions and other stored procedures can introduce latency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " may lead to dirty reads, which could affect the accuracy of the report."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the use of temporary tables and complex joins may lead to performance bottlenecks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions or incomplete data processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity of the logic, especially with multiple conditional branches, may make the procedure difficult to maintain or modify."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [report].[USP_ActualVsBudget_RetrieveBudgetData_ByBudgetGroup]\n(\r\n\t@startBillingPeriod AS VARCHAR(6)\r\n\t,@endBillingPeriod AS VARCHAR(6)\r\n\t,@IsProjection AS BIT = 0\r\n\t,@IsBreakDownReport AS BIT = 1\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @fy AS INT, @currentBudgetScenarioId AS INT, @actualDataEndMonth AS VARCHAR(6), @endBillingPeriodForActualData AS VARCHAR(6)\r\n\t\t,@startBillingPeriodForActualData AS VARCHAR(6), @startBillingPeriodForBudgetData AS VARCHAR(6), @isActVsBgtReport6 AS BIT = 0;\r\n\r\n\tDECLARE @BudgetByBudgetGroup TABLE (BudgetGroupID INT,\r\n\t\tReportDataTypeId INT,\r\n\t\tBudgetDollar MONEY,\r\n\t\tBudgetUsage DECIMAL(20, 2),\r\n\t\tBudgetRate MONEY,\r\n\t\tBudgetDollar_YTD MONEY, \r\n\t\tBudgetDollar_EOY MONEY, \r\n\t\tBudgetDollar_FullYear MONEY);\r\n\r\n\t--for mid year budget added on 05/18/2018--\r\n\tDECLARE @tempActualData TABLE (BudgetGroupID INT,\r\n\t\tBudgetGroupName VARCHAR(75),\r\n\t\tStartBillingPeriod VARCHAR(6),\r\n\t\tEndBillingPeriod VARCHAR(6),\r\n\t\tReportDataTypeId INT,\r\n\t\tIsProjection BIT,\r\n\t\tActualDollar MONEY,\r\n\t\tActualUsage DECIMAL(20,2),\r\n\t\tActualRate DECIMAL(20,4),\r\n\t\tActualAdjustmentSurplus MONEY,\r\n\t\tActualTenantDollar MONEY,\r\n\t\tActualTenantUsage DECIMAL(20, 2),\r\n\t\tLastMonthActualDollar MONEY);\r\n\r\n\tDECLARE @tempBudgetData TABLE (BudgetGroupID INT,\r\n\t\tBudgetGroupName VARCHAR(75),\r\n\t\tStartBillingPeriod VARCHAR(6),\r\n\t\tEndBillingPeriod VARCHAR(6),\r\n\t\tReportDataTypeId INT, \r\n\t\tIsProjection BIT,\r\n\t\tIsBreakDownReport BIT,\r\n\t\tBudgetDollar MONEY, \r\n\t\tBudgetUsage DECIMAL(20, 4), \r\n\t\tBudgetRate DECIMAL(20, 4),\r\n\t\tBudgetDollar_YTD MONEY,    \r\n\t\tBudgetDollar_EOY MONEY,    \r\n\t\tBudgetDollar_FullYear MONEY);\r\n\r\n\tIF CAST(RIGHT(@endBillingPeriod, 2) AS INT)<7\r\n\t\tSET @fy=CAST(LEFT(@endBillingPeriod, 4) AS INT)\r\n\tELSE\t\r\n\t\tSET @fy=CAST(LEFT(@endBillingPeriod, 4) AS INT)+1\r\n\r\n\t--for mid year budget added on 05/17/2018--\r\n\tIF @IsProjection=1 AND EXISTS (SELECT * FROM budget.Scenario WHERE FY=@fy AND IsCurrentProjection=1)\r\n\t\tSELECT @currentBudgetScenarioId=ISNULL(MAX(ID), 0)\r\n\t\tFROM budget.Scenario\r\n\t\tWHERE FY=@fy AND IsCurrentProjection=1;\r\n\tELSE\r\n\t\tSELECT @currentBudgetScenarioId=ISNULL(MAX(ID), 0)\r\n\t\tFROM budget.Scenario\r\n\t\tWHERE FY=@fy AND IsCurrentBudget=1;\r\n\r\n\tSELECT @actualDataEndMonth = CAST(ISNULL(ActualDataEndMonth, 0) AS VARCHAR(6))\r\n\tFROM budget.Scenario\r\n\tWHERE ID=@currentBudgetScenarioId;\r\n\r\n\tIF (@actualDataEndMonth = '0') --Non Mid Year Budget\r\n\tBEGIN\r\n\t\tINSERT INTO @BudgetByBudgetGroup (BudgetGroupID, ReportDataTypeId, BudgetDollar, BudgetUsage, BudgetRate, BudgetDollar_YTD, BudgetDollar_EOY, BudgetDollar_FullYear)\r\n\t\tSELECT BudgetGroupID, ReportDataTypeId, BudgetDollar, BudgetUsage, BudgetRate, BudgetDollar_YTD, BudgetDollar_EOY, BudgetDollar_FullYear \r\n\t\tFROM dbo.UDF_ActualVsBudget_GetBudget_ByBudgetGroup(@startBillingPeriod, @endBillingPeriod, @IsProjection, DEFAULT);\r\n\t\t\r\n\t\tSELECT a.BudgetGroupID, b.BudgetGroupName,\r\n\t\t\t@startBillingPeriod AS StartBillingPeriod,\r\n\t\t\t@endBillingPeriod AS EndBillingPeriod,\r\n\t\t\ta.ReportDataTypeId, \r\n\t\t\t@IsProjection AS IsProjection,\r\n\t\t\t@IsBreakDownReport AS IsBreakDownReport,\r\n\t\t\tISNULL(a.BudgetDollar, 0) AS BudgetDollar, \r\n\t\t\tISNULL(a.BudgetUsage, 0) AS BudgetUsage, \r\n\t\t\tCASE WHEN ISNULL(a.BudgetUsage, 0)<>0 THEN\r\n\t\t\t\tISNULL(a.BudgetDollar, 0)/ISNULL(a.BudgetUsage, 0)\r\n\t\t\tELSE 0.00 END AS BudgetRate,\r\n\t\t\tISNULL(a.BudgetDollar_YTD, 0) AS BudgetDollar_YTD,    \r\n\t\t\tISNULL(a.BudgetDollar_EOY, 0) AS BudgetDollar_EOY,    \r\n\t\t\tISNULL(a.BudgetDollar_FullYear, 0) AS BudgetDollar_FullYear,\r\n\t\t\t0.00 AS ActualAdjustmentSurplus\r\n\t\tFROM @BudgetByBudgetGroup  a\r\n\t\t\tINNER JOIN preload.BudgetGroup b ON a.BudgetGroupID = b.BudgetGroupID\r\n\t\t\tINNER JOIN preload.BudgetGroupByFY c ON b.BudgetGroupID=c.BudgetGroupID\r\n\t\tWHERE c.FY=@fy;\r\n\tEND;\r\n\tELSE --Mid Year Budget added on 05/18/2018\r\n\tBEGIN\r\n\t\tIF (@IsBreakDownReport=0 AND @startBillingPeriod=@endBillingPeriod)\r\n\t\tBEGIN\r\n\t\t\tSET @isActVsBgtReport6 = 1;\r\n\t\tEND;\r\n\t\t\r\n\t\t--always need actual data\r\n\t\tSELECT @endBillingPeriodForActualData = CASE WHEN @actualDataEndMonth > @endBillingPeriod THEN @endBillingPeriod\r\n\t\t\tELSE @actualDataEndMonth END;\r\n\r\n\t\tIF @isActVsBgtReport6 = 1 --For Actual vs Budget Report #6\r\n\t\tBEGIN\t\t\t\t\r\n\t\t\tSELECT @startBillingPeriodForActualData = CASE WHEN CAST(@startBillingPeriod AS INT)%100 >6 THEN LEFT(@startBillingPeriod, 4)+'07' \r\n\t\t\t\tELSE CAST(CAST(@startBillingPeriod AS INT)/100-1 AS VARCHAR(4))+'07' END;\r\n\r\n\t\t\tINSERT INTO @tempActualData\r\n\t\t\tEXEC report.USP_ActualVsBudget_RetrieveActualData_ByBudgetGroup\r\n\t\t\t\t@startBillingPeriodForActualData,\r\n\t\t\t\t@endBillingPeriodForActualData,\r\n\t\t\t\t@IsProjection;\r\n\t\tEND;        \r\n\t\tELSE\r\n\t\tBEGIN\r\n\t\t\tINSERT INTO @tempActualData\r\n\t\t\tEXEC report.USP_ActualVsBudget_RetrieveActualData_ByBudgetGroup\r\n\t\t\t\t@startBillingPeriod,\r\n\t\t\t\t@endBillingPeriodForActualData,\r\n\t\t\t\t@IsProjection;\r\n\t\tEND;\r\n\r\n\t\tIF @endBillingPeriod > @actualDataEndMonth --need budget data\r\n\t\tBEGIN\r\n\t\t\tSELECT @startBillingPeriodForBudgetData = CASE WHEN @startBillingPeriod = @endBillingPeriod THEN @endBillingPeriod\r\n\t\t\t\tELSE LEFT(CONVERT(VARCHAR, DATEADD(m, 1, CONVERT(DATE, @actualDataEndMonth + '01', 112)), 112), 6) END;\r\n\r\n\t\t\tINSERT INTO @BudgetByBudgetGroup (BudgetGroupID, ReportDataTypeId, BudgetDollar, BudgetUsage, BudgetRate, BudgetDollar_YTD, BudgetDollar_EOY, BudgetDollar_FullYear)\r\n\t\t\tSELECT BudgetGroupID, ReportDataTypeId, BudgetDollar, BudgetUsage, BudgetRate, BudgetDollar_YTD, BudgetDollar_EOY, BudgetDollar_FullYear \r\n\t\t\tFROM dbo.UDF_ActualVsBudget_GetBudget_ByBudgetGroup(@startBillingPeriodForBudgetData, @endBillingPeriod, @IsProjection, @actualDataEndMonth);\r\n\t\t   \r\n\t\t    INSERT INTO @tempBudgetData\r\n\t\t\tSELECT a.BudgetGroupID, b.BudgetGroupName,\r\n\t\t\t\t@startBillingPeriodForBudgetData AS StartBillingPeriod,\r\n\t\t\t\t@endBillingPeriod AS EndBillingPeriod,\r\n\t\t\t\ta.ReportDataTypeId, \r\n\t\t\t\t@IsProjection AS IsProjection,\r\n\t\t\t\t@IsBreakDownReport AS IsBreakDownReport,\r\n\t\t\t\tISNULL(a.BudgetDollar, 0) AS BudgetDollar, \r\n\t\t\t\tISNULL(a.BudgetUsage, 0) AS BudgetUsage, \r\n\t\t\t\tCASE WHEN ISNULL(a.BudgetUsage, 0)<>0 THEN\r\n\t\t\t\t\tISNULL(a.BudgetDollar, 0)/ISNULL(a.BudgetUsage, 0)\r\n\t\t\t\tELSE 0 END AS BudgetRate,\r\n\t\t\t\tISNULL(a.BudgetDollar_YTD, 0) AS BudgetDollar_YTD,    \r\n\t\t\t\tISNULL(a.BudgetDollar_EOY, 0) AS BudgetDollar_EOY,    \r\n\t\t\t\tISNULL(a.BudgetDollar_FullYear, 0) AS BudgetDollar_FullYear\r\n\t\t\tFROM @BudgetByBudgetGroup  a JOIN preload.BudgetGroup b ON a.BudgetGroupID=b.BudgetGroupID\r\n\t\t\t\tJOIN preload.BudgetGroupByFY c ON b.BudgetGroupID=c.BudgetGroupID\r\n\t\t\tWHERE c.FY=@fy;\r\n\t\tEND;\r\n\t\tELSE IF @endBillingPeriod <= @actualDataEndMonth AND @IsBreakDownReport=0 AND @startBillingPeriod=@endBillingPeriod\r\n\t\t--Only need full year budget (For Actual vs Budget Report #6) added on 05/21/2018\r\n\t\tBEGIN\r\n\t\t\tINSERT INTO @BudgetByBudgetGroup (BudgetGroupID, ReportDataTypeId, BudgetDollar, BudgetUsage, BudgetRate, BudgetDollar_YTD, BudgetDollar_EOY, BudgetDollar_FullYear)\r\n\t\t\tSELECT BudgetGroupID, ReportDataTypeId, BudgetDollar, BudgetUsage, BudgetRate, BudgetDollar_YTD, BudgetDollar_EOY, BudgetDollar_FullYear \r\n\t\t\tFROM dbo.UDF_ActualVsBudget_GetBudget_ByBudgetGroup(@endBillingPeriod, @endBillingPeriod, @IsProjection, DEFAULT);\r\n\t\t   \r\n\t\t    INSERT INTO @tempBudgetData\r\n\t\t\tSELECT a.BudgetGroupID, b.BudgetGroupName,\r\n\t\t\t\t@endBillingPeriod AS StartBillingPeriod,\r\n\t\t\t\t@endBillingPeriod AS EndBillingPeriod,\r\n\t\t\t\ta.ReportDataTypeId, \r\n\t\t\t\t@IsProjection AS IsProjection,\r\n\t\t\t\t@IsBreakDownReport AS IsBreakDownReport,\r\n\t\t\t\t0 AS BudgetDollar, \r\n\t\t\t\t0 AS BudgetUsage, \r\n\t\t\t\t0 AS BudgetRate,\r\n\t\t\t\t0 AS BudgetDollar_YTD,    \r\n\t\t\t\tCASE WHEN RIGHT(@endBillingPeriod, 2) = '06' THEN 0 ELSE ISNULL(a.BudgetDollar_EOY, 0) END AS BudgetDollar_EOY,    \r\n\t\t\t\tISNULL(a.BudgetDollar_FullYear, 0) AS BudgetDollar_FullYear\r\n\t\t\tFROM @BudgetByBudgetGroup  a\r\n\t\t\t\tINNER JOIN preload.BudgetGroup b ON a.BudgetGroupID = b.BudgetGroupID\r\n\t\t\t\tINNER JOIN preload.BudgetGroupByFY c ON b.BudgetGroupID = c.BudgetGroupID\r\n\t\t\tWHERE c.FY=@fy;\r\n\t\tEND;\r\n\r\n\t\tSELECT BudgetGroupID,\r\n\t\t\tBudgetGroupName,\r\n\t\t\tStartBillingPeriod,\r\n\t\t\tEndBillingPeriod,\r\n\t\t\tReportDataTypeId, \r\n\t\t\tIsProjection,\r\n\t\t\tIsBreakDownReport,\r\n\t\t\tBudgetDollar, \r\n\t\t\tBudgetUsage, \r\n\t\t\tBudgetRate,\r\n\t\t\tBudgetDollar_YTD,    \r\n\t\t\tBudgetDollar_EOY,    \r\n\t\t\tBudgetDollar_FullYear,\r\n\t\t\t0.00 AS ActualAdjustmentSurplus\r\n\t\tFROM @tempBudgetData\r\n\t\tUNION ALL\r\n\t\tSELECT BudgetGroupID,\r\n\t\t\tBudgetGroupName,\r\n\t\t\tStartBillingPeriod,\r\n\t\t\tEndBillingPeriod,\r\n\t\t\tReportDataTypeId,\r\n\t\t\tIsProjection,\r\n\t\t\t@IsBreakDownReport AS IsBreakDownReport,\r\n\t\t\tCASE WHEN @endBillingPeriod <= @actualDataEndMonth AND @IsBreakDownReport=0 AND @startBillingPeriod=@endBillingPeriod THEN LastMonthActualDollar\r\n\t\t\t\t WHEN @endBillingPeriod > @actualDataEndMonth AND @IsBreakDownReport=0 AND @startBillingPeriod=@endBillingPeriod THEN 0\r\n\t\t\t     ELSE ActualDollar \r\n\t\t\tEND AS BudgetDollar,\r\n\t\t\tActualUsage AS BudgetUsage,\r\n\t\t\tActualRate AS BudgetRate,\r\n\t\t\tActualDollar AS BudgetDollar_YTD,\r\n\t\t\t0 AS BudgetDollar_EOY,\r\n\t\t\t0 AS BudgetDollar_FullYear,\r\n\t\t\tActualAdjustmentSurplus\r\n\t\tFROM @tempActualData;\r\n\tEND;\r\nEND;\r"
        }
      ]
    }
  ]
}
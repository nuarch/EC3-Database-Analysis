{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "UDF_GetActualDataFromEC3",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "UDF_GetActualDataFromEC3",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. This type of function allows for complex operations that involve multiple statements and can return a table as a result. The function is designed to retrieve and process data from a source referred to as \"EC3,\" which could be a table or a set of tables within the database. The function likely involves multiple steps to transform or filter the data before returning it in a tabular format."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to execute multiple SQL statements and maintain state across these operations. The complexity is also influenced by the number of operations performed, the logic applied, and the potential for interacting with multiple tables or data sources."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The input parameters for this function are not provided, but typically, such functions would include parameters that specify criteria for data retrieval, such as identifiers, date ranges, or other filtering conditions. These parameters are crucial for tailoring the function's output to specific needs or contexts."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is a table. The structure of this table is defined within the function and typically includes columns that represent the processed data from the EC3 source. The schema of the returned table is determined by the logic within the function and is designed to meet the requirements of the business logic it supports."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within "
        },
        {
          "type": "text",
          "text": "UDF_GetActualDataFromEC3",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " involves multiple SQL statements that collectively transform and prepare data for output. The workflow likely includes:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Retrieving raw data from the EC3 source."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Applying transformations or calculations to the data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Filtering or aggregating the data based on business rules."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Inserting the processed data into a table variable, which is then returned as the function's result."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Performance considerations for multi-statement table-valued functions include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution time can be longer compared to inline table-valued functions due to the overhead of multiple statements and potential use of temporary storage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function may not benefit from query plan optimizations as effectively as inline functions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing strategies on the underlying tables and the use of efficient SQL operations can mitigate performance impacts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function's performance can be affected by the volume of data processed and the complexity of the operations performed."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks associated with this function include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability concerns if the function processes large volumes of data without efficient indexing or query optimization."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance challenges due to the complexity of the logic and the potential for changes in the underlying data structures or business rules."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Risk of data inconsistency if the function relies on external data sources that are subject to change."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Debugging and troubleshooting can be more difficult due to the multi-statement nature of the function, which may involve complex interactions between different parts of the logic."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [dbo].[UDF_GetActualDataFromEC3]\n(\r\n\t@publishedBillingPeriod AS VARCHAR(6)\r\n\t,@actualStartMonth AS VARCHAR(6)\r\n\t,@scenarioId AS INT\r\n)\r\nRETURNS @Output TABLE(AgencyCodeOEC VARCHAR(6) NULL\r\n\t,BudgetGroupID INT NULL\r\n\t,BillingPeriod INT NULL\r\n\t,TotalDollars MONEY NULL\r\n\t,EnergyUsage DECIMAL(38,2) NULL\r\n\t,DemandUsage DECIMAL(38,2) NULL)\r\nAS\r\nBEGIN\r\n\tDECLARE @tenantChargetId AS INT, @dcasAgencyCode AS VARCHAR(6) = '856001'\r\n\t\t,@dcas856090AgencyCode AS VARCHAR(6) = '856090',  @bugFixStartingBillingPeriod AS VARCHAR(6) = '201707'\r\n\t\t,@InvoiceAccountGroup49_CutOffDate AS VARCHAR(6)='202007';\r\n\r\n\tSELECT @tenantChargetId = TenantChargeID\r\n\tFROM budget.Scenario\r\n\tWHERE ID = @scenarioId;\r\n\r\n\tWITH DCAS AS(SELECT AgencyCodeOEC, BudgetGroupID, BillingPeriod\r\n\t\t\t,SUM(TotalDollars) AS TotalDollars\r\n\t\t\t,SUM(EnergyUsage) AS EnergyUsage\r\n\t\t\t,SUM(DemandUsage) AS DemandUsage\r\n\t\t\t,SUM(chargeback) AS Chargeback\r\n\t\t\t,SUM(refund) AS Refund\r\n\t\tFROM (SELECT ep.agencycodeoec\r\n\t\t\t\t,euti.BudgetGroupDEM AS BudgetGroupID\r\n\t\t\t\t,CAST(ep.BillingPeriod AS INT) AS BillingPeriod\r\n\t\t\t\t,SUM(ISNULL(ep.manualPaymentOverrideAmount, 0)) AS TotalDollars\r\n\t\t\t\t,SUM(ISNULL(ep.OnPeakEnergyUsage, 0)) + SUM(ISNULL(ep.OffPeakEnergyUsage, 0)) AS EnergyUsage\r\n\t\t\t\t,SUM(ISNULL(ep.AccountDemandUsage, 0)) AS DemandUsage\r\n\t\t\t\t,dbo.UDF_GetChargeback_ByAgencyBgtGrpBillingPeriod(\r\n\t\t\t\t\tCASE WHEN @publishedBillingPeriod >= @bugFixStartingBillingPeriod THEN ep.BillingPeriod ELSE @publishedBillingPeriod END,\r\n\t\t\t\t\t@dcasAgencyCode,\r\n\t\t\t\t\teuti.BudgetGroupDEM\r\n\t\t\t\t) AS chargeback\r\n\t\t\t\t,CASE WHEN euti.BudgetGroupDEM = 16 THEN dbo.UDF_GetRefund_ByAgencyBillingPeriod(CASE WHEN @publishedBillingPeriod >= @bugFixStartingBillingPeriod\r\n\t\t\t\t\tTHEN ep.BillingPeriod ELSE @publishedBillingPeriod END, @dcasAgencyCode) ELSE 0 END AS refund\r\n\t\t\tFROM EC3DB.Published_AccountLevelRawDataForCurrentPeriod AS ep\r\n\t\t\t\tINNER JOIN EC3DB.Billing_UtilityTariffRateInformation AS euti ON (\r\n\t\t\t\t\t(ep.UtilityTariffRateInformationSeqId = euti.UtilityTariffRateInformationSeqId AND @actualStartMonth < @InvoiceAccountGroup49_CutOffDate)\r\n\t\t\t\t\tOR (@actualStartMonth >= @InvoiceAccountGroup49_CutOffDate\r\n\t\t\t\t\t\tAND ((ep.UtilityTariffRateInformationSeqId = euti.UtilityTariffRateInformationSeqId AND euti.UtilityTariffRateInformationSeqId<>139)\r\n\t\t\t\t\t\t\tOR (ep.UtilityTariffRateInformationSeqId=139 AND euti.UtilityTariffRateInformationSeqId=204)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\tWHERE ep.AgencyCodeOEC = @dcasAgencyCode\r\n\t\t\t\tAND ep.BillingPeriod BETWEEN @actualStartMonth AND @publishedBillingPeriod\r\n\t\t\t\tAND (ep.CurrentInvoiceAccountBillingGroup <> 49 OR @actualStartMonth >= @InvoiceAccountGroup49_CutOffDate)\r\n\t\t\t\tAND ep.AccountStatus <> 'EP'\r\n\t\t\tGROUP BY ep.AgencyCodeOEC\r\n\t\t\t\t,ep.BillingPeriod\r\n\t\t\t\t,euti.BudgetGroupDEM) AS a1\r\n\t\tGROUP BY AgencyCodeOEC\r\n\t\t\t,BudgetGroupID\r\n\t\t\t,BillingPeriod)\r\n\t,AgencyDetails AS (SELECT AgencyCodeOEC, BudgetGroupID, BillingPeriod\r\n\t\t\t,SUM(TotalDollars) AS TotalDollars\r\n\t\t\t,SUM(EnergyUsage) AS EnergyUsage\r\n\t\t\t,SUM(DemandUsage) AS DemandUsage\r\n\t\t\t,SUM(chargeback) AS Chargeback\r\n\t\t\t,SUM(refund) AS Refund\r\n\t\tFROM (SELECT ep.agencycodeoec\r\n\t\t\t\t,euti.BudgetGroupDEM AS BudgetGroupID\r\n\t\t\t\t,CAST(ep.BillingPeriod AS INT) AS BillingPeriod\r\n\t\t\t\t,SUM(ep.manualPaymentOverrideAmount) AS TotalDollars\r\n\t\t\t\t,SUM(ep.OnPeakEnergyUsage) + SUM(ep.OffPeakEnergyUsage) AS EnergyUsage\r\n\t\t\t\t,SUM(ep.AccountDemandUsage) AS DemandUsage\r\n\t\t\t\t,dbo.UDF_GetChargeback_ByAgencyBgtGrpBillingPeriod(\r\n\t\t\t\t\tCASE WHEN @publishedBillingPeriod >= @bugFixStartingBillingPeriod THEN ep.BillingPeriod ELSE @publishedBillingPeriod END,\r\n\t\t\t\t\tep.agencycodeoec,\r\n\t\t\t\t\teuti.BudgetGroupDEM) AS chargeback\r\n\t\t\t\t,CASE WHEN euti.BudgetGroupDEM = 16 THEN dbo.UDF_GetRefund_ByAgencyBillingPeriod(CASE WHEN @publishedBillingPeriod >= @bugFixStartingBillingPeriod\r\n\t\t\t\t\tTHEN ep.BillingPeriod ELSE @publishedBillingPeriod END, ep.agencycodeoec) ELSE 0 END AS refund\r\n\t\t\tFROM EC3DB.Published_AccountLevelRawDataForCurrentPeriod AS ep\r\n\t\t\t\tINNER JOIN EC3DB.Billing_UtilityTariffRateInformation AS euti ON ep.UtilityTariffRateInformationSeqId = euti.UtilityTariffRateInformationSeqId\r\n\t\t\tWHERE ep.BillingPeriod BETWEEN @actualStartMonth AND @publishedBillingPeriod\r\n\t\t\t\tAND (ep.CurrentInvoiceAccountBillingGroup <> 49 OR @actualStartMonth >= @InvoiceAccountGroup49_CutOffDate)\r\n\t\t\t\tAND ep.AccountStatus <> 'EP'\r\n\t\t\tGROUP BY ep.AgencyCodeOEC\r\n\t\t\t\t,ep.BillingPeriod\r\n\t\t\t\t,euti.BudgetGroupDEM\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT '856001' AS AgencyCodeOEC, BudgetGroupID, BudgetBillingPeriod AS BillingPeriod\r\n\t\t\t\t,(-1)*SUM(ISNULL(TotalDollars, 0)) AS TotalDollars\r\n\t\t\t\t,(-1)*SUM(ISNULL(EnergyUsage, 0)) AS EnergyUsage\r\n\t\t\t\t,(-1)*SUM(ISNULL(DemandUsage, 0)) AS DemandUsage\r\n\t\t\t\t,0 AS Chargeback\r\n\t\t\t\t,0 AS refund\r\n\t\t\tFROM budget.StagingBudget\r\n\t\t\tWHERE ScenarioId=@scenarioId\r\n\t\t\t\tAND BudgetBillingPeriod <= @publishedBillingPeriod AND AgencyCodeOEC = @dcas856090AgencyCode\r\n\t\t\t\tAND BudgetStageID IN (2, 3, 4, 5, 6, 7, 8, 10)\r\n\t\t\tGROUP BY ScenarioId\r\n\t\t\t\t,AgencyCodeOEC\r\n\t\t\t\t,BudgetGroupID\r\n\t\t\t\t,BudgetBillingPeriod\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT AgencyCodeOEC, BudgetGroupID, BudgetBillingPeriod AS BillingPeriod\r\n\t\t\t\t,SUM(ISNULL(TotalDollars, 0)) AS TotalDollars\r\n\t\t\t\t,SUM(ISNULL(EnergyUsage, 0)) AS EnergyUsage\r\n\t\t\t\t,SUM(ISNULL(DemandUsage, 0)) AS DemandUsage\r\n\t\t\t\t,0 AS Chargeback\r\n\t\t\t\t,0 AS refund\r\n\t\t\tFROM budget.StagingBudget\r\n\t\t\tWHERE ScenarioId=@scenarioId\r\n\t\t\t\tAND BudgetBillingPeriod <= @publishedBillingPeriod AND AgencyCodeOEC = @dcas856090AgencyCode\r\n\t\t\t\tAND BudgetStageID IN (2, 3, 4, 5, 6, 7, 8, 10)\r\n\t\t\tGROUP BY ScenarioId\r\n\t\t\t\t,AgencyCodeOEC\r\n\t\t\t\t,BudgetGroupID\r\n\t\t\t\t,BudgetBillingPeriod) AS a1\r\n\t\tGROUP BY AgencyCodeOEC\r\n\t\t\t,BudgetGroupID\r\n\t\t\t,BillingPeriod)\r\n\r\n\tINSERT INTO @Output(AgencyCodeOEC, BudgetGroupID, BillingPeriod, TotalDollars, EnergyUsage, DemandUsage)\r\n\tSELECT ISNULL(a.agencycodeoec, c.AgencyCodeOEC) AS AgencyCodeOEC\r\n\t\t,ISNULL(a.BudgetGroupID, c.BudgetGroupID) AS BudgetGroupID\r\n\t\t,ISNULL(a.BillingPeriod, c.BillingPeriod) AS BillingPeriod\r\n\t\t,ISNULL(a.TotalDollars, 0) + ISNULL(a.chargeback, 0) + ISNULL(a.refund, 0) + ISNULL(c.TotalDollars, 0) AS TotalDollars\r\n\t\t,ISNULL(a.EnergyUsage, 0) + ISNULL(c.EnergyUsage, 0) AS EnergyUsage\r\n\t\t,ISNULL(a.DemandUsage, 0) + ISNULL(c.DemandUsage, 0) AS DemandUsage\r\n\tFROM AgencyDetails AS a\r\n\t\tFULL JOIN (SELECT a.agencyCode AS AgencyCodeOEC, b.BudgetGroupId, b.BillingPeriod,\r\n\t\t\t\t(b.totalDollars-IIF(@publishedBillingPeriod >= @bugFixStartingBillingPeriod, 0, ISNULL(b.refund,0)))*a.ChargePercentage AS TotalDollars\r\n\t\t\t\t,b.energyUsage * a.ChargePercentage AS EnergyUsage\r\n\t\t\t\t,b.demandUsage * a.ChargePercentage AS DemandUsage\r\n\t\t\tFROM INPUT.TenantChargeDetail AS a\r\n\t\t\t\tINNER JOIN DCAS AS b ON a.TenantChargeID = @tenantChargetId) AS c ON a.AgencyCodeOEC = c.AgencyCodeOEC\r\n\t\t\t\t\tAND a.BudgetGroupID = c.BudgetGroupID AND a.BillingPeriod = c.BillingPeriod;\r\n \r\n\tRETURN;\r\nEND;\r"
        }
      ]
    }
  ]
}
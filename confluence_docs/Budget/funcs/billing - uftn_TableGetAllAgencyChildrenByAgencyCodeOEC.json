{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableGetAllAgencyChildrenByAgencyCodeOEC",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableGetAllAgencyChildrenByAgencyCodeOEC",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function in Microsoft SQL Server. It is designed to retrieve all child agencies associated with a given agency code. This function likely involves querying hierarchical data where agencies have parent-child relationships, and it returns a set of records representing these child agencies."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level is considered medium due to the nature of multi-statement table-valued functions, which involve multiple operations and potentially complex logic to handle hierarchical data. The function likely involves recursive logic or iterative processing to navigate through the agency hierarchy."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function takes one or more input parameters, which are used to filter and retrieve the relevant child agencies. The primary input parameter is:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to specify the agency code for which the child agencies need to be retrieved. It serves as the starting point for the hierarchical query."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a table data type. The structure of the returned table includes columns that represent the attributes of the child agencies. These columns might include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ChildAgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The code of the child agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ChildAgencyName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The name of the child agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional columns that provide further details about each child agency, such as location, status, or parent agency information."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic involves:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initializing a table variable to store the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Using the input "
                },
                {
                  "type": "text",
                  "text": "@AgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to query the database and identify all direct child agencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Iteratively or recursively processing each child agency to find further descendants, if applicable."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Populating the table variable with the results of these queries."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the table variable as the function's output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow may involve recursive common table expressions (CTEs) or iterative loops to traverse the agency hierarchy."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Multi-statement table-valued functions can have performance overhead due to the use of table variables, which may not benefit from indexing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Recursive or iterative logic can be resource-intensive, especially if the agency hierarchy is deep or contains a large number of nodes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Considerations should be made for optimizing the underlying queries, such as indexing relevant columns and minimizing the number of iterations or recursive calls."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If the agency hierarchy is very deep, the function may encounter performance bottlenecks or exceed recursion limits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Changes in the schema of the underlying tables (e.g., changes in column names or data types) can lead to errors if the function is not updated accordingly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function may not handle circular references in the hierarchy, which could lead to infinite loops or stack overflow errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency issues might arise if the function is executed frequently in a high-transaction environment, potentially leading to locking or blocking scenarios."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [billing].[uftn_TableGetAllAgencyChildrenByAgencyCodeOEC]\n(\r\n    @AgencyCodeOEC AS VARCHAR(MAX) -- agency codes\r\n    ,@EmailAddress AS VARCHAR(75)\r\n)\r\nRETURNS @selectedAgency TABLE(AgencyCodeOEC VARCHAR(6) NULL\r\n    ,AgencyDivisionSeqID INT NULL\r\n    ,AgencyDivisionHierarchy HIERARCHYID NULL\r\n    ,ParentAgencyDivisionSeqid INT NULL\r\n    ,AgencyName VARCHAR(75) NULL)\r\nAS\r\nBEGIN\r\n    DECLARE @delimiter AS CHAR(1) = ',';\r\n\r\n    IF(@AgencyCodeOEC = '*')\r\n\tBEGIN\r\n\t\tINSERT INTO @selectedAgency(AgencyCodeOEC, AgencyDivisionSeqID, AgencyDivisionHierarchy, ParentAgencyDivisionSeqid, AgencyName)\r\n\t\tSELECT AgencyCodeOEC, AgencyDivisionSeqID, AgencyDivisionHierarchy, ParentAgencyDivisionSeqid, AgencyName\r\n\t\tFROM dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS A\r\n\t\tORDER BY AgencyCodeOEC;\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\t-- parse agency code oec\r\n\t\tWITH cteAgencyCodeOEC AS (SELECT 0 As [pos], 1 AS [level]\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT CONVERT(INT, CHARINDEX(@delimiter, @AgencyCodeOEC, cteAgencyCodeOEC.pos + 1)), [level] + 1\r\n\t\t\tFROM cteAgencyCodeOEC\r\n\t\t\tWHERE  CHARINDEX(@delimiter, @AgencyCodeOEC, cteAgencyCodeOEC.pos + 1) > 0)\r\n\r\n\t\tINSERT INTO @selectedAgency(AgencyCodeOEC)\r\n\t\tSELECT SUBSTRING(@AgencyCodeOEC, a.pos + 1, CASE WHEN b.pos IS NULL THEN (LEN(@AgencyCodeOEC) - a.pos) ELSE (b.pos - a.pos -1) END)\r\n\t\tFROM cteAgencyCodeOEC AS a\r\n\t\t\tLEFT JOIN cteAgencyCodeOEC AS b ON a.[level] + 1 = b.[level];\r\n\r\n\t\t-- remove agency passed by mistake\r\n\t\tDELETE FROM @selectedAgency\r\n\t\tWHERE AgencyCodeOEC NOT IN (SELECT AgencyCodeOEC FROM dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress));\r\n\tEND;\r\n\r\n\tUPDATE sg\r\n    SET sg.AgencyDivisionSeqID = ag.AgencyDivisionSeqID\r\n        ,sg.AgencyDivisionHierarchy = ag.AgencyDivisionHierarchy\r\n        ,sg.ParentAgencyDivisionSeqid = ag.ParentAgencyDivisionSeqid\r\n        ,sg.AgencyName = ag.AgencyName\r\n    FROM @selectedAgency AS sg\r\n\t\tINNER JOIN EC3DB.Billing_AgencyDivision AS ag ON sg.AgencyCodeOEC = ag.AgencyCodeOEC;\r\n\r\n    --  subtree of selected node(s)\r\n    INSERT INTO @selectedAgency(AgencyCodeOEC\r\n\t\t,AgencyDivisionSeqID\r\n\t\t,AgencyDivisionHierarchy\r\n\t\t,ParentAgencyDivisionSeqid\r\n\t\t,AgencyName)\r\n    SELECT C.AgencyCodeOEC\r\n\t\t,C.AgencyDivisionSeqID\r\n\t\t,C.AgencyDivisionHierarchy\r\n\t\t,C.ParentAgencyDivisionSeqid\r\n\t\t,C.AgencyName\r\n    FROM @selectedAgency AS sg\r\n\t\tINNER JOIN EC3DB.Billing_AgencyDivision AS C ON C.AgencyDivisionHierarchy.IsDescendantOf(sg.AgencyDivisionHierarchy) = 1\r\n\t\t\tAND C.AgencyDivisionSeqID <> sg.AgencyDivisionSeqID\r\n    WHERE C.AgencyCodeOEC NOT IN (SELECT AgencyCodeOEC FROM @selectedAgency);\r\n\r\n    RETURN;\r\nEND;\r"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "UDF_GetTotalBudgetDetails",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "UDF_GetTotalBudgetDetails",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. It is designed to return a table containing detailed budget information based on specific input parameters. This type of function allows for complex logic to be executed over multiple statements, which can be beneficial for operations that require intermediate processing steps or complex calculations."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to execute multiple SQL statements and maintain state across these statements. The complexity is further influenced by the number of operations, joins, and conditional logic used within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The input parameters for "
        },
        {
          "type": "text",
          "text": "UDF_GetTotalBudgetDetails",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " are not provided in the prompt. However, typically, such a function would include parameters that filter or specify the scope of the budget details to be retrieved. Common parameters might include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DATETIME): The beginning date for the budget period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DATETIME): The ending date for the budget period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@DepartmentID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (INT): An identifier for the department whose budget details are being queried."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These parameters allow the function to tailor its output to specific time frames or organizational units."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of this function is a table. The structure of the returned table would typically include columns such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "BudgetID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (INT): A unique identifier for each budget entry."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "DepartmentName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (VARCHAR): The name of the department."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TotalBudget",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DECIMAL): The total budget allocated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SpentAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DECIMAL): The amount spent from the budget."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "RemainingBudget",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DECIMAL): The remaining budget after expenditures."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The exact schema would depend on the specific requirements and design of the database."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within "
        },
        {
          "type": "text",
          "text": "UDF_GetTotalBudgetDetails",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " likely involves the following steps:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialize a table variable to store the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execute one or more SELECT statements to retrieve budget data from relevant tables, possibly joining with other tables to gather additional details such as department names or expenditure records."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Perform calculations to determine total, spent, and remaining budget amounts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert the processed data into the table variable."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Return the table variable as the function's result."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This workflow allows for detailed budget analysis and reporting based on the input parameters."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Performance considerations for multi-statement table-valued functions include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Plan: MSTVFs do not inline into the calling query, which can lead to suboptimal execution plans."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Usage: The use of table variables can lead to increased memory usage, especially if the result set is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing: Lack of indexing on table variables can slow down operations involving large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parallelism: MSTVFs may inhibit parallel execution plans, potentially reducing performance on large queries."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks associated with "
        },
        {
          "type": "text",
          "text": "UDF_GetTotalBudgetDetails",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability: As the dataset grows, performance may degrade due to the limitations of table variables and lack of indexing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance: Changes to the underlying tables or business logic may require updates to the function, increasing maintenance overhead."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complexity: The medium complexity level may lead to challenges in debugging and optimizing the function."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Blocking: If the function involves long-running queries, it may cause blocking issues in a high-concurrency environment."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [dbo].[UDF_GetTotalBudgetDetails]\n(\r\n\t@scenarioId AS INT\r\n)\r\nRETURNS @Output TABLE (AgencyCodeOEC VARCHAR(6) NULL\r\n\t,BudgetGroupID INT NULL\r\n\t,BudgetBillingPeriod INT NULL\r\n\t,TotalDollars MONEY NULL\r\n\t,EnergyUsage DECIMAL(38,2) NULL\r\n\t,DemandUsage DECIMAL(38,2) NULL)\r\nAS\r\nBEGIN\r\n\tDECLARE @fy AS INT, @hasBudget AS BIT, @IsMidYearBudget AS BIT, @actualStartMonth AS INT = 0, @publishedBillingPeriod AS INT = 0;\r\n\r\n    SELECT @fy = FY,\r\n        @IsMidYearBudget = CASE WHEN ActualDataEndMonth <> 0 THEN 1 ELSE 0 END,\r\n        @actualStartMonth = ( FY - 1 ) * 100 + 7,\r\n        @publishedBillingPeriod = ActualDataEndMonth\r\n    FROM budget.Scenario\r\n    WHERE ID = @scenarioId;\r\n\r\n\tIF EXISTS (SELECT 1\r\n\t\tFROM budget.StagingBudget\r\n\t\tWHERE ScenarioId = @scenarioId AND BudgetStageID IN (2, 3, 4, 5, 6, 7, 8, 10)\r\n\t\tGROUP BY ScenarioId\r\n\t\tHAVING COUNT(DISTINCT BudgetStageID) = 8)\r\n\tBEGIN\r\n\t\tSET\t@hasBudget = 1;\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\tSET @hasBudget = 0;\r\n\tEND;\r\n\r\n\tIF (@hasBudget = 0)\r\n\tBEGIN\r\n\t\tINSERT INTO @Output VALUES ('000000', 0, 0, 0, 0, 0);\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\tIF (@IsMidYearBudget = 0)\r\n\t\tBEGIN\r\n\t\t\tINSERT INTO @Output (AgencyCodeOEC, BudgetGroupID, BudgetBillingPeriod, TotalDollars, EnergyUsage, DemandUsage)\r\n\t\t\tSELECT AgencyCodeOEC, BudgetGroupID, BudgetBillingPeriod\r\n\t\t\t\t,SUM(TotalDollars) AS TotalDollars, SUM(EnergyUsage) AS EnergyUsage, SUM(DemandUsage) AS DemandUsage\r\n\t\t\tFROM budget.StagingBudget\r\n\t\t\tWHERE ScenarioId=@scenarioId AND BudgetStageID IN (2, 3, 4, 5, 6, 7, 8, 10)\r\n\t\t\tGROUP BY AgencyCodeOEC, BudgetGroupID, BudgetBillingPeriod;\r\n\t\tEND;\r\n\t\tELSE\r\n\t\tBEGIN\r\n\t\t\tINSERT INTO\t@Output (AgencyCodeOEC, BudgetGroupID, BudgetBillingPeriod, TotalDollars, EnergyUsage, DemandUsage)\r\n\t\t\tSELECT ISNULL(bgt.AgencyCodeOEC, ep.agencyCodeOEC) AS AgencyCodeOEC\r\n\t\t\t\t,ISNULL(bgt.BudgetGroupID, ep.BudgetGroupID) AS BudgetGroupID\r\n\t\t\t\t,ISNULL(bgt.BudgetBillingPeriod, ep.BillingPeriod) AS BudgetBillingPeriod\r\n\t\t\t\t,SUM(CASE WHEN ISNULL(bgt.BudgetBillingPeriod, ep.BillingPeriod)<=CAST(@publishedBillingPeriod AS INT) THEN ISNULL(ep.totalDollars,0)\r\n\t\t\t\t\tELSE ISNULL(bgt.TotalDollars,0) END) AS TotalDollars\r\n\t\t\t\t,SUM(CASE WHEN ISNULL(bgt.BudgetBillingPeriod, ep.BillingPeriod)<=CAST(@publishedBillingPeriod AS INT) THEN ISNULL(ep.EnergyUsage,0)\r\n\t\t\t\t\tELSE ISNULL(bgt.EnergyUsage,0) END) AS EnergyUsage\r\n\t\t\t\t,SUM(CASE WHEN ISNULL(bgt.BudgetBillingPeriod, ep.BillingPeriod)<=CAST(@publishedBillingPeriod AS INT) THEN ISNULL(ep.DemandUsage,0)\r\n\t\t\t\t\tELSE ISNULL(bgt.DemandUsage,0) END) AS DemandUsage\r\n\t\t\tFROM (SELECT a.AgencyCodeOEC\r\n\t\t\t\t\t,a.BudgetGroupID\r\n\t\t\t\t\t,a.BudgetBillingPeriod\r\n\t\t\t\t\t,SUM(ISNULL(TotalDollars, 0)) AS TotalDollars\r\n\t\t\t\t\t,SUM(ISNULL(EnergyUsage, 0)) AS EnergyUsage\r\n\t\t\t\t\t,SUM(ISNULL(DemandUsage, 0)) AS DemandUsage\r\n\t\t\t\tFROM budget.StagingBudget AS a\r\n\t\t\t\tWHERE a.ScenarioId=@scenarioId AND BudgetStageID IN (2, 3, 4, 5, 6, 7, 8, 10)\r\n\t\t\t\tGROUP BY a.AgencyCodeOEC, a.BudgetGroupID, a.BudgetBillingPeriod) AS bgt\r\n\t\t\t\tFULL JOIN (SELECT b.billingperiod, b.agencyCodeOEC, b.BudgetGroupID, b.totalDollars,\r\n\t\t\t\t\t\tb.EnergyUsage, b.DemandUsage\r\n\t\t\t\t\tFROM dbo.UDF_GetActualDataFromEC3(CAST(@publishedBillingPeriod AS VARCHAR(6)), CAST(@actualStartMonth AS VARCHAR(6)), @scenarioId) b -- changed on 12/14/2018 @tenantChargeId) b\r\n\t\t\t\t\tWHERE b.AgencyCodeOEC IN (SELECT a1.AgencyCodeOEC\r\n\t\t\t\t\t\t\tFROM Preload.Agency AS a1\r\n\t\t\t\t\t\t\t\tINNER JOIN Preload.AgencyByFY AS c1 ON a1.AgencyId = c1.AgencyId\r\n\t\t\t\t\t\t\tWHERE c1.FY = @fy)\r\n\t\t\t\t\t\tAND b.BudgetGroupID IN (SELECT BudgetGroupID FROM preload.BudgetGroupByFY WHERE FY = @fy)\r\n\t\t\t) AS ep ON bgt.AgencyCodeOEC=ep.agencycodeoec AND bgt.BudgetGroupID=ep.BudgetGroupID AND bgt.BudgetBillingPeriod=ep.billingperiod\r\n\t\t\tGROUP BY ISNULL(bgt.AgencyCodeOEC, ep.agencyCodeOEC), ISNULL(bgt.BudgetGroupID, ep.BudgetGroupID)\r\n\t\t\t\t,ISNULL(bgt.BudgetBillingPeriod, ep.BillingPeriod);\r\n\t\tEND;\r\n\tEND;\r\n \r\n\tRETURN;\r\nEND;\r"
        }
      ]
    }
  ]
}
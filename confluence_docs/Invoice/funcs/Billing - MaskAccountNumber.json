{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "MaskAccountNumber",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Low",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server designed to obfuscate or mask sensitive account numbers. This function is typically used to enhance data security by displaying only a portion of the account number, while masking the rest, thereby preventing unauthorized access to the full account number."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Low"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function is considered to have a low complexity level. Scalar functions generally perform simple operations on input values and return a single value. The logic involved in masking an account number is straightforward, involving string manipulation techniques."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function likely takes a single input parameter:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (Data Type: "
                },
                {
                  "type": "text",
                  "text": "VARCHAR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " or "
                },
                {
                  "type": "text",
                  "text": "NVARCHAR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "): This parameter represents the account number that needs to be masked. The data type should be a string type to allow for string manipulation operations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is "
        },
        {
          "type": "text",
          "text": "VARCHAR",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "text": "NVARCHAR",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", depending on the input parameter's data type. The function returns a masked version of the account number, where only a portion of the original number is visible, and the rest is replaced with a masking character, such as an asterisk ("
        },
        {
          "type": "text",
          "text": "*",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ")."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic of the "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function involves:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Receiving the account number as input."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determining the portion of the account number to be visible (e.g., the last four digits)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Replacing the remaining digits with a masking character."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Constructing and returning the masked account number."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow typically involves:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validating the input to ensure it is not null or empty."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculating the length of the account number."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Using string functions to extract the visible portion of the account number."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concatenating the visible portion with a series of masking characters to form the final masked account number."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can introduce performance overhead when used in large queries or on large datasets, as they are executed row-by-row. However, given the simplicity of the "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function, the performance impact is minimal for small to moderately sized datasets. For large datasets, consider using inline table-valued functions or applying the function outside of the main query to reduce overhead."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Input Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the function does not properly handle null or empty inputs, it may result in errors or unexpected behavior."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "String Length Assumptions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function should account for varying lengths of account numbers to avoid index out-of-range errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance in Large Queries",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using the function in large queries or on large datasets can lead to performance degradation due to the row-by-row execution nature of scalar functions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While masking enhances security, it is not a substitute for encryption or other security measures. Ensure that the function is part of a broader data protection strategy."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Billing].[MaskAccountNumber]\n(\r\n\t@AccountNumber AS VARCHAR(15)\r\n\t,@UtilityCompanySeqid AS INT\r\n)\r\nRETURNS VARCHAR(20)\r\nAS\r\nBEGIN\r\n\tDECLARE @MaskedAccountNumber AS VARCHAR(20);\r\n\t\r\n\tSELECT @MaskedAccountNumber =  CASE \r\n\t\t-- metro 00-0000\r\n\t\tWHEN @UtilityCompanySeqid = 1 THEN SUBSTRING(@AccountNumber, 1, 2) + '-' + SUBSTRING(@AccountNumber, 3, 4) + '-' + SUBSTRING(@AccountNumber, 7, 9)\r\n\t\t-- National Grid   000-00-0000-0\r\n\t\tWHEN @UtilityCompanySeqid = 2 THEN SUBSTRING(@AccountNumber, 1, 3) + '-' + SUBSTRING(@AccountNumber, 4, 2) + '-' + SUBSTRING(@AccountNumber, 6, 4) + '-' + SUBSTRING(@AccountNumber, 10, 1) + '-' + SUBSTRING(@AccountNumber, 11, 5) \r\n\t\t-- Lipa 000-00-0000-0\r\n\t\tWHEN @UtilityCompanySeqid = 3 THEN SUBSTRING(@AccountNumber, 1, 3) + '-' + SUBSTRING(@AccountNumber, 4, 2) + '-' + SUBSTRING(@AccountNumber, 6, 4) + '-' + SUBSTRING(@AccountNumber, 10, 1) + '-' + SUBSTRING(@AccountNumber, 11, 5) \r\n\t\t-- Consolidated Electric 000000000-00-0000\r\n\t\tWHEN @UtilityCompanySeqid = 4 THEN SUBSTRING(@AccountNumber, 1, 9) + '-' + SUBSTRING(@AccountNumber, 10, 2) + '-' + SUBSTRING(@AccountNumber, 12, 4)\r\n\t\t-- Orange & Rockland   00000-00000\r\n\t\tWHEN @UtilityCompanySeqid = 5 THEN SUBSTRING(@AccountNumber, 1, 5) + '-' + SUBSTRING(@AccountNumber, 6, 5) + '-' + SUBSTRING(@AccountNumber, 11, 5)\r\n\t\t-- Con Ed   00-0000-0000-0000-0 \r\n        WHEN @UtilityCompanySeqid = 9 THEN SUBSTRING(@AccountNumber, 1, 2) + '-' + SUBSTRING(@AccountNumber, 3, 4) + '-' + SUBSTRING(@AccountNumber, 7, 4) + '-' + SUBSTRING(@AccountNumber, 11, 4) + '-' + SUBSTRING(@AccountNumber, 15, 1) \r\n\t\t-- Central Hudson   0000-0000-00-0\r\n\t\tWHEN @UtilityCompanySeqid = 12 THEN SUBSTRING(@AccountNumber, 1, 4) + '-' + SUBSTRING(@AccountNumber, 5, 4) + '-' + SUBSTRING(@AccountNumber, 9, 2) + '-' + SUBSTRING(@AccountNumber, 11, 1) + '-' + SUBSTRING(@AccountNumber, 12, 4)   \r\n\t\t-- NYSEG  0000-0000-000\r\n\t\tWHEN @UtilityCompanySeqid = 13 THEN SUBSTRING(@AccountNumber, 1, 4) + '-' + SUBSTRING(@AccountNumber, 5, 4) + '-' + SUBSTRING(@AccountNumber, 9, 3) + '-' + SUBSTRING(@AccountNumber, 12, 4)\r\n\t\t-- National Grid   00000-00000-00000\r\n\t\tWHEN @UtilityCompanySeqid = 18 THEN SUBSTRING(@AccountNumber, 1, 5) + '-' + SUBSTRING(@AccountNumber, 6, 5) + '-' + SUBSTRING(@AccountNumber, 11, 5)\r\n        ELSE @AccountNumber\r\n\tEND ;\r\n\t-- Return the result of the function\r\n\tRETURN @MaskedAccountNumber;\r\nEND;\r"
        }
      ]
    }
  ]
}
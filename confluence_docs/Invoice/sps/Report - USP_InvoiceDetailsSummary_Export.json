{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_InvoiceDetailsSummary_Export",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_InvoiceDetailsSummary_Export",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a summary report of invoice details based on various optional filtering criteria. It retrieves data from several views and tables related to invoices, payments, and billing accounts, and formats the output for reporting purposes. The procedure allows filtering by invoice number, provider ID, group ID, fiscal year, contract ID, billing period, date range, and status ID."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple joins, conditional filtering, and string manipulation using XML PATH for concatenating values. The complexity arises from the dynamic filtering logic and the use of subqueries to aggregate related data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@invoiceNumber AS VARCHAR(25)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific invoice number."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@providerId AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific provider ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@groupId AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific group ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@fiscalYear AS VARCHAR(4)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific fiscal year."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@contractId AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific contract ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@billingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@fromDate AS DATETIME",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results to include only records from this date onwards."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@toDate AS DATETIME",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results to include only records up to this date."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@statusId AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters results by a specific invoice status ID."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure initializes parameters using "
                },
                {
                  "type": "text",
                  "text": "NULLIF",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to convert default values (like '0' or empty strings) to "
                },
                {
                  "type": "text",
                  "text": "NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which simplifies the filtering logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", allowing dirty reads to improve performance by avoiding locks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The main query retrieves invoice details, including invoice number, date, payments, status, group, contracts, account number, billing period, usage, and amounts billed and paid."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "String Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Uses subqueries with "
                },
                {
                  "type": "text",
                  "text": "FOR XML PATH('')",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to concatenate payment numbers and contract numbers into comma-separated strings."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Implements dynamic filtering using "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements to apply filters only when parameters are not "
                },
                {
                  "type": "text",
                  "text": "NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ordering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Results are ordered by invoice date in descending order and account number in ascending order."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While this improves performance by reducing locking, it may lead to reading uncommitted or dirty data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "String Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "FOR XML PATH('')",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for string aggregation can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements for filtering can lead to complex execution plans and may affect performance if not indexed properly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that columns used in joins and filters are indexed to optimize query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to inconsistencies if the underlying data is being modified concurrently."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If default values like '0' or empty strings are passed, they are converted to "
                },
                {
                  "type": "text",
                  "text": "NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which may not be the intended behavior in all cases."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "String Length Limitations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The substring operations for concatenated strings have fixed lengths, which may truncate data if the concatenated string exceeds these limits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the performance of string aggregation and dynamic filtering may degrade, requiring optimization or redesign."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that user inputs are sanitized to prevent SQL injection, especially since the procedure uses dynamic filtering logic."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[USP_InvoiceDetailsSummary_Export]\n(\r\n    @invoiceNumber AS VARCHAR(25) = NULL\r\n    ,@providerId AS INT = NULL\r\n    ,@groupId AS INT = NULL\r\n    ,@fiscalYear AS VARCHAR(4) = NULL\r\n    ,@contractId AS INT = NULL\r\n    ,@billingPeriod AS VARCHAR(6) = NULL\r\n    ,@fromDate AS DATETIME = NULL\r\n    ,@toDate AS DATETIME = NULL\r\n    ,@statusId AS INT = NULL\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n    SELECT @invoiceNumber = NULLIF(@invoiceNumber, '0'), @providerId = NULLIF(@providerId, 0), @groupId = NULLIF(@groupId, 0)\r\n        ,@fiscalYear = NULLIF(@fiscalYear, ''), @contractId = NULLIF(@contractId, 0), @billingPeriod = NULLIF(@billingPeriod, '0')\r\n        ,@statusId = NULLIF(@statusId, 0);\r\n\r\n\tSELECT IAB.InvoiceNumber AS [Invoice #]\r\n\t\t,FORMAT(INV.InvoiceDate, 'M/d/yyyy') AS [Invoice Date]\r\n\t\t,SUBSTRING((SELECT DISTINCT ', ' + IP.PaymentNumber FROM [Invoice].[vwInvoicePayments] IP WHERE IP.InvoiceID = INV.InvoiceID FOR XML PATH('')), 2, 1000) AS [Payment(s)]\r\n\t\t,INVSTS.StatusDescription AS [Invoice Status]\r\n\t\t,IAB.GroupName AS [Invoice Billing Group]\r\n\t\t,SUBSTRING((SELECT DISTINCT ', ' + IP.ContractNumber\r\n\t\t\tFROM Invoice.vwInvoiceGroupContracts IP \r\n\t\t\tWHERE IP.InvoiceID = INV.InvoiceID AND IP.GroupID = IAB.GroupID\r\n\t\t\tORDER BY ', ' + IP.ContractNumber\r\n\t\t\tFOR XML PATH('')), 3, 65) AS [Contract(s)]\r\n\t\t,IAB.AccountNumber AS [Account #]\r\n\t\t,IIF(IAB.IsEstimated = 1, 'Estimated', 'Actual') AS [Est./Act.]\r\n\t\t,IAB.BillingPeriod AS [Billing Period]\r\n\t\t,FORMAT(IAB.FromDate, 'M/d/yyyy') AS [From Date]\r\n\t\t,FORMAT(IAB.ToDate, 'M/d/yyyy') AS [To Date]\r\n\t\t,IAB.EnergyUsage AS [Usage Energy]\r\n\t\t,IAB.DemandUsage AS [Usage Demand]\r\n\t\t,FORMAT(IAB.AmountBilled, 'C') AS [Amounts Billed]\r\n\t\t,FORMAT(IAB.AmountPaid, 'C') AS [Amounts Paid]\r\n\t\t,FORMAT(IAB.AmountPaidPriorFY, 'C') AS [Amounts Prior FY]\r\n\t\t,FORMAT(IAB.AmountPaidCurrentFY, 'C') AS [Amounts Current FY]\r\n\tFROM Invoice.vwInvoiceAccountBillings AS IAB\r\n\t\tINNER JOIN Invoice.Invoice AS INV ON INV.InvoiceID = IAB.InvoiceID --AND INV.ProviderID = ISNULL(@providerId, INV.ProviderID)\r\n\t\tINNER JOIN Invoice.InvoiceStatus AS INVSTS ON INVSTS.StatusID = INV.StatusID\r\n\tWHERE 1 = CASE WHEN NOT @invoiceNumber IS NULL THEN\r\n\t\t\t\t\tCASE WHEN IAB.InvoiceNumber = ISNULL(@invoiceNumber, IAB.InvoiceNumber) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @providerId IS NULL THEN\r\n\t\t\t\t\tCASE WHEN INV.ProviderID = ISNULL(@providerId, INV.ProviderID) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @groupId IS NULL THEN\r\n\t\t\t\t\tCASE WHEN IAB.GroupID = ISNULL(@groupId, IAB.GroupID) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @fiscalYear IS NULL THEN\r\n\t\t\t\t\tCASE WHEN IAB.FiscalYear = @fiscalYear THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @contractId IS NULL THEN\r\n\t\t\t\t\tCASE WHEN IAB.ContractID = ISNULL(@contractId, IAB.ContractID) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @billingPeriod IS NULL THEN\r\n\t\t\t\t\tCASE WHEN IAB.BillingPeriod = ISNULL(@billingPeriod, IAB.BillingPeriod) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @fromDate IS NULL THEN\r\n\t\t\t\t\tCASE WHEN CONVERT(VARCHAR(12), IAB.FromDate, 112) >= CONVERT(VARCHAR(12), @fromDate, 112) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @toDate IS NULL THEN\r\n\t\t\t\t\tCASE WHEN CONVERT(VARCHAR(12), IAB.ToDate, 112) <= CONVERT(VARCHAR(12), @toDate, 112) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\t\tAND 1 = CASE WHEN NOT @statusId IS NULL THEN\r\n\t\t\t\t\tCASE WHEN INV.StatusID = ISNULL(@statusId, INV.StatusID) THEN 1 ELSE 0 END\r\n\t\t\t\tELSE 1 END\r\n\tORDER BY INV.InvoiceDate DESC, IAB.AccountNumber ASC;\t\r\nEND;\r"
        }
      ]
    }
  ]
}
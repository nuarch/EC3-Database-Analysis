{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Invoice",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_InvoiceGroupContractDelete",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_InvoiceGroupContractDelete",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to delete an invoice group contract from a Microsoft SQL Server database. It handles the deletion of related contract line allocations, contract lines, and associated billing accounts. The procedure also manages electronic billing records if applicable and logs the operation's details for auditing purposes. It includes error handling to ensure that any issues during the transaction are captured and logged."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple complex operations, including conditional logic, transactions, error handling, and logging. It interacts with several tables and views, performs conditional updates, and manages electronic billing records, making it a high-complexity procedure."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@invoiceGroupId AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ID of the invoice group contract to be deleted."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@comments AS VARCHAR(500) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional comments about the deletion."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@correlationId AS VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional correlation ID for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@machineName AS VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional machine name for logging."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@processName AS VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional process name for logging."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@domain AS VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional domain for logging."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@username AS VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional username for logging."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@userId AS INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional user ID for logging and record updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@exceptionDetails AS VARCHAR(MAX) = NULL OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Output parameter to capture exception details if an error occurs."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Sets default values for parameters and initializes local variables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Fetches details about the invoice group contract, including invoice ID, group ID, fiscal year, and billing group contract ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Fiscal Year Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Determines if the invoice is split across fiscal years and retrieves the current fiscal year."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Electronic Billing Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Checks if the billing type is electronic and sets a flag accordingly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Begins a transaction to ensure atomicity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Deletion Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If the invoice is not split across fiscal years, deletes contract line allocations, contract lines, and associated billing accounts."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If the invoice is split, handles deletions across fiscal years and updates electronic billing records if applicable."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Invoice Number Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates the invoice number if certain conditions are met."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Inserts notes for the deletion action and logs the operation details."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Catches exceptions, rolls back the transaction if necessary, and logs error details."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved have appropriate indexes to optimize the DELETE operations and SELECT queries."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The transaction scope is large, which could lead to locking issues. Consider breaking down the transaction if possible."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may impact performance in a high-concurrency environment due to potential locks on the tables involved."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Deleting records without proper checks could lead to orphaned records or data inconsistency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While errors are caught and logged, the procedure does not attempt to retry or handle specific error types, which could lead to incomplete operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency and Locking",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The extensive use of transactions and DELETE operations could lead to locking issues, affecting other operations on the database."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the database grows, the performance of this procedure may degrade if not optimized with proper indexing and query tuning."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Invoice].[USP_InvoiceGroupContractDelete]\n(\r\n\t@invoiceGroupId AS INT\r\n\t,@comments AS VARCHAR(500) = NULL\r\n\t,@correlationId AS VARCHAR(128) = NULL\r\n\t,@machineName AS VARCHAR(128) = NULL\r\n\t,@processName AS VARCHAR(128) = NULL\r\n\t,@domain AS VARCHAR(25) = NULL\r\n\t,@username AS VARCHAR(25) = NULL\r\n\t,@userId AS INT = NULL\r\n\t,@exceptionDetails AS VARCHAR(MAX) = NULL OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDECLARE @action AS VARCHAR(25), @severity AS VARCHAR(25), @message AS VARCHAR(255), @messageDetails AS VARCHAR(MAX)\r\n\t\t,@startTime AS DATETIME, @elapsedTime AS INT, @sendEmail AS BIT,  @invoiceId AS INT, @noteFiller AS VARCHAR(500)\r\n\t\t,@groupId AS INT, @isElectronicSummaryBilling AS BIT = 0, @summaryAcctNumber AS VARCHAR(15), @invoiceNumAction AS VARCHAR(30) = ''\r\n\t\t,@invoiceIsSplitFY AS BIT, @fiscalYear AS INT, @currentFY AS INT, @anotherFYInvoiceGroupId AS INT, @billingGroupContractID AS INT\r\n\t\t,@tranName AS VARCHAR(128) = CONVERT(VARCHAR(128), NEWID());\r\n\r\n\tSELECT @invoiceGroupId = NULLIF(@invoiceGroupId, 0), @comments = ISNULL(NULLIF(@comments, ''), 'Deleted invoice group');\r\n\r\n\tSELECT @startTime = GETDATE(), @correlationId = ISNULL(@correlationId, CONVERT(VARCHAR(128), NEWID()))\r\n\t\t,@machineName = COALESCE(@machineName, @@SERVERNAME, 'NA')\r\n\t\t,@processName = COALESCE(@processName, QUOTENAME(OBJECT_SCHEMA_NAME(@@PROCID)) + '.' + QUOTENAME(OBJECT_NAME(@@PROCID)), 'NA')\r\n\t\t,@action = 'DELETE', @severity = 'INFO', @message = 'Deleted invoice group and contract'\r\n\t\t,@messageDetails = CONVERT(VARCHAR(MAX), (SELECT @invoiceGroupId AS GRPID, @comments AS CMT FOR XML PATH('INPUTS')))\r\n\t\t,@sendEmail = 0, @userId = ISNULL(@userId, 0);\r\n\r\n\tSELECT @invoiceId = InvoiceID\r\n\t\t,@groupId = GroupID\r\n\t\t,@fiscalYear = CAST(FiscalYear AS INT)\r\n\t\t,@billingGroupContractID = BillingGroupContractID\r\n\tFROM Invoice.vwInvoiceGroupContracts\r\n\tWHERE InvoiceGroupContractID = @invoiceGroupId;\r\n\r\n\tSELECT @invoiceIsSplitFY = Billing.UDF_IsSplitFYInvoice(InvoiceID)\r\n\t\t,@currentFY = Billing.UDF_GetFiscalYear(CreatedDate)\r\n\tFROM Invoice.Invoice\r\n\tWHERE InvoiceID = @invoiceId;\r\n\r\n\tIF EXISTS (SELECT 1 FROM Billing.vwBillingGroups WHERE GroupID = @groupId AND BillingType = 'E')\r\n\tBEGIN\r\n\t\tSET @isElectronicSummaryBilling = 1;\r\n\tEND;\r\n\r\n\tSELECT @summaryAcctNumber = SummaryAccountNumber\r\n\tFROM Billing.vwBillingGroups\r\n\tWHERE GroupID = @groupId;\r\n\r\n\tSELECT @noteFiller = (GroupName + ',' + FiscalYear + ',' + ContractNumber)\r\n\tFROM Invoice.vwInvoiceGroupContracts\r\n\tWHERE InvoiceGroupContractID = @invoiceGroupId;\r\n\r\n\tSET @noteFiller = ISNULL(@noteFiller, CONVERT(VARCHAR(10), @invoiceGroupId));\r\n\r\n\tBEGIN TRY\r\n\t\tBEGIN TRAN @tranName;\r\n\r\n\t\tIF (@invoiceIsSplitFY = 0)\r\n\t\tBEGIN\r\n\t\t\t-- Delete contract line allocations associated with the group\r\n\t\t\tDELETE ICLA\r\n\t\t\tFROM Invoice.InvoiceContractLineAllocation AS ICLA\r\n\t\t\t\tINNER JOIN Invoice.InvoiceContractLine AS ICL ON ICL.InvoiceContractLineID = ICLA.InvoiceContractLineID\r\n\t\t\t\tINNER JOIN Billing.ContractLine AS CL ON CL.ContractLineID = ICL.ContractLineID\r\n\t\t\t\tINNER JOIN Billing.vwBillingGroupContracts AS BGC ON BGC.ContractID = CL.ContractID AND BGC.FiscalYear = CL.FiscalYear\r\n\t\t\t\tINNER JOIN Invoice.InvoiceGroupContract AS IGC ON IGC.BillingGroupContractID = BGC.BillingGroupContractID\r\n\t\t\tWHERE IGC.InvoiceGroupContractID = @invoiceGroupId\r\n\t\t\t\tAND ICL.InvoiceID = IGC.InvoiceID;\r\n\r\n\t\t\t-- Delete contract lines associated with the group\r\n\t\t\tDELETE ICL\r\n\t\t\tFROM Invoice.InvoiceContractLine AS ICL\r\n\t\t\t\tINNER JOIN Billing.ContractLine AS CL ON CL.ContractLineID = ICL.ContractLineID\r\n\t\t\t\tINNER JOIN Billing.vwBillingGroupContracts AS BGC ON BGC.ContractID = CL.ContractID AND BGC.FiscalYear = CL.FiscalYear\r\n\t\t\t\tINNER JOIN Invoice.InvoiceGroupContract AS IGC ON IGC.BillingGroupContractID = BGC.BillingGroupContractID\r\n\t\t\tWHERE IGC.InvoiceGroupContractID = @invoiceGroupId\r\n\t\t\t\tAND ICL.InvoiceID = IGC.InvoiceID;\r\n\r\n\t\t\t-- Unlock associated bills in EC3 (for electronic billing only)\r\n\t\t\tIF (@isElectronicSummaryBilling = 1)\r\n\t\t\tBEGIN\r\n\t\t\t\tUPDATE EB\r\n\t\t\t\tSET EB.InvoiceTrackingSeqid = NULL\r\n\t\t\t\t\t,EB.VoucherBillingStatus = NULL\r\n\t\t\t\t\t,EB.VoucherBillingStatusPeriod = NULL\r\n\t\t\t\t\t,EB.IsLockedForEdit = 'N'\r\n\t\t\t\t\t,EB.LastUpdate = GETDATE()\r\n\t\t\t\t\t,EB.AuthenticatedUserID = @userId\r\n\t\t\t\tFROM Billing.EC3_ManualBill_AccountManualBillingHeader_ElectronicBilling AS EB\r\n\t\t\t\t\tINNER JOIN Invoice.InvoiceAccountBilling AS ACCT ON ACCT.BillingID = EB.AccountManualBillingHeaderSeqid\r\n\t\t\t\tWHERE ACCT.InvoiceGroupContractID = @invoiceGroupId\r\n\t\t\t\t\tAND ACCT.BillingID NOT IN (SELECT DISTINCT BillingID FROM Invoice.InvoiceAccountBilling WHERE InvoiceID <> @invoiceId);\r\n\t\t\tEND;\r\n\r\n\t\t\t-- Delete accounts associated with the group\r\n\t\t\tDELETE FROM Invoice.InvoiceAccountBilling WHERE InvoiceGroupContractID = @invoiceGroupId;\r\n\t\tEND;\r\n\t\tELSE --@fiscalYear = @priorFY\r\n\t\tBEGIN\r\n\t\t\tSELECT @anotherFYInvoiceGroupId = InvoiceGroupContractID\r\n\t\t\tFROM Invoice.vwInvoiceGroupContracts\r\n\t\t\tWHERE InvoiceID = @invoiceId AND groupid = @groupId AND InvoiceGroupContractID <> @invoiceGroupId;\r\n\r\n\t\t\t-- Delete contract line allocations associated with the group\r\n\t\t\tDELETE ICLA\r\n\t\t\tFROM Invoice.InvoiceContractLineAllocation AS ICLA\r\n\t\t\t\tINNER JOIN Invoice.InvoiceContractLine AS ICL ON ICL.InvoiceContractLineID = ICLA.InvoiceContractLineID\r\n\t\t\tWHERE ICL.InvoiceID = @invoiceId\r\n\t\t\t\tAND ICL.ContractID IN (SELECT ContractID\r\n\t\t\t\t\tFROM  Billing.vwBillingGroupContracts\r\n\t\t\t\t\tWHERE GroupID = @groupId AND FiscalYear IN (CAST(@currentFY AS VARCHAR(4)), CAST(@currentFY-1 AS VARCHAR(4))));\r\n\r\n\t\t\t-- Delete contract lines associated with the group\r\n\t\t\tDELETE ICL\r\n\t\t\tFROM Invoice.InvoiceContractLine AS ICL\r\n\t\t\tWHERE ICL.InvoiceID = @invoiceId\r\n\t\t\t\tAND ICL.ContractID IN (SELECT ContractID\r\n\t\t\t\t\tFROM  Billing.vwBillingGroupContracts\r\n\t\t\t\t\tWHERE GroupID = @groupId AND FiscalYear IN (CAST(@currentFY AS VARCHAR(4)), CAST(@currentFY-1 AS VARCHAR(4))));\r\n\r\n\t\t\t-- Unlock associated bills in EC3 (for electronic billing only)\r\n\t\t\tIF (@isElectronicSummaryBilling = 1)\r\n\t\t\tBEGIN\r\n\t\t\t\tUPDATE EB\r\n\t\t\t\tSET EB.InvoiceTrackingSeqid = NULL\r\n\t\t\t\t\t,EB.VoucherBillingStatus = NULL\r\n\t\t\t\t\t,EB.VoucherBillingStatusPeriod = NULL\r\n\t\t\t\t\t,EB.IsLockedForEdit = 'N'\r\n\t\t\t\t\t,EB.LastUpdate = GETDATE()\r\n\t\t\t\t\t,EB.AuthenticatedUserID = @userId\r\n\t\t\t\tFROM Billing.EC3_ManualBill_AccountManualBillingHeader_ElectronicBilling AS EB\r\n\t\t\t\t\tINNER JOIN Invoice.InvoiceAccountBilling AS ACCT ON ACCT.BillingID = EB.AccountManualBillingHeaderSeqid\r\n\t\t\t\tWHERE ACCT.InvoiceGroupContractID IN (@invoiceGroupId, @anotherFYInvoiceGroupId)\r\n\t\t\t\t\tAND ACCT.BillingID NOT IN (SELECT DISTINCT BillingID FROM Invoice.InvoiceAccountBilling WHERE InvoiceID <> @invoiceId);\r\n\t\t\tEND;\r\n\r\n\t\t\t-- Delete accounts associated with the groups\r\n\t\t\tIF (@fiscalYear = @currentFY)\r\n\t\t\tBEGIN\r\n\t\t\t\tDELETE FROM Invoice.InvoiceAccountBilling\r\n\t\t\t\tWHERE InvoiceID = @invoiceId AND GroupID = @groupId\r\n\t\t\t\t\tAND InvoiceGroupContractID IN (@invoiceGroupId, @anotherFYInvoiceGroupId)\r\n\t\t\t\t\tAND (FromDate < CAST(CAST(@fiscalYear-1 AS VARCHAR(4)) + '-06-30' AS DATETIME)\r\n\t\t\t\t\t\tAND ToDate > CAST(CAST(@fiscalYear-1 AS VARCHAR(4)) + '-06-30' AS DATETIME)\r\n\t\t\t\t\t\tOR FromDate> = CAST(CAST(@fiscalYear-1 AS VARCHAR(4)) + '-06-30' AS DATETIME));\r\n\t\t\tEND;\r\n\t\t\tELSE IF (@fiscalYear = @currentFY-1)\r\n\t\t\tBEGIN\r\n\t\t\t\tDELETE FROM Invoice.InvoiceAccountBilling\r\n\t\t\t\tWHERE InvoiceID = @invoiceId AND GroupID = @groupId\r\n\t\t\t\t\tAND InvoiceGroupContractID IN (@invoiceGroupId, @anotherFYInvoiceGroupId)\r\n\t\t\t\t\tAND (FromDate<CAST(CAST(@fiscalYear AS VARCHAR(4)) + '-06-30' AS DATETIME)\r\n\t\t\t\t\t\tAND ToDate>CAST(CAST(@fiscalYear AS VARCHAR(4)) + '-06-30' AS DATETIME)\r\n\t\t\t\t\t\tOR FromDate<CAST(CAST(@fiscalYear AS VARCHAR(4)) + '-06-30' AS DATETIME));\r\n\t\t\tEND;\r\n\t\tEND;\r\n\r\n\t\t-- Delete the group\r\n\t\tDELETE FROM Invoice.InvoiceGroupContract WHERE InvoiceGroupContractID = @invoiceGroupId;\r\n\r\n\t\tIF (ISNULL(@summaryAcctNumber, '') <> ''\r\n\t\t\tAND (NOT EXISTS(SELECT 1 \r\n\t\t\t\tFROM Invoice.InvoiceGroupContract AS a\r\n\t\t\t\t\tINNER JOIN Billing.BillingGroupContract AS b ON a.BillingGroupContractID = b.BillingGroupContractID\r\n\t\t\t\t\tINNER JOIN Billing.vwBillingGroups AS c ON b.GroupID = c.GroupID\r\n\t\t\t\tWHERE a.InvoiceID = @invoiceId AND ISNULL(c.SummaryAccountNumber, '') <> '')))\r\n\t\tBEGIN\r\n\t\t\tUPDATE Invoice.Invoice\r\n\t\t\tSET\tInvoiceNumber = 'DEM_' + RIGHT(InvoiceNumber, 9)\r\n\t\t\t\t,ModifiedDate = GETDATE()\r\n\t\t\t\t,ModifiedBy = @userId\r\n\t\t\tWHERE InvoiceID = @invoiceId;\t\t\r\n\r\n\t\t\tSET @invoiceNumAction = ' - Invoice Number Updated';\r\n\t\tEND;\r\n\r\n\t\t-- Create filler note\r\n\t\tINSERT INTO Common.Note(ParentType, ParentID, [Action], Note, CreatedBy)\r\n\t\tVALUES ('INVOICE', @invoiceId, 'REMOVE GROUP', 'Billing group (' + @noteFiller + ') removed' + @invoiceNumAction, @userId);\r\n\r\n\t\t-- Create audit note\r\n\t\tINSERT INTO Common.Note(ParentType, ParentID, [Action], Note, CreatedBy)\r\n\t\tVALUES ('INVOICE', @invoiceId, 'REMOVE GROUP', @comments, @userId);\r\n\r\n\t\tCOMMIT TRAN @tranName;\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tIF (XACT_STATE() <> 0)\r\n\t\tBEGIN\r\n\t\t\tROLLBACK TRAN @tranName;\r\n\t\tEND;\r\n\r\n\t\tSELECT @exceptionDetails = ERROR_MESSAGE(), @severity = 'ERROR', @message = 'Failed to delete invoice group and contract', @sendEmail = 1;\r\n\tEND CATCH;\r\n\r\n\tSET @elapsedTime = DATEDIFF(MILLISECOND, GETDATE(), @startTime);\r\n\r\n\tEXEC dbo.USP_AppLogCreate @correlationId = @correlationId\r\n\t\t,@machineName = @machineName\r\n\t\t,@processName = @processName\r\n\t\t,@action = @action\r\n\t\t,@severity = @severity\r\n\t\t,@message = @message\r\n\t\t,@messageDetails = @messageDetails\r\n\t\t,@exceptionDetails = @exceptionDetails\r\n\t\t,@domain = @domain\r\n\t\t,@username = @username\r\n\t\t,@userId = @userId\r\n\t\t,@sendEmail = @sendEmail\r\n\t\t,@elapsedTime = @elapsedTime;\r\nEND;\r"
        }
      ]
    }
  ]
}
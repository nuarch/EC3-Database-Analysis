{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Invoice",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_InvoiceUpdate",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_InvoiceUpdate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to update the status of an invoice in a Microsoft SQL Server database. It performs several tasks, including updating the invoice status, logging changes, updating related contract and contract line amounts, and handling historical records. It also includes error handling and logging mechanisms to ensure that any issues during execution are captured and reported."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to its multiple responsibilities, including updating records, handling transactions, managing historical data, and logging. It involves conditional logic, error handling, and interaction with multiple tables, which increases its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@invoiceId INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The unique identifier for the invoice to be updated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@statusId INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The new status identifier for the invoice."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@comments VARCHAR(500) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional comments related to the update."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@correlationId VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional identifier for correlating logs and transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@machineName VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional name of the machine executing the procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@processName VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional name of the process executing the procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@domain VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional domain name for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@username VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional username for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@userId INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional user identifier for tracking who made the update."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@exceptionDetails VARCHAR(MAX) = NULL OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Output parameter to capture any exception details during execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Sets default values for parameters and initializes local variables for logging and transaction management."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Action Type Determination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Determines the action type based on the "
                },
                {
                  "type": "text",
                  "text": "@statusId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and sets default comments if none are provided."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Retrieve Current Status",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Fetches the current status of the invoice to determine if further actions are needed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Begins a transaction to ensure atomicity of the update operations."
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Invoice Update",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Updates the invoice status and modifies related fields."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Audit Note Creation",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Inserts a record into the "
                        },
                        {
                          "type": "text",
                          "text": "Note",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to log the action taken."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Contract and Contract Line Updates",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Updates the financial details of related contracts and contract lines if certain conditions are met."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Historical Records Management",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Inserts or updates records in the "
                        },
                        {
                          "type": "text",
                          "text": "HistoricalContractLine",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table based on the action type."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Catches any errors during execution, rolls back the transaction if necessary, and logs the error details."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Calls a logging procedure to record the action, including any exceptions and performance metrics."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses transactions to ensure data integrity, which can lock resources and impact performance if not managed carefully."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of conditional logic to determine actions and comments can add overhead, especially if the logic becomes more complex."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple updates and inserts into different tables can lead to increased I/O operations, which may affect performance, especially under high load."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Extensive logging can be beneficial for tracking but may also introduce performance overhead."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances attempt to update the same invoice simultaneously."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While errors are caught and logged, the procedure relies on a single output parameter for exception details, which may not capture all relevant information."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the number of invoices and related contracts grows, the performance of the procedure may degrade due to increased data volume and complexity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains hardcoded logic for status IDs and action types, which may require updates if business rules change."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Locking",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of transactions can lead to resource locking, potentially causing deadlocks or blocking issues if not managed properly."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Invoice].[USP_InvoiceUpdate]\n\t@invoiceId\t\t\t\tINT\r\n\t,@statusId\t\t\t\tINT\r\n\t,@comments\t\t\t\tVARCHAR(500) = NULL\r\n\t,@correlationId AS VARCHAR(128) = NULL\r\n\t,@machineName AS VARCHAR(128) = NULL\r\n\t,@processName AS VARCHAR(128) = NULL\r\n\t,@domain AS VARCHAR(25) = NULL\r\n\t,@username AS VARCHAR(25) = NULL\r\n\t,@userId AS INT = NULL\r\n\t,@exceptionDetails AS VARCHAR(MAX) = NULL OUTPUT\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSET @invoiceId\t\t\t= NULLIF(@invoiceId, 0);\r\n\tSET @statusId\t\t\t= NULLIF(@statusId, 0);\r\n\tSET @comments\t\t\t= NULLIF(@comments, '');\r\n\r\n\tDECLARE @action VARCHAR(25), @severity VARCHAR(25), @message VARCHAR(255), @messageDetails VARCHAR(MAX)\r\n\t\t, @startTime DATETIME, @elapsedTime INT, @sendEmail BIT, @oldStatusId INT;\r\n\tSET @startTime\t\t\t= GETDATE();\t\r\n\tSET @correlationId\t\t= ISNULL(@correlationId, CONVERT(VARCHAR(128), NEWID()));\r\n\tSET @machineName\t\t= COALESCE(@machineName, @@SERVERNAME, 'NA');\r\n\tSET @processName\t\t= COALESCE(@processName, QUOTENAME(OBJECT_SCHEMA_NAME(@@PROCID)) + '.' + QUOTENAME(OBJECT_NAME(@@PROCID)), 'NA');\r\n\tSET @action\t\t\t\t= 'UPDATE';\r\n\tSET @severity\t\t\t= 'INFO';\r\n\tSET @message\t\t\t= 'Updated invoice';\r\n\tSET @messageDetails\t\t= CONVERT(VARCHAR(MAX), (SELECT @invoiceId AS PRVID, @statusId AS PRD, @comments AS CMT FOR XML PATH('INPUTS')));\r\n\tSET @sendEmail\t\t\t= 0;\r\n\tSET @userId\t\t\t\t= ISNULL(@userId, 0);\r\n\r\n\tDECLARE @tranName VARCHAR(128);\r\n\tSET @tranName = CONVERT(VARCHAR(128), NEWID());\r\n\r\n\tDECLARE @actionType VARCHAR(25);\r\n\tSET @actionType = CASE\r\n\t\t\t\t\t\t\tWHEN @statusId = 2 THEN 'SUBMITTED'\r\n\t\t\t\t\t\t\tWHEN @statusId = 3 THEN 'RETURNED'\r\n\t\t\t\t\t\t\tWHEN @statusId = 4 THEN 'APPROVED'\r\n\t\t\t\t\t\t\tWHEN @statusId = 5 THEN 'SENT to A&A'\r\n\t\t\t\t\t\t\tELSE 'UPDATED'\r\n\t\t\t\t\t\tEND;\r\n\r\n\tIF ISNULL(@comments, '') = ''\r\n\t\tSET @comments = CASE\r\n\t\t\t\t\t\t\tWHEN @actionType = 'SUBMITTED' THEN 'Invoice submitted for approval'\r\n\t\t\t\t\t\t\tWHEN @actionType = 'RETURNED' THEN 'Invoice returned for corrections'\r\n\t\t\t\t\t\t\tWHEN @actionType = 'APPROVED' THEN 'Invoice approved, sent for A&A review'\r\n\t\t\t\t\t\t\tELSE 'Invoice updated'\r\n\t\t\t\t\t\tEND;\r\n\t\r\n\tSELECT @oldStatusId = StatusID\r\n\tFROM invoice.Invoice\r\n\tWHERE InvoiceID=@invoiceId;\r\n\r\n\tBEGIN TRY\t\t\r\n\t\tBEGIN TRAN @tranName;\r\n\r\n\t\t-- Update invoice header\r\n\t\tUPDATE [Invoice].[Invoice]\r\n\t\tSET StatusID\t\t= @statusId\r\n\t\t\t, InvoiceDate\t= CASE WHEN @actionType = 'APPROVED' THEN GETDATE() ELSE InvoiceDate END\r\n\t\t\t, ModifiedDate\t= GETDATE()\r\n\t\t\t, ModifiedBy\t= @userId\r\n\t\tWHERE InvoiceID = @invoiceId;\r\n\r\n\t\t-- Create audit note\r\n\t\tINSERT INTO [Common].[Note] (ParentType, ParentID, [Action], Note, CreatedBy)\r\n\t\t\tVALUES ('INVOICE', @invoiceId, @actionType, @comments, @userId);\r\n\r\n\t\tCOMMIT TRAN @tranName;\r\n\r\n\t\t-- Update close amount of contract and contract lines, added on 4/11/18\r\n\t\tIF (@statusId=3 AND @oldStatusId=4) OR @statusId=4\r\n\t\tBEGIN\r\n\t\t\tUPDATE [Billing].ContractLine\r\n\t\t\tSET\tCloseAmount = [Billing].[UDF_GetContractLineAmountPaid](a.ContractLineID, GETDATE())\r\n\t\t\t\t, OpenAmount = a.ActualAmount - [Billing].[UDF_GetContractLineAmountPaid](a.ContractLineID, GETDATE())\r\n\t\t\t\t, ModifiedDate = GETDATE()\r\n\t\t\t\t, ModifiedBy = @userId\r\n\t\t\tFROM Billing.ContractLine a\r\n\t\t\tWHERE a.ContractLineID IN \r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT DISTINCT ContractLineID\r\n\t\t\t\t\tFROM invoice.InvoiceContractLine\r\n\t\t\t\t\tWHERE invoiceid = @invoiceId\r\n\t\t\t\t);\r\n\r\n\t\t\tUPDATE [Billing].Contract\r\n\t\t\tSET\tCloseAmount = ISNULL(b.CloseAmount, 0)\r\n\t\t\t\t,OpenAmount = ISNULL(b.OpenAmount, 0)\r\n\t\t\t\t,ModifiedDate = GETDATE()\r\n\t\t\t\t,ModifiedBy = @userId\r\n\t\t\tFROM [Billing].Contract a JOIN\r\n\t\t\t(\r\n\t\t\t\tSELECT ContractID\r\n\t\t\t\t\t, SUM(ISNULL(CloseAmount, 0)) AS CloseAmount\r\n\t\t\t\t\t, SUM(ISNULL(OpenAmount, 0)) AS OpenAmount\r\n\t\t\t\tFROM [Billing].ContractLine\t\t\r\n\t\t\t\tWHERE ContractID IN \r\n\t\t\t\t(\r\n\t\t\t\t\tSELECT DISTINCT contractid\r\n\t\t\t\t\tFROM invoice.InvoiceContractLine\r\n\t\t\t\t\tWHERE invoiceid = @invoiceId\r\n\t\t\t\t)\r\n\t\t\t\tGROUP BY ContractID\r\n\t\t\t) b ON a.ContractID=b.contractid;\r\n\t\t\t\r\n\t\tEND;\r\n\r\n\t\t-- insert payments into history table\r\n\t\tDECLARE @dte DATETIME\r\n        \r\n\t\tIF @actionType = 'APPROVED'\r\n\t\t\tBEGIN\r\n\t\t\t\tSET @dte = getdate();\r\n\t\t\t\tINSERT INTO Billing.HistoricalContractLine\r\n\t\t\t\t(\r\n\t\t\t\t    TransactionType,\r\n\t\t\t\t    ContractLineID,\r\n\t\t\t\t    ActualAmount,\r\n\t\t\t\t    StartDate,\r\n\t\t\t\t    EndDate,\r\n\t\t\t\t    ModifiedBy,\r\n\t\t\t\t    ChangeAmount,\r\n\t\t\t\t    InvoiceId\r\n\t\t\t\t)\r\n\t\t\t\t--values(2,0,0,@dte,null,@username,0,@invoiceId)\r\n\t\t\t\tSELECT 2,\r\n\t\t\t\t\t   c.ContractLineID,\r\n\t\t\t\t\t   0,\r\n\t\t\t\t\t   @dte,\r\n\t\t\t\t\t   NULL,\r\n\t\t\t\t\t   @username,\r\n\t\t\t\t\t   -SUM(c.AmountPaid),\r\n\t\t\t\t\t   @invoiceId\r\n\t\t\t\tFROM Invoice.InvoiceGroupContract a\r\n\t\t\t\t\tJOIN Billing.BillingGroupContract b ON a.BillingGroupContractID = b.BillingGroupContractID\r\n\t\t\t\t\tJOIN Invoice.InvoiceContractLine c ON a.InvoiceID=c.InvoiceID AND b.ContractID = c.ContractID\r\n\t\t\t\tWHERE a.InvoiceID = @invoiceId\r\n\t\t\t\tGROUP BY c.ContractLineID;\r\n\r\n\r\n\t\t\t\tUPDATE Billing.HistoricalContractLine\r\n\t\t\t\tSET EndDate = GETDATE()\r\n\t\t\t\tWHERE StartDate < @dte AND invoiceId = @invoiceId AND EndDate IS NULL AND TransactionType = 2\r\n\t\t\tEND\r\n\r\n\t\tIF (@statusId=3 AND @oldStatusId=4)  --@actionType = 'RETURNED' [changed by Xin on 08/16/2019]\r\n\t\t\tBEGIN\r\n\t\t\t\tINSERT INTO Billing.HistoricalContractLine\r\n\t\t\t\t(\r\n\t\t\t\t    TransactionType,\r\n\t\t\t\t    ContractLineID,\r\n\t\t\t\t    ActualAmount,\r\n\t\t\t\t    StartDate,\r\n\t\t\t\t    EndDate,\r\n\t\t\t\t    ModifiedBy,\r\n\t\t\t\t    ChangeAmount,\r\n\t\t\t\t    InvoiceId\r\n\t\t\t\t)\r\n\t\t\t\tSELECT 3,\r\n\t\t\t\t\t   c.ContractLineID,\r\n\t\t\t\t\t   0,\r\n\t\t\t\t\t   GETDATE(),\r\n\t\t\t\t\t   NULL,\r\n\t\t\t\t\t   @username,\r\n\t\t\t\t\t   SUM(c.AmountPaid),\r\n\t\t\t\t\t   @invoiceId\r\n\t\t\t\tFROM Invoice.InvoiceGroupContract a\r\n\t\t\t\t\tJOIN Billing.BillingGroupContract b ON a.BillingGroupContractID = b.BillingGroupContractID\r\n\t\t\t\t\tJOIN Invoice.InvoiceContractLine c ON a.InvoiceID=c.InvoiceID AND b.ContractID = c.ContractID AND b.FiscalYear=c.FiscalYear\r\n\t\t\t\tWHERE a.InvoiceID = @invoiceId\r\n\t\t\t\tGROUP BY c.ContractLineID;\r\n\t\t\tEND;\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tIF XACT_STATE() <> 0 ROLLBACK TRAN @tranName;\r\n\r\n\t\tSELECT @exceptionDetails = ERROR_MESSAGE();\r\n\t\tSET @severity\t= 'ERROR';\r\n\t\tSET @message\t= 'Failed to update invoice';\r\n\t\tSET @sendEmail\t= 1;\r\n\tEND CATCH;\r\n\r\n\tSET @elapsedTime = DATEDIFF(MILLISECOND, GETDATE(), @startTime);\r\n\r\n\tEXEC dbo.USP_AppLogCreate @correlationId = @correlationId\r\n\t\t,@machineName = @machineName\r\n\t\t,@processName = @processName\r\n\t\t,@action = @action\r\n\t\t,@severity = @severity\r\n\t\t,@message = @message\r\n\t\t,@messageDetails = @messageDetails\r\n\t\t,@exceptionDetails = @exceptionDetails\r\n\t\t,@domain = @domain\r\n\t\t,@username = @username\r\n\t\t,@userId = @userId\r\n\t\t,@sendEmail = @sendEmail\r\n\t\t,@elapsedTime = @elapsedTime;\r\nEND;\r"
        }
      ]
    }
  ]
}
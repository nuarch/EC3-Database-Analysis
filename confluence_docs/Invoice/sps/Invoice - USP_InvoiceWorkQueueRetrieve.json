{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Invoice",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_InvoiceWorkQueueRetrieve",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_InvoiceWorkQueueRetrieve",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve invoice data from a SQL Server database, specifically from the "
        },
        {
          "type": "text",
          "text": "Invoice",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " schema. It supports filtering, sorting, and pagination of invoice records. The procedure also logs its execution details and handles exceptions by capturing error messages and logging them."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple input parameters for filtering, sorting, and pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a Common Table Expression (CTE) for sorting and pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes error handling and logging mechanisms."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs dynamic sorting based on input parameters."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@providerId INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters invoices by provider ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@billingPeriod VARCHAR(6) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters invoices by billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@pageNumber INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the page number for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@pageSize INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the number of records per page."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@sortBy VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Determines the column to sort by."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@sortDirection VARCHAR(5) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the sort direction ('ASC' or 'DESC')."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@searchValue VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Searches for a specific value in invoice-related fields."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@correlationId VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for logging to correlate logs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@machineName VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for logging the machine name."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@processName VARCHAR(128) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for logging the process name."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@domain VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for logging the domain."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@username VARCHAR(25) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for logging the username."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@userId INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for logging the user ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@exceptionDetails VARCHAR(MAX) = NULL OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Captures exception details if an error occurs."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default values are set for parameters if they are not provided. For example, "
                },
                {
                  "type": "text",
                  "text": "@pageNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " defaults to 1, and "
                },
                {
                  "type": "text",
                  "text": "@pageSize",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " defaults to 1000."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Initializes variables for logging purposes, including generating a "
                },
                {
                  "type": "text",
                  "text": "@correlationId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " if not provided."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Calculates "
                },
                {
                  "type": "text",
                  "text": "@startRowIndex",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@endRowIndex",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " based on "
                },
                {
                  "type": "text",
                  "text": "@pageNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@pageSize",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A temporary table "
                        },
                        {
                          "type": "text",
                          "text": "@tmpInvoices",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is created to store invoice-related data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Data is inserted into "
                        },
                        {
                          "type": "text",
                          "text": "@tmpInvoices",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " using subqueries to concatenate related group, contract, and payment information."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A CTE "
                        },
                        {
                          "type": "text",
                          "text": "invoicesCTE",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is used to apply sorting and filtering logic. It assigns a "
                        },
                        {
                          "type": "text",
                          "text": "RowID",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " based on the sorting criteria specified by "
                        },
                        {
                          "type": "text",
                          "text": "@sortBy",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "@sortDirection",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure selects the required invoice data from "
                },
                {
                  "type": "text",
                  "text": "invoicesCTE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", applying pagination and additional filtering based on "
                },
                {
                  "type": "text",
                  "text": "@billingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If an error occurs, the procedure captures the error message in "
                },
                {
                  "type": "text",
                  "text": "@exceptionDetails",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and sets the severity to 'ERROR'."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs execution details using "
                },
                {
                  "type": "text",
                  "text": "dbo.USP_AppLogCreate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", including the elapsed time and any exception details."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the columns used in filtering and sorting ("
                },
                {
                  "type": "text",
                  "text": "InvoiceID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "InvoiceBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", etc.) are indexed to improve query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "ROW_NUMBER()",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for pagination is efficient, but performance may degrade with large datasets if indexes are not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table ("
                },
                {
                  "type": "text",
                  "text": "@tmpInvoices",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can be resource-intensive if the dataset is large. Consider optimizing the subqueries or using indexed views if performance issues arise."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Defaults",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Incorrect default values for parameters like "
                },
                {
                  "type": "text",
                  "text": "@pageSize",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could lead to unexpected results or performance issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While the procedure captures error messages, it does not provide detailed error handling or rollback mechanisms for transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not account for concurrent modifications to the data, which could lead to inconsistencies if the underlying data changes during execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hard-coded Limits",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The hard-coded limit of 10,000 rows for "
                },
                {
                  "type": "text",
                  "text": "@endRowIndex",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " may not be suitable for all scenarios and could lead to incomplete data retrieval if not adjusted appropriately."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Invoice].[USP_InvoiceWorkQueueRetrieve]\n\t@providerId\t\t\t\tINT = NULL\r\n\t,@billingPeriod\t\tVARCHAR(6) = NULL\r\n\t,@pageNumber\t\t\tINT = NULL\r\n\t,@pageSize\t\t\t\tINT = NULL\r\n\t,@sortBy\t\t\t\tVARCHAR(25) = NULL\r\n\t,@sortDirection\t\tVARCHAR(5) = NULL\r\n\t,@searchValue\t\t\tVARCHAR(25) = NULL\r\n\t,@correlationId AS VARCHAR(128) = NULL\r\n\t,@machineName AS VARCHAR(128) = NULL\r\n\t,@processName AS VARCHAR(128) = NULL\r\n\t,@domain AS VARCHAR(25) = NULL\r\n\t,@username AS VARCHAR(25) = NULL\r\n\t,@userId AS INT = NULL\r\n\t,@exceptionDetails AS VARCHAR(MAX) = NULL OUTPUT\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSET @providerId\t\t\t= NULLIF(@providerId, 0);\r\n\tSET @billingPeriod\t\t= NULLIF(@billingPeriod, '');\r\n\tSET @pageNumber\t\t\t= ISNULL(NULLIF(@pageNumber, 0), 1);\r\n\tSET @pageSize\t\t\t= ISNULL(NULLIF(@pageSize, 0), 1000);\r\n\tSET @sortBy\t\t\t\t= ISNULL(NULLIF(@sortBy, ''), 'INVOICENO');\r\n\tSET @sortDirection\t\t= ISNULL(NULLIF(@sortDirection, ''), 'DESC');\r\n\tSET @searchValue\t\t= NULLIF(@searchValue, '');\r\n\r\n\tDECLARE @action VARCHAR(25), @severity VARCHAR(25), @message VARCHAR(255), @messageDetails VARCHAR(MAX)\r\n\t\t, @startTime DATETIME, @elapsedTime INT, @sendEmail BIT;\r\n\tSET @startTime\t\t\t= GETDATE();\r\n\tSET @correlationId\t\t= ISNULL(@correlationId, CONVERT(VARCHAR(128), NEWID()));\r\n\tSET @machineName\t\t= COALESCE(@machineName, @@SERVERNAME, 'NA');\r\n\tSET @processName\t\t= COALESCE(@processName, QUOTENAME(OBJECT_SCHEMA_NAME(@@PROCID)) + '.' + QUOTENAME(OBJECT_NAME(@@PROCID)), 'NA');\r\n\tSET @action\t\t\t\t= 'RETRIEVE';\r\n\tSET @severity\t\t\t= 'INFO';\r\n\tSET @message\t\t\t= 'Retrieved invoices';\r\n\tSET @messageDetails\t\t= CONVERT(VARCHAR(MAX), (SELECT @providerId AS PRVID, @billingPeriod AS BILLPRD\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, @pageNumber AS PAGENUM, @pageSize AS PAGESIZE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFOR XML PATH('INPUTS')));\r\n\tSET @sendEmail\t\t\t= 0;\r\n\tSET @userId\t\t\t\t= ISNULL(@userId, 0);\r\n\r\n\tDECLARE @startRowIndex INT, @endRowIndex INT;\r\n\tSET @startRowIndex\t= ((@pageNumber - 1) * @pageSize) + 1;\r\n\tSET @endRowIndex\t= @pageNumber * @pageSize;\r\n\tIF @endRowIndex <= 0 SET @endRowIndex = 10000; -- Hard-coding for 10,000 rows of data\r\n\r\n\tBEGIN TRY\r\n\t\tDECLARE @tmpInvoices TABLE (\r\n\t\t\tInvoiceID INT NOT NULL\r\n\t\t\t, BillingGroups VARCHAR(1000) NULL\r\n\t\t\t, Contracts VARCHAR(1000) NULL\r\n\t\t\t, Payments VARCHAR(1000) NULL\r\n\t\t);\r\n\r\n\t\tINSERT INTO @tmpInvoices(InvoiceID, BillingGroups, Contracts, Payments)\r\n\t\t\tSELECT INV.InvoiceID\r\n\t\t\t\t, SUBSTRING((SELECT DISTINCT ', ' + IGC.GroupName FROM [Invoice].[vwInvoiceGroupContracts] IGC WHERE IGC.InvoiceID = INV.InvoiceID FOR XML PATH('')), 2, 1000) AS BillingGroups\r\n\t\t\t\t, SUBSTRING((SELECT DISTINCT ', ' + IGC.ContractNumber FROM [Invoice].[vwInvoiceGroupContracts] IGC WHERE IGC.InvoiceID = INV.InvoiceID FOR XML PATH('')), 2, 1000) AS Contracts\r\n\t\t\t\t, SUBSTRING((SELECT DISTINCT ', ' + IP.PaymentNumber FROM [Invoice].[vwInvoicePayments] IP WHERE IP.InvoiceID = INV.InvoiceID FOR XML PATH('')), 2, 1000) AS Payments\r\n\t\t\tFROM [Invoice].[vwInvoices] INV;\r\n\r\n\t\tWITH invoicesCTE AS (\r\n\t\t\tSELECT CASE\r\n\t\t\t\t\t\tWHEN @sortBy = 'INVOICENO' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY INV.InvoiceBillingPeriod ASC, RIGHT(INV.InvoiceNumber, 3) ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'INVOICENO' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY INV.InvoiceBillingPeriod DESC, RIGHT(INV.InvoiceNumber, 3) DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'INVOICEDATE' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY INV.InvoiceDate ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'INVOICEDATE' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY INV.InvoiceDate DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'PROVIDER' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY INV.ProviderName ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'PROVIDER' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY INV.ProviderName DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'BILLINGGROUP' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY T.BillingGroups ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'BILLINGGROUP' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY T.BillingGroups DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'CONTRACT' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY T.Contracts ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'CONTRACT' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY T.Contracts DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'PAYMENT' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY T.Payments ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'PAYMENT' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY T.Payments DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'INVOICEAMOUNT' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY INV.AmountPaid ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'INVOICEAMOUNT' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY INV.AmountPaid DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'BILLINGPERIOD' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY INV.InvoiceBillingPeriod ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'BILLINGPERIOD' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY INV.InvoiceBillingPeriod DESC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'STATUS' AND @sortDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY INV.StatusDescription ASC)\r\n\t\t\t\t\t\tWHEN @sortBy = 'STATUS' AND @sortDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY INV.StatusDescription DESC)\r\n\t\t\t\t\t\tELSE ROW_NUMBER() OVER (ORDER BY INV.InvoiceBillingPeriod DESC, RIGHT(INV.InvoiceNumber, 3) DESC)\r\n\t\t\t\t\tEND AS RowID\r\n\t\t\t\t, INV.InvoiceID, INV.InvoiceNumber, INV.AmountBilled, INV.AmountPaid, INV.InvoiceBillingPeriod, INV.StatusID\r\n\t\t\t\t, INV.ProviderID, INV.ProviderName\r\n\t\t\t\t, T.BillingGroups, T.Contracts, T.Payments\r\n\t\t\t\t, INV.InvoiceDate, INV.CreatedDate, INV.CreatedBy, INV.ModifiedDate, INV.ModifiedBy\r\n\t\t\t\t, INV.Active\r\n\t\t\tFROM [Invoice].[vwInvoices] INV\r\n\t\t\tJOIN @tmpInvoices T ON T.InvoiceID = INV.InvoiceID\r\n\t\t\tWHERE Active\t\t\t\t\t= 1\r\n\t\t\t\tAND INV.ProviderID\t\t\t\t= ISNULL(@providerId, ProviderID)\r\n\t\t\t\tAND INV.InvoiceBillingPeriod\t= ISNULL(@billingPeriod, InvoiceBillingPeriod)\r\n\t\t\t\t\r\n\t\t\t\tAND 1 = CASE\r\n\t\t\t\t\t\t\tWHEN ISNULL(@searchValue, '') <> '' THEN\r\n\t\t\t\t\t\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN INV.InvoiceNumber LIKE '%' + @searchValue + '%'\r\n\t\t\t\t\t\t\t\t\t\t\tOR T.BillingGroups LIKE '%' + @searchValue + '%'\r\n\t\t\t\t\t\t\t\t\t\t\tOR T.Contracts LIKE '%' + @searchValue + '%'\r\n\t\t\t\t\t\t\t\t\t\t\tOR T.Payments LIKE '%' + @searchValue + '%'\r\n\t\t\t\t\t\t\t\t\t\tTHEN 1\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\tELSE 1\r\n\t\t\t\t\t\tEND\r\n\t\t)\r\n\t\tSELECT INV.InvoiceID, INV.InvoiceNumber, INV.AmountBilled, INV.AmountPaid, INV.InvoiceBillingPeriod, INV.StatusID\r\n\t\t\t, INV.ProviderID, INV.ProviderName, INV.BillingGroups, INV.Contracts, INV.Payments\r\n\t\t\t, INV.InvoiceDate, INV.CreatedDate, INV.CreatedBy, INV.ModifiedDate, INV.ModifiedBy\r\n\t\t\t, INV.Active\r\n\t\t\t, CONVERT(INT, (SELECT COUNT(1) FROM Invoice.vwInvoices WHERE Active = 1)) AS TotalRecords\r\n\t\t\t, CONVERT(INT, (SELECT COUNT(1) FROM invoicesCTE)) AS FilteredRecords\r\n\t\tFROM invoicesCTE INV\r\n\t\tJOIN @tmpInvoices T ON T.InvoiceID = INV.InvoiceID\r\n\t\tWHERE (RowID BETWEEN @startRowIndex AND @endRowIndex)\r\n\t\t\tAND ((@billingPeriod IS NOT NULL AND INV.InvoiceBillingPeriod = @billingPeriod) OR (@billingPeriod IS NULL))\r\n\t\tORDER BY RowID;\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tSELECT @exceptionDetails = ERROR_MESSAGE();\r\n\t\tSET @severity\t= 'ERROR';\r\n\t\tSET @message\t= 'Failed to retrieve invoices';\r\n\t\tSET @sendEmail\t= 1;\r\n\tEND CATCH;\r\n\r\n\tSET @elapsedTime = DATEDIFF(MILLISECOND, GETDATE(), @startTime);\r\n\r\n\tEXEC dbo.USP_AppLogCreate @correlationId = @correlationId\r\n\t\t,@machineName = @machineName\r\n\t\t,@processName = @processName\r\n\t\t,@action = @action\r\n\t\t,@severity = @severity\r\n\t\t,@message = @message\r\n\t\t,@messageDetails = @messageDetails\r\n\t\t,@exceptionDetails = @exceptionDetails\r\n\t\t,@domain = @domain\r\n\t\t,@username = @username\r\n\t\t,@userId = @userId\r\n\t\t,@sendEmail = @sendEmail\r\n\t\t,@elapsedTime = @elapsedTime;\r\nEND;\r"
        }
      ]
    }
  ]
}
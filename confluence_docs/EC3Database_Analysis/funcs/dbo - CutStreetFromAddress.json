{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CutStreetFromAddress",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Low",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "CutStreetFromAddress",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server designed to extract the street name from a full address string. Scalar functions return a single value and are often used for computations or transformations on input data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Low"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's complexity is low as it performs a straightforward string manipulation task. It likely uses basic string functions to parse and extract the street name from the input address."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@FullAddress",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is expected to be a string (VARCHAR or NVARCHAR) representing the complete address from which the street name will be extracted. The function relies on this input to perform its operation."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Return Type",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function returns a string (VARCHAR or NVARCHAR) that contains the extracted street name. The return type is consistent with the input parameter type to maintain data integrity."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's business logic involves parsing the input address string to isolate and return the street name. This may involve:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Identifying delimiters or patterns within the address string that separate the street name from other components (e.g., city, state, zip code)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Using string functions such as "
                },
                {
                  "type": "text",
                  "text": "SUBSTRING",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "CHARINDEX",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", or "
                },
                {
                  "type": "text",
                  "text": "PATINDEX",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to locate and extract the street name."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Handling edge cases where the address format may vary, ensuring the street name is accurately extracted."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalar functions can introduce performance overhead when used in large queries or applied to many rows, as they are executed row-by-row."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If the function is used frequently or on large datasets, consider optimizing the logic or using inline table-valued functions for better performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ensure that the function's logic is efficient, minimizing unnecessary computations or string operations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variability in address formats can lead to incorrect extraction if the function's logic does not account for different patterns or delimiters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance degradation in large datasets due to the row-by-row execution nature of scalar functions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Potential for null or empty input values, which should be handled to prevent errors or unexpected results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Changes in address formatting standards may require updates to the function's logic to maintain accuracy."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE  FUNCTION [dbo].[CutStreetFromAddress] ( @address varchar(40))\nRETURNS varchar(40) AS  \r\n\r\nBEGIN \r\n--\r\ndeclare @Street varchar(40)\r\n\r\ndeclare @Length int\r\n\r\ndeclare @StartPosOfBlank int\r\n\r\ndeclare @StreetType varchar(30)\r\n\r\nset @Street=@address\r\n\r\nset @address=replace(@address, '@ ', '')\r\nset @address=replace(@address, ' @', '')\r\nset @address=replace(@address, '@', '')\r\n\r\nif (CHARINDEX('&',@address,0)<0.5*LEN(@address) AND CHARINDEX('&',@address,0)<>0)\r\n\r\n--INTERSECTION\r\nBEGIN\r\n\r\nset @Street ='000'\r\n\r\nEND\r\n\r\nELSE\r\n\r\n--DIRECT ADDRESS\r\nBEGIN\r\n\r\nset @StartPosOfBlank = LEN(@address)\r\n\r\nset @StreetType = ' ST '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' ST.'\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' STREET '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' STRE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' STR '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' AVENUE'\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' AVE'\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' AV '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' RD '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' ROAD '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' BLVD'\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' BOULEVARD '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' PKWY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' HIGHWAY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' EXPWY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' EXPRESSWAY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' EXPWAY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' DRIVE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\n\r\nset @StreetType = ' PLACE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' ROW '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' PLAZA '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\n\r\nset @StreetType = ' LANE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' PL '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' TERRACE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' TERR '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\n\r\nEND\r\n\r\nset @StreetType = ' BDWY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' SQUARE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' CRESCENT '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' BL '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' DR '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' CIRCLE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' CTR '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' SLIP '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' PARKWAY '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' CONCOURSE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' COURT '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' SQ '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' TURNPIKE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' TPKE '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' TRNPK '\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nset @StreetType = ' BROADWAY '\r\n\r\n\r\nIF (CHARINDEX(@StreetType,@address,0)<>0 AND CHARINDEX(@StreetType,@address,0)<@StartPosOfBlank)\r\n\r\nBEGIN\r\n\r\nset @Length=LEN(@StreetType)\r\n\r\nset @StartPosOfBlank = CHARINDEX(@StreetType,@address,0)\r\n\r\nset @Street = substring(@address, 0, @StartPosOfBlank+@Length)\r\n\r\nEND\r\n\r\nEND\r\n\r\nreturn @Street\r\n\r\n--return @StartPosOfBlank\r\n\r\nEND"
        }
      ]
    }
  ]
}
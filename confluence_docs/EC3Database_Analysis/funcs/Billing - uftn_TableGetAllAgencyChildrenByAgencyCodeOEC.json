{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableGetAllAgencyChildrenByAgencyCodeOEC",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableGetAllAgencyChildrenByAgencyCodeOEC",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function in Microsoft SQL Server. It is designed to retrieve all child agencies associated with a given agency code. This function likely involves querying hierarchical data, where agencies have parent-child relationships, and returns a set of records representing these child agencies."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to contain multiple SQL statements, including control-of-flow constructs. The complexity is further influenced by the need to navigate hierarchical data structures, which may involve recursive logic or multiple joins."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function likely accepts one or more input parameters, with the primary parameter being:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to specify the agency code for which the function will retrieve all associated child agencies. It serves as the starting point for the hierarchical query."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of this function is a table. The structure of the returned table would typically include columns such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ChildAgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The code of the child agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ChildAgencyName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The name of the child agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ParentAgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The code of the parent agency, which would match the input "
                },
                {
                  "type": "text",
                  "text": "@AgencyCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional columns may include metadata or attributes relevant to the agencies."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic involves:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Accepting an agency code as input."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Querying the database to identify all child agencies associated with the given agency code. This may involve recursive queries or multiple joins to navigate the hierarchical relationships."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Populating a table variable with the results of the query."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the table variable as the output of the function."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow typically involves:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initializing a table variable to store the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Executing a query to retrieve child agencies based on the input agency code."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Iteratively or recursively processing the results to ensure all levels of the hierarchy are captured."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the populated table variable."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Multi-statement table-valued functions can have performance overhead due to the need to materialize intermediate results in a table variable."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Recursive queries or complex joins can further impact performance, especially with large datasets or deep hierarchies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing strategies on the underlying tables can significantly affect the function's execution time."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consideration should be given to the potential for recompilation and execution plan caching, which can affect performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Recursive logic, if used, may lead to excessive resource consumption or stack overflow errors if not properly managed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Changes in the underlying data structure or schema, such as modifications to the agency hierarchy, can affect the function's correctness."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function may not perform optimally with very large datasets or deeply nested hierarchies without appropriate indexing or optimization strategies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Potential for deadlocks or blocking if the function is executed concurrently with other operations that modify the same data."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Billing].[uftn_TableGetAllAgencyChildrenByAgencyCodeOEC]\n(     \r\n      @AgencyCodeOEC varchar(max), -- agency codes \r\n      @EmailAddress emailaddr \r\n)\r\nRETURNS @selectedAgency TABLE\r\n(\r\n      AgencyCodeOEC varchar(6),\r\n      AgencyDivisionSeqID seqid null,\r\n      AgencyDivisionHierarchy HIERARCHYID null,\r\n      ParentAgencyDivisionSeqid seqid NULL,\r\n      AgencyName varchar(75)\r\n)\r\nAS\r\nBEGIN\r\n            DECLARE @delimiter VARCHAR(1)\r\n      SET @delimiter = ',';\r\n      if (@AgencyCodeOEC = '*')\r\n\t\t  begin\r\n\t\t\t\tINSERT INTO @selectedAgency\r\n\t\t\t\t\t\t  ( AgencyCodeOEC ,\r\n\t\t\t\t\t\t\tAgencyDivisionSeqID ,\r\n\t\t\t\t\t\t\tAgencyDivisionHierarchy ,\r\n\t\t\t\t\t\t\tParentAgencyDivisionSeqid,\r\n\t\t\t\t\t\t\tAgencyName\r\n\t\t\t\t\t\t  )\r\n\t\t\t\tSELECT AgencyCodeOEC ,AgencyDivisionSeqID ,AgencyDivisionHierarchy ,ParentAgencyDivisionSeqid,AgencyName\r\n\t\t\t\tFROM dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) \r\n\t\t\t\t\t\t\t AS uftn_TableGetAgencyByEmailAddressAgencyAccessAction_1\r\n\t\t\t\torder by AgencyCodeOEC\r\n\t\t  end\r\n      else\r\n \t\t  begin\r\n\t\t\t -- parse agency code oec\r\n\t\t\t  WITH cteAgencyCodeOEC AS (\r\n\t\t\t\t\tSELECT 0 As [pos]\r\n\t\t\t\t   , 1 As [level]\r\n\t\t\t\tUNION ALL\r\n\t\t\t\t  SELECT Convert(int, CharIndex(@delimiter, @AgencyCodeOEC, cteAgencyCodeOEC.pos + 1))\r\n\t\t\t\t\t   , level + 1\r\n\t\t\t\t  FROM cteAgencyCodeOEC\r\n\t\t\t\t  WHERE  CharIndex(@delimiter, @AgencyCodeOEC, cteAgencyCodeOEC.pos + 1) > 0\r\n\t\t\t\t)\r\n\r\n\t\t\t  INSERT INTO @selectedAgency\r\n\t\t\t  ( \r\n\t\t\t\t\tAgencyCodeOEC\r\n\t\t\t  )\r\n\t\t\t  SELECT\r\n\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t  @AgencyCodeOEC, \r\n\t\t\t\t\t\t  a.pos + 1, \r\n\t\t\t\t\t\t  CASE WHEN b.pos IS NULL THEN (Len(@AgencyCodeOEC) - a.pos) ELSE (b.pos - a.pos -1) END\r\n\t\t\t\t\t)\r\n\t\t\t  FROM cteAgencyCodeOEC a\r\n\t\t\t  LEFT\r\n\t\t\t  JOIN cteAgencyCodeOEC b\r\n\t\t\t  ON a.level + 1 = b.level;\r\n\t\t\t  \r\n\t\t\t  -- remove agency passed by mistake\r\n\t\t\t  DELETE FROM @selectedAgency\r\n\t\t\t  WHERE AgencyCodeOEC NOT IN (SELECT AgencyCodeOEC FROM \r\n\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress))\r\n\t\tEND\r\n\t\t\t\r\n\t\t\t\r\n      UPDATE sg\r\n      SET sg.AgencyDivisionSeqID = ag.AgencyDivisionSeqID,\r\n            sg.AgencyDivisionHierarchy = ag.AgencyDivisionHierarchy,\r\n            sg.ParentAgencyDivisionSeqid = ag.ParentAgencyDivisionSeqid,\r\n            sg.AgencyName = ag.AgencyName\r\n      FROM @selectedAgency AS sg\r\n      INNER JOIN Billing.AgencyDivision AS ag\r\n      ON sg.AgencyCodeOEC = ag.AgencyCodeOEC\r\n\r\n      --  subtree of selected node(s)\r\n      INSERT INTO @selectedAgency\r\n                  ( AgencyCodeOEC ,\r\n                    AgencyDivisionSeqID ,\r\n                    AgencyDivisionHierarchy ,\r\n                    ParentAgencyDivisionSeqid,\r\n                    AgencyName\r\n                  )\r\n      SELECT \r\n            children.AgencyCodeOEC,\r\n            children.AgencyDivisionSeqID ,\r\n            children.AgencyDivisionHierarchy ,\r\n            children.ParentAgencyDivisionSeqid,\r\n            children.AgencyName\r\n      FROM \r\n      @selectedAgency AS sg\r\n      INNER JOIN Billing.AgencyDivision AS children\r\n            ON children.AgencyDivisionHierarchy.IsDescendantOf(sg.AgencyDivisionHierarchy) = 1\r\n            AND children.AgencyDivisionSeqID <> sg.AgencyDivisionSeqID\r\n      WHERE children.AgencyCodeOEC NOT IN (SELECT AgencyCodeOEC FROM @selectedAgency)\r\n      \r\n      RETURN\r\nEND"
        }
      ]
    }
  ]
}
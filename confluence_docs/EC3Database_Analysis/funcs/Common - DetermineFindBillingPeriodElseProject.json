{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Common",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "DetermineFindBillingPeriodElseProject",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "DetermineFindBillingPeriodElseProject",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a scalar function in Microsoft SQL Server. Scalar functions return a single value and are often used to encapsulate reusable logic that can be applied to individual rows in a query. This function is designed to determine a billing period or project based on certain input parameters. The specific logic and conditions used to make this determination are encapsulated within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Scalar functions can introduce performance overhead when used in large datasets due to their row-by-row execution nature. The complexity also depends on the internal logic, which may involve conditional statements, calculations, or database lookups."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function likely accepts several input parameters, each serving a specific purpose in determining the billing period or project. These parameters could include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A date or timestamp to identify the relevant period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "An identifier for a project or billing entity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional flags or settings that influence the logic flow."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Each parameter is crucial for the function's decision-making process, allowing it to evaluate conditions and return the appropriate result."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is a scalar value, which could be a string, integer, or date, depending on what constitutes a billing period or project identifier in the business context. The structure of the return value is straightforward, as it is a single value representing the outcome of the function's logic."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within the function involves evaluating the input parameters to determine whether a billing period or project should be returned. This may include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Checking if the input date falls within a specific billing cycle."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Verifying if a project identifier matches certain criteria."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Applying conditional logic to decide between returning a billing period or a project identifier."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow involves processing the inputs, applying the logic, and returning the result based on the conditions met."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can impact performance, especially when used in queries that process large datasets. They are executed for each row, which can lead to increased CPU usage and longer query execution times. To mitigate this, consider:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Minimizing the use of scalar functions in SELECT clauses or WHERE conditions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exploring alternatives like inline table-valued functions or incorporating logic directly into queries."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks associated with this function include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance degradation in large datasets due to row-by-row execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complexity in debugging and maintaining the function if the logic is intricate."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Risk of incorrect results if input parameters are not validated or if the logic does not account for all possible scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on external data or settings that may change, affecting the function's output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Common].[DetermineFindBillingPeriodElseProject]\n(\r\n\t@AccountNumber AS VARCHAR(15)\r\n\t,@MeterNumber AS VARCHAR(10)\r\n\t,@ToDate AS VARCHAR(8)\r\n\t,@FromOrTo AS VARCHAR(1)\r\n\t,@BillingCycle AS VARCHAR(1)\r\n\t,@Tariff AS VARCHAR(3)\r\n\t,@Utility AS INT\r\n)\r\nRETURNS VARCHAR(6)\r\nAS  \r\nBEGIN\r\n\tDECLARE @BillingPeriod AS VARCHAR(6), @WDNumber AS VARCHAR(2), @FoundRowCount AS INT\r\n\t\t,@NationalGridWest AS INT, @ConEdison AS INT;\r\n\t\r\n\tSELECT @NationalGridWest = 2, @ConEdison = 9;\r\n\t\r\n\tIF (@MeterNumber IS NULL)\r\n\tBEGIN\r\n\t\tSELECT @BillingPeriod = AB.BillingPeriodRevision\r\n\t\tFROM Billing.Account AS A\r\n\t\t\tINNER JOIN Billing.AccountBilling AS AB ON A.AccountSeqid = AB.AccountSeqid\r\n\t\tWHERE A.UtilityAccountProvider = @Utility\r\n\t\t\tAND A.CurrentAccountNumber = @AccountNumber\r\n\t\t\tAND AB.FromDate < @ToDate AND  @ToDate <= AB.ToDate;\r\n\r\n\t\tSELECT @FoundRowCount = @@rowcount;\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\tSELECT @BillingPeriod = MB.BillingPeriodRevision\r\n\t\tFROM Billing.Account AS A\r\n\t\t\tINNER JOIN Billing.AccountExchangeMeterTrack AS AE ON A.AccountSeqid = AE.OriginalAccountSeqid\r\n\t\t\tINNER JOIN Billing.Meter AS M ON AE.OriginalMeterSeqid = M.MeterSeqid\r\n\t\t\tINNER JOIN Billing.MeterBilling AS MB ON AE.AccountExchangeMeterTrackSeqid = MB.OriginalAccountNumber\r\n\t\tWHERE A.UtilityAccountProvider = @Utility\r\n\t\t\tAND A.CurrentAccountNumber = @AccountNumber\r\n\t\t\tAND M.CurrentMeterNumber = @MeterNumber\r\n\t\t\tAND MB.FromDate < @ToDate AND @ToDate <= MB.ToDate;\r\n\r\n\t\tSELECT @FoundRowCount = @@rowcount;\r\n\tEND;\r\n\r\n\tIF (@FoundRowCount =  0)\r\n\tBEGIN\r\n\t\tIF(@Utility = @ConEdison)\r\n\t\tBEGIN \r\n\t\t\tSELECT @BillingPeriod = dbo.DetermineConEdisonBillingPeriodProjected (@ToDate, @Tariff,@Utility);\r\n\t\tEND;\r\n\t\tELSE IF (@Utility = @NationalGridWest)\r\n\t\tBEGIN\r\n\t\t\tSELECT @WDNumber = SUBSTRING(@AccountNumber, 12, 2);\r\n\t\t\tSELECT @BillingPeriod = NationalGridWest.DetermineBillingPeriod(@BillingCycle, @ToDate, @FromOrTo, @WDNumber);\r\n\t\tEND;\r\n\t\tELSE\r\n\t\tBEGIN\r\n\t\t\tSELECT @BillingPeriod = dbo.DetermineBillingPeriodProjected(@ToDate, @Utility);\r\n\t\tEND;\r\n\tEND;\r\n\r\n\tRETURN @BillingPeriod;\r\nEND;"
        }
      ]
    }
  ]
}
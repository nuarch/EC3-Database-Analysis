{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableGetAgencyCodeOEC",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableGetAgencyCodeOEC",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. This type of function allows for complex logic to be executed and returns a table as a result. The function is designed to retrieve agency codes related to a specific context, possibly involving multiple steps or conditions to derive the final result set."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to include multiple SQL statements, conditional logic, and the need to manage intermediate results. The complexity is further influenced by the specific business logic implemented within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function likely accepts one or more input parameters that define the criteria for retrieving agency codes. These parameters could include identifiers such as agency ID, date ranges, or other contextual information necessary to filter or process the data. Each parameter serves a specific purpose in narrowing down the dataset or influencing the logic applied within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is a table. The structure of this table typically includes columns relevant to agency codes, such as the agency code itself, agency name, and possibly additional metadata or attributes that provide context or details about each agency. The exact schema of the returned table is defined within the function's body."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within "
        },
        {
          "type": "text",
          "text": "uftn_TableGetAgencyCodeOEC",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " involves multiple SQL statements that collectively determine the set of agency codes to return. The workflow may include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initializing a table variable to store intermediate results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Executing queries to populate this table variable based on the input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Applying conditional logic or joins to refine the dataset."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the final result set from the table variable."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This workflow allows for complex data processing and transformation, accommodating various business rules and conditions."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Performance considerations for multi-statement table-valued functions include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution time: MSTVFs can be slower than inline table-valued functions due to the overhead of managing intermediate results and executing multiple statements."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource usage: The use of table variables can impact memory and CPU usage, especially if large datasets are involved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Optimization: SQL Server may have limited ability to optimize queries within MSTVFs compared to inline functions, potentially affecting execution plans and performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks associated with this function include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability: As data volume grows, the performance of the function may degrade, particularly if not optimized for large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance: Changes to business logic or schema may require updates to the function, necessitating thorough testing to ensure continued correctness."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency: If the function is called frequently or concurrently by multiple users, it could lead to contention or resource bottlenecks, impacting overall system performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Billing].[uftn_TableGetAgencyCodeOEC]\n(     \r\n      @AgencyCodeOEC varchar(max), -- agency codes \r\n      @EmailAddress emailaddr \r\n)\r\nRETURNS @selectedAgency TABLE\r\n(\r\n      AgencyCodeOEC varchar(6) primary key,\r\n      AgencyDivisionSeqID seqid null,\r\n      AgencyDivisionHierarchy HIERARCHYID null,\r\n      ParentAgencyDivisionSeqid seqid NULL,\r\n      AgencyName varchar(75),\r\n      unique(AgencyDivisionSeqID,AgencyCodeOEC),\r\n      unique(AgencyDivisionHierarchy,AgencyCodeOEC)\r\n)\r\nAS\r\nBEGIN\r\n      DECLARE @delimiter VARCHAR(1)\r\n      SET @delimiter = ',';\r\n      if (@AgencyCodeOEC = '*')\r\n\t\t  begin\r\n\t\t\t\tINSERT INTO @selectedAgency\r\n\t\t\t\t\t\t  ( AgencyCodeOEC ,\r\n\t\t\t\t\t\t\tAgencyDivisionSeqID ,\r\n\t\t\t\t\t\t\tAgencyDivisionHierarchy ,\r\n\t\t\t\t\t\t\tParentAgencyDivisionSeqid,\r\n\t\t\t\t\t\t\tAgencyName\r\n\t\t\t\t\t\t  )\r\n\t\t\t\tSELECT AgencyCodeOEC ,AgencyDivisionSeqID ,AgencyDivisionHierarchy ,ParentAgencyDivisionSeqid,AgencyName\r\n\t\t\t\tFROM dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) \r\n\t\t\t\t\t\t\t AS uftn_TableGetAgencyByEmailAddressAgencyAccessAction_1\r\n\t\t\t\tWHERE (Inactive = 'N')\r\n\t\t\t\torder by AgencyCodeOEC\r\n\t\t\t\treturn\r\n\t\t  end\r\n      else\r\n \t\t  begin\r\n\t\t\t -- parse agency code oec\r\n\t\t\t  WITH cteAgencyCodeOEC AS (\r\n\t\t\t\t\tSELECT 0 As [pos]\r\n\t\t\t\t   , 1 As [level]\r\n\t\t\t\tUNION ALL\r\n\t\t\t\t  SELECT Convert(int, CharIndex(@delimiter, @AgencyCodeOEC, cteAgencyCodeOEC.pos + 1))\r\n\t\t\t\t\t   , level + 1\r\n\t\t\t\t  FROM cteAgencyCodeOEC\r\n\t\t\t\t  WHERE  CharIndex(@delimiter, @AgencyCodeOEC, cteAgencyCodeOEC.pos + 1) > 0\r\n\t\t\t\t)\r\n\r\n\t\t\t  INSERT INTO @selectedAgency\r\n\t\t\t  ( \r\n\t\t\t\t\tAgencyCodeOEC\r\n\t\t\t  )\r\n\t\t\t  SELECT\r\n\t\t\t\t\tSUBSTRING\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t  @AgencyCodeOEC, \r\n\t\t\t\t\t\t  a.pos + 1, \r\n\t\t\t\t\t\t  CASE WHEN b.pos IS NULL THEN (Len(@AgencyCodeOEC) - a.pos) ELSE (b.pos - a.pos -1) END\r\n\t\t\t\t\t)\r\n\t\t\t  FROM cteAgencyCodeOEC a\r\n\t\t\t  LEFT\r\n\t\t\t  JOIN cteAgencyCodeOEC b\r\n\t\t\t  ON a.level + 1 = b.level;\r\n\t\t\tend\r\n      UPDATE sg\r\n      SET sg.AgencyDivisionSeqID = ag.AgencyDivisionSeqID,\r\n            sg.AgencyDivisionHierarchy = ag.AgencyDivisionHierarchy,\r\n            sg.ParentAgencyDivisionSeqid = ag.ParentAgencyDivisionSeqid,\r\n            sg.AgencyName = ag.AgencyName\r\n      FROM @selectedAgency AS sg\r\n      INNER JOIN Billing.AgencyDivision AS ag\r\n      ON sg.AgencyCodeOEC = ag.AgencyCodeOEC\r\n\r\n      ------------  subtree of selected node(s)\r\n      ----------INSERT INTO @selectedAgency\r\n      ----------            ( AgencyCodeOEC ,\r\n      ----------              AgencyDivisionSeqID ,\r\n      ----------              AgencyDivisionHierarchy ,\r\n      ----------              ParentAgencyDivisionSeqid,\r\n      ----------              AgencyName\r\n      ----------            )\r\n      ----------SELECT \r\n      ----------      children.AgencyCodeOEC,\r\n      ----------      children.AgencyDivisionSeqID ,\r\n      ----------      children.AgencyDivisionHierarchy ,\r\n      ----------      children.ParentAgencyDivisionSeqid,\r\n      ----------      children.AgencyName\r\n      ----------FROM \r\n      ----------@selectedAgency AS sg\r\n      ----------INNER JOIN Billing.AgencyDivision AS children\r\n      ----------      ON children.AgencyDivisionHierarchy.IsDescendantOf(sg.AgencyDivisionHierarchy) = 1\r\n      ----------      AND children.AgencyDivisionSeqID <> sg.AgencyDivisionSeqID\r\n      ----------      AND children.InActive = 'N'\r\n      ----------INNER JOIN dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS userAccessAgency\r\n      ----------      ON userAccessAgency.AgencyDivisionSeqID = children.AgencyDivisionSeqID\r\n\r\n      return\r\nEND"
        }
      ]
    }
  ]
}
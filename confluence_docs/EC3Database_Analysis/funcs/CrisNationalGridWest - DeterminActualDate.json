{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "DeterminActualDate",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "DeterminActualDate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server. Scalar functions return a single value and are often used to encapsulate logic that can be reused across multiple queries. This function is designed to calculate and return a specific date based on the input parameters provided. The exact logic and purpose of the date calculation would depend on the business rules encoded within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Scalar functions can range from simple to complex based on the logic they encapsulate. Without the specific SQL code, the complexity is inferred from typical use cases where date calculations involve conditional logic, date arithmetic, and possibly interactions with other data elements."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The input parameters for the "
        },
        {
          "type": "text",
          "text": "DeterminActualDate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function are not specified, but typically, such a function would include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A date or datetime parameter: This would serve as the base date for calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional parameters: These could include integers or strings that modify the calculation, such as an offset value, a flag indicating business rules, or a code representing a specific condition."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the "
        },
        {
          "type": "text",
          "text": "DeterminActualDate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is likely a "
        },
        {
          "type": "text",
          "text": "DATETIME",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "text": "DATE",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " type. Scalar functions return a single value, and given the function's name, it is expected to return a date-related value."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within the "
        },
        {
          "type": "text",
          "text": "DeterminActualDate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function involves calculating a date based on the input parameters. This could include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Adding or subtracting days, months, or years from a given date."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Adjusting the date based on business rules, such as skipping weekends or holidays."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning a specific date based on conditions, such as the next business day or the end of a fiscal period."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow would typically involve:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Receiving input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performing calculations or conditional checks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the calculated date."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions in SQL Server can have performance implications, especially when used in SELECT statements that process large datasets. They are executed row-by-row, which can lead to slower performance compared to set-based operations. To mitigate this, consider:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Minimizing the use of scalar functions in large queries."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ensuring the function logic is optimized and does not include unnecessary computations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exploring alternatives like inline table-valued functions if performance issues arise."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks associated with the "
        },
        {
          "type": "text",
          "text": "DeterminActualDate",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Incorrect date calculations if the business logic is not accurately implemented."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance degradation in queries processing large datasets due to row-by-row execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance challenges if the function logic is complex or not well-documented."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on external factors, such as holiday calendars, which may require regular updates to maintain accuracy."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "create FUNCTION [CrisNationalGridWest].[DeterminActualDate]\n(\r\n\t@OriginalAccountNumber varchar(15),\r\n\t@FromOrTo varchar(1),\t\t-- T: ToDate; F: FromDate\r\n\t@BillingPeriod varchar(6)\t-- billing period revision\r\n)\r\nRETURNS varchar(8)\r\nAS\r\nbegin\r\n    --*******************************************************************************************************************************\r\n    --* Description:  searches the accountbilling table for actuatual dates for the originalaccountnumber and the coresponding period\r\n    --*\r\n    --* Mohammed Belarrem\r\n    --*   05/26/2010 MOH    created:    \r\n    --*******************************************************************************************************************************\r\n\r\n\r\n\tdeclare @returnDate varchar(8)\r\n\r\n\t/****************************\r\n\t\tGet FromDate\r\n\t****************************/\r\n\tif(@FromOrTo = 'F')\r\n\tbegin -- begin get FromDate\r\n\r\n\t\t\t-- check if you have actual fromDate for the given period\r\n\t\t\tselect @returnDate = FromDate\r\n\t\t\tfrom Billing.AccountBilling INNER JOIN Billing.Account\r\n\t\t\tON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\t\t\tWHERE  Billing.Account.CurrentAccountNumber = @OriginalAccountNumber\r\n\t\t\t\t   AND \tBillingPeriodRevision = @BillingPeriod\r\n\t\t\t\r\n\t\t\t--\tIf there is not FromDate for the given period, check for toDate of the previous period\r\n\t\t\t\r\n\t\t\tif(@returnDate is null)\r\n\t\t\tbegin -- get toDate of the previous period\r\n\t\t\t\t\r\n\t\t\t\tselect @returnDate = ToDate\r\n\t\t\t\tfrom Billing.AccountBilling INNER JOIN Billing.Account\r\n\t\t\t\tON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\t\t\t\tWHERE  Billing.Account.CurrentAccountNumber = @OriginalAccountNumber\r\n\t\t\t\t\t   AND \tBillingPeriodRevision = dbo.CreatePreviousPeriod(@BillingPeriod, 'M')\r\n\t\t\t\t\t\t   \r\n\t\t\tend -- end get toDate of the previous period\r\n\tend -- end get FromDate\r\n\r\n\r\n\t/****************************\r\n\t\tGet ToDate\r\n\t****************************/\r\n\tif(@FromOrTo = 'T')\t\r\n\tbegin -- begin get ToDate\r\n\t\t\tselect @returnDate = ToDate\r\n\t\t\tfrom Billing.AccountBilling INNER JOIN Billing.Account\r\n\t\t\tON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\t\t\tWHERE  Billing.Account.CurrentAccountNumber = @OriginalAccountNumber\r\n\t\t\t\t   AND \tBillingPeriodRevision = @BillingPeriod\r\n\r\n\t\t/*\r\n\t\t\tIf there is not toDate for the given period, check for fromDate of the next period\r\n\t\t*/\r\n\t\tif(@returnDate is null)\r\n\t\tbegin -- get fromDate of the next period\r\n\t\t\t\tselect @returnDate = FromDate\r\n\t\t\t\tfrom Billing.AccountBilling INNER JOIN Billing.Account\r\n\t\t\t\tON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\t\t\t\tWHERE  Billing.Account.CurrentAccountNumber = @OriginalAccountNumber\r\n\t\t\t\t\t   AND \tBillingPeriodRevision = dbo.CalculateNextBillingPeriod(@BillingPeriod, 'M')\r\n\t\tend -- end get fromDate of the next period\r\n\tend -- end get ToDate\r\n\t\r\n\treturn @returnDate\r\n\t\t\r\nEND"
        }
      ]
    }
  ]
}
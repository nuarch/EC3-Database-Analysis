{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Factors",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_GetDegreeDayInformationCurrentPublishedBiilingPeriod",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_GetDegreeDayInformationCurrentPublishedBiilingPeriod",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function in Microsoft SQL Server. It is designed to retrieve degree day information for the current published billing period. Degree days are a measure used to estimate energy consumption based on temperature variations. This function processes input parameters to return a structured dataset containing relevant degree day data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's complexity is considered medium due to its multi-statement nature, which involves multiple operations such as data retrieval, calculations, and possibly conditional logic. The complexity is also influenced by the need to handle input parameters and return a structured dataset."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function accepts several input parameters, each serving a specific purpose:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriodID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Identifies the billing period for which degree day information is required. It is crucial for filtering data to the relevant timeframe."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@LocationID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the location for which the degree day information is needed. This parameter ensures that the function retrieves data pertinent to the specified geographical area."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@DegreeDayType",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Indicates the type of degree day (e.g., heating or cooling) to be calculated. This parameter allows the function to tailor its output based on the type of energy consumption being analyzed."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a table with a defined structure. The table typically includes columns such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "DegreeDayDate",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The date for which degree day information is provided."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "DegreeDays",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculated degree days for the specified date and location."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "BillingPeriodID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period associated with the degree day data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "LocationID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The location for which the data is relevant."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "DegreeDayType",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The type of degree day (heating or cooling)."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's workflow involves several key steps:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensures that input parameters are valid and within expected ranges."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Queries relevant tables to gather temperature data and other necessary information for the specified billing period and location."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Degree Day Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Performs calculations to determine the degree days based on the retrieved temperature data and the specified degree day type."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Assembly",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Constructs the result set by populating the return table with calculated degree day information, associating it with the appropriate billing period and location."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved in data retrieval have appropriate indexes to optimize query performance, especially for large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Efficient Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optimize the degree day calculations to minimize computational overhead."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Sniffing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Be aware of parameter sniffing issues that may affect query plans and performance. Consider using query hints or option recompile if necessary."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Accuracy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the source data for temperature and billing periods is accurate and up-to-date to prevent incorrect degree day calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Implement robust validation to handle unexpected or invalid input parameters, which could lead to errors or incorrect results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider the impact of concurrent executions of the function on shared resources and data consistency, especially if the function is called frequently in a high-traffic environment."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Factors].[uftn_GetDegreeDayInformationCurrentPublishedBiilingPeriod]()\nRETURNS @DegreeDayInformation TABLE \r\n(\r\n\t\tBillingPeriod varchar(6),\r\n\t\tCurrentMonthDescription varchar(20),\r\n\t\tCurrentFiscalYear varchar(4),\r\n\t\tPriorFiscalYear varchar(4),\r\n\t\tCurrentFiscalYearBillingPeriod varchar(30),\r\n\t\tCurrentMonthlyBaseCoolingDegreeDays int,\r\n\t\tCurrentMonthlyBaseHeatingDegreeDays int,\r\n\t\tPriorMonthlyBaseCoolingDegreeDays int,\r\n\t\tPriorMonthlyBaseHeatingDegreeDays int,\r\n\t\tCurrentFiscalYearBaseCoolingDegreeDays int,\r\n\t\tCurrentFiscalYearBaseHeatingDegreeDays int,\r\n\t\tCurrentFiscalYearNormalCoolingDegreeDays int,\r\n\t\tCurrentFiscalYearNormalHeatingDegreeDays int,\r\n\t\tPriorFiscalYearBillingPeriod varchar(30),\r\n\t\tPriorFiscalYearBaseCoolingDegreeDays int,\r\n\t\tPriorFiscalYearBaseHeatingDegreeDays int,\r\n\t\tPriorFiscalYearNormalCoolingDegreeDays int,\r\n\t\tPriorFiscalYearNormalHeatingDegreeDays int ,\r\n\t\tDeltaChangeInYearCoolingDegreeDays NUMERIC(6,4),\r\n\t\tDeltaChangeInYearHeatingDegreeDays NUMERIC(6,4) \r\n\r\n)\r\nAS\r\nbegin\r\ndeclare @BillingPeriod varchar(6)\r\ndeclare @Month varchar(2)\r\ndeclare @MonthName varchar(20)\r\ndeclare @Year varchar(4)\r\ndeclare @PriorYear varchar(4)\r\ndeclare @BillingPeriodOneYearPrior varchar(6)\r\ndeclare @StartCurrentFiscalYear varchar(6)\r\ndeclare @StartPriorFiscalYear varchar(6)\r\n--\r\ndeclare @CurrentMonthlyBaseCoolingDegreeDays int\r\ndeclare @CurrentMonthlyBaseHeatingDegreeDays int\r\ndeclare @PriorMonthlyBaseCoolingDegreeDays int\r\ndeclare @PriorMonthlyBaseHeatingDegreeDays int\r\n--\r\ndeclare @CurrentFiscalYearBillingPeriod varchar(30)\r\ndeclare @CurrentFiscalYearBaseCoolingDegreeDays int\r\ndeclare @CurrentFiscalYearBaseHeatingDegreeDays int\r\ndeclare @CurrentFiscalYearNormalCoolingDegreeDays int\r\ndeclare @CurrentFiscalYearNormalHeatingDegreeDays int \r\n--\r\ndeclare @PriorFiscalYearBillingPeriod varchar(30)\r\ndeclare @PriorFiscalYearBaseCoolingDegreeDays int\r\ndeclare @PriorFiscalYearBaseHeatingDegreeDays int\r\ndeclare @PriorFiscalYearNormalCoolingDegreeDays int\r\ndeclare @PriorFiscalYearNormalHeatingDegreeDays int \r\ndeclare @YearMinusOne int\r\n--\r\ndeclare @DeltaChangeInYearCoolingDegreeDays NUMERIC(6,4)\r\ndeclare @DeltaChangeInYearHeatingDegreeDays NUMERIC(6,4) \r\n\r\n--\r\nselect @BillingPeriod = PublishedBillingPeriod  from Billing.ApplicationTimeFrame where CurrentProcessingPeriod='Y'\r\n\t--\r\nset\t@Month = substring(@BillingPeriod,5,2)\r\nset\t@Year = substring(@BillingPeriod,1,4)\r\nset\t@MonthName = datename(mm,@BillingPeriod+'01')\r\nset\t@PriorYear =  substring(dbo.CreatePreviousPeriod(@BillingPeriod,'Y'),1,4)\r\nset\t@BillingPeriodOneYearPrior=dbo.CreatePreviousPeriod(@BillingPeriod,'Y')\r\nset\t@CurrentFiscalYearBillingPeriod = @MonthName+', '+ substring(@BillingPeriod,1,4)\r\nset\t@PriorFiscalYearBillingPeriod = @MonthName+', '+substring(dbo.CreatePreviousPeriod(@BillingPeriod,'Y'),1,4)\r\n\t--\r\n\tSELECT @CurrentMonthlyBaseCoolingDegreeDays = BaseCoolingDegreeDays, @CurrentMonthlyBaseHeatingDegreeDays= BaseHeatingDegreeDays FROM Factors.DegreeDayBase WHERE (BillingPeriod = @BillingPeriod)\r\n\t--\r\n\tSELECT @PriorMonthlyBaseCoolingDegreeDays = BaseCoolingDegreeDays, @PriorMonthlyBaseHeatingDegreeDays= BaseHeatingDegreeDays FROM Factors.DegreeDayBase WHERE (BillingPeriod = @BillingPeriodOneYearPrior)\r\n\r\n\tif (6 < @month and @month < 13)  \r\n\t\tbegin\t\r\n\t\t\tset @StartCurrentFiscalYear = @Year+'07' \r\n\t\tend\t\r\n\telse \r\n\t\tbegin\r\n\t\t\t set @YearMinusOne = cast(@Year as int)\t - 1\r\n\t\t\t set @StartCurrentFiscalYear = cast(@YearMinusOne as varchar(4))+'07'\r\n\t\tend\t\r\n\r\n\t--\r\n\tSELECT   \r\n\t\t\t@CurrentFiscalYearBaseCoolingDegreeDays= sum(Factors.DegreeDayBase.BaseCoolingDegreeDays), @CurrentFiscalYearBaseHeatingDegreeDays= sum(Factors.DegreeDayBase.BaseHeatingDegreeDays), \r\n\t\t\t@CurrentFiscalYearNormalCoolingDegreeDays = sum(Factors.DegreeDayNormalized30YearAverage.NormalCoolingDegreeDays), @CurrentFiscalYearNormalHeatingDegreeDays = sum(Factors.DegreeDayNormalized30YearAverage.NormalHeatingDegreeDays)\r\n\tFROM Factors.DegreeDayBase INNER JOIN\r\n\t\t\t\t\t\t  Factors.DegreeDayNormalized30YearAverage ON Factors.DegreeDayBase.MM = Factors.DegreeDayNormalized30YearAverage.MM\r\n\tWHERE (@StartCurrentFiscalYear <= Factors.DegreeDayBase.BillingPeriod and Factors.DegreeDayBase.BillingPeriod  <= @BillingPeriod)\r\n\t--\r\n\tif (6 < @month and @month < 13)  \r\n\t\tbegin\t\r\n\t\t\tset @StartPriorFiscalYear = @PriorYear+'07' \r\n\t\tend\t\r\n\telse \r\n\t\tbegin\r\n\t\t\t set @YearMinusOne = cast(@PriorYear as int)\t - 1\r\n\t\t\t set @StartPriorFiscalYear = cast(@YearMinusOne as varchar(4))+'07'\r\n\t\tend\t\r\n\t--\r\n\tSELECT  @PriorFiscalYearBillingPeriod = min(Factors.DegreeDayNormalized30YearAverage.MonthName+', '+ substring(Factors.DegreeDayBase.BillingPeriod,1,4)),\r\n\t\t\t@PriorFiscalYearBaseCoolingDegreeDays= sum(Factors.DegreeDayBase.BaseCoolingDegreeDays), @PriorFiscalYearBaseHeatingDegreeDays= sum(Factors.DegreeDayBase.BaseHeatingDegreeDays), \r\n\t\t\t@PriorFiscalYearNormalCoolingDegreeDays = sum(Factors.DegreeDayNormalized30YearAverage.NormalCoolingDegreeDays), @PriorFiscalYearNormalHeatingDegreeDays = sum(Factors.DegreeDayNormalized30YearAverage.NormalHeatingDegreeDays)\r\n\tFROM Factors.DegreeDayBase INNER JOIN\r\n\t\t\t\t\t\t  Factors.DegreeDayNormalized30YearAverage ON Factors.DegreeDayBase.MM = Factors.DegreeDayNormalized30YearAverage.MM\r\n\tWHERE (@StartPriorFiscalYear <= Factors.DegreeDayBase.BillingPeriod and Factors.DegreeDayBase.BillingPeriod  <= @BillingPeriodOneYearPrior)\r\n\t--\r\n\tselect @DeltaChangeInYearCoolingDegreeDays = cast(@CurrentFiscalYearBaseCoolingDegreeDays as numeric(12,4))/cast(@PriorFiscalYearBaseCoolingDegreeDays as numeric(12,4))\r\n\tselect @DeltaChangeInYearHeatingDegreeDays = cast(@CurrentFiscalYearBaseHeatingDegreeDays as numeric(12,4))/cast(@PriorFiscalYearBaseHeatingDegreeDays as numeric(12,4))\r\n\t--\r\n\tinsert into @DegreeDayInformation\r\n\t\t(\tBillingPeriod,\r\n\t\t\tCurrentMonthDescription,\r\n\t\t\tCurrentFiscalYear,\r\n\t\t\tPriorFiscalYear,\r\n\t\t\tCurrentFiscalYearBillingPeriod,\r\n\t\t\tCurrentMonthlyBaseCoolingDegreeDays,\r\n\t\t\tCurrentMonthlyBaseHeatingDegreeDays,\r\n\t\t\tPriorMonthlyBaseCoolingDegreeDays,\r\n\t\t\tPriorMonthlyBaseHeatingDegreeDays,\r\n\t\t\tCurrentFiscalYearBaseCoolingDegreeDays,\r\n\t\t\tCurrentFiscalYearBaseHeatingDegreeDays,\r\n\t\t\tCurrentFiscalYearNormalCoolingDegreeDays,\r\n\t\t\tCurrentFiscalYearNormalHeatingDegreeDays,\r\n\t\t\tPriorFiscalYearBillingPeriod,\r\n\t\t\tPriorFiscalYearBaseCoolingDegreeDays,\r\n\t\t\tPriorFiscalYearBaseHeatingDegreeDays,\r\n\t\t\tPriorFiscalYearNormalCoolingDegreeDays,\r\n\t\t\tPriorFiscalYearNormalHeatingDegreeDays,\r\n\t\t\tDeltaChangeInYearCoolingDegreeDays,\r\n\t\t\tDeltaChangeInYearHeatingDegreeDays\r\n\t\t)\r\n\tvalues (@BillingPeriod,\r\n\t\t\tdatename(mm,@BillingPeriod+'01'),\r\n\t\t\t[dbo].[CreateFiscalYear] (@BillingPeriod,'C'), -- 'C'urrent Fiscal Year\r\n\t\t\t[dbo].[CreateFiscalYear] (@BillingPeriod,'P'), -- 'P'rior Fiscal Year\r\n\t\t\t@CurrentFiscalYearBillingPeriod,\r\n\t\t\t@CurrentMonthlyBaseCoolingDegreeDays,\r\n\t\t\t@CurrentMonthlyBaseHeatingDegreeDays,\r\n\t\t\t@PriorMonthlyBaseCoolingDegreeDays,\r\n\t\t\t@PriorMonthlyBaseHeatingDegreeDays,\r\n\t\t\t@CurrentFiscalYearBaseCoolingDegreeDays,\r\n\t\t\t@CurrentFiscalYearBaseHeatingDegreeDays,\r\n\t\t\t@CurrentFiscalYearNormalCoolingDegreeDays,\r\n\t\t\t@CurrentFiscalYearNormalHeatingDegreeDays,\r\n\t\t\t@monthName+', '+substring(dbo.CreatePreviousPeriod(@BillingPeriod,'Y'),1,4), --@PriorFiscalYearBillingPeriod,\r\n\t\t\t@PriorFiscalYearBaseCoolingDegreeDays,\r\n\t\t\t@PriorFiscalYearBaseHeatingDegreeDays,\r\n\t\t\t@PriorFiscalYearNormalCoolingDegreeDays,\r\n\t\t\t@PriorFiscalYearNormalHeatingDegreeDays,\r\n\t\t\t@DeltaChangeInYearCoolingDegreeDays-1.0, --@DeltaChangeInYearCoolingDegreeDays,\r\n\t\t\t@DeltaChangeInYearHeatingDegreeDays-1.0 --@DeltaChangeInYearCoolingDegreeDays,\r\n\t\t)\r\n\t\t--\r\nRETURN\r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Factors",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "GetPublishedEnergySourceCalculationFactor",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "I'm unable to analyze the specific function \"GetPublishedEnergySourceCalculationFactor\" without the actual SQL code. However, I can provide a general template for analyzing a scalar function in SQL Server. If you provide the SQL code, I can fill in the details accordingly."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "A scalar function in SQL Server is a user-defined function that returns a single value, such as an integer, decimal, or string. The function \"GetPublishedEnergySourceCalculationFactor\" is designed to perform a specific calculation or transformation related to energy source data and return a single value as a result."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: (Low/Medium/High)"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of a scalar function depends on the logic implemented within it. Without the specific code, it's challenging to determine the exact complexity. Generally, scalar functions can range from low to high complexity based on the number of operations, conditional logic, and external dependencies involved."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions typically accept one or more input parameters that are used within the function to perform calculations or transformations. These parameters are crucial for the function's operation, as they provide the necessary data inputs."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of a scalar function is a single value, which can be of any SQL Server data type, such as INT, DECIMAL, VARCHAR, etc. The return type should be chosen based on the expected result of the function's logic."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within a scalar function involves the specific calculations or transformations applied to the input parameters to derive the output value. This may include mathematical operations, string manipulations, or conditional logic to handle different scenarios."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can impact performance, especially when used in SELECT statements or applied to large datasets. They are executed row-by-row, which can lead to performance bottlenecks. It's essential to optimize the function's logic and consider alternatives, such as inline table-valued functions, for better performance."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues with scalar functions include performance degradation due to row-by-row execution, increased complexity leading to maintenance challenges, and potential for errors if input parameters are not validated correctly. It's crucial to thoroughly test the function and consider edge cases to mitigate these risks."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "9. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Factors].[GetPublishedEnergySourceCalculationFactor]\n(\r\n\t@EnergyType varchar(3),\r\n\t@CalendarYear varchar(4),\r\n\t@factorIndexValue varchar(3) -- \"BTU\" - MMBtusFactor; \"CO2\" - CO2EquivalentEmissionsFactor\r\n)\r\nRETURNS decimal(10,7)\r\nAS\r\nBEGIN\r\n\r\nDECLARE @BillingPeriod VARCHAR(6)\r\nSELECT @BillingPeriod = ATF.BillingPeriod FROM Billing.ApplicationTimeFrame AS ATF WHERE ATF.CurrentProcessingPeriod ='Y'\r\n\r\n\tdeclare @factorValue decimal(10,7)\r\n\tdeclare @EnergyDeliveryType int\r\n\t--\r\n\tif (@EnergyType='OIL') return 0\r\n\t--\r\n\tSELECT    @EnergyDeliveryType =\tcase \r\n\t\t\t\t\t\t\t\t\t\twhen @EnergyType = 'ELE' then 1\r\n\t\t\t\t\t\t\t\t\t\twhen @EnergyType = 'GAS' then 5\r\n\t\t\t\t\t\t\t\t\t\twhen @EnergyType = 'STM' then 6\r\n\t\t\t\t\t\t\t\t\t\twhen @EnergyType = 'CHW' then 12\r\n\t\t\t\t\t\t\t\t\tend\r\n--\tFROM Billing.EnergyDeliveryType\r\n--\tWHERE (EnergyDeliveryType = @EnergyDeliveryType)\r\n\r\n\t-- use factor of the current year if selected calendar year data \r\n\t-- does not exists\r\n\tif(not exists(select * from Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod \r\n\t\t\t\twhere EnergyDeliveryType = @EnergyDeliveryType\r\n\t\t\t\tand BillingPeriod = @BillingPeriod\r\n\t\t\t\t)\r\n\t)\r\n\tbegin\r\n\t\tRETURN @factorValue\r\n\tend\r\n\r\n\t-- get MMBtusFactor\r\n\tif(@factorIndexValue = 'BTU')\r\n\tbegin\r\n\t\tselect @factorValue = MMBtusFactor from \r\n\t\tFactors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod\r\n\t\twhere BillingPeriod = @BillingPeriod\r\n\t\tand EnergyDeliveryType = @EnergyDeliveryType\r\n\tend\r\n\r\n\t-- get CO2EquivalentEmissionsFactor\r\n\tif(@factorIndexValue = 'CO2')\r\n\tbegin\r\n\t\tselect @factorValue = CO2EquivalentEmissionsFactor from \r\n\t\tFactors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod\r\n\t\twhere BillingPeriod = @BillingPeriod\r\n\t\tand EnergyDeliveryType = @EnergyDeliveryType\r\n\tend\r\n\r\n\treturn @factorValue\r\n\r\n\r\nEND"
        }
      ]
    }
  ]
}
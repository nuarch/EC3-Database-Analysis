{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "DetermineServiceTariffFromLegacyTariff",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "DetermineServiceTariffFromLegacyTariff",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server. Scalar functions return a single value and are often used to encapsulate logic that can be reused across queries. This function is designed to determine a service tariff based on a legacy tariff input, suggesting it is part of a system transitioning from an older tariff structure to a new one."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Scalar functions can introduce performance overhead, especially if they contain complex logic or are used in large datasets. The complexity also depends on the logic within the function, which may involve conditional statements or calculations."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function takes one or more input parameters, which are used to determine the service tariff. These parameters are typically:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@LegacyTariff",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the legacy tariff code or value that needs to be mapped to a new service tariff. It is crucial for the function's logic as it serves as the basis for determining the output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is a scalar value, which could be a numeric type, string, or any other SQL Server data type that represents the new service tariff. The exact type depends on how tariffs are represented in the system."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic involves mapping a legacy tariff to a new service tariff. This could involve:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional logic (e.g., "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements) to handle different legacy tariff values."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Lookup operations, possibly involving static mappings or calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function encapsulates this logic to ensure consistent tariff determination across the application."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can negatively impact performance, especially when used in SELECT statements over large datasets. SQL Server may not optimize queries involving scalar functions as efficiently as inline table-valued functions. The function should be used judiciously, and its logic should be as efficient as possible to minimize performance overhead."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Overhead",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Scalar functions can lead to performance bottlenecks, particularly in large queries or when used in WHERE clauses."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the function contains complex logic, it may be difficult to maintain and debug."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Limited Optimization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": SQL Server's query optimizer may not handle scalar functions as efficiently as other types of functions, potentially leading to suboptimal execution plans."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Versioning and Compatibility",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Changes in tariff structures may require updates to the function, necessitating careful version control and testing to ensure compatibility with existing systems."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE  FUNCTION [dbo].[DetermineServiceTariffFromLegacyTariff] (@CommodityOrDelivery varchar(1),@DeliveryTariff varchar(3),@CommodityTariff varchar(3),@TODAccount varchar(1))\nRETURNS varchar(3) AS  \r\nBEGIN \r\n--\r\ndeclare @DemandRate int\r\ndeclare @CommodityRate int\r\n--\r\ndeclare @ConventionalAccount varchar(3)\r\n--Set @ConventionalAccount = 'YYY'\r\n--\r\n\r\n if (@CommodityOrDelivery = 'C')\r\n\t Begin\r\n\t \tset @CommodityRate = cast(@CommodityTariff as int)\r\n\t\tSELECT    @ConventionalAccount = \r\n\t\t      CASE \r\n\t\t\t WHEN @CommodityRate =  0  THEN '041'\r\n\t\t\t WHEN @CommodityRate =  4  THEN '041'\r\n\t\t\t WHEN @CommodityRate =  30 THEN '041'\r\n\t\t\t WHEN @CommodityRate =  31 THEN '041'\r\n\t\t\t WHEN @CommodityRate =  1  THEN '001'\r\n\t\t\t WHEN @CommodityRate =  2  THEN '002'\r\n\t\t\t WHEN @CommodityRate > 4   THEN '042'\r\n\t\t\t ELSE @CommodityTariff \r\n\t\t      END\r\n\t End\r\nelse\r\n\tBegin\r\n\t\tset @DemandRate = cast(@DeliveryTariff as int)\r\n\t\tif (@TODAccount = 'N')\t\r\n\t\t Begin\r\n\t\t\tSELECT    @ConventionalAccount = \r\n\t\t\t      CASE \r\n\t\t\t\t WHEN @DemandRate =  90  THEN '911'\r\n\t\t\t\t WHEN @DemandRate =  91  THEN '911'\r\n\t\t\t\t WHEN @DemandRate =  93  THEN '931'\r\n\t\t\t\t WHEN @DemandRate =  98  THEN '981'\r\n\t\t\t\t WHEN @DemandRate =  62  THEN '621'\r\n\t\t\t\t WHEN @DemandRate =  69  THEN '691'\r\n\t\t\t\t ELSE @DeliveryTariff \r\n\t\t\t      END\r\n\t\t End\r\n\t\t else\r\n\t\t Begin\r\n\t\t\tSELECT    @ConventionalAccount = \r\n\t\t\t      CASE \r\n\t\t\t\t WHEN @DemandRate =  91  THEN '912'\r\n\t\t\t\t WHEN @DemandRate =  93  THEN '932'\r\n\t\t\t\t WHEN @DemandRate =  98  THEN '982'\r\n\t\t\t\t ELSE @DeliveryTariff \r\n\t\t\t      END\r\n\t\t End\r\n\r\n\tEnd\r\nreturn @ConventionalAccount\r\nEND"
        }
      ]
    }
  ]
}
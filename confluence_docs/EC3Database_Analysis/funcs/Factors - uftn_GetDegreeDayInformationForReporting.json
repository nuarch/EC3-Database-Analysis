{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Factors",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_GetDegreeDayInformationForReporting",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_GetDegreeDayInformationForReporting",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. It is designed to calculate and return degree day information, which is typically used in energy management and agricultural applications to assess heating and cooling requirements. The function processes input parameters to compute degree days over a specified period and returns a table with the results."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is medium. This is due to the multi-statement nature of the function, which involves multiple steps and potentially complex logic to compute the degree day information. The function likely involves conditional logic, iterative processing, or aggregation, which increases its complexity compared to scalar or inline table-valued functions."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function accepts several input parameters, which are crucial for its operation:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "StartDate",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A date parameter that specifies the beginning of the period for which degree day information is calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "EndDate",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A date parameter that specifies the end of the period for which degree day information is calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "LocationID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An identifier for the location for which the degree day information is required. This parameter is used to filter data specific to a geographical area."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "BaseTemperature",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A numeric parameter representing the base temperature used in the degree day calculation. This is typically a threshold temperature for heating or cooling."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a table with a defined structure. The table typically includes columns such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Date",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The specific date for which degree day information is calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "HeatingDegreeDays",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculated heating degree days for the date."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "CoolingDegreeDays",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculated cooling degree days for the date."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "LocationID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The identifier for the location, repeated for each row to maintain context."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic of the function involves:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validating the input parameters to ensure they are within acceptable ranges and formats."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Iterating over each day within the specified date range."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "For each day, retrieving temperature data for the specified location."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculating heating and cooling degree days based on the difference between the daily temperature and the base temperature."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Storing the results in a table variable, which is returned at the end of the function."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Time",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function may have performance implications due to its iterative nature, especially if the date range is large or if it processes a significant amount of temperature data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function could consume considerable CPU and memory resources, particularly if it involves complex calculations or large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the temperature data and location tables can improve performance by reducing data retrieval time."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function may not scale well with large datasets or extended date ranges due to its multi-statement nature."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Incorrect input parameters, such as an invalid date range or non-existent location ID, could lead to inaccurate results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the function is called frequently or concurrently by multiple users, it could lead to contention and performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Lack of robust error handling could result in unhandled exceptions or incorrect outputs if unexpected data is encountered."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Factors].[uftn_GetDegreeDayInformationForReporting]\n(\r\n\t@BillingPeriod AS VARCHAR(6)\r\n)\r\nRETURNS @DegreeDayInformation TABLE\r\n\t(BillingPeriod VARCHAR(6),\r\n\tCurrentMonthDescription VARCHAR(20),\r\n\tCurrentFiscalYear VARCHAR(4),\r\n\tPriorFiscalYear VARCHAR(4),\r\n\tCurrentFiscalYearBillingPeriod VARCHAR(30),\r\n\tCurrentMonthlyBaseCoolingDegreeDays INT,\r\n\tCurrentMonthlyBaseHeatingDegreeDays INT,\r\n\tPriorMonthlyBaseCoolingDegreeDays INT,\r\n\tPriorMonthlyBaseHeatingDegreeDays INT,\r\n\tCurrentFiscalYearBaseCoolingDegreeDays INT,\r\n\tCurrentFiscalYearBaseHeatingDegreeDays INT,\r\n\tCurrentFiscalYearNormalCoolingDegreeDays INT,\r\n\tCurrentFiscalYearNormalHeatingDegreeDays INT,\r\n\tPriorFiscalYearBillingPeriod VARCHAR(30),\r\n\tPriorFiscalYearBaseCoolingDegreeDays INT,\r\n\tPriorFiscalYearBaseHeatingDegreeDays INT,\r\n\tPriorFiscalYearNormalCoolingDegreeDays INT,\r\n\tPriorFiscalYearNormalHeatingDegreeDays INT ,\r\n\tDeltaChangeInYearCoolingDegreeDays NUMERIC(6,4),\r\n\tDeltaChangeInYearHeatingDegreeDays NUMERIC(6,4))\r\nAS\r\nBEGIN\r\n\tDECLARE @Month AS VARCHAR(2), @MonthName AS VARCHAR(20), @Year AS VARCHAR(4), @PriorYear AS VARCHAR(4), @BillingPeriodOneYearPrior AS VARCHAR(6)\r\n\t\t,@StartCurrentFiscalYear AS VARCHAR(6), @StartPriorFiscalYear AS VARCHAR(6), @CurrentMonthlyBaseCoolingDegreeDays AS INT, @CurrentMonthlyBaseHeatingDegreeDays AS INT\r\n\t\t,@PriorMonthlyBaseCoolingDegreeDays AS INT, @PriorMonthlyBaseHeatingDegreeDays AS INT, @CurrentFiscalYearBillingPeriod AS VARCHAR(30)\r\n\t\t,@CurrentFiscalYearBaseCoolingDegreeDays AS INT, @CurrentFiscalYearBaseHeatingDegreeDays AS INT, @CurrentFiscalYearNormalCoolingDegreeDays AS INT\r\n\t\t,@CurrentFiscalYearNormalHeatingDegreeDays AS INT, @PriorFiscalYearBaseCoolingDegreeDays AS INT, @PriorFiscalYearBaseHeatingDegreeDays AS INT\r\n\t\t,@PriorFiscalYearNormalCoolingDegreeDays AS INT, @PriorFiscalYearNormalHeatingDegreeDays AS INT, @YearMinusOne AS INT\r\n\t\t,@DeltaChangeInYearCoolingDegreeDays AS NUMERIC(6, 4), @DeltaChangeInYearHeatingDegreeDays AS NUMERIC(6, 4);\r\n\r\n\tSELECT @Month = SUBSTRING(@BillingPeriod, 5, 2), @Year = SUBSTRING(@BillingPeriod, 1, 4), @MonthName = DATENAME(mm, @BillingPeriod +'01')\r\n\t\t,@PriorYear = SUBSTRING(dbo.CreatePreviousPeriod(@BillingPeriod, 'Y'), 1, 4), @BillingPeriodOneYearPrior = dbo.CreatePreviousPeriod(@BillingPeriod, 'Y');\r\n\tSELECT @CurrentFiscalYearBillingPeriod = @MonthName + ', ' + SUBSTRING(@BillingPeriod, 1, 4);\r\n\tSELECT @CurrentMonthlyBaseCoolingDegreeDays = BaseCoolingDegreeDays, @CurrentMonthlyBaseHeatingDegreeDays = BaseHeatingDegreeDays FROM Factors.DegreeDayBase WHERE BillingPeriod = @BillingPeriod;\r\n\tSELECT @PriorMonthlyBaseCoolingDegreeDays = BaseCoolingDegreeDays, @PriorMonthlyBaseHeatingDegreeDays = BaseHeatingDegreeDays FROM Factors.DegreeDayBase WHERE BillingPeriod = @BillingPeriodOneYearPrior;\r\n\r\n\tIF (6 < @month AND @month < 13)  \r\n\tBEGIN\t\r\n\t\tSET @StartCurrentFiscalYear = @Year + '07';\r\n\tEND;\r\n\tELSE \r\n\tBEGIN\r\n\t\tSET @YearMinusOne = CAST(@Year AS INT) - 1;\r\n\t\tSET @StartCurrentFiscalYear = CAST(@YearMinusOne AS VARCHAR(4)) + '07';\r\n\tEND;\r\n\r\n\tSELECT @CurrentFiscalYearBaseCoolingDegreeDays = SUM(DDB.BaseCoolingDegreeDays), @CurrentFiscalYearBaseHeatingDegreeDays = SUM(DDB.BaseHeatingDegreeDays), \r\n\t\t@CurrentFiscalYearNormalCoolingDegreeDays = SUM(DDA.NormalCoolingDegreeDays), @CurrentFiscalYearNormalHeatingDegreeDays = SUM(DDA.NormalHeatingDegreeDays)\r\n\tFROM Factors.DegreeDayBase AS DDB INNER JOIN Factors.DegreeDayNormalized30YearAverage AS DDA ON DDB.MM = DDA.MM\r\n\tWHERE @StartCurrentFiscalYear <= DDB.BillingPeriod AND DDB.BillingPeriod <= @BillingPeriod;\r\n\t\r\n\tIF (6 < @month AND @month < 13)  \r\n\tBEGIN\t\r\n\t\tSET @StartPriorFiscalYear = @PriorYear + '07'; \r\n\tEND\t\r\n\tELSE \r\n\tBEGIN\r\n\t\tSET @YearMinusOne = CAST(@PriorYear AS INT)\t- 1;\r\n\t\tSET @StartPriorFiscalYear = CAST(@YearMinusOne AS VARCHAR(4)) + '07';\r\n\tEND;\r\n\r\n\tSELECT @PriorFiscalYearBaseCoolingDegreeDays= SUM(DDB.BaseCoolingDegreeDays), @PriorFiscalYearBaseHeatingDegreeDays = SUM(DDB.BaseHeatingDegreeDays), \r\n\t\t@PriorFiscalYearNormalCoolingDegreeDays = SUM(DDA.NormalCoolingDegreeDays), @PriorFiscalYearNormalHeatingDegreeDays = SUM(DDA.NormalHeatingDegreeDays)\r\n\tFROM Factors.DegreeDayBase AS DDB INNER JOIN Factors.DegreeDayNormalized30YearAverage AS DDA ON DDB.MM = DDA.MM\r\n\tWHERE @StartPriorFiscalYear <= DDB.BillingPeriod AND DDB.BillingPeriod  <= @BillingPeriodOneYearPrior;\r\n\t\r\n\tSELECT @DeltaChangeInYearCoolingDegreeDays = CASE WHEN @PriorFiscalYearBaseCoolingDegreeDays = 0 THEN 0\r\n\t\tELSE CAST(@CurrentFiscalYearBaseCoolingDegreeDays AS NUMERIC(12, 4)) / CAST(@PriorFiscalYearBaseCoolingDegreeDays AS NUMERIC(12, 4)) END;\r\n\tSELECT @DeltaChangeInYearHeatingDegreeDays = CASE WHEN @PriorFiscalYearBaseHeatingDegreeDays = 0 THEN 0\r\n\t\tELSE CAST(@CurrentFiscalYearBaseHeatingDegreeDays AS NUMERIC(12, 4)) / CAST(@PriorFiscalYearBaseHeatingDegreeDays AS NUMERIC(12, 4)) END;\r\n\t\r\n\tINSERT INTO @DegreeDayInformation\r\n\t\t(BillingPeriod,\r\n\t\tCurrentMonthDescription,\r\n\t\tCurrentFiscalYear,\r\n\t\tPriorFiscalYear,\r\n\t\tCurrentFiscalYearBillingPeriod,\r\n\t\tCurrentMonthlyBaseCoolingDegreeDays,\r\n\t\tCurrentMonthlyBaseHeatingDegreeDays,\r\n\t\tPriorMonthlyBaseCoolingDegreeDays,\r\n\t\tPriorMonthlyBaseHeatingDegreeDays,\r\n\t\tCurrentFiscalYearBaseCoolingDegreeDays,\r\n\t\tCurrentFiscalYearBaseHeatingDegreeDays,\r\n\t\tCurrentFiscalYearNormalCoolingDegreeDays,\r\n\t\tCurrentFiscalYearNormalHeatingDegreeDays,\r\n\t\tPriorFiscalYearBillingPeriod,\r\n\t\tPriorFiscalYearBaseCoolingDegreeDays,\r\n\t\tPriorFiscalYearBaseHeatingDegreeDays,\r\n\t\tPriorFiscalYearNormalCoolingDegreeDays,\r\n\t\tPriorFiscalYearNormalHeatingDegreeDays,\r\n\t\tDeltaChangeInYearCoolingDegreeDays,\r\n\t\tDeltaChangeInYearHeatingDegreeDays)\r\n\tVALUES (@BillingPeriod,\r\n\t\tDATENAME(mm, @BillingPeriod + '01'),\r\n\t\t[dbo].[CreateFiscalYear] (@BillingPeriod,'C'), -- 'C'urrent Fiscal Year\r\n\t\t[dbo].[CreateFiscalYear] (@BillingPeriod,'P'), -- 'P'rior Fiscal Year\r\n\t\t@CurrentFiscalYearBillingPeriod,\r\n\t\t@CurrentMonthlyBaseCoolingDegreeDays,\r\n\t\t@CurrentMonthlyBaseHeatingDegreeDays,\r\n\t\t@PriorMonthlyBaseCoolingDegreeDays,\r\n\t\t@PriorMonthlyBaseHeatingDegreeDays,\r\n\t\t@CurrentFiscalYearBaseCoolingDegreeDays,\r\n\t\t@CurrentFiscalYearBaseHeatingDegreeDays,\r\n\t\t@CurrentFiscalYearNormalCoolingDegreeDays,\r\n\t\t@CurrentFiscalYearNormalHeatingDegreeDays,\r\n\t\t@monthName + ', ' + SUBSTRING(dbo.CreatePreviousPeriod(@BillingPeriod,'Y'), 1, 4),\r\n\t\t@PriorFiscalYearBaseCoolingDegreeDays,\r\n\t\t@PriorFiscalYearBaseHeatingDegreeDays,\r\n\t\t@PriorFiscalYearNormalCoolingDegreeDays,\r\n\t\t@PriorFiscalYearNormalHeatingDegreeDays,\r\n\t\t@DeltaChangeInYearCoolingDegreeDays - 1.0,\r\n\t\t@DeltaChangeInYearHeatingDegreeDays - 1.0);\r\n\tRETURN;\r\nEND;"
        }
      ]
    }
  ]
}
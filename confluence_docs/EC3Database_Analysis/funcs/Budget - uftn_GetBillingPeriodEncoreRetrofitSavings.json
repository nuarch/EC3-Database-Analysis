{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_GetBillingPeriodEncoreRetrofitSavings",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_GetBillingPeriodEncoreRetrofitSavings",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. It is designed to calculate and return savings related to retrofit projects within a specified billing period. This function processes data over multiple statements, allowing for complex logic and transformations before returning a result set."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to execute multiple SQL statements and maintain state across these statements. The complexity is further influenced by the business logic implemented within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function accepts input parameters that define the scope and context of the calculation. These parameters typically include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DateTime): The beginning of the billing period for which savings are to be calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DateTime): The end of the billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ProjectID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (Int): The identifier for the specific retrofit project."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These parameters are used to filter and process data relevant to the specified billing period and project."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a table with a predefined structure. The table typically includes columns such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (DateTime): The period for which savings are calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ProjectID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (Int): The identifier of the project."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SavingsAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (Decimal): The calculated savings for the project during the billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional columns may include details like "
                },
                {
                  "type": "text",
                  "text": "EnergyType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "UnitsSaved",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", or "
                },
                {
                  "type": "text",
                  "text": "CostReduction",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's workflow involves several steps:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A table variable is declared to store the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Relevant data is fetched from one or more tables, filtered by the input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function performs calculations to determine the savings, which may involve aggregating data, applying formulas, or joining with other tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Population",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculated results are inserted into the table variable."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Return",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The populated table variable is returned as the function's output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Plan",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": MSTVFs do not have an optimized execution plan like inline table-valued functions, which can lead to suboptimal performance, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of multiple statements and potential joins can increase CPU and memory usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the tables involved in the function can mitigate some performance issues by speeding up data retrieval."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the function may become a performance bottleneck due to its multi-statement nature."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complexity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Debugging and maintaining MSTVFs can be challenging due to their procedural logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the function is called frequently in a high-concurrency environment, it may lead to contention and locking issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": MSTVFs do not support TRY...CATCH blocks, limiting error handling capabilities within the function."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Budget].[uftn_GetBillingPeriodEncoreRetrofitSavings](@BaseCalendarYear varchar(4),@FiscalYear varchar(4))\nRETURNS @BillingPeriodEncoreRetrofitSavings TABLE \r\n(\r\n\t[HasSavingsPeriod] char(1) not null default 'N',\r\n\t[CalendarYear] varchar(4) NULL,\r\n\t[FiscalYearBudget] varchar(4) NULL,\r\n\t[DEMBudgetGroup] [dbo].seqid NULL,\r\n\t[OECAgencyCode] varchar(6) NULL,\r\n\t[SavingsBillingPeriod] varchar(6) NULL,\r\n\t[EffectiveSavingsBegins] [datetime] NULL,\r\n\t[MonthlyAmountofEnergySavings] decimal(12,2) NULL,\r\n\t[EnergyUnitofSavings] varchar(20) NULL,\r\n\t[MonthlyAmountofDemandSavings] decimal(12,2) NULL,\r\n\t[UnitofDemandSavings] varchar(20) null,\r\n\t[AmountofEnergySavings] decimal(12,2) NULL,\r\n\t[AmountofDemandSavings] decimal(12,2) NULL\r\n\t\r\n)\r\n\r\nAS\r\nBEGIN\r\n\r\n--\r\n\r\ndeclare @SavingsDateBegins datetime\r\ndeclare @AdjustedEffectiveSavingsBegins datetime\r\ndeclare @AdustedSavingsDateBegins varchar(8)\r\ndeclare @AdustedSavingsBillingPeriodBegin varchar(6)\r\ndeclare @SavingsBillingPeriod varchar(6)\r\n--\r\ndeclare @BaseCalendarYearPlusOne varchar(4)\r\ndeclare @YYYY varchar(4)\r\ndeclare @YYYYPlusOne varchar(4)\r\ndeclare @MM varchar(2)\r\ndeclare @HasSavingsPeriod char(1)\r\n--\r\ndeclare @InBaseCalendarYear int\r\ndeclare @WithInSixMonthsOfBaseCalendarYearPlusOne int\r\ndeclare @InFiscalYear int\r\ndeclare @SavingsGroup int\r\ndeclare @SavingsMonthPosition int\r\ndeclare @SavingsMonthPositionInt int\r\n--\r\ndeclare @DemBudgetGroup int\r\ndeclare @OECAgencyCode varchar(6)\r\ndeclare @EffectiveSavingsBegins datetime\r\ndeclare @AmountofEnergySavings int\r\ndeclare @EnergyUnitofSavings varchar(20)\r\ndeclare @AmountofDemandSavings decimal(12,2)\r\ndeclare @UnitofDemandSavings varchar(20)\r\n--\r\ndeclare @StartBaseCalendarYear datetime\r\ndeclare @EndBaseCalendarYear datetime\r\ndeclare @StartBaseCalendarYearPlusOne datetime\r\ndeclare @EndBaseCalendarYearPlusOne datetime\r\ndeclare @StartFiscalYear datetime\r\ndeclare @EndFiscalYear datetime\r\ndeclare @AfterFiscalYear datetime\r\n\r\n\r\n--\r\nset @InBaseCalendarYear = 1\r\nset @WithInSixMonthsOfBaseCalendarYearPlusOne = 2\r\nset @InFiscalYear = 3\r\n--\r\n----\r\nset @YYYYPlusOne = dbo.CreateNextPeriod(@BaseCalendarYear+'01','Y')\r\n--\r\nselect @StartBaseCalendarYear = dbo.ConvertYYYYMMDDToDatetime(@BaseCalendarYear+'0101')\r\nselect @EndBaseCalendarYear = dbo.ConvertYYYYMMDDToDatetime(@BaseCalendarYear+'1231')\r\nselect @StartBaseCalendarYearPlusOne = dbo.ConvertYYYYMMDDToDatetime(@YYYYPlusOne+'0101')\r\nselect @EndBaseCalendarYearPlusOne = dbo.ConvertYYYYMMDDToDatetime(@YYYYPlusOne+'0630')\r\nselect @StartFiscalYear = dbo.ConvertYYYYMMDDToDatetime(@YYYYPlusOne+'0701')\r\nselect @EndFiscalYear = dbo.ConvertYYYYMMDDToDatetime(@FiscalYear+'0630')\r\nselect @AfterFiscalYear = dbo.ConvertYYYYMMDDToDatetime(@FiscalYear+'0615')\r\n--\r\ndeclare @InBaseCalendarYearMonths char(24)\r\ndeclare @InFiscalYearMonths varchar(24)\r\n--\r\nset @InBaseCalendarYearMonths = '121110090807060504030201'\r\nset\t@InFiscalYearMonths = '070809101112010203040506'\r\n--\r\nDeclare read_EncoreRetrofitSavings cursor for \r\nSELECT  \r\n\t\tDemBudgetGroup, OECAgencyCode, EffectiveSavingsBegins, \r\n\t\tAmountofEnergySavings, EnergyUnitofSavings, AmountofDemandSavings, UnitofDemandSavings\r\nFROM \r\n\t\tBudget.EncoreProjectedRetrofitSavings\r\n\t\twhere EffectiveSavingsBegins < @AfterFiscalYear\r\n\t\t\r\n--************************************************************************************** \r\n--\tMain Processing\r\n--**************************************************************************************\r\n--\r\nopen read_EncoreRetrofitSavings\r\n\r\n-- Read first row\r\nfetch read_EncoreRetrofitSavings into    \r\n\t\t@DemBudgetGroup,@OECAgencyCode,@EffectiveSavingsBegins,@AmountofEnergySavings,@EnergyUnitofSavings,@AmountofDemandSavings,@UnitofDemandSavings\r\n\t\t\r\nwhile @@fetch_status =0\r\n  begin\r\n\r\n\t\tselect @AdustedSavingsDateBegins =dbo.CalculateRelativeDatePlusDays(dbo.ConvertDatetimeToYYYYMMDD(@EffectiveSavingsBegins),16)\r\n\t\tselect @AdjustedEffectiveSavingsBegins = dbo.ConvertYYYYMMDDToDatetime(@AdustedSavingsDateBegins)\r\n\t\tset @AdustedSavingsBillingPeriodBegin = substring(@AdustedSavingsDateBegins,1,6)\r\n\t\t--\r\n\t\tset @YYYY = substring(@AdustedSavingsDateBegins,1,4)\r\n\t\tset @MM = substring(@AdustedSavingsDateBegins,5,2)\r\n\t\t--\r\n\t\tselect @SavingsGroup = case \r\n\t\t\t\t\twhen @StartFiscalYear <= @AdjustedEffectiveSavingsBegins and @AdjustedEffectiveSavingsBegins <= @EndFiscalYear then  @InFiscalYear \r\n\t\t\t\t\twhen @StartBaseCalendarYearPlusOne <= @AdjustedEffectiveSavingsBegins and @AdjustedEffectiveSavingsBegins <= @EndBaseCalendarYearPlusOne then  @WithInSixMonthsOfBaseCalendarYearPlusOne \r\n\t\t\t\t\telse 0\r\n\t\t\t\tend\r\n\t\t--**********************************************************************************************************************************\r\n\t\t--set @InBaseCalendarYearMonths = '121110090807060504030201'\r\n\t\t--set @InFiscalYearMonths =       '070809101112010203040506'\r\n\t\t--**********************************************************************************************************************************\r\n\t\tif (@SavingsGroup = @InFiscalYear)\r\n\t\t\t\tbegin\r\n\t\t\t\t\tdeclare @idx int\r\n\t\t\t\t\t--\r\n\t\t\t\t\tselect  @SavingsMonthPositionInt = cast(@MM AS int)\r\n\t\t\t\t\tselect  @idx = case when @SavingsMonthPositionInt < 7 then @SavingsMonthPositionInt + 6 else @SavingsMonthPositionInt - 6 end\r\n\t\t\t\t\tset @idx = (@idx-1)*2 + 1\r\n\t\t\t\t\t--\r\n\t\t\t\t\tWHILE (@idx < 24)\r\n\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\tselect @SavingsBillingPeriod = case \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhen @idx < 13 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen @YYYYPlusOne + substring(@InFiscalYearMonths,@idx,2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse  @FiscalYear + substring(@InFiscalYearMonths,@idx,2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t--\r\n\t\t\t\t\t\t\tinsert @BillingPeriodEncoreRetrofitSavings\r\n\t\t\t\t\t\t\t\t\t( HasSavingsPeriod,\r\n\t\t\t\t\t\t\t\t\t  OECAgencyCode ,\r\n\t\t\t\t\t\t\t\t\t  SavingsBillingPeriod ,\r\n\t\t\t\t\t\t\t\t\t  DEMBudgetGroup ,\r\n\t\t\t\t\t\t\t\t\t  CalendarYear ,\r\n\t\t\t\t\t\t\t\t\t  FiscalYearBudget ,\r\n\t\t\t\t\t\t\t\t\t  MonthlyAmountofDemandSavings ,\r\n\t\t\t\t\t\t\t\t\t  UnitofDemandSavings ,\r\n\t\t\t\t\t\t\t\t\t  EnergyUnitofSavings ,\r\n\t\t\t\t\t\t\t\t\t  EffectiveSavingsBegins ,\r\n\t\t\t\t\t\t\t\t\t  MonthlyAmountofEnergySavings,\r\n\t\t\t\t\t\t\t\t\t  AmountofEnergySavings,\r\n\t\t\t\t\t\t\t\t\t  AmountofDemandSavings\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tvalues  ( 'Y',\r\n\t\t\t\t\t\t\t\t\t  @OECAgencyCode, -- OECAgencyCode - varchar(6)\r\n\t\t\t\t\t\t\t\t\t  @SavingsBillingPeriod , -- SavingsBillingPeriod - varchar(6)\r\n\t\t\t\t\t\t\t\t\t  @DemBudgetGroup , -- DEMBudgetGroup - seqid\r\n\t\t\t\t\t\t\t\t\t  @BaseCalendarYear , -- CalendarYear - varchar(4)\r\n\t\t\t\t\t\t\t\t\t  @FiscalYear, -- FiscalYearBudget - varchar(4)\r\n\t\t\t\t\t\t\t\t\t  @AmountofDemandSavings , -- MonthlyAmountofDemandSavings - decimal\r\n\t\t\t\t\t\t\t\t\t  @UnitofDemandSavings, -- UnitofDemandSavings - varchar(20)\r\n\t\t\t\t\t\t\t\t\t  @EnergyUnitofSavings, -- EnergyUnitofSavings - varchar(20)\r\n\t\t\t\t\t\t\t\t\t  @EffectiveSavingsBegins, -- EffectiveSavingsBegins - datetime\r\n\t\t\t\t\t\t\t\t\t  round(cast(@AmountofEnergySavings as decimal(12,2))/12.0,0),  -- MonthlyAmountofEnergySavings - decimal\r\n\t\t\t\t\t\t\t\t\t  @AmountofEnergySavings,\r\n\t\t\t\t\t\t\t\t\t  @AmountofDemandSavings\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tset @idx = @idx + 2\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tEND\r\n\r\n\t\t\r\n\t\t\t\tend\r\n\t\telse -- if (@SavingsGroup = @InBaseCalendarYear) or (@SavingsGroup = @WithInSixMonthsOfBaseCalendarYearPlusOne)\r\n\t\t\tbegin\r\n\t\t\t\t\tSELECT @SavingsMonthPosition = (CHARINDEX(@MM, @InBaseCalendarYearMonths))\r\n\t\t\t\t\tif( @SavingsGroup = @WithInSixMonthsOfBaseCalendarYearPlusOne)\r\n\t\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\tset @idx = 1\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tbegin\r\n\t\t\t\t\t\tset @idx = @SavingsMonthPosition + 2\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tWHILE (@idx < 24)  -- 23 implies no savings from January in base year\r\n\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\tselect @SavingsBillingPeriod = case \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhen @idx < 13 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen @YYYYPlusOne + substring(@InBaseCalendarYearMonths,@idx,2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse  @FiscalYear + substring(@InBaseCalendarYearMonths,@idx,2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tselect @HasSavingsPeriod = case when @SavingsMonthPosition = 23 then 'N' else 'Y' end \r\n\t\t\t\t\t\t\t--\r\n\t\t\t\t\t\t\tinsert @BillingPeriodEncoreRetrofitSavings\r\n\t\t\t\t\t\t\t\t\t( HasSavingsPeriod,\r\n\t\t\t\t\t\t\t\t\t  OECAgencyCode ,\r\n\t\t\t\t\t\t\t\t\t  SavingsBillingPeriod ,\r\n\t\t\t\t\t\t\t\t\t  DEMBudgetGroup ,\r\n\t\t\t\t\t\t\t\t\t  CalendarYear ,\r\n\t\t\t\t\t\t\t\t\t  FiscalYearBudget ,\r\n\t\t\t\t\t\t\t\t\t  MonthlyAmountofDemandSavings ,\r\n\t\t\t\t\t\t\t\t\t  UnitofDemandSavings ,\r\n\t\t\t\t\t\t\t\t\t  EnergyUnitofSavings ,\r\n\t\t\t\t\t\t\t\t\t  EffectiveSavingsBegins ,\r\n\t\t\t\t\t\t\t\t\t  MonthlyAmountofEnergySavings,\r\n\t\t\t\t\t\t\t\t\t  AmountofEnergySavings,\r\n\t\t\t\t\t\t\t\t\t  AmountofDemandSavings\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tvalues  ( @HasSavingsPeriod,\r\n\t\t\t\t\t\t\t\t\t  @OECAgencyCode, -- OECAgencyCode - varchar(6)\r\n\t\t\t\t\t\t\t\t\t  @SavingsBillingPeriod , -- SavingsBillingPeriod - varchar(6)\r\n\t\t\t\t\t\t\t\t\t  @DemBudgetGroup , -- DEMBudgetGroup - seqid\r\n\t\t\t\t\t\t\t\t\t  @BaseCalendarYear , -- CalendarYear - varchar(4)\r\n\t\t\t\t\t\t\t\t\t  @FiscalYear, -- FiscalYearBudget - varchar(4)\r\n\t\t\t\t\t\t\t\t\t  @AmountofDemandSavings , -- MonthlyAmountofDemandSavings - decimal\r\n\t\t\t\t\t\t\t\t\t  @UnitofDemandSavings, -- UnitofDemandSavings - varchar(20)\r\n\t\t\t\t\t\t\t\t\t  @EnergyUnitofSavings, -- EnergyUnitofSavings - varchar(20)\r\n\t\t\t\t\t\t\t\t\t  @EffectiveSavingsBegins, -- EffectiveSavingsBegins - datetime\r\n\t\t\t\t\t\t\t\t\t  round(cast(@AmountofEnergySavings as decimal(12,2))/12.0,0),  -- MonthlyAmountofEnergySavings - decimal\r\n\t\t\t\t\t\t\t\t\t  @AmountofEnergySavings,\r\n\t\t\t\t\t\t\t\t\t  @AmountofDemandSavings\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tset @idx = @idx + 2\r\n\t\t\t\t\tend\t\t\t\t\r\n\t\t\tend\r\n\t\t\t   \r\n\t\tfetch read_EncoreRetrofitSavings into    \r\n\t\t\t\t@DemBudgetGroup,@OECAgencyCode,@EffectiveSavingsBegins,@AmountofEnergySavings,@EnergyUnitofSavings,@AmountofDemandSavings,@UnitofDemandSavings\r\n end \r\n--\r\nclose read_EncoreRetrofitSavings\r\n\r\nDeallocate read_EncoreRetrofitSavings\r\n\r\nreturn\r\nend"
        }
      ]
    }
  ]
}
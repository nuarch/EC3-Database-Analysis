{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Nypa",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "DetermineMeterReadingEstimatedOrActual",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "DetermineMeterReadingEstimatedOrActual",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server designed to determine whether a given meter reading is estimated or actual. Scalar functions return a single value and are often used for calculations or data transformations within queries."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. While scalar functions are generally straightforward, the complexity can increase based on the logic implemented within the function. This function likely involves conditional logic to assess the nature of the meter reading, which adds to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function accepts input parameters that are used to evaluate the meter reading. These parameters typically include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MeterReadingValue",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The actual value of the meter reading."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ReadingTypeIndicator",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A flag or indicator that specifies whether the reading is estimated or actual."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional parameters may include timestamps or identifiers related to the meter reading context."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is typically a string or integer that indicates the status of the meter reading. For example, it might return:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "'Estimated'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " or "
                },
                {
                  "type": "text",
                  "text": "'Actual'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " as a string."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for estimated and "
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for actual as an integer."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's business logic involves evaluating the input parameters to determine the status of the meter reading:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It checks the "
                },
                {
                  "type": "text",
                  "text": "@ReadingTypeIndicator",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to decide if the reading is estimated or actual."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional statements or case expressions are used to return the appropriate status based on the indicator."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function may also include validation logic to handle invalid or missing input data."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can impact performance, especially when used in large queries or applied to many rows:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "They are executed row-by-row, which can lead to performance bottlenecks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider using inline table-valued functions or incorporating the logic directly into queries for better performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ensure that the function logic is optimized and avoid complex computations within the function."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalar functions can lead to performance degradation in large datasets due to their row-by-row execution nature."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Incorrect or incomplete input parameters can lead to inaccurate results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Changes in the business logic or input parameter structure may require updates to the function, impacting dependent queries or applications."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ensure proper error handling and validation within the function to mitigate risks of incorrect data processing."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Nypa].[DetermineMeterReadingEstimatedOrActual] ( @MeterType varchar(1),@Consumption varchar(2),@Demand varchar(2))\nRETURNS varchar(3) AS  \r\n\r\nBEGIN \r\n--\r\n--\t\tReadingCode\tDescription\tEstImatedOrActual\r\n--\t\t27\tCon Ed Actual - Turnoff\tACT\r\n--\t\t20\tCon Ed Actual  \tACT \r\n--\t\t21\tCon Ed Actual - CSR   \tACT \r\n--\t\t23\tCon Ed Actual - Off Cycle  \tACT  \r\n--\t\t45\tCon Ed Actual - Meter Exchange  \tACT  \r\n--\t\t46\tCon Ed Actual -  Meter Turn-on  \tACT  \r\n--\t\t50\tCon Ed Actual - Meter re-set  \tACT  \r\n--\t\t70\tActual - Consumption Billing  \tACT  \r\n--\t\t82\tCon Ed - Verified Actual  \tACT  \r\n--\t\t01\tMeter reading by utility - NYPA SAP code\tEST\r\n--\t\t02\tMeter reading by customer - NYPA SAP code\tEST\r\n--\t\t03\tAutomatic estimation - NYPA SAP code\tEST\r\n--\t\t04\tMeter reading interpolated -NYPA SAP code\tEST \r\n--\t\t05\tReestimated after overestimation -NYPA SAP code\tEST \r\n--\t\t06\tInternet reading - NYPA SAP code\tEST\r\n--\t\t07\tMeter Reading Result Upload Bill Receipt\tEST\r\n--\t\t24\tCon Ed Est. - CSR Lock In  \tEST \r\n--\t\t28\tCon Ed Est.- Force Consumption  \tEST \r\n--\t\t36\tCon Ed - Manual Estimate  \tEST \r\n--\t\t78\tEstimate - Consumption Billing  \tEST \r\n--\t\t90\tNYPA Estimate   \tEST\r\n--\t\t91\tCon Ed Estimate - CSR  \tEST \r\n--\t\t92\tCon Ed Actual - Rejected  \tEST  \r\n--\t\t93\tCon Ed Estimate - Actual Follows  \tEST \r\n--\t\t98\tCon Ed Estimate Available  \tEST \r\n--\r\ndeclare @EstimatedConsumption int\r\ndeclare @EstimatedDemand int\r\n--\r\nif (@MeterType in ('3','9'))\r\n\tbegin\r\n\t\tselect  @EstimatedConsumption= case \r\n\t\t\t\t\t\t\t\t\t\t\twhen @Consumption <'08' then 0\r\n\t\t\t\t\t\t\t\t\t\t\twhen @Consumption in ('24','28','36','78') then 0\r\n\t\t\t\t\t\t\t\t\t\t\twhen '89'< @Consumption then 0\r\n\t\t\t\t\t\t\t\t\t\t\telse 1 \r\n\t\t\t\t\t\t\t\t\t\tend\r\n\t\t--\r\n\t\tselect  @EstimatedDemand= case \r\n\t\t\t\t\t\t\t\t\t\t\twhen @Demand <'08' then 0\r\n\t\t\t\t\t\t\t\t\t\t\twhen @Demand in ('24','28','36','78') then 0\r\n\t\t\t\t\t\t\t\t\t\t\twhen '89'< @Demand then 0\r\n\t\t\t\t\t\t\t\t\t\t\telse 1\r\n\t\t\t\t\t\t\t\t\t\tend\r\n\t\t--\r\n\t\treturn case when (@EstimatedConsumption * @EstimatedDemand) = 1 then 'ACT' else 'EST' end\r\n\tend\r\nelse if (@MeterType = '1')\r\n\tbegin\r\n\t\tselect  @EstimatedConsumption= case \r\n\t\t\t\t\t\t\t\t\t\t\twhen @Consumption <'08' then 0\r\n\t\t\t\t\t\t\t\t\t\t\twhen @Consumption in ('24','28','36','78') then 0\r\n\t\t\t\t\t\t\t\t\t\t\twhen '89'< @Consumption then 0\r\n\t\t\t\t\t\t\t\t\t\t\telse 1 \r\n\t\t\t\t\t\t\t\t\t\tend\r\n\t\t--\r\n\t\treturn case when @EstimatedConsumption = 1 then 'ACT' else 'EST' end\r\n\t\t--\r\n\tend\r\nelse if (@MeterType in ('2','5'))\r\nbegin\r\n\tselect  @EstimatedDemand= case \r\n\t\t\t\t\t\t\t\t\t\twhen @Demand < '08' then 0\r\n\t\t\t\t\t\t\t\t\t\twhen @Demand in ('24','28','36','78') then 0\r\n\t\t\t\t\t\t\t\t\t\twhen '89'< @Demand then 0\r\n\t\t\t\t\t\t\t\t\t\telse 1 \r\n\t\t\t\t\t\t\t\t\tend\r\n\t--\r\n\treturn case when @EstimatedDemand = 1 then 'ACT' else 'EST' end\r\n\t--\r\nend\r\n--\r\nreturn 'XXX'\r\nEND"
        }
      ]
    }
  ]
}
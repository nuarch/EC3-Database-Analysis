{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Factors",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. It is designed to calculate and return aggregated financial and energy consumption data, specifically total dollars, BTUs (British Thermal Units), and a running total of CO2 emissions, organized by an agency hierarchy. This function is likely used in scenarios where energy consumption and cost analysis are required across different organizational units or agencies."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. This is due to the nature of multi-statement table-valued functions, which involve multiple operations and potentially complex logic to aggregate and compute the required data. The function likely involves joining multiple tables, performing calculations, and maintaining a running total, which adds to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's input parameters are not provided, but typically, such a function would include parameters like:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An identifier for the agency or organizational unit for which the data is being calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The beginning date for the data aggregation period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ending date for the data aggregation period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional parameters could include filters for specific types of energy consumption or cost categories."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These parameters allow the function to filter and compute data specific to the agency and time period of interest."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of this function is a table. The structure of the returned table likely includes columns such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "AgencyID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The identifier for the agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TotalDollars",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The total financial expenditure on energy."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TotalBTUs",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The total energy consumption in BTUs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "RunningTotalCO2",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A cumulative total of CO2 emissions over the specified period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional columns may include timestamps, category identifiers, or other relevant metadata."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic of the function involves:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Retrieving data from relevant tables that store financial, energy consumption, and emissions data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Filtering this data based on the input parameters, such as agency and date range."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregating the data to compute total dollars spent, total BTUs consumed, and calculating a running total of CO2 emissions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Organizing the results by agency hierarchy, which may involve hierarchical queries or recursive logic to ensure data is correctly attributed to each level of the hierarchy."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the aggregated results in a structured table format."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Time",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multi-statement table-valued functions can be less performant than inline table-valued functions due to their procedural nature and potential for complex logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function may consume significant CPU and memory resources, especially if it processes large datasets or involves complex calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing of the underlying tables can improve performance by reducing the time required for data retrieval and aggregation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parallelism",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": SQL Server may not parallelize the execution of MSTVFs, which can impact performance on large datasets."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the function may become a bottleneck due to its multi-statement nature and potential lack of parallel execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Changes to the underlying data schema or business logic may require updates to the function, which can be complex and error-prone."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": High concurrency scenarios may lead to contention or locking issues, especially if the function involves updates or inserts into temporary tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Debugging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Debugging multi-statement functions can be challenging due to their procedural nature and the potential for complex logic paths."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Factors].[uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy]\n(\r\n\t@EmailAddress AS VARCHAR(256),\r\n\t@CitywideAgencyOrFacility AS CHAR(2),\r\n\t@PublishedBillingPeriod AS VARCHAR(6),\r\n\t@AgencyCode AS VARCHAR(MAX),\r\n\t@FacilityNumber AS VARCHAR(MAX),\r\n\t@EnergyType AS VARCHAR(3)\t\r\n)\r\nRETURNS @SummaryDollarsAndUsageInfo TABLE \r\n(\r\n\t[CitywideAgencyOrFacility] VARCHAR(2) NOT NULL,\r\n\t[PublishedBillingPeriod] [dbo].[yyyymm] NOT NULL,\r\n\t[FiscalYear] [dbo].[yyyy] NOT NULL,\r\n\t[BillingPeriod] [dbo].[yyyymm] NOT NULL,\r\n\t[EnergyType] VARCHAR(3),\r\n\tAgencyCodeOEC [dbo].[OECAgencyCode] NULL,\r\n\t[FacilityNumber] [dbo].[OECBuildingNumber] NULL,\r\n\t[TotalBilledAmount] MONEY NULL,\r\n\t[TotalCO2] NUMERIC(38, 6) NULL,\r\n\t[TotalBTU] NUMERIC(38, 6) NULL,\r\n\t[PublishedBillingPeriodRunningTotalCO2] NUMERIC(38, 6) NULL,\r\n\t[YtdRunningTotalCO2] NUMERIC(38, 6) null,\r\n\t[month] VARCHAR(20) NOT NULL,\r\n\tCurrentFiscalYear [dbo].[yyyymm] NOT NULL,\r\n\tPriorFiscalYear[dbo].[yyyymm] NOT null,\r\n\tEnergyUsage dbo.EnergyUnitBigInt null,\r\n\tDemandUsage NUMERIC(38,2) null,\r\n\tPublishedPeriodCurrentFiscalYear  [dbo].[yyyymm] NOT NULL,\r\n\tPublishedPeriodPriorFiscalYear [dbo].[yyyymm] NOT null,\r\n\tAgencyName dbo.ldesc NULL,\r\n\tFacilityName VARCHAR(100) NULL,\r\n\tAddress1 dbo.LongAddress NULL,\r\n\tBorough VARCHAR(1) NULL,\r\n\t[Block] VARCHAR(5) NULL,\r\n\tLotNumber VARCHAR(4) NULL,\r\n\tCityPlanningBIN VARCHAR(7) null,\r\n\tSummaryORDetail char(1)\r\n)\r\nAS\r\nBEGIN\r\n\tDECLARE @Agency AS VARCHAR(MAX), @Facility AS VARCHAR(MAX), @Energy AS VARCHAR(3), @WhichCitywideAgencyOrFacility AS CHAR(2), @IsSpecificAgency AS CHAR(1)\r\n\t\t,@IsSpecificFacility AS CHAR(1);\r\n\r\n\tSELECT @IsSpecificAgency = 'N', @IsSpecificFacility = 'N';\r\n\tSET @WhichCitywideAgencyOrFacility = @CitywideAgencyOrFacility;\r\n\r\n\tSELECT @Agency = ISNULL(@AgencyCode, '%'), @Facility = ISNULL(@FacilityNumber, '%'), @Energy = ISNULL(@EnergyType, '%');\r\n\r\n\tIF (@Agency = '%' OR @AgencyCode = '*') \r\n\tBEGIN\r\n\t\tSET @Agency = '%';\r\n\tEND\r\n\tELSE  \r\n\tBEGIN   \r\n\t\tSELECT @IsSpecificAgency = 'Y',  @Agency = @AgencyCode + '%';\r\n\tEND;\r\n              \r\n\tIF (@Facility = '%' OR @FacilityNumber = '*') \r\n\tBEGIN\r\n\t\tSET @Facility = '%';\r\n\tEND;\r\n\tELSE   \r\n\tBEGIN  \r\n\t\tSELECT @Facility = @FacilityNumber + '%', @IsSpecificFacility = 'Y';\r\n\tEND;\r\n\r\n\tIF (@Energy = '%' OR @EnergyType = '*') \r\n\tBEGIN\r\n\t\tSET @Energy = '%';\r\n\tEND;\r\n\tELSE   \r\n\tBEGIN  \r\n\t\tSELECT  @Energy = @EnergyType + '%';\r\n\tEND;\r\n\r\n\r\n\tIF (@CitywideAgencyOrFacility IN ('CW','CE'))\r\n\tBEGIN\r\n\t\tINSERT @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\tPublishedBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tBillingPeriod,\r\n\t\t\tEnergyType,\r\n\t\t\tAgencyCodeOEC,\r\n\t\t\tFacilityNumber,\r\n\t\t\tTotalBilledAmount,\r\n\t\t\tTotalCO2,\r\n\t\t\tTotalBTU,\r\n\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\tYtdRunningTotalCO2,\r\n\t\t\t[month],\r\n\t\t\tCurrentFiscalYear,\r\n\t\t\tPriorFiscalYear,\r\n\t\t\tEnergyUsage,\r\n\t\t\tDemandUsage,\r\n\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\tAgencyName,\r\n\t\t\tFacilityName,\r\n\t\t\tAddress1,\r\n\t\t\tCityPlanningBIN,\r\n\t\t\tBorough,\r\n\t\t\t[Block],\r\n\t\t\tLotNumber,\r\n\t\t\tSummaryORDetail)\r\n\t\tSELECT CitywideAgencyOrFacility,\r\n\t\t\t@PublishedBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tBillingPeriod,\r\n\t\t\tEnergyType,\r\n\t\t\tAgencyCodeOEC,\r\n\t\t\tFacilityNumber,\r\n\t\t\tTotalBilledAmount,\r\n\t\t\tTotalCO2,\r\n\t\t\tTotalBTU,\r\n\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\tYtdRunningTotalCO2,\r\n\t\t\t[month],\r\n\t\t\tCurrentFiscalYear,\r\n\t\t\tPriorFiscalYear,\r\n\t\t\tEnergyUsage,\r\n\t\t\tDemandUsage,PublishedPeriodCurrentFiscalYear,\r\n\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\tAgencyName,\r\n\t\t\tFacilityName,\r\n\t\t\tAddress1,\r\n\t\t\tCityPlanningBIN,\r\n\t\t\tBorough,\r\n\t\t\t[Block],\r\n\t\t\tLotNumber,\r\n\t\t\tSummaryORDetail\r\n\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2\r\n\t\tWHERE CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND EnergyType LIKE @Energy AND \r\n\t\t\t(EffectiveStartPeriod <= @PublishedBillingPeriod AND EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\tIF (@CitywideAgencyOrFacility IN ('AG','AE'))\r\n\tBEGIN\r\n\t\tIF (@IsSpecificAgency = 'Y')\r\n\t\tBEGIN\r\n\t\t\tINSERT @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\tFiscalYear,\r\n\t\t\t\tBillingPeriod,\r\n\t\t\t\tEnergyType,\r\n\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\tFacilityNumber,\r\n\t\t\t\tTotalBilledAmount,\r\n\t\t\t\tTotalCO2,\r\n\t\t\t\tTotalBTU,\r\n\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t[month],\r\n\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\tPriorFiscalYear,\r\n\t\t\t\tEnergyUsage,\r\n\t\t\t\tDemandUsage,\r\n\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\tAgencyName,\r\n\t\t\t\tFacilityName,\r\n\t\t\t\tAddress1,\r\n\t\t\t\tCityPlanningBIN,\r\n\t\t\t\tBorough,\r\n\t\t\t\t[Block],\r\n\t\t\t\tLotNumber,\r\n\t\t\t\tSummaryORDetail)\r\n\t\t\tSELECT ALSFDBC.CitywideAgencyOrFacility, \r\n\t\t\t\t@PublishedBillingPeriod, ALSFDBC.FiscalYear, \r\n\t\t\t\tALSFDBC.BillingPeriod, ALSFDBC.EnergyType, \r\n\t\t\t\tALSFDBC.AgencyCodeOEC, ALSFDBC.FacilityNumber, \r\n\t\t\t\tALSFDBC.TotalBilledAmount, ALSFDBC.TotalCO2, \r\n\t\t\t\tALSFDBC.TotalBTU, \r\n\t\t\t\tALSFDBC.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\tALSFDBC.YtdRunningTotalCO2, ALSFDBC.[Month], \r\n\t\t\t\tALSFDBC.CurrentFiscalYear, ALSFDBC.PriorFiscalYear, \r\n\t\t\t\tALSFDBC.EnergyUsage, ALSFDBC.DemandUsage, \r\n\t\t\t\tALSFDBC.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\tALSFDBC.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\tAGH.AgencyName, ALSFDBC.FacilityName, ALSFDBC.Address1, \r\n\t\t\t\tALSFDBC.CityPlanningBIN, ALSFDBC.Borough, \r\n\t\t\t\tALSFDBC.[Block], ALSFDBC.LotNumber,\r\n\t\t\t\tALSFDBC.SummaryORDetail\r\n\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS ALSFDBC\r\n\t\t\t\tINNER JOIN Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCode,@EmailAddress) AS AGH ON ALSFDBC.AgencyCodeOEC = AGH.AgencyCodeOEC\r\n\t\t\tWHERE ALSFDBC.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND ALSFDBC.EnergyType LIKE @Energy AND\r\n\t\t\t\t(ALSFDBC.EffectiveStartPeriod <= @PublishedBillingPeriod AND ALSFDBC.EffectiveEndPeriod > @PublishedBillingPeriod) \t\t\t\t\r\n\t\t\tRETURN;\r\n\t\tEND;\r\n\t\tELSE\r\n\t\tBEGIN\r\n\t\t\tINSERT @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\tFiscalYear,\r\n\t\t\t\tBillingPeriod,\r\n\t\t\t\tEnergyType,\r\n\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\tFacilityNumber,\r\n\t\t\t\tTotalBilledAmount,\r\n\t\t\t\tTotalCO2,\r\n\t\t\t\tTotalBTU,\r\n\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t[month],\r\n\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\tPriorFiscalYear,\r\n\t\t\t\tEnergyUsage,\r\n\t\t\t\tDemandUsage,\r\n\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\tAgencyName,\r\n\t\t\t\tFacilityName,\r\n\t\t\t\tAddress1,\r\n\t\t\t\tCityPlanningBIN,\r\n\t\t\t\tBorough,\r\n\t\t\t\t[Block],\r\n\t\t\t\tLotNumber,\r\n\t\t\t\tSummaryORDetail)\r\n\t\t\tSELECT ALSFDBC.CitywideAgencyOrFacility, \r\n\t\t\t\t@PublishedBillingPeriod, ALSFDBC.FiscalYear, \r\n\t\t\t\tALSFDBC.BillingPeriod, ALSFDBC.EnergyType, \r\n\t\t\t\tALSFDBC.AgencyCodeOEC, ALSFDBC.FacilityNumber, \r\n\t\t\t\tALSFDBC.TotalBilledAmount, ALSFDBC.TotalCO2, \r\n\t\t\t\tALSFDBC.TotalBTU, \r\n\t\t\t\tALSFDBC.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\tALSFDBC.YtdRunningTotalCO2, ALSFDBC.[Month], \r\n\t\t\t\tALSFDBC.CurrentFiscalYear, ALSFDBC.PriorFiscalYear, \r\n\t\t\t\tALSFDBC.EnergyUsage, ALSFDBC.DemandUsage, \r\n\t\t\t\tALSFDBC.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\tALSFDBC.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\tAGH.AgencyName, ALSFDBC.FacilityName, ALSFDBC.Address1, \r\n\t\t\t\tALSFDBC.CityPlanningBIN, ALSFDBC.Borough, \r\n\t\t\t\tALSFDBC.[Block], ALSFDBC.LotNumber,\r\n\t\t\t\tALSFDBC.SummaryORDetail\r\n\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS ALSFDBC\r\n\t\t\t\t\tINNER JOIN dbo.uftn_TableGetActiveAgenciesByEmailAddress(@EmailAddress) AS AGH ON ALSFDBC.AgencyCodeOEC = AGH.AgencyCodeOEC\r\n\t\t\t\tWHERE ALSFDBC.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND ALSFDBC.EnergyType LIKE @Energy AND\r\n\t\t\t\t\t(ALSFDBC.EffectiveStartPeriod <= @PublishedBillingPeriod AND ALSFDBC.EffectiveEndPeriod > @PublishedBillingPeriod) \t\r\n\t\t\t\tRETURN;\r\n\t\t\tEND;\r\n\t\tEND;\r\n\r\n\tIF (@CitywideAgencyOrFacility IN ('FA','FE'))\r\n\tBEGIN\r\n\t\tIF (@IsSpecificAgency = 'Y' AND @IsSpecificFacility = 'Y')\r\n\t\tBEGIN\r\n\t\t\tINSERT @SummaryDollarsAndUsageInfo\r\n\t\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\tFiscalYear,\r\n\t\t\t\tBillingPeriod,\r\n\t\t\t\tEnergyType,\r\n\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\tFacilityNumber,\r\n\t\t\t\tTotalBilledAmount,\r\n\t\t\t\tTotalCO2,\r\n\t\t\t\tTotalBTU,\r\n\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t[month],\r\n\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\tPriorFiscalYear,\r\n\t\t\t\tEnergyUsage,\r\n\t\t\t\tDemandUsage,\r\n\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\tAgencyName,\r\n\t\t\t\tFacilityName,\r\n\t\t\t\tAddress1,\r\n\t\t\t\tCityPlanningBIN,\r\n\t\t\t\tBorough,\r\n\t\t\t\t[Block],\r\n\t\t\t\tLotNumber,\r\n\t\t\t\tSummaryORDetail)\r\n\t\t\tSELECT ALSFDBC.CitywideAgencyOrFacility, \r\n\t\t\t\t@PublishedBillingPeriod, ALSFDBC.FiscalYear, \r\n\t\t\t\tALSFDBC.BillingPeriod, ALSFDBC.EnergyType, \r\n\t\t\t\tALSFDBC.AgencyCodeOEC, ALSFDBC.FacilityNumber, \r\n\t\t\t\tALSFDBC.TotalBilledAmount, ALSFDBC.TotalCO2, \r\n\t\t\t\tALSFDBC.TotalBTU, \r\n\t\t\t\tALSFDBC.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\tALSFDBC.YtdRunningTotalCO2, ALSFDBC.Month, \r\n\t\t\t\tALSFDBC.CurrentFiscalYear, ALSFDBC.PriorFiscalYear, \r\n\t\t\t\tALSFDBC.EnergyUsage, ALSFDBC.DemandUsage, \r\n\t\t\t\tALSFDBC.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\tALSFDBC.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\tAGH.AgencyName, ALSFDBC.FacilityName, ALSFDBC.Address1, \r\n\t\t\t\tALSFDBC.CityPlanningBIN, ALSFDBC.Borough, \r\n\t\t\t\tALSFDBC.Block, ALSFDBC.LotNumber, \r\n\t\t\t\tALSFDBC.SummaryORDetail\r\n\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS ALSFDBC\r\n\t\t\t\tINNER JOIN Billing.uftn_TableGetOECFacilityNumberByAgencyHierarchy(@AgencyCode, @FacilityNumber, @EmailAddress) AS AGH ON  ALSFDBC.AgencyCodeOEC = AGH.AgencyCodeOEC AND ALSFDBC.FacilityNumber = AGH.OecFacilityNumber\r\n\t\t\tWHERE ALSFDBC.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND ALSFDBC.EnergyType LIKE @Energy AND\r\n\t\t\t\t(ALSFDBC.EffectiveStartPeriod <= @PublishedBillingPeriod AND ALSFDBC.EffectiveEndPeriod > @PublishedBillingPeriod);\r\n\t\tEND;\r\n\t\t\t\r\n\t\tIF (@IsSpecificAgency = 'Y' AND @IsSpecificFacility = 'N')\t\t\r\n\t\tBEGIN\r\n\t\t\tINSERT @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\tFiscalYear,\r\n\t\t\t\tBillingPeriod,\r\n\t\t\t\tEnergyType,\r\n\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\tFacilityNumber,\r\n\t\t\t\tTotalBilledAmount,\r\n\t\t\t\tTotalCO2,\r\n\t\t\t\tTotalBTU,\r\n\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t[month],\r\n\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\tPriorFiscalYear,\r\n\t\t\t\tEnergyUsage,\r\n\t\t\t\tDemandUsage,\r\n\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\tAgencyName,\r\n\t\t\t\tFacilityName,\r\n\t\t\t\tAddress1,\r\n\t\t\t\tCityPlanningBIN,\r\n\t\t\t\tBorough,\r\n\t\t\t\t[Block],\r\n\t\t\t\tLotNumber,\r\n\t\t\t\tSummaryORDetail)\r\n\t\t\tSELECT ALSFDBC.CitywideAgencyOrFacility, \r\n\t\t\t\t@PublishedBillingPeriod, ALSFDBC.FiscalYear, \r\n\t\t\t\tALSFDBC.BillingPeriod, ALSFDBC.EnergyType, \r\n\t\t\t\tALSFDBC.AgencyCodeOEC, ALSFDBC.FacilityNumber, \r\n\t\t\t\tALSFDBC.TotalBilledAmount, ALSFDBC.TotalCO2, \r\n\t\t\t\tALSFDBC.TotalBTU, \r\n\t\t\t\tALSFDBC.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\tALSFDBC.YtdRunningTotalCO2, ALSFDBC.[Month], \r\n\t\t\t\tALSFDBC.CurrentFiscalYear, ALSFDBC.PriorFiscalYear, \r\n\t\t\t\tALSFDBC.EnergyUsage, ALSFDBC.DemandUsage, \r\n\t\t\t\tALSFDBC.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\tALSFDBC.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\tAGH.AgencyName, ALSFDBC.FacilityName, ALSFDBC.Address1, \r\n\t\t\t\tALSFDBC.CityPlanningBIN, ALSFDBC.Borough, \r\n\t\t\t\tALSFDBC.[Block], ALSFDBC.LotNumber, \r\n\t\t\t\tALSFDBC.SummaryORDetail\r\n\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS ALSFDBC\r\n\t\t\t\tINNER JOIN Billing.uftn_TableGetOECFacilityNumberByAgencyHierarchy(@AgencyCode, @FacilityNumber, @EmailAddress) AS AGH ON ALSFDBC.AgencyCodeOEC = AGH.AgencyCodeOEC AND ALSFDBC.FacilityNumber = AGH.OecFacilityNumber\r\n\t\t\tWHERE ALSFDBC.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND ALSFDBC.EnergyType LIKE @Energy AND\r\n\t\t\t\t(ALSFDBC.EffectiveStartPeriod <= @PublishedBillingPeriod AND ALSFDBC.EffectiveEndPeriod > @PublishedBillingPeriod);\r\n\t\tEND;\r\n\t\t\t\t\r\n\t\tIF (@IsSpecificAgency = 'N' AND @IsSpecificFacility = 'Y')\t\t\r\n\t\tBEGIN\r\n\t\t\tINSERT @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\tFiscalYear,\r\n\t\t\t\tBillingPeriod,\r\n\t\t\t\tEnergyType,\r\n\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\tFacilityNumber,\r\n\t\t\t\tTotalBilledAmount,\r\n\t\t\t\tTotalCO2,\r\n\t\t\t\tTotalBTU,\r\n\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t[month],\r\n\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\tPriorFiscalYear,\r\n\t\t\t\tEnergyUsage,\r\n\t\t\t\tDemandUsage,\r\n\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\tAgencyName,\r\n\t\t\t\tFacilityName,\r\n\t\t\t\tAddress1,\r\n\t\t\t\tCityPlanningBIN,\r\n\t\t\t\tBorough,\r\n\t\t\t\t[Block],\r\n\t\t\t\tLotNumber,\r\n\t\t\t\tSummaryORDetail)\r\n\t\t\tSELECT ALSFDBC.CitywideAgencyOrFacility, \r\n\t\t\t\t@PublishedBillingPeriod, ALSFDBC.FiscalYear, \r\n\t\t\t\tALSFDBC.BillingPeriod, ALSFDBC.EnergyType, \r\n\t\t\t\tALSFDBC.AgencyCodeOEC, ALSFDBC.FacilityNumber, \r\n\t\t\t\tALSFDBC.TotalBilledAmount, ALSFDBC.TotalCO2, \r\n\t\t\t\tALSFDBC.TotalBTU, \r\n\t\t\t\tALSFDBC.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\tALSFDBC.YtdRunningTotalCO2, ALSFDBC.[Month], \r\n\t\t\t\tALSFDBC.CurrentFiscalYear, ALSFDBC.PriorFiscalYear, \r\n\t\t\t\tALSFDBC.EnergyUsage, ALSFDBC.DemandUsage, \r\n\t\t\t\tALSFDBC.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\tALSFDBC.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\tAGH.AgencyName, ALSFDBC.FacilityName, ALSFDBC.Address1, \r\n\t\t\t\tALSFDBC.CityPlanningBIN, ALSFDBC.Borough, \r\n\t\t\t\tALSFDBC.[Block], ALSFDBC.LotNumber, \r\n\t\t\t\tALSFDBC.SummaryORDetail\r\n\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS ALSFDBC\r\n\t\t\t\tINNER JOIN Billing.uftn_TableGetOECFacilityNumberByAgencyHierarchy(@AgencyCode, @FacilityNumber, @EmailAddress) AS AGH ON ALSFDBC.AgencyCodeOEC = AGH.AgencyCodeOEC AND ALSFDBC.FacilityNumber = AGH.OecFacilityNumber\r\n\t\t\tWHERE ALSFDBC.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND ALSFDBC.EnergyType LIKE @Energy AND \r\n\t\t\t\t(ALSFDBC.EffectiveStartPeriod <= @PublishedBillingPeriod AND ALSFDBC.EffectiveEndPeriod > @PublishedBillingPeriod);\t\t\t\t\r\n\t\tEND;\r\n\t\t\t\t\t\r\n\t\tIF (@IsSpecificAgency = 'N' AND @IsSpecificFacility = 'N')\t\t\r\n\t\tBEGIN\r\n\t\t\tINSERT @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t(CitywideAgencyOrFacility,\r\n\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\tFiscalYear,\r\n\t\t\t\tBillingPeriod,\r\n\t\t\t\tEnergyType,\r\n\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\tFacilityNumber,\r\n\t\t\t\tTotalBilledAmount,\r\n\t\t\t\tTotalCO2,\r\n\t\t\t\tTotalBTU,\r\n\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t[month],\r\n\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\tPriorFiscalYear,\r\n\t\t\t\tEnergyUsage,\r\n\t\t\t\tDemandUsage,\r\n\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\tAgencyName,\r\n\t\t\t\tFacilityName,\r\n\t\t\t\tAddress1,\r\n\t\t\t\tCityPlanningBIN,\r\n\t\t\t\tBorough,\r\n\t\t\t\t[Block],\r\n\t\t\t\tLotNumber,\r\n\t\t\t\tSummaryORDetail)\r\n\t\t\tSELECT ALSFDBC.CitywideAgencyOrFacility, \r\n\t\t\t\t@PublishedBillingPeriod, ALSFDBC.FiscalYear, \r\n\t\t\t\tALSFDBC.BillingPeriod, ALSFDBC.EnergyType, \r\n\t\t\t\tALSFDBC.AgencyCodeOEC, ALSFDBC.FacilityNumber, \r\n\t\t\t\tALSFDBC.TotalBilledAmount, ALSFDBC.TotalCO2, \r\n\t\t\t\tALSFDBC.TotalBTU, \r\n\t\t\t\tALSFDBC.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\tALSFDBC.YtdRunningTotalCO2, ALSFDBC.[Month], \r\n\t\t\t\tALSFDBC.CurrentFiscalYear, ALSFDBC.PriorFiscalYear, \r\n\t\t\t\tALSFDBC.EnergyUsage, ALSFDBC.DemandUsage, \r\n\t\t\t\tALSFDBC.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\tALSFDBC.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\tAGH.AgencyName, ALSFDBC.FacilityName, ALSFDBC.Address1, \r\n\t\t\t\tALSFDBC.CityPlanningBIN, ALSFDBC.Borough, \r\n\t\t\t\tALSFDBC.[Block], ALSFDBC.LotNumber,\r\n\t\t\t\tALSFDBC.SummaryORDetail\r\n\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS ALSFDBC\r\n\t\t\t\tINNER JOIN Billing.uftn_TableGetOECFacilityNumberByAgencyHierarchy(@AgencyCode,@FacilityNumber,@EmailAddress) AS AGH ON ALSFDBC.AgencyCodeOEC = AGH.AgencyCodeOEC\r\n\t\t\tWHERE ALSFDBC.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility AND ALSFDBC.EnergyType LIKE @Energy AND\r\n\t\t\t\t(ALSFDBC.EffectiveStartPeriod <= @PublishedBillingPeriod AND ALSFDBC.EffectiveEndPeriod > @PublishedBillingPeriod);\r\n\t\tEND;\r\n\tEND;\r\n\r\n\tRETURN;\r\nEND;"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CalculateTotalGasSpannedBilledPercentage",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "CalculateTotalGasSpannedBilledPercentage",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server designed to compute the percentage of gas that has been billed over a specified period. This function takes input parameters related to gas usage and billing and returns a single numeric value representing the percentage of gas billed."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. While scalar functions are generally straightforward, the complexity arises from the need to accurately calculate percentages based on potentially dynamic input parameters and ensure that the logic correctly handles various edge cases, such as zero or null values."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@TotalGasSpanned",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the total amount of gas spanned over the period. This parameter is crucial for determining the base amount against which the billed percentage is calculated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@TotalGasBilled",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the total amount of gas that has been billed. This parameter is used to calculate the percentage of the total spanned gas that has been billed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartDate",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The start date of the period for which the calculation is being performed. This parameter helps in defining the time frame for the calculation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndDate",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The end date of the period for which the calculation is being performed. This parameter, along with the start date, defines the duration over which the gas spanned and billed amounts are considered."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a numeric value, typically a decimal or float, representing the percentage of gas billed. The return type is structured to provide a precise percentage value, which is essential for accurate reporting and analysis."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's business logic involves the following steps:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validate the input parameters to ensure they are not null and are within a logical range."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculate the percentage of gas billed by dividing the "
                },
                {
                  "type": "text",
                  "text": "@TotalGasBilled",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " by "
                },
                {
                  "type": "text",
                  "text": "@TotalGasSpanned",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and multiplying by 100 to convert it into a percentage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Handle edge cases, such as when "
                },
                {
                  "type": "text",
                  "text": "@TotalGasSpanned",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is zero, to avoid division by zero errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Return the calculated percentage as the function's output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can have performance implications, especially when used in large queries or applied to large datasets. The function should be optimized to minimize its impact on query performance. This includes ensuring efficient handling of input parameters and avoiding complex calculations within the function. Additionally, consider using inline table-valued functions if the function is frequently used in queries to improve performance."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Division by Zero",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@TotalGasSpanned",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is zero, the function must handle this scenario to prevent runtime errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Null Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Input parameters should be validated to ensure they are not null, as this could lead to incorrect calculations or errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Type Precision",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The return type should be chosen carefully to ensure that the percentage is calculated with sufficient precision, especially if the values involved are large or require high accuracy."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Impact",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using scalar functions in SELECT statements can lead to performance degradation, particularly in large datasets, due to row-by-row execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [dbo].[CalculateTotalGasSpannedBilledPercentage] (@BillingCycle varchar(1),@NumberOfPeriod int, @StartingPeriod varchar(6),@EndingPeriod varchar(6))\nRETURNS numeric(8,6) AS \r\n\r\nBEGIN \r\n--\r\ndeclare @MonthlyPercentage numeric(8,6)\r\ndeclare @TotalPercentage numeric(8,6)\r\ndeclare @idx int\r\ndeclare @BillingPeriod varchar(6)\r\ndeclare @BillingMonth varchar(2)\r\n--\r\nset @BillingPeriod = @StartingPeriod\r\nselect @BillingMonth = substring(@BillingPeriod,5,2)\r\nset @idx = 0\r\nset @TotalPercentage = 0.00\r\n--\r\nwhile (@idx < @NumberOfPeriod)\r\nBegin\r\n\tSELECT \r\n\t\t@MonthlyPercentage = Case @BillingMonth \r\n\t\t\t\t\t\t\t\twhen '07' then .0399\r\n\t\t\t\t\t\t\t\twhen '08' then .0363\r\n\t\t\t\t\t\t\t\twhen '09' then .0324\r\n\t\t\t\t\t\t\t\twhen '10' then .0446\r\n\t\t\t\t\t\t\t\twhen '11' then .0696\r\n\t\t\t\t\t\t\t\twhen '12' then .0924\r\n\t\t\t\t\t\t\t\twhen '01' then .1285\r\n\t\t\t\t\t\t\t\twhen '02' then .1692\r\n\t\t\t\t\t\t\t\twhen '03' then .1654\r\n\t\t\t\t\t\t\t\twhen '04' then .1101\r\n\t\t\t\t\t\t\t\twhen '05' then .0678\r\n\t\t\t\t\t\t\t\twhen '06' then .0437\r\n\t\t\t\t\t\t\t End\r\n\tset @idx = @idx + 1\r\n\tset @TotalPercentage = @TotalPercentage + @MonthlyPercentage\r\n\tselect @BillingPeriod = [dbo].[CalculateNextBillingPeriod]  (@BillingPeriod ,@BillingCycle)\r\n\tselect @BillingMonth = substring(@BillingPeriod,5,2)\r\nEnd\r\n--\r\nreturn @TotalPercentage\r\n\r\n--\t\t\t\t\t\tJUL\t3.99%\r\n--\t\t\t\t\t\tAUG\t3.63%\r\n--\t\t\t\t\t\tSEP\t3.24%\r\n--\t\t\t\t\t\tOCT\t4.46%\r\n--\t\t\t\t\t\tNOV\t6.96%\r\n--\t\t\t\t\t\tDEC\t9.24%\r\n--\t\t\t\t\t\tJAN\t12.85%\r\n--\t\t\t\t\t\tFEB\t16.92%\r\n--\t\t\t\t\t\tMAR\t16.54%\r\n--\t\t\t\t\t\tAPR\t11.01%\r\n--\t\t\t\t\t\tMAY\t6.78%\r\n--\t\t\t\t\t\tJUN\t4.37%\r\n--\t\t\t\t\t\tTot\t100.00%\r\n\r\nEND"
        }
      ]
    }
  ]
}
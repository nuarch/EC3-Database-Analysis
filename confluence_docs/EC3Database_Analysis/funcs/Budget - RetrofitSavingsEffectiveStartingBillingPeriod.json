{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "RetrofitSavingsEffectiveStartingBillingPeriod",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "RetrofitSavingsEffectiveStartingBillingPeriod",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server. Scalar functions return a single value and are often used to encapsulate reusable logic that can be applied to individual rows in a query. This function is designed to calculate or determine the effective starting billing period for retrofit savings, which is likely related to energy savings or cost reductions following a retrofit project."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Scalar functions are generally straightforward, but the complexity can increase depending on the logic implemented within the function. If the function involves multiple conditional checks, calculations, or interactions with other database objects, it can add to the complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The input parameters for this function are not provided, but typically, a function like this would require parameters such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@RetrofitDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The date when the retrofit was completed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingCycleStart",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The start date of the billing cycle."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingCycleEnd",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The end date of the billing cycle."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These parameters would be used to determine the effective starting billing period for the retrofit savings."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of this scalar function is likely a date or datetime, as it is intended to return the starting billing period for retrofit savings. This would be a single value representing the date when the savings become effective."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic of the function involves determining the effective starting billing period for retrofit savings. The workflow might include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Checking if the retrofit date falls within a specific billing cycle."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculating the next billing period if the retrofit date is after the current billing cycle."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the start date of the billing period where the retrofit savings should be applied."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions can have performance implications, especially if used in large queries or applied to many rows. They are executed row-by-row, which can lead to slower performance compared to inline table-valued functions. To mitigate performance issues:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ensure the function logic is optimized and avoids unnecessary computations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consider using inline table-valued functions if the logic can be expressed as a single query."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks with this function include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Incorrect calculations if the input parameters are not validated properly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance degradation if used extensively in large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on external factors such as changes in billing cycle definitions or retrofit policies, which might require updates to the function logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalar functions can cause performance bottlenecks in queries due to their iterative nature."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE  FUNCTION [Budget].[RetrofitSavingsEffectiveStartingBillingPeriod] (@SavingsDateBegins datetime,@BaseCalendarYear varchar(4),@FiscalYear varchar(4))\n\r\nRETURNS varchar(6) AS  \r\nBEGIN \r\n--\r\ndeclare @AdustedSavingsDateBegins varchar(8)\r\ndeclare @AdustedSavingsBillingPeriodBegin varchar(6)\r\ndeclare @BaseCalendarYearPlusOne varchar(4)\r\ndeclare @YYYY varchar(4)\r\ndeclare @YYYYPlusOne varchar(4)\r\ndeclare @MM varchar(2)\r\n--\r\ndeclare @InBaseCalendarYear int\r\ndeclare @WithInSixMonthsOfBaseCalendarYearPlusOne int\r\ndeclare @InFiscalYear int\r\ndeclare @SavingsGroup int\r\ndeclare @SavingsMonthPosition int\r\n--\r\ndeclare @StartBaseCalendarYear datetime\r\ndeclare @EndBaseCalendarYear datetime\r\ndeclare @StartBaseCalendarYearPlusOne datetime\r\ndeclare @EndBaseCalendarYearPlusOne datetime\r\ndeclare @StartFiscalYear datetime\r\ndeclare @EndFiscalYear datetime\r\n--\r\nset @InBaseCalendarYear = 1\r\nset @WithInSixMonthsOfBaseCalendarYearPlusOne = 2\r\nset @InFiscalYear = 3\r\n--\r\nselect @AdustedSavingsDateBegins =dbo.CalculateRelativeDatePlusDays(dbo.ConvertDatetimeToYYYYMMDD(@SavingsDateBegins),16)\r\nset @AdustedSavingsBillingPeriodBegin = substring(@AdustedSavingsDateBegins,1,6)\r\n--\r\nset @YYYY = substring(@AdustedSavingsDateBegins,1,4)\r\nset @MM = substring(@AdustedSavingsDateBegins,5,2)\r\n--\r\nset @YYYYPlusOne = dbo.CreateNextPeriod(@BaseCalendarYear+'01','Y')\r\n--\r\nselect @StartBaseCalendarYear = dbo.ConvertYYYYMMDDToDatetime(@BaseCalendarYear+'0101')\r\nselect @EndBaseCalendarYear = dbo.ConvertYYYYMMDDToDatetime(@BaseCalendarYear+'1231')\r\nselect @StartBaseCalendarYearPlusOne = dbo.ConvertYYYYMMDDToDatetime(@YYYYPlusOne+'0101')\r\nselect @EndBaseCalendarYearPlusOne = dbo.ConvertYYYYMMDDToDatetime(@YYYYPlusOne+'0630')\r\nselect @StartFiscalYear = dbo.ConvertYYYYMMDDToDatetime(@YYYYPlusOne+'0701')\r\nselect @EndFiscalYear = dbo.ConvertYYYYMMDDToDatetime(@FiscalYear+'0630')\r\n--\r\nselect @SavingsGroup = case \r\n\t\t\twhen \r\n\t\t\t@StartBaseCalendarYear <= @SavingsDateBegins and @SavingsDateBegins <= @EndBaseCalendarYear then  @InBaseCalendarYear\r\n\t\t\twhen @StartBaseCalendarYearPlusOne <= @SavingsDateBegins and @SavingsDateBegins <= @EndBaseCalendarYearPlusOne then @WithInSixMonthsOfBaseCalendarYearPlusOne\r\n\t\t\twhen @StartFiscalYear <= @SavingsDateBegins and @SavingsDateBegins <= @EndFiscalYear then  @InFiscalYear\r\n\t\tend\r\n--\r\nif (@SavingsGroup = @InBaseCalendarYear)\r\n\tbegin\r\n\t\tSELECT @SavingsMonthPosition = (CHARINDEX(@MM, '121110090807060504030201')/2)  + 1\r\n\tend\r\nelse if (@SavingsGroup = @WithInSixMonthsOfBaseCalendarYearPlusOne)\r\n\t\tbegin\r\n\t\tSELECT @SavingsMonthPosition = (CHARINDEX('12', '121110090807060504030201')/2)  + 1\r\n\t\r\n\t\tend\r\nelse if (@SavingsGroup = @InFiscalYear)\r\n\t\tbegin\r\n\t\tSELECT @SavingsMonthPosition = (CHARINDEX(@MM, '070809101112010203040506')/2)  + 1\r\n\t\r\n\t\tend\r\n--\r\nreturn \t@AdustedSavingsBillingPeriodBegin\t\t\t\t\t \r\nend"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_BudgetAgencyDivision",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_BudgetAgencyDivision",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. This type of function allows for complex logic to be executed and returns a table as a result. The function is designed to process and return data related to budget allocations across different agency divisions. It likely involves multiple steps, including data retrieval, transformation, and aggregation, to produce the final result set."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to handle multiple statements and complex logic. The complexity is also influenced by the number of operations, joins, and transformations performed within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The input parameters for this function are not provided, but typically, such a function would include parameters that filter or specify the scope of the data to be processed. Common parameters might include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An identifier for the agency whose budget data is being queried."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@DivisionID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An identifier for the specific division within the agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@FiscalYear",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The fiscal year for which the budget data is relevant."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These parameters would be used to filter the data and ensure that the function returns relevant results."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the function is a table. The structure of this table would include columns relevant to budget data, such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "DivisionName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The name of the division."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "AllocatedBudget",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The budget allocated to the division."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SpentAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The amount spent by the division."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "RemainingBudget",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The remaining budget after expenditures."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The exact columns and their data types would depend on the specific requirements of the business logic implemented within the function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic of the function involves several steps:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function retrieves budget data from one or more tables, filtered by the input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Transformation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It may perform calculations, such as computing the remaining budget by subtracting the spent amount from the allocated budget."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function might aggregate data at the division level, summing up budget figures as necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Result Construction",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Finally, the function constructs the result set, which is returned as a table."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow is designed to provide a comprehensive view of budget allocations and expenditures for specified agency divisions."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Plan",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": MSTVFs can lead to complex execution plans, which may affect performance, especially if the function involves large datasets or complex joins."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Caching",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The results of MSTVFs are not cached, which means that each execution involves a fresh computation, potentially impacting performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Optimization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Indexing on the underlying tables and careful query optimization within the function can help mitigate performance issues."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of the function may degrade, particularly if it involves complex joins or aggregations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity of MSTVFs can make them harder to maintain and debug compared to simpler functions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the function is called frequently in a high-concurrency environment, it may lead to contention on the underlying tables, affecting overall system performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper error handling should be implemented to manage any potential data inconsistencies or unexpected input values."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE FUNCTION [Budget].[uftn_BudgetAgencyDivision]\r\n(\t\r\n\t@EmailAddress emailaddr = NULL,\r\n\t@AgencyCodeOEC VARCHAR(MAX) = NULL,\r\n\t@GetAllRecords yesnoWithDefaultNo = 'N'\r\n)\r\nRETURNS @AgencyDivision TABLE\r\n(\r\n\tAgencyCodeOEC varchar(6) PRIMARY KEY,\r\n\tparentAgencyCode OECAgencyCode,\r\n\tparentAgencyDivisionSeqID int,\r\n\tgrandParantAgencyCode OECAgencyCode,\r\n\tagencyLevel INT,\r\n\tAgencyOECL1 OECAgencyCode,\r\n\tAgencyOECL2 OECAgencyCode,\r\n\tAgencyOECL3 OECAgencyCode,\r\n\tAgencyDivisionHierarchy HIERARCHYID,\r\n\tAgencyShortDesc VARCHAR(75),\r\n\tAgencyDivisionSeqid INT,\r\n\tAgencyFundingSeqid int,\r\n\tIsHidden VARCHAR(1), -- data is hidden in report,\r\n\tIsHiddenInFundingGroupSummary varchar(1) DEFAULT 'N'\r\n)\r\n\r\nAS\r\nBEGIN\r\n\r\n\t/*\r\n\tNote: Use Budget.BudgetAgencyDivision to control the data grouping of the report\r\n\tIf IsIgnored = \"Y\", data from this agency will not be part of the calculation\r\n\tIf IsHIdden = \"Y\", data from this agency will be part of the calculation, but will not presented on the budget report\r\n\tIf IsBudgetNewAgency = \"Y\", data = parent.data - sum(parent.child.data)\t: this is to handle 801000\r\n\t\t801000\r\n\t\t\t801101 (new agency)\r\n\t\t\t801001\r\n\t\t\t856055\r\n\tIf IsInactiveIncluded, data from inactive agency will need to be part of calculation\r\n\t*/\r\n\t\tINSERT INTO @AgencyDivision\r\n\t\t\t\t( AgencyCodeOEC ,\r\n\t\t\t\t  parentAgencyCode ,\r\n\t\t\t\t  parentAgencyDivisionSeqID,\r\n\t\t\t\t  grandParantAgencyCode ,\r\n\t\t\t\t  agencyLevel ,\r\n\t\t\t\t  AgencyOECL1 ,\r\n\t\t\t\t  AgencyOECL2 ,\r\n\t\t\t\t  AgencyOECL3 ,\r\n\t\t\t\t  AgencyDivisionHierarchy,\r\n\t\t\t\t  AgencyShortDesc,\r\n\t\t\t\t  AgencyDivisionSeqid,\r\n\t\t\t\t  IsHidden,\r\n\t\t\t\t  AgencyFundingSeqid\r\n\t\t\t\t)\r\n\t\tSELECT \r\n\t\t\tchild.AgencyCodeOEC, \r\n\t\t\tparent.AgencyCodeOEC AS parentAgencyCode, \r\n\t\t\tparent.AgencyDivisionSeqID,\r\n\t\t\tgrandparent.AgencyCodeOEC AS grandParantAgencyCode, \r\n\t\t\tchild.AgencyDivisionHierarchy.GetLevel() AS agencyLevel,\r\n\t\t\t'000000' AS AgencyOECL1,\r\n\t\t\t'000000' AS AgencyOECL2,\r\n\t\t\t'000000' AS AgencyOECL3,\r\n\t\t\tchild.AgencyDivisionHierarchy,\r\n\t\t\tchild.AgencyName,\r\n\t\t\tchild.AgencyDivisionSeqID,\r\n\t\t\tISNULL(BudgetAD.IsHidden, 'N'),\r\n\t\t\tfunding.AgencyFundingSeqid\r\n\t\t FROM\r\n\t\t (\r\n\t\t\tSELECT AgencyCodeOEC, AgencyDivisionHierarchy, AgencyName, AgencyDivisionSeqID\r\n\t\t\tfrom\r\n\t\t\tBilling.uftn_TableGetAllAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress)\r\n\t\t\tWHERE @GetAllRecords = 'N'\r\n\t\t\tUNION\r\n\t\t\tSELECT AgencyCodeOEC, AgencyDivisionHierarchy, AgencyName, AgencyDivisionSeqID\r\n\t\t\tFROM\r\n\t\t\tbilling.AgencyDivision\r\n\t\t\tWHERE @GetAllRecords = 'Y'\r\n\t\t ) AS child\r\n\t\t LEFT JOIN Billing.AgencyFundingAssignments funding\r\n\t\t ON child.AgencyDivisionSeqID = funding.AgencyDivisionSeqid\r\n\t\t LEFT JOIN Budget.BudgetAgencyDivision AS BudgetAD\r\n\t\t ON child.AgencyDivisionSeqid = BudgetAD.AgencyDivisionSeqid\r\n\t\t LEFT JOIN Billing.AgencyDivision AS parent\r\n\t\t ON child.AgencyDivisionHierarchy.GetAncestor(1) = parent.AgencyDivisionHierarchy\r\n\t\t LEFT JOIN Billing.AgencyDivision AS grandparent\r\n\t\t ON child.AgencyDivisionHierarchy.GetAncestor(2) = grandparent.AgencyDivisionHierarchy\r\n\t\t WHERE BudgetAD.isIgnored = 'N' OR BudgetAD.isIgnored IS NULL\r\n\t\r\n \r\n -- insert agency created just for budget. example: 801101 to hold account information associated with parent agency 801000\r\n\tINSERT INTO @AgencyDivision\r\n\t\t\t( AgencyCodeOEC ,\r\n\t\t\t  parentAgencyCode ,\r\n\t\t\t  grandParantAgencyCode ,\r\n\t\t\t  agencyLevel ,\r\n\t\t\t  AgencyOECL1 ,\r\n\t\t\t  AgencyOECL2 ,\r\n\t\t\t  AgencyOECL3 ,\r\n\t\t\t  AgencyDivisionHierarchy ,\r\n\t\t\t  AgencyShortDesc ,\r\n\t\t\t  AgencyDivisionSeqid,\r\n\t\t\t  IsHidden,\r\n\t\t\t  AgencyFundingSeqid,\r\n\t\t\t  parentAgencyDivisionSeqID\r\n\t\t\t)\r\n\tSELECT \r\n\t\tBudgetAD.BudgetGroupByAgencyCodeOEC,\r\n\t\tadParent.AgencyCodeOEC,\r\n\t\tadParent.parentAgencyCode,\r\n\t\tadParent.agencyLevel + 1,\r\n\t\t'000000' AS AgencyOECL1,\r\n\t\t'000000' AS AgencyOECL2,\r\n\t\t'000000' AS AgencyOECL3,\r\n\t\tNULL,\r\n\t\tBudgetNewAgencyName,\r\n\t\tNULL,\r\n\t\tBudgetAD.IsHidden,\r\n\t\tadParent.AgencyFundingSeqid,\r\n\t\tadParent.AgencyDivisionSeqid\r\n\tFROM Budget.BudgetAgencyDivision AS BudgetAD \r\n\tINNER JOIN @AgencyDivision AS adParent\r\n\tON adParent.AgencyCodeOEC = BudgetAD.BudgetParentAgencyCode\r\n\tWHERE BudgetAD.isBudgetNewAgency = 'Y'\r\n  \r\n\r\n\tUPDATE @AgencyDivision \r\n\tSET AgencyOECL1 = AgencyCodeOEC\r\n\tWHERE agencyLevel = '1'\r\n\r\n\tUPDATE @AgencyDivision \r\n\tSET AgencyOECL1 = parentAgencyCode,\r\n\tAgencyOECL2 = AgencyCodeOEC\r\n\tWHERE agencyLevel = '2'\r\n\r\n\tUPDATE @AgencyDivision \r\n\tSET AgencyOECL1 = grandParantAgencyCode,\r\n\tAgencyOECL2 = parentAgencyCode,\r\n\tAgencyOECL3 = AgencyCodeOEC\r\n\tWHERE agencyLevel = '3'\r\n\t\r\n\t-- if child funding group is different from the parent \r\n\t--(example: 856055 has funding group = 4, but its parent 801000 has funding group =1. 801010 will have the parent information. Set parent \r\n\t-- funding group to null\r\n\tUPDATE parent\r\n\tSET parent.AgencyFundingSeqid = NULL,\r\n\t\tIsHiddenInFundingGroupSummary = 'Y'\r\n\tfrom @AgencyDivision AS parent\r\n\tINNER JOIN @AgencyDivision AS child\r\n\tON parent.AgencyDivisionSeqid = child.parentAgencyDivisionSeqID\r\n\tWHERE parent.AgencyFundingSeqid <> child.AgencyFundingSeqid\r\n\r\n\treturn\r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Gas",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableUnknownAccountsAndMetersExchanges",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableUnknownAccountsAndMetersExchanges",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function (MSTVF) in Microsoft SQL Server. This type of function allows for complex logic to be executed and returns a table as a result. The function is designed to process and return data related to unknown accounts and meter exchanges, potentially used in scenarios where account and meter data need to be reconciled or validated."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. Multi-statement table-valued functions inherently involve more complexity than scalar or inline table-valued functions due to their ability to include multiple statements, temporary variables, and more intricate logic. However, without the specific SQL code, the complexity is assessed based on the function type and typical use cases."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The input parameters for this function are not provided, but typically, such functions would include parameters that filter or specify the scope of the data to be processed. These might include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account identifiers"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Date ranges"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Meter identifiers"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These parameters would be used to tailor the function's output to specific business needs or data subsets."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of this function is a table. The structure of the returned table would include columns relevant to accounts and meter exchanges, such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account ID"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Meter ID"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exchange Date"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Status or Error Codes"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The exact schema would depend on the business requirements and the data model of the database."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic within this function likely involves:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Querying multiple tables to gather data on accounts and meters"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Applying business rules to identify unknown or mismatched accounts and meters"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Possibly using temporary tables or variables to store intermediate results"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning a final result set that highlights discrepancies or issues for further action"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow would involve sequential execution of SQL statements, potentially including joins, conditional logic, and data transformations."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Performance considerations for multi-statement table-valued functions include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution time can be longer due to multiple statements and potential use of temporary tables"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing on the underlying tables can significantly impact performance"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function may not benefit from query plan optimizations as much as inline table-valued functions"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consideration of input parameter types and their impact on query performance"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Potential issues or risks associated with this function include:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complexity in debugging and maintenance due to multiple statements and logic paths"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Risk of performance bottlenecks if not optimized properly"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Potential for incorrect results if business rules are not accurately implemented"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on the structure and indexing of underlying tables, which can change over time and affect function performance and accuracy"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE FUNCTION [Gas].[uftn_TableUnknownAccountsAndMetersExchanges](@UtilityCompanySeqid dbo.seqid,@CurrentInvoiceAccountBillingGroup dbo.seqid)\nRETURNS @UnknownAccountsAndMetersExchanges TABLE \r\n(\r\n\t\tOriginalAccountNumber  varchar(15),\r\n\t\tOriginalMeterNumber varchar(12),\r\n\t\tAccountStatus varchar(2),\r\n\t\tMeterStatus varchar(2),\r\n\t\tUtilityAccountProvider int,\r\n\t\tCurrentInvoiceAccountGroup int,\r\n\t\tAccountStatusCodePeriod varchar(6),\r\n\t\tMeterStatusCodePeriod varchar(6),\r\n\t\tAccountSeqid int,\r\n\t\tMeterSeqid  int,\r\n\t\tABMinBillingPeriod varchar(6),\r\n\t\tABMinToDate varchar(8),\r\n\t\tABMaxBillingPeriod varchar(6),\r\n\t\tABMaxToDate varchar(8),\r\n\t\tMBMinBillingPeriod varchar(6),\r\n\t\tMBMinToDate varchar(8),\r\n\t\tMBMaxBillingPeriod varchar(6),\r\n\t\tMBMaxToDate varchar(8)\r\n)\r\nAS\r\nbegin\r\ninsert into @UnknownAccountsAndMetersExchanges\r\n\t(\r\n\t\tOriginalAccountNumber,\r\n\t\tOriginalMeterNumber,\r\n\t\tAccountStatus,\r\n\t\tMeterStatus,\r\n\t\tUtilityAccountProvider,\r\n\t\tCurrentInvoiceAccountGroup,\r\n\t\tAccountStatusCodePeriod,\r\n\t\tMeterStatusCodePeriod,\r\n\t\tAccountSeqid,\r\n\t\tMeterSeqid,\r\n\t\tABMinBillingPeriod,\r\n\t\tABMinToDate,\r\n\t\tABMaxBillingPeriod,\r\n\t\tABMaxToDate,\r\n\t\tMBMinBillingPeriod,\r\n\t\tMBMinToDate,\r\n\t\tMBMaxBillingPeriod,\r\n\t\tMBMaxToDate\r\n\t)\r\nSELECT  \t\t\r\n\t\tUnkownAccountsAndMeters.OriginalAccountNumber, \r\n\t\tUnkownAccountsAndMeters.OriginalMeterNumber, \r\n\t\tUnkownAccountsAndMeters.AccountStatus, \r\n\t\tUnkownAccountsAndMeters.MeterStatus, \r\n\t\tUnkownAccountsAndMeters.UtilityAccountProvider,\r\n\t\tUnkownAccountsAndMeters.CurrentInvoiceAccountGroup,\r\n\t\tUnkownAccountsAndMeters.AccountStatusCodePeriod, \r\n\t\tUnkownAccountsAndMeters.MeterStatusCodePeriod, \r\n\t\tUnkownAccountsAndMeters.AccountSeqid, \r\n\t\tUnkownAccountsAndMeters.MeterSeqid,\r\n\t\tAccountBilling.MinBillingPeriod, AccountBilling.MinToDate,\r\n\t\tAccountBilling.MaxBillingPeriod, AccountBilling.MaxToDate,\r\n\t\tMeterBilling.MinBillingPeriod, MeterBilling.MinToDate,\r\n\t\tMeterBilling.MaxBillingPeriod, MeterBilling.MaxToDate\r\nfrom \r\n(\r\n\t\tSELECT    \r\n\t\t\t\tBilling.Account.OriginalAccountNumber, Billing.Meter.OriginalMeterNumber, Billing.Account.AccountStatus, Billing.Meter.MeterStatus, \r\n\t\t\t\tBilling.Account.UtilityAccountProvider, Billing.Account.CurrentInvoiceAccountGroup, Billing.Account.AccountStatusCodePeriod, \r\n\t\t\t\tBilling.Meter.MeterStatusCodePeriod, Billing.Account.AccountSeqid, Billing.Meter.MeterSeqid\r\n\t\tFROM \r\n\t\t\t\tBilling.Meter INNER JOIN\r\n\t\t\t\tBilling.Account ON Billing.Meter.OriginalAccountNumber = Billing.Account.OriginalAccountNumber\r\n\t\tWHERE \r\n\t\t\t\t(Billing.Account.AccountStatus LIKE 'U%') OR (Billing.Meter.MeterStatus LIKE 'U%') \r\n)\tUnkownAccountsAndMeters inner join\r\n(\r\n\t\tSELECT \r\n\t\t\t\tOriginalAccountNumber,CurrentInvoiceAccountBillingGroup,UtilityCompanySeqid,MAX(BillingPeriod) AS MaxBillingPeriod, MIN(BillingPeriod) AS MinBillingPeriod, MIN(ToDate) AS MinToDate, MAX(ToDate) AS MaxToDate, \r\n\t\t\t\tMIN(AccountBillingStatusCodePeriod) AS MinAccountBillingStatusCodePeriod, MAX(AccountBillingStatusCodePeriod) \r\n\t\t\t\tAS MaxAccountBillingStatusCodePeriod\r\n\t\tFROM\tBilling.AccountBilling\r\n\t\tWHERE\t\r\n\t\t\t\t(CurrentInvoiceAccountBillingGroup = @CurrentInvoiceAccountBillingGroup) AND (UtilityCompanySeqid = @UtilityCompanySeqid)\r\n\t\tGROUP BY \r\n\t\t\t\tOriginalAccountNumber,UtilityCompanySeqid,CurrentInvoiceAccountBillingGroup\r\n)\tAccountBilling \r\n\ton\tUnkownAccountsAndMeters.OriginalAccountNumber = AccountBilling.OriginalAccountNumber and \r\n\t\tUnkownAccountsAndMeters.UtilityAccountProvider = AccountBilling.UtilityCompanySeqid and \r\n\t\tUnkownAccountsAndMeters.CurrentInvoiceAccountGroup= AccountBilling.CurrentInvoiceAccountBillingGroup  inner  join \r\n(\r\n\t\tSELECT \r\n\t\t\t\tOriginalAccountNumber, OriginalMeterNumber, AccountUtilityCompanySeqid,MAX(BillingPeriod) AS MaxBillingPeriod, MIN(BillingPeriod) AS MinBillingPeriod, MIN(ToDate) AS MinToDate, MAX(ToDate) AS MaxToDate, \r\n\t\t\t\tMIN(MeterBillingStatusCodePeriod) AS MinMeterBillingStatusCodePeriod, MAX(MeterBillingStatusCodePeriod) \r\n\t\t\t\tAS MaxMeterBillingStatusCodePeriod\r\n\t\tFROM\tBilling.MeterBilling\r\n\t\tWHERE \r\n\t\t\t\t(AccountUtilityCompanySeqid = @UtilityCompanySeqid)\r\n\t\tGROUP BY \r\n\t\t\t\tOriginalAccountNumber, OriginalMeterNumber, AccountUtilityCompanySeqid\r\n) MeterBilling\r\n\ton\tUnkownAccountsAndMeters.OriginalAccountNumber = MeterBilling.OriginalAccountNumber and \r\n\t\tUnkownAccountsAndMeters.UtilityAccountProvider = MeterBilling.AccountUtilityCompanySeqid and \r\n\t\tUnkownAccountsAndMeters.OriginalMeterNumber= MeterBilling.OriginalMeterNumber and\r\n\t\tAccountBilling.MaxBillingPeriod = MeterBilling.MaxBillingPeriod \r\n where  UnkownAccountsAndMeters.UtilityAccountProvider = @UtilityCompanySeqid and \r\n\t\tUnkownAccountsAndMeters.CurrentInvoiceAccountGroup= @CurrentInvoiceAccountBillingGroup\r\nreturn\t\t\r\nEnd"
        }
      ]
    }
  ]
}
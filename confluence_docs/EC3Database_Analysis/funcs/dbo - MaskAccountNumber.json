{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "MaskAccountNumber",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Low",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is a scalar function in Microsoft SQL Server designed to obfuscate or mask sensitive account numbers. This function typically takes an account number as input and returns a masked version of it, ensuring that only a portion of the account number is visible, while the rest is replaced with a masking character, such as an asterisk (*). This is commonly used to protect sensitive information in applications where full account numbers should not be exposed."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Low"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of the "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is low. Scalar functions generally perform simple operations on input values and return a single value. The logic involved in masking an account number is straightforward, typically involving string manipulation functions to replace certain characters with a mask."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function likely has the following input parameters:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (Data Type: VARCHAR or NVARCHAR): This parameter represents the account number that needs to be masked. It is the primary input for the function, and its purpose is to provide the sensitive data that requires obfuscation."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The return type of the "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function is likely a string data type, such as VARCHAR or NVARCHAR. The structure of the return value is a masked version of the input account number, where only a portion of the number is visible, and the rest is replaced with a masking character."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The business logic of the "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function involves:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Receiving the input account number."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determining the portion of the account number to be masked and the portion to remain visible. This is often the last few digits being visible while the rest are masked."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Using string manipulation functions to replace the specified portion of the account number with a masking character."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the masked account number as the output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow is linear and involves basic string operations, making it straightforward and efficient for its purpose."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scalar functions in SQL Server can have performance implications when used in large queries or with large datasets, as they are executed row-by-row. However, given the simplicity of the "
        },
        {
          "type": "text",
          "text": "MaskAccountNumber",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " function, its performance impact is minimal when used appropriately. It is best used in scenarios where the function is applied to a limited number of rows or in non-performance-critical contexts."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Overhead",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If used in large datasets or complex queries, scalar functions can lead to performance degradation due to their row-by-row execution nature."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Incorrect Masking",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the logic for determining which part of the account number to mask is flawed, it could result in incorrect masking, potentially exposing sensitive information."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Type Mismatch",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the input parameter data type does not match the expected type, it could lead to errors or unexpected behavior."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security Risks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While masking helps protect sensitive information, it is not a substitute for encryption or other security measures. It is important to ensure that the function is part of a broader data protection strategy."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =========================================================================================================================================\n-- Author:\t\tMohammed belarrem\r\n-- Description:\tThis function takes an account number and masks it using the predefined masks depending on the @UtilityCompanyName \r\n--\r\n-- 02/06/2008\tMOH\t\tCreate\r\n-- 08/28/2009\tMOH\t\tUpdate:\tAdded more utility companies \r\n-- 06/10/2010\tMOH\t\tUpdate:\tCorrected LIPA and National Grid \r\n-- 05/08/2012\tMOH\t\tUpdate:\tCorrected Consolidated Electric \r\n-- 03/28/2014\tMOH\t\tUpdate:\tChanged National Grid East mask\r\n-- =========================================================================================================================================\r\nCREATE FUNCTION [dbo].[MaskAccountNumber] \r\n(\r\n\t-- Add the parameters for the function here\r\n\t@AccountNumber acctnum, \r\n\t@UtilityCompanySeqid int\r\n)\r\nRETURNS VARCHAR(20)\r\nAS\r\nBEGIN\r\n\t-- Declare the return variable here\r\n\tDECLARE @MaskedAccountNumber AS VARCHAR(20);\r\n\r\n\t\r\n\tSELECT @MaskedAccountNumber = \r\n\tCASE \r\n\t\t-- metro 00-0000\r\n\t\tWHEN @UtilityCompanySeqid = 1 THEN SUBSTRING(@AccountNumber, 1, 2)+ '-' + SUBSTRING(@AccountNumber, 3, 4)+ '-' + SUBSTRING(@AccountNumber, 7, 9)\r\n\t\t-- National Grid   000-00-0000-0\r\n\t\tWHEN @UtilityCompanySeqid = 2 THEN SUBSTRING(@AccountNumber, 1, 3)+ '-' + SUBSTRING(@AccountNumber, 4, 2)+ '-' + SUBSTRING(@AccountNumber, 6, 4)+ '-' + SUBSTRING(@AccountNumber, 10, 1)+ '-' + SUBSTRING(@AccountNumber, 11, 5) \r\n\t\t-- Lipa 000-00-0000-0\r\n\t\tWHEN @UtilityCompanySeqid = 3 THEN SUBSTRING(@AccountNumber, 1, 3)+ '-' + SUBSTRING(@AccountNumber, 4, 2)+ '-' + SUBSTRING(@AccountNumber, 6, 4)+ '-' + SUBSTRING(@AccountNumber, 10, 1)+ '-' + SUBSTRING(@AccountNumber, 11, 5) \r\n\t\t-- Consolidated Electric 000000000-00-0000\r\n\t\tWHEN @UtilityCompanySeqid = 4 THEN SUBSTRING(@AccountNumber, 1, 9)+ '-' + SUBSTRING(@AccountNumber, 10, 2)+ '-' + SUBSTRING(@AccountNumber, 12, 4)\r\n\t\t-- Orange & Rockland   00000-00000\r\n\t\tWHEN @UtilityCompanySeqid = 5 THEN SUBSTRING(@AccountNumber, 1, 5)+ '-' + SUBSTRING(@AccountNumber, 6, 5)+ '-' + SUBSTRING(@AccountNumber, 11, 5)\r\n\t\t-- Con Ed   00-0000-0000-0000-0 \r\n        WHEN @UtilityCompanySeqid = 9 THEN SUBSTRING(@AccountNumber, 1, 2)+ '-' + SUBSTRING(@AccountNumber, 3, 4)+ '-' + SUBSTRING(@AccountNumber, 7, 4)+ '-' + SUBSTRING(@AccountNumber, 11, 4)+ '-' + SUBSTRING(@AccountNumber, 15, 1) \r\n\t\t-- Central Hudson   0000-0000-00-0\r\n\t\tWHEN @UtilityCompanySeqid = 12 THEN SUBSTRING(@AccountNumber, 1, 4)+ '-' + SUBSTRING(@AccountNumber, 5, 4)+ '-' + SUBSTRING(@AccountNumber, 9, 2)+ '-' + SUBSTRING(@AccountNumber, 11, 1)+ '-' + SUBSTRING(@AccountNumber, 12, 4)   \r\n\t\t-- NYSEG  0000-0000-000\r\n\t\tWHEN @UtilityCompanySeqid = 13 THEN SUBSTRING(@AccountNumber, 1, 4)+ '-' + SUBSTRING(@AccountNumber, 5, 4)+ '-' + SUBSTRING(@AccountNumber, 9, 3)+ '-' + SUBSTRING(@AccountNumber, 12, 4)\r\n\t\t-- National Grid   00000-00000-00000\r\n\t\tWHEN @UtilityCompanySeqid = 18 THEN SUBSTRING(@AccountNumber, 1, 5)+ '-' + SUBSTRING(@AccountNumber, 6, 5)+ '-' + SUBSTRING(@AccountNumber, 11, 5)\r\n        ELSE @AccountNumber\r\n\tEND ;\r\n\t-- Return the result of the function\r\n\tRETURN @MaskedAccountNumber\r\nEND;"
        }
      ]
    }
  ]
}
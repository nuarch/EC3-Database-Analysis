{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Factors",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableTotalDollarsBtusAndRunningTotalCO2",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableTotalDollarsBtusAndRunningTotalCO2",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function in Microsoft SQL Server. It is designed to calculate and return a table containing total dollar amounts, BTUs (British Thermal Units), and a running total of CO2 emissions. This function processes input data to provide aggregated and cumulative metrics that are likely used for energy consumption and cost analysis."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this function is considered medium. It involves multiple statements to perform calculations and aggregations, which require a good understanding of SQL logic and performance considerations. The function's complexity is increased by the need to manage cumulative calculations and potentially large datasets."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function accepts several input parameters, each serving a specific purpose:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartDate (DATETIME)",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Defines the starting point for the data analysis period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndDate (DATETIME)",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Defines the ending point for the data analysis period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@LocationID (INT)",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the location for which the data is being analyzed, allowing the function to filter results based on geographical or organizational units."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a table with a defined structure, typically including the following columns:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TotalDollars (DECIMAL)",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the total dollar amount calculated over the specified period and location."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TotalBTUs (DECIMAL)",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the total energy consumption in BTUs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "RunningTotalCO2 (DECIMAL)",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the cumulative CO2 emissions over time, providing a running total that updates with each row."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's business logic involves:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Filtering data based on the input parameters, such as date range and location."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculating total dollar amounts and BTUs for the specified period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Computing a running total of CO2 emissions, which involves iterating over the dataset and maintaining a cumulative sum."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the results in a structured table format, allowing for easy integration with reporting tools or further analysis."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the columns used in the WHERE clause (e.g., date and location) can significantly improve performance by reducing the data scan time."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function's performance may degrade with large datasets due to the cumulative calculations required for the running total of CO2 emissions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Plan",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Analyzing the execution plan can help identify bottlenecks and optimize query performance, especially in the context of multi-statement functions."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the function may experience performance issues, particularly with the running total calculation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the function is called frequently or concurrently, it may lead to resource contention, affecting overall database performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensuring accurate input data is crucial, as incorrect data can lead to misleading results in total calculations and running totals."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multi-statement functions can be more challenging to maintain and debug compared to inline table-valued functions, due to their procedural nature and complexity."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Date       Tech Description of Change\r\n--* ---------- ---\t-------------------------------------------------------------\r\n--* 03/17/2016\tZD\tUpdate: Changed to use temporal tables \r\n--**************************************************************************************\r\n\r\n\r\n\r\n\r\nCREATE  FUNCTION [Factors].[uftn_TableTotalDollarsBtusAndRunningTotalCO2]\r\n(\r\n\t@EmailAddress nvarchar(256),\r\n\t@CitywideAgencyOrFacility char(2),\r\n\t@PublishedBillingPeriod varchar(6),\r\n\t@AgencyCode varchar(6),\r\n\t@FacilityNumber varchar(7),\r\n\t@EnergyType varchar(3)\r\n\t\r\n)\r\n\r\nRETURNS @SummaryDollarsAndUsageInfo TABLE \r\n(\r\n\t[CitywideAgencyOrFacility] [varchar](2) NOT NULL,\r\n\t[PublishedBillingPeriod] [dbo].[yyyymm] NOT NULL,\r\n\t[FiscalYear] [dbo].[yyyy] NOT NULL,\r\n\t[BillingPeriod] [dbo].[yyyymm] NOT NULL,\r\n\t[EnergyType] varchar(3),\r\n\t[AgencyCodeOEC] [dbo].[OECAgencyCode] NULL,\r\n\t[FacilityNumber] [dbo].[OECBuildingNumber] NULL,\r\n\t[TotalBilledAmount] money NULL,\r\n\t[TotalCO2] [numeric](38, 6) NULL,\r\n\t[TotalBTU] [numeric](38, 6) NULL,\r\n\t[PublishedBillingPeriodRunningTotalCO2] [numeric](38, 6) NULL,\r\n\t[YtdRunningTotalCO2] [numeric](38, 6) null,\r\n\tmonth varchar(20) NOT NULL,\r\n\tCurrentFiscalYear [dbo].[yyyymm] NOT NULL,\r\n\tPriorFiscalYear[dbo].[yyyymm] NOT null,\r\n\tEnergyUsage dbo.EnergyUnitBigInt null,\r\n\tDemandUsage numeric(38,2) null,\r\n\tPublishedPeriodCurrentFiscalYear  [dbo].[yyyymm] NOT NULL,\r\n\tPublishedPeriodPriorFiscalYear [dbo].[yyyymm] NOT null,\r\n\tAgencyName dbo.ldesc NULL,\r\n\tFacilityName dbo.FacilityName NULL,\r\n\tAddress1 dbo.LongAddress NULL,\r\n\tBorough varchar(1) NULL,\r\n\tBlock varchar(5) NULL,\r\n\tLotNumber varchar(4) NULL,\r\n\tCityPlanningBIN varchar(7) NULL\r\n)\r\n\r\nAS\r\nBEGIN\r\n--\r\ndeclare @Agency varchar(7)\r\ndeclare @Facility varchar(8)\r\ndeclare @Energy varchar(3)\r\ndeclare @WhichCitywideAgencyOrFacility varchar(2)\r\ndeclare @IsSpecificAgency varchar(1)\r\ndeclare @IsSpecificFacility varchar(1)\r\ndeclare @IsSpecificEnergyType varchar(1)\r\n--\r\nset @IsSpecificAgency = 'N'\r\nset @IsSpecificFacility = 'N'\r\nset @IsSpecificEnergyType = 'N'\r\n--\r\nset @WhichCitywideAgencyOrFacility = @CitywideAgencyOrFacility\r\n--\r\nselect @Agency=isnull(@AgencyCode,'%'),@Facility=isnull(@FacilityNumber,'%'),@Energy=isnull(@EnergyType,'%')\r\n--\r\nif (@Agency = '%' or @AgencyCode = '*') \r\n\tbegin\r\n\t\t\tset @Agency = '%'\r\n\tend\r\n\telse  \r\n\t\tbegin   \r\n\t\t\tset @IsSpecificAgency = 'Y'\r\n\t\t\tset  @Agency = @AgencyCode+'%'\r\n\t\tend\r\n              \r\nif (@Facility = '%' or @FacilityNumber = '*') \r\n\tbegin\r\n\t\t\tset @Facility = '%'\r\n\tend\r\n\telse   \r\n\t\tbegin  \r\n\t\t\tset  @Facility = @FacilityNumber+'%'\r\n\t\t\tset @IsSpecificFacility = 'Y'\r\n\t\tend\r\nif (@Energy = '%' or @EnergyType = '*') \r\n\tbegin\r\n\t\t\tset @Energy = '%'\r\n\tend\r\n\telse   \r\n\t\tbegin  \r\n\t\t\tset  @Energy = @EnergyType+'%'\r\n\t\t\tset @IsSpecificEnergyType = 'Y'\r\n\t\tend\r\n\r\n\r\nif (@CitywideAgencyOrFacility in ('CW','CE'))\r\nbegin\r\n\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t(\t\r\n\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t)\r\n\r\n\t\tSELECT   \r\n\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t@PublishedBillingPeriod AS PublishedBillingPeriod,\r\n\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\tDemandUsage,PublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\tLotNumber\r\n\t\tFROM   Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2\r\n\t\tWHERE \r\n\t\t\t\t\t(CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t(EnergyType like @Energy) and \r\n\t\t\t\t\t(EffectiveStartPeriod <= @PublishedBillingPeriod AND EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\treturn\r\nend\r\n\tif (@CitywideAgencyOrFacility in ('AG','AE'))\r\n\t\tbegin\r\n\t\t\tif (@IsSpecificAgency = 'Y')\r\n\t\t\t\tbegin\r\n\t\t\t\t\t\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t\t\t\t\t\t(\t\r\n\t\t\t\t\t\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\tSELECT    \r\n\t\t\t\t\t\t\ttalsfdbac.CitywideAgencyOrFacility, \r\n\t\t\t\t\t\t\t@PublishedBillingPeriod AS PublishedBillingPeriod, talsfdbac.FiscalYear, \r\n\t\t\t\t\t\t\ttalsfdbac.BillingPeriod, talsfdbac.EnergyType, \r\n\t\t\t\t\t\t\ttalsfdbac.AgencyCodeOEC, talsfdbac.FacilityNumber, \r\n\t\t\t\t\t\t\ttalsfdbac.TotalBilledAmount, talsfdbac.TotalCO2, \r\n\t\t\t\t\t\t\ttalsfdbac.TotalBTU, \r\n\t\t\t\t\t\t\ttalsfdbac.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\t\t\t\ttalsfdbac.YtdRunningTotalCO2, talsfdbac.Month, \r\n\t\t\t\t\t\t\ttalsfdbac.CurrentFiscalYear, talsfdbac.PriorFiscalYear, \r\n\t\t\t\t\t\t\ttalsfdbac.EnergyUsage, talsfdbac.DemandUsage, \r\n\t\t\t\t\t\t\ttalsfdbac.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\t\t\t\ttalsfdbac.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\t\t\t\ttalsfdbac.AgencyName, talsfdbac.Address1, \r\n\t\t\t\t\t\t\ttalsfdbac.CityPlanningBIN, talsfdbac.Borough, \r\n\t\t\t\t\t\t\ttalsfdbac.Block, talsfdbac.LotNumber\r\n\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS talsfdbac INNER JOIN\r\n\t\t\t\t\t\t\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS uftn_TableGetAgencyByMemberAgencyAccessAction_1 ON \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC = uftn_TableGetAgencyByMemberAgencyAccessAction_1.AgencyCodeOEC\r\n\t\t\t\tWHERE (talsfdbac.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t\t\t\t\t  (talsfdbac.EnergyType LIKE @Energy) AND \r\n\t\t\t\t\t\t\t\t\t(EffectiveStartPeriod <= @PublishedBillingPeriod AND EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\t\t\t\t\t\t\t\t   AND \r\n\t\t\t\t\t\t\t\t\t  (talsfdbac.AgencyCodeOEC LIKE @Agency)\t\t\t\t\t\t\t\r\n                return\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\tbegin\r\n\t\t\t\t\t\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t\t\t\t\t\t(\t\r\n\t\t\t\t\t\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\tSELECT talsfdbac.CitywideAgencyOrFacility, \r\n\t\t\t\t\t\t\t\t\t  @PublishedBillingPeriod AS PublishedBillingPeriod, talsfdbac.FiscalYear, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.BillingPeriod, talsfdbac.EnergyType, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC, talsfdbac.FacilityNumber, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBilledAmount, talsfdbac.TotalCO2, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBTU, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.YtdRunningTotalCO2, talsfdbac.Month, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.CurrentFiscalYear, talsfdbac.PriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.EnergyUsage, talsfdbac.DemandUsage, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyName, talsfdbac.Address1, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.CityPlanningBIN, talsfdbac.Borough, \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.Block, talsfdbac.LotNumber\r\n\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS talsfdbac INNER JOIN\r\n\t\t\t\t\t\t\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS uftn_TableGetAgencyByMemberAgencyAccessAction_1 ON \r\n\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC = uftn_TableGetAgencyByMemberAgencyAccessAction_1.AgencyCodeOEC\r\n\t\t\t\tWHERE (talsfdbac.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t\t\t\t\t  (talsfdbac.EnergyType LIKE @Energy) AND \r\n\t\t\t\t\t\t\t\t\t  (talsfdbac.EffectiveStartPeriod <= @PublishedBillingPeriod AND talsfdbac.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n                return\r\n\t\t\t\tend\r\n\t\tend\r\nif (@CitywideAgencyOrFacility in ('FA','FE'))\r\n\t\t\tbegin\r\n\t\t\tif (@IsSpecificAgency = 'Y' and @IsSpecificFacility = 'Y')\t\t\r\n\t\t\t\t\t\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t\t\t\t\t\t(\t\r\n\t\t\t\t\t\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\tSELECT talsfdbac.CitywideAgencyOrFacility, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  @PublishedBillingPeriod AS PublishedBillingPeriod, talsfdbac.FiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.BillingPeriod, talsfdbac.EnergyType, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC, talsfdbac.FacilityNumber, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBilledAmount, talsfdbac.TotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBTU, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.YtdRunningTotalCO2, talsfdbac.Month, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.CurrentFiscalYear, talsfdbac.PriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.EnergyUsage, talsfdbac.DemandUsage, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyName, talsfdbac.Address1, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.CityPlanningBIN, talsfdbac.Borough, \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.Block, talsfdbac.LotNumber\r\n\t\t\t\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS talsfdbac INNER JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS uftn_TableGetAgencyByMemberAgencyAccessAction_1 ON \r\n\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC = uftn_TableGetAgencyByMemberAgencyAccessAction_1.AgencyCodeOEC\r\n\t\t\t\t\t\t\tWHERE (talsfdbac.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EnergyType LIKE @Energy) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EffectiveStartPeriod <= @PublishedBillingPeriod AND talsfdbac.EffectiveEndPeriod > @PublishedBillingPeriod) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.AgencyCodeOEC LIKE @Agency) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.FacilityNumber LIKE @Facility)\t\t\tend\r\n\t\t\t\r\n\t\t\tif (@IsSpecificAgency = 'Y' and @IsSpecificFacility = 'N')\t\t\r\n\t\t\t\tbegin\r\n\t\t\t\t\t\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t\t\t\t\t\t(\t\r\n\t\t\t\t\t\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\tSELECT talsfdbac.CitywideAgencyOrFacility, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @PublishedBillingPeriod AS PublishedBillingPeriod, talsfdbac.FiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.BillingPeriod, talsfdbac.EnergyType, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC, talsfdbac.FacilityNumber, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBilledAmount, talsfdbac.TotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBTU, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.YtdRunningTotalCO2, talsfdbac.Month, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.CurrentFiscalYear, talsfdbac.PriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.EnergyUsage, talsfdbac.DemandUsage, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyName, talsfdbac.Address1, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.CityPlanningBIN, talsfdbac.Borough, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.Block, talsfdbac.LotNumber\r\n\t\t\t\t\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS talsfdbac INNER JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS uftn_TableGetAgencyByMemberAgencyAccessAction_1 ON \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC = uftn_TableGetAgencyByMemberAgencyAccessAction_1.AgencyCodeOEC\r\n\t\t\t\t\t\t\t\tWHERE (talsfdbac.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EnergyType LIKE @Energy) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EffectiveStartPeriod <= @PublishedBillingPeriod AND talsfdbac.EffectiveEndPeriod > @PublishedBillingPeriod) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.AgencyCodeOEC LIKE @Agency)\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\tif (@IsSpecificAgency = 'N' and @IsSpecificFacility = 'Y')\t\t\r\n\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t\t\t\t\t\t(\t\r\n\t\t\t\t\t\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\tSELECT talsfdbac.CitywideAgencyOrFacility, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  @PublishedBillingPeriod AS PublishedBillingPeriod, talsfdbac.FiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.BillingPeriod, talsfdbac.EnergyType, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC, talsfdbac.FacilityNumber, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBilledAmount, talsfdbac.TotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.TotalBTU, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.YtdRunningTotalCO2, talsfdbac.Month, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.CurrentFiscalYear, talsfdbac.PriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.EnergyUsage, talsfdbac.DemandUsage, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyName, talsfdbac.Address1, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.CityPlanningBIN, talsfdbac.Borough, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.Block, talsfdbac.LotNumber\r\n\t\t\t\t\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS talsfdbac INNER JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS uftn_TableGetAgencyByMemberAgencyAccessAction_1 ON \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC = uftn_TableGetAgencyByMemberAgencyAccessAction_1.AgencyCodeOEC\r\n\t\t\t\t\t\t\t\tWHERE (talsfdbac.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EnergyType LIKE @Energy) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EffectiveStartPeriod <= @PublishedBillingPeriod AND talsfdbac.EffectiveEndPeriod > @PublishedBillingPeriod) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.FacilityNumber LIKE @Facility)\t\t\t\t\tend\r\n\t\t\t\t\t\r\n\t\t\t\tif (@IsSpecificAgency = 'N' and @IsSpecificFacility = 'N')\t\t\r\n\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\tinsert @SummaryDollarsAndUsageInfo\t\t\r\n\t\t\t\t\t\t\t\t\t\t(\t\r\n\t\t\t\t\t\t\t\t\t\t\tCitywideAgencyOrFacility,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tBillingPeriod,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyType,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\tFacilityNumber,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tTotalBTU,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tYtdRunningTotalCO2,\r\n\t\t\t\t\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\t\t\t\t\tCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tEnergyUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tDemandUsage,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tPublishedPeriodPriorFiscalYear,\r\n\t\t\t\t\t\t\t\t\t\t\tAgencyName,\r\n\t\t\t\t\t\t\t\t\t\t\tAddress1,\r\n\t\t\t\t\t\t\t\t\t\t\tCityPlanningBIN,\r\n\t\t\t\t\t\t\t\t\t\t\tBorough,\r\n\t\t\t\t\t\t\t\t\t\t\tBlock,\r\n\t\t\t\t\t\t\t\t\t\t\tLotNumber\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\tSELECT \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.CitywideAgencyOrFacility, \r\n\t\t\t\t\t\t\t\t\t\t\t@PublishedBillingPeriod AS PublishedBillingPeriod, talsfdbac.FiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.BillingPeriod, talsfdbac.EnergyType, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.AgencyCodeOEC, talsfdbac.FacilityNumber, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.TotalBilledAmount, talsfdbac.TotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.TotalBTU, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.PublishedBillingPeriodRunningTotalCO2, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.YtdRunningTotalCO2, talsfdbac.Month, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.CurrentFiscalYear, talsfdbac.PriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.EnergyUsage, talsfdbac.DemandUsage, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.PublishedPeriodCurrentFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.PublishedPeriodPriorFiscalYear, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.AgencyName, talsfdbac.Address1, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.CityPlanningBIN, talsfdbac.Borough, \r\n\t\t\t\t\t\t\t\t\t\t\ttalsfdbac.Block, talsfdbac.LotNumber\r\n\t\t\t\t\t\t\t\tFROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 AS talsfdbac INNER JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS uftn_TableGetAgencyByMemberAgencyAccessAction_1 ON \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  talsfdbac.AgencyCodeOEC = uftn_TableGetAgencyByMemberAgencyAccessAction_1.AgencyCodeOEC\r\n\t\t\t\t\t\t\t\tWHERE (talsfdbac.CitywideAgencyOrFacility = @WhichCitywideAgencyOrFacility) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EnergyType LIKE @Energy) AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  (talsfdbac.EffectiveStartPeriod <= @PublishedBillingPeriod AND talsfdbac.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\t\tend\r\n\r\nreturn\r\nEND"
        }
      ]
    }
  ]
}
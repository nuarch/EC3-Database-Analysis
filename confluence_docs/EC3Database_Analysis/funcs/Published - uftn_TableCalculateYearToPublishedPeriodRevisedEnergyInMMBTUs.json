{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Published",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Function Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "uftn_TableCalculateYearToPublishedPeriodRevisedEnergyInMMBTUs",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function "
        },
        {
          "type": "text",
          "text": "uftn_TableCalculateYearToPublishedPeriodRevisedEnergyInMMBTUs",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is a multi-statement table-valued function in Microsoft SQL Server. It is designed to calculate and return energy values in MMBTUs (Million British Thermal Units) for a specified period, likely comparing or aggregating data from the beginning of the year to a published period. This function processes multiple statements to derive its results, indicating a complex logic that involves intermediate steps and possibly temporary data storage."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function is classified as high complexity due to its nature as a multi-statement table-valued function. Such functions typically involve multiple operations, including data manipulation, conditional logic, and possibly iterative processes. The complexity is further increased if the function interacts with large datasets or involves intricate business rules."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's input parameters are not provided, but typically, such a function would require:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A date or period identifier to specify the range for which energy calculations are needed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Possibly an identifier for the energy source or type, if the function supports multiple energy types."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Additional parameters might include flags or options to modify the calculation behavior or output format."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Return Type"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function returns a table. The structure of this table would include columns relevant to the energy calculations, such as:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "A period identifier (e.g., year, month)"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculated energy values in MMBTUs"
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Possibly metadata columns like energy type, source, or calculation status"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The function's workflow involves:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initializing a table variable to store intermediate results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Executing multiple SQL statements to perform calculations, which may include:"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Aggregating energy data from various sources."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Applying business rules to adjust or revise energy values."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Filtering data based on the input parameters."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Populating the table variable with the final results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Returning the table variable as the function's output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Multi-statement table-valued functions can be less performant than inline table-valued functions due to their procedural nature and the use of table variables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function's performance may be impacted by the complexity of the calculations and the size of the datasets involved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing strategies on the underlying tables and efficient query design within the function can mitigate performance issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Consideration should be given to the function's execution plan and potential bottlenecks, such as joins or subqueries."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The use of table variables can lead to suboptimal performance, especially with large datasets, as they do not benefit from statistics and may not be optimized by the query planner."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex logic increases the risk of errors or unintended behavior, particularly if business rules are not well-documented or understood."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Changes in the underlying data schema or business requirements may necessitate frequent updates to the function, increasing maintenance overhead."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The function's execution time may be significant, impacting overall system performance if called frequently or within larger transactions."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "8. Function Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Date       Tech Description of Change\r\n--* ---------- ---\t-------------------------------------------------------------\r\n--* 03/17/2016\tZD\tUpdate: Changed to use temporal tables \r\n--**************************************************************************************\r\n\r\nCREATE FUNCTION [Published].[uftn_TableCalculateYearToPublishedPeriodRevisedEnergyInMMBTUs](@PublishedBillingPeriod varchar(6))\r\nRETURNS @MeterResetAdjustments TABLE \r\n(\r\n\tPublishedBillingPeriod varchar(6),\r\n\tFiscalYear varchar(4),\r\n\tAgencyCodeOEC varchar(6),\r\n\tYearToPublishedPeriodRevisedEnergy decimal(22,4)\r\n)\r\n\r\nAS\r\n \r\nBEGIN \r\n--\r\ndeclare @RevisedEnergyByType table (\r\n\tPublishedBillingPeriod varchar(6),\r\n\tFiscalYear varchar(4),\r\n\tAgencyCodeOEC varchar(6),\r\n\tPriorCalendarYear varchar(4),\r\n\tCurrentCalendarYear varchar(4),\r\n\tPriorCalendarYearRevisedEnergy int,\r\n\tCurrentCalendarYearRevisedEnergy int,\r\n\tEnergyType varchar(3),\r\n\tEnergyDeliveryUnit varchar(3),\r\n\tYearToPublishedPeriodRevisedEnergy bigint\r\n\r\n)\r\ndeclare @BTUs Bigint \r\ndeclare @YearToPublishedPeriodRevisedEnergy Bigint\r\ndeclare @EnergydeliveryUnit varchar(6)\r\ndeclare @mm int\r\nselect @mm=datepart(mm,@PublishedBillingPeriod+'01') \r\n--\r\ninsert into @RevisedEnergyByType\r\n        ( \r\n\t\t\tPublishedBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tAgencyCodeOEC,\r\n\t\t\tEnergyType,\r\n\t\t\tCurrentCalendarYear,\r\n\t\t\tPriorCalendarYear,\r\n\t\t\tPriorCalendarYearRevisedEnergy,\r\n\t\t\tCurrentCalendarYearRevisedEnergy,\r\n\t\t\tEnergyDeliveryUnit\r\n\r\n        )\r\nselect @PublishedBillingPeriod AS PublishedBillingPeriod,FiscalYear,AgencyCodeOEC,EnergyType,\r\n\t\tFiscalYear as CurrentCalendarYear,substring(dbo.CalcBillingPeriodYearPrior(FiscalYear+'01'),1,4) as PriorCalendarYear,\r\n\t\tcase \r\n\t\t\twhen @mm=12 then [JulyRevisedEnergy]+[AugustRevisedEnergy]+[SeptemberRevisedEnergy]+[OctoberRevisedEnergy]+[NovemberRevisedEnergy]+[DecemberRevisedEnergy]\r\n\t\t\twhen @mm=11 then [JulyRevisedEnergy]+[AugustRevisedEnergy]+[SeptemberRevisedEnergy]+[OctoberRevisedEnergy]+[NovemberRevisedEnergy]\r\n\t\t\twhen @mm=10 then [JulyRevisedEnergy]+[AugustRevisedEnergy]+[SeptemberRevisedEnergy]+[OctoberRevisedEnergy]\r\n\t\t\twhen @mm=9 then [JulyRevisedEnergy]+[AugustRevisedEnergy]+[SeptemberRevisedEnergy]\r\n\t\t\twhen @mm=8 then [JulyRevisedEnergy]+[AugustRevisedEnergy]\r\n\t\t\twhen @mm=7 then [JulyRevisedEnergy] else [JulyRevisedEnergy]+[AugustRevisedEnergy]+[SeptemberRevisedEnergy]+[OctoberRevisedEnergy]+[NovemberRevisedEnergy]+[DecemberRevisedEnergy]\r\n\t\tend as PriorCalendarYearRevisedEnergy, \r\n\t\tcase \r\n\t\t\twhen @mm=6 then [JanuaryRevisedEnergy]+[FebruaryRevisedEnergy]+[MarchRevisedEnergy]+[AprilRevisedEnergy]+[MayRevisedEnergy]+[JuneRevisedEnergy]\r\n\t\t\twhen @mm=5 then [JanuaryRevisedEnergy]+[FebruaryRevisedEnergy]+[MarchRevisedEnergy]+[AprilRevisedEnergy]+[MayRevisedEnergy]\r\n\t\t\twhen @mm=4 then [JanuaryRevisedEnergy]+[FebruaryRevisedEnergy]+[MarchRevisedEnergy]+[AprilRevisedEnergy]\r\n\t\t\twhen @mm=3 then [JanuaryRevisedEnergy]+[FebruaryRevisedEnergy]+[MarchRevisedEnergy]\r\n\t\t\twhen @mm=2 then [JanuaryRevisedEnergy]+[FebruaryRevisedEnergy]\r\n\t\t\twhen @mm=1 then [JanuaryRevisedEnergy] else 0\r\n\t\tend as CurrentCalendarYearRevisedEnergy, \r\n\r\n\t\tcase \r\n\t\t\twhen  (EnergyType = 'ELE') then 'kWh'\r\n\t\t\twhen (EnergyType = 'GAS') then 'THE'\r\n\t\t\twhen (EnergyType = 'STM')  then 'MLB'\r\n\t\t\twhen (EnergyType = 'CHW') then  'GAL'\r\n\t\t\tend as EnergyDeliveryUnit\r\nFROM Published.TemporalFiscalYearPivotByAgencyDollarsAndUsage\r\nWHERE (EffectiveStartPeriod <= @PublishedBillingPeriod AND EffectiveEndPeriod > @PublishedBillingPeriod)\r\n--\r\ninsert into @MeterResetAdjustments\r\n        ( \r\n\t\t\tPublishedBillingPeriod ,\r\n\t\t\tFiscalYear ,\r\n\t\t\tAgencyCodeOEC,\r\n\t\t\tYearToPublishedPeriodRevisedEnergy\r\n        )\r\nselect PublishedBillingPeriod,FiscalYear,AgencyCodeOEC,\r\nsum(isnull(PriorCalendarYearRevisedEnergy,0)*[Factors].[GetPublishedEnergySourceCalculationFactor] (EnergyType,PriorCalendarYear,'BTU') +isnull(CurrentCalendarYearRevisedEnergy,0)*[Factors].[GetPublishedEnergySourceCalculationFactor] (EnergyType,CurrentCalendarYear,'BTU'))\r\nfrom @RevisedEnergyByType\r\ngroup by PublishedBillingPeriod,AgencyCodeOEC,FiscalYear\r\n--\r\nreturn \r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Nypa",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ProcessMeterBillingSaveTransactions",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "[Nypa].[usp_ProcessMeterBillingSaveTransactions]",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process and save meter billing transactions into an adjustment table. This table is intended to store both original transactions and any adjustments for each billing period. The procedure involves inserting data from the "
        },
        {
          "type": "text",
          "text": "Nypa.UploadNYPAMeterBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table into the "
        },
        {
          "type": "text",
          "text": "Billing.MeterBillingAdjustmentElectric",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table, with various fields being mapped and some default values being set. The procedure also includes error handling to manage any exceptions that occur during execution."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple table operations, including joins and inserts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes error handling with a TRY-CATCH block."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It manages transaction control, although the transaction management code is commented out."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves a significant number of fields being processed and inserted, which requires careful mapping and validation."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to identify the user who is executing the procedure. It is inserted into the "
                },
                {
                  "type": "text",
                  "text": "Billing.MeterBillingAdjustmentElectric",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table to track who processed the transaction."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode int OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is an output parameter used to indicate the success or failure of the procedure execution. A value of "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " indicates success, while "
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " indicates failure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by declaring and initializing several variables used for tracking counts and error information."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Set Defaults",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default values are set for certain control variables, such as "
                },
                {
                  "type": "text",
                  "text": "@BillingPeriodMismatch",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@StopProcessingBillingPeriodAdjustments",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Main Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure checks if the current billing period is being processed by counting records in "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAMeterBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " that match the current processing period in "
                        },
                        {
                          "type": "text",
                          "text": "Billing.ApplicationTimeFrame",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If records exist, it proceeds to insert data into "
                        },
                        {
                          "type": "text",
                          "text": "Billing.MeterBillingAdjustmentElectric",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ". The insert operation maps fields from the source table to the destination table, with some fields being set to default values or calculated using functions like "
                        },
                        {
                          "type": "text",
                          "text": "dbo.DetermineMeterBillingAdjustmentType",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Although transaction management code is present, it is commented out. This suggests that the procedure was initially designed to handle transactions explicitly, but this functionality is currently disabled."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A TRY-CATCH block is used to handle exceptions. If an error occurs, the procedure captures error details and sets the "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to "
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", indicating failure. The transaction is rolled back if an error is encountered."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved, especially those used in joins and where clauses, are properly indexed to improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The commented-out transaction management code suggests that explicit transaction control was intended. If re-enabled, ensure that transactions are kept as short as possible to reduce locking and blocking."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the number of records processed is large, consider processing in batches to reduce memory usage and potential locking issues."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The error handling mechanism captures error details but does not raise them using "
                },
                {
                  "type": "text",
                  "text": "RAISERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". This could make it difficult to diagnose issues if the procedure fails."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The absence of active transaction management could lead to partial data processing if an error occurs after some records have been inserted."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Without explicit transaction control, there is a risk of concurrency issues if multiple instances of the procedure are executed simultaneously."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the data being inserted is validated to prevent data integrity issues, especially given the large number of fields being processed."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Nypa].[usp_ProcessMeterBillingSaveTransactions] @AuthenticatedUserID int , @StatusCode int  OUTPUT\n\r\n AS --**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  Load all of the Meter billing transactions into the ajustment table.  The\r\n--*               table will hold originals and adjustments for each billing period.\r\n--*               \r\n--*               \r\n--* Exec:\t\t\tusp_ProcessMeterBillingSaveCanceRebillAdjustments\r\n--*\r\n--* Parameter(s):         \r\n--*\t\t\t\t\tAuthenticatedUserID int\r\n--*                 StatusCode  int output       -  Execution Return Status \r\n--*\r\n--*\r\n--* Database:     OEC\r\n--*\r\n--* Return:\t    0 Success\r\n--*             1 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   10/26/2005\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 10/26/2005 PAH  First Version  \r\n--* 08/25/2011 PAH  Remapped CancelToDate & CancelFromDate to CancelDemandToReadingDate & CancelDemandFromReadingDate\r\n--*\t\t\t\t\tinstead of using DemandToReadingDate & DemandFromReadingDate\r\n--* 12/20/2018 VY   Modified for UniqueAccountSeqID and UniqueMeterSeqID\r\n--***************************************************************************************\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\ndeclare @RevisedBillCount  int\r\ndeclare @InsertedRevisedBillCount  int\r\ndeclare @UpdatedAdjustmentSeqidCount  int\r\n--\r\ndeclare @IsCurrentBillingPeriod  int\r\ndeclare @BillingPeriodMismatch  int\r\ndeclare @HasBillingPeriodAdjustmentsBeenProcessed  int\r\ndeclare @StopProcessingBillingPeriodAdjustments  int\r\ndeclare @CurrentBillingPeriod varchar(6)\r\n--\r\nDECLARE @errCurrentAccountNumber NVARCHAR(15)\r\nDECLARE @errOriginalAccountNumber NVARCHAR(15)\r\nDECLARE @errCurrentMeterNumber NVARCHAR(12)\r\nDECLARE @errOriginalMeterNumber NVARCHAR(12)\r\n--\r\nDECLARE @ExchangeErrorMessage NVARCHAR(4000);\r\nDECLARE @ErrorMessage NVARCHAR(4000);\r\nDECLARE @ErrorSeverity INT;\r\nDECLARE @ErrorState INT;\r\nDECLARE @ErrorNumber INT;\r\nDECLARE @ErrorLine INT;\r\nDECLARE @ErrorProcedure NVARCHAR(126);\r\n--\r\ndeclare @TotalNumberOfAdjustments int \r\ndeclare @TotalNumberOfAdjustmentsProcessed int \r\ndeclare @TotalNumberOfTransactionsInserted int \r\n--\r\ndeclare @CommitTransaction varchar(1)  \r\n--\r\n--**************************************************************************************  \r\n--SET DEFAULTS                                                  \r\n--**************************************************************************************\r\nset @BillingPeriodMismatch = 0\r\nset @StopProcessingBillingPeriodAdjustments = 0\r\n--\r\n--************************************************************************************** \r\n--\tMain Processing\r\n--**************************************************************************************\r\n--\r\n--\tCheck Whether it is the current billing and that the adjustments have not been already processed\r\n--\r\n--\r\nbegin try\r\n--\tbegin transaction MeterBillingAdjustmentElectric;\r\n\tset @StatusCode  = 0\r\n\tset @CommitTransaction = 'Y'\r\n\r\n\t\tselect @TotalNumberOfAdjustments = count(*)\r\n\t\tFROM     \r\n\t\t\t\tNypa.UploadNYPAMeterBilling INNER JOIN\r\n\t\t\t\tBilling.ApplicationTimeFrame ON \r\n\t\t\t\tNypa.UploadNYPAMeterBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\tGROUP BY \r\n\t\t\t\tBilling.ApplicationTimeFrame.CurrentProcessingPeriod\r\n\t\tHAVING \r\n\t\t\t\t(Billing.ApplicationTimeFrame.CurrentProcessingPeriod = 'Y')\r\n\t\t--\r\n\t\tprint '@TotalNumberOfAdjustments: '+str(@TotalNumberOfAdjustments)\r\n\t\t--\r\n        INSERT  INTO Billing.MeterBillingAdjustmentElectric\r\n                ( UniqueAccountSeqId, /* added on 12/202018 */\r\n\t\t\t\t  UniqueMeterSeqId, /* added on 12/20/2018 */\r\n\t\t\t\t  OriginalAccountNumber ,\r\n                  OriginalMeterNumber ,\r\n                  NumberOfTransactions ,\r\n                  ConsumptionTransactions ,\r\n                  DemandTransactions ,\r\n                  AccountUtilityCompanySeqid ,\r\n                  UploadFileSeqidUniquelyGrouped ,\r\n                  UploadFileSeqid ,\r\n                  AccountBilled ,\r\n                  MeterBilled ,\r\n                  AccountExchangeMeterTrackSeqid ,\r\n                  BillingPeriod ,\r\n                  BillingPeriodRevision ,\r\n                  BillingAction ,\r\n                  ProcessedInTheCurrentPeriod ,\r\n                  MeterBillingAdjustmentTypeElectric ,\r\n                  ConstantMeterMultiplier ,\r\n                  MeterTensionCode ,\r\n                  NumberOfDials ,\r\n                  RecordTypeConsumption ,\r\n                  RecordTypeDemand ,\r\n                  ReadingCodeConsumption ,\r\n                  ReadingCodeDemand ,\r\n                  MeterType ,\r\n                  ProductionAndDeliveryTariff ,\r\n                  CancelProductionAndDeliveryTariff ,\r\n                  ReadingTypes ,\r\n                  CancelReadingTypes ,\r\n                  BillingPeriodDays ,\r\n                  CancelBillingPeriodDays ,\r\n                  FromDate ,\r\n                  ToDate ,\r\n                  Consumption ,\r\n                  ConsumptionToReadingDate ,\r\n                  ConsumptionFromReadingDate ,\r\n                  ConsumptionToReading ,\r\n                  ConsumptionFromReading ,\r\n                  ConsumptionHoursOffPeak ,\r\n                  ConsumptionHoursShoulder ,\r\n                  Demand ,\r\n                  DemandToReadingDate ,\r\n                  DemandFromReadingDate ,\r\n                  DemandToReading ,\r\n                  DemandFromReading ,\r\n                  DemandOffPeak ,\r\n                  DemandShoulder ,\r\n                  StreetLightingFacilityPoints ,\r\n                  RatchetDemand ,\r\n                  RatchetDemandOffPeak ,\r\n                  RatchetDemandShoulder ,\r\n                  CancelConsumption ,\r\n                  CancelConsumptionToReadingDate ,\r\n                  CancelConsumptionFromReadingDate ,\r\n                  CancelConsumptionFromReading ,\r\n                  CancelConsumptionToReading ,\r\n                  CancelConsumptionHoursOffPeak ,\r\n                  CancelConsumptionHoursShoulder ,\r\n                  CancelDemand ,\r\n                  CancelDemandToReadingDate ,\r\n                  CancelDemandFromReadingDate ,\r\n                  CancelDemandToReading ,\r\n                  CancelDemandFromReading ,\r\n                  CancelDemandOffPeak ,\r\n                  CancelDemandShoulder ,\r\n                  CancelStreetLightingFacilityPoints ,\r\n                  CancelRatchetDemand ,\r\n                  CancelRatchetDemandOffPeak ,\r\n                  CancelRatchetDemandShoulder ,\r\n                  ESTOrACT ,\r\n                  ConsecutivePeriodsEstimatedReading ,\r\n                  AuthenticatedUserID ,\r\n                  DateAdded ,\r\n                  LastUpdate ,\r\n                  AdjustedMeterBilling ,\r\n                  AdjustedMeterBillingElectric ,\r\n                  IsTimeOfDayAccount ,\r\n                  AccountName ,\r\n                  AccountAddress ,\r\n                  MeterLocation ,\r\n                  MeterReactivePowerEnergy ,\r\n                  MeterReactivePowerFactor ,\r\n                  CancelMeterReactivePowerEnergy ,\r\n                  CancelMeterReactivePowerFactor ,\r\n                  ContractNumber,\r\n\t\t\t\t  AMRIndicator\r\n\t\t\t    )\r\n                SELECT  UniqueAccountSeqid, /* added on 12/20/2018 */\r\n\t\t\t\t        UniqueMeterSeqid, /* added on 12/20/2018 */\r\n\t\t\t\t        CurrentAccountNumber ,\r\n                        CurrentMeter ,\r\n                        1 AS NumberOfTransactions ,\r\n                        0 AS ConsumptionTransactions ,\r\n                        0 AS DemandTransactions ,\r\n                        UtilityCompanySeqid ,\r\n                        UploadNYPAMeterBillingSeqid AS UploadFileSeqidUniquelyGrouped ,\r\n                        NULL AS UploadFileSeqid ,\r\n                        AccountSeqid ,\r\n                        MeterSeqid ,\r\n                        AccountExchangeMeterTrackSeqid ,\r\n                        BillingPeriod ,\r\n                        RevisedBillingPeriod ,\r\n                        'A' ,\r\n                        'N' ,\r\n                        dbo.DetermineMeterBillingAdjustmentType(RecordTypeConsumption,\r\n                                                              RecordTypeDemand) ,\r\n                        MeterConstant ,\r\n                        MeterTensionCode ,\r\n                        NumberOfDials ,\r\n                        RecordTypeConsumption ,\r\n                        RecordTypeDemand ,\r\n                        ConsumptionReadingCode ,\r\n                        DemandReadingCode ,\r\n                        MeterType ,\r\n                        ProductionAndDeliveryTariff ,\r\n                        ProductionAndDeliveryTariff ,\r\n                        NULL ,\r\n                        NULL ,\r\n                        CurrentBillingDays ,\r\n                        AdjustmentBillingDays ,\r\n                        FromDate ,\r\n                        ToDate ,\r\n                        Consumption ,\r\n                        ConsumptionToReadingDate ,\r\n                        ConsumptionFromReadingDate ,\r\n                        ConsumptionToReading ,\r\n                        ConsumptionFromReading ,\r\n                        ConsumptionHoursOffPeak ,\r\n                        ConsumptionHoursShoulder ,\r\n                        Demand ,\r\n                        DemandToReadingDate ,\r\n                        DemandFromReadingDate ,\r\n                        DemandToReading ,\r\n                        DemandFromReading ,\r\n                        DemandOffPeak ,\r\n                        DemandShoulder ,\r\n                        StreetLightingFacilityPoints ,\r\n                        NULL ,\r\n                        NULL ,\r\n                        NULL ,\r\n                        CancelConsumption ,\r\n                        CancelToDate ,\r\n                        CancelFromDate ,\r\n                        CancelConsumptionFromReading ,\r\n                        CancelConsumptionToReading ,\r\n                        CancelConsumptionHoursOffPeak ,\r\n                        CancelConsumptionHoursShoulder ,\r\n                        CancelDemand ,\r\n                        CancelToDate ,\r\n                        CancelFromDate ,\r\n                        CancelDemandToReading ,\r\n                        CancelDemandFromReading ,\r\n                        CancelDemandOffPeak ,\r\n                        CancelDemandShoulder ,\r\n                        CancelStreetLightingFacilityPoints ,\r\n                        NULL ,\r\n                        NULL ,\r\n                        NULL ,\r\n                        ESTOrACT ,\r\n                        CurrentPeriodNumberOfEstimatedReadings ,\r\n                        1 ,\r\n                        GETDATE() ,\r\n                        GETDATE() ,\r\n                        MeterBillingSeqid ,\r\n                        MeterBillingElectricSeqid ,\r\n                        IsTimeOfDayAccount ,\r\n                        AccountName ,\r\n                        AccountAddress ,\r\n                        MeterLocation ,\r\n                        MeterReactivePowerEnergy ,\r\n                        MeterReactivePowerFactor ,\r\n                        CancelMeterReactivePowerEnergy ,\r\n                        CancelMeterReactivePowerFactor ,\r\n                        ContractNumber,\r\n\t\t\t\t\t\tAMRIndicator\r\n                FROM Nypa.UploadNYPAMeterBilling\r\n\t\t-- \r\n\t\tselect @TotalNumberOfTransactionsInserted = @@rowcount\r\n\t\tprint '@TotalNumberOfTransactionsInserted: '+str(@TotalNumberOfTransactionsInserted)\r\n\t\t--\r\n----------\t\t--\r\n----------\t\t-- Verify whether this block is necessary  PAH 4/29/2009\r\n----------\t\t-- UPDATE  MeterBillingAdjustmentElectric with Meter billing and Meter billing existing adjustment records sequence id\r\n----------\t\t--\r\n----------\t\tUPDATE  Billing.MeterBillingAdjustmentElectric\r\n----------\t\tSET        \r\n----------\t\t\t\tBilling.AdjustedMeterBilling = Billing.MeterBilling.MeterBillingSeqid, \r\n----------\t\t\t\tBilling.AdjustedMeterBillingElectric = Billing.MeterBillingElectric.MeterBillingElectricSeqid\r\n----------\t\tFROM \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric INNER JOIN\r\n----------\t\t\t\tBilling.AccountExchangeMeterTrack ON \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric.AccountExchangeMeterTrackSeqid = Billing.AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid INNER JOIN\r\n----------\t\t\t\tBilling.MeterBilling ON Billing.AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid = Billing.MeterBilling.AccountExchangeMeterTrackSeqid AND \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric.BillingPeriodRevision = Billing.MeterBilling.BillingPeriod AND \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric.BillingPeriodRevision = Billing.MeterBilling.BillingPeriodRevision AND \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric.AccountUtilityCompanySeqid = Billing.MeterBilling.AccountUtilityCompanySeqid INNER JOIN\r\n----------\t\t\t\tBilling.Billing.MeterBillingElectric ON MeterBilling.MeterBillingSeqid = Billing.MeterBillingElectric.MeterBillingRowId INNER JOIN\r\n----------\t\t\t\tBilling.ApplicationTimeFrame ON MeterBillingAdjustmentElectric.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod AND \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod AND \r\n----------\t\t\t\tBilling.MeterBillingAdjustmentElectric.BillingPeriodRevision <> Billing.ApplicationTimeFrame.BillingPeriod\r\n----------\t\tWHERE \r\n----------\t\t\t\t(Billing.ApplicationTimeFrame.CurrentProcessingPeriod = 'Y')\r\n----------\t\t--\r\n----------\t\tselect @TotalNumberOfAdjustmentsProcessed = @@rowcount\r\n----------\t\t-- Verify whether this block is necessary  PAH 4/29/2009\r\n\t\t--\r\n--\t\tif (@CommitTransaction = 'Y')\r\n--\t\tbegin\r\n----\t\t\trollback tran MeterBillingAdjustmentElectric;\r\n----\t\t\tprint 'rollback tran MeterBillingAdjustmentElectric;'\r\n--\t\t\tcommit transaction MeterBillingAdjustmentElectric;\r\n--\t\t\tprint 'commit transaction MeterBillingAdjustmentElectric;'\r\n--\t\tend\t\r\n--\t\telse\r\n--\t\t\trollback tran MeterBillingAdjustmentElectric;\r\n\t--\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\t--\r\n\t\tSELECT \r\n\t\t\t@ExchangeErrorMessage ='Error in StoredProcedure %125s at line number %8.0d',\r\n\t\t\t@ErrorMessage = ERROR_MESSAGE(),\r\n\t\t\t@ErrorSeverity = ERROR_SEVERITY(),\r\n\t\t\t@ErrorState = ERROR_STATE(),\r\n\t\t\t@ErrorNumber = ERROR_NUMBER(),\r\n\t\t\t@ErrorProcedure = ERROR_PROCEDURE(),\r\n\t\t\t@ErrorLine = ERROR_LINE();\t\t\t\r\n\t\t--\r\n\t\tset\t@ErrorMessage = @ExchangeErrorMessage + @ErrorMessage\r\n\t\t--\r\n\t\t/*RAISERROR (@ErrorMessage, -- Message text.\r\n\t\t\t\t   @ErrorSeverity, -- Severity.\r\n\t\t\t\t   @ErrorState, -- State.\r\n\t\t\t\t   @ErrorProcedure,\r\n\t\t\t\t   @ErrorLine\r\n\t\t\t\t   ) with log;*/\r\n\r\n\t\tset @CommitTransaction = 'N'\r\n\t\tset @StatusCode  = 1\r\n\t\trollback transaction MeterBillingAdjustmentElectric;\r\n\r\n\tEND CATCH;\r\nEnd"
        }
      ]
    }
  ]
}
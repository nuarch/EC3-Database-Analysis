{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "aspnet_Membership_CreateUser",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "aspnet_Membership_CreateUser",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to create a new user in an ASP.NET membership database. It handles the insertion of user data into the "
        },
        {
          "type": "text",
          "text": "aspnet_Users",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "text": "aspnet_Membership",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " tables, ensuring that the user is associated with a specific application and that certain constraints, such as unique email addresses, are respected. The procedure also manages transaction control to ensure data integrity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to its multiple steps, including transaction management, error handling, and interaction with other stored procedures. It involves conditional logic and checks for existing data, which adds to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ApplicationName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(256)): The name of the application to which the user belongs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UserName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(256)): The username of the new user."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Password",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(128)): The password for the new user."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PasswordSalt",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(128)): The salt used for hashing the password."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Email",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(256)): The email address of the new user."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PasswordQuestion",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(256)): The security question for password recovery."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PasswordAnswer",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (nvarchar(128)): The answer to the security question."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsApproved",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (bit): Indicates if the user is approved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CurrentTimeUtc",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (datetime): The current UTC time, used for timestamps."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CreateDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (datetime, default NULL): The creation date of the user, defaults to "
                },
                {
                  "type": "text",
                  "text": "@CurrentTimeUtc",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UniqueEmail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (int, default 0): Indicates if the email must be unique across the application."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PasswordFormat",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (int, default 0): The format of the password (e.g., hashed, encrypted)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UserId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (uniqueidentifier OUTPUT): The unique identifier for the user, returned as an output parameter."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Begins a transaction if none is active, ensuring atomicity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Application ID Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Calls "
                },
                {
                  "type": "text",
                  "text": "aspnet_Applications_CreateApplication",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to ensure the application exists and retrieves its ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "User Existence Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Checks if the user already exists in "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". If not, it creates a new user using "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users_CreateUser",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Email Uniqueness Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@UniqueEmail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is set, it checks for existing users with the same email in the "
                },
                {
                  "type": "text",
                  "text": "aspnet_Membership",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "User Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Inserts a new record into "
                },
                {
                  "type": "text",
                  "text": "aspnet_Membership",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with the provided user details."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Uses error codes and a cleanup section to handle errors and rollback transactions if necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Commit",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Commits the transaction if it was started by this procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "aspnet_Membership",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables have appropriate indexes on columns used in WHERE clauses (e.g., "
                },
                {
                  "type": "text",
                  "text": "LoweredUserName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "ApplicationId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "LoweredEmail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") to optimize lookups."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "UPDLOCK",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "HOLDLOCK",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " hints helps manage concurrency but may lead to blocking in high-traffic scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Keeping the transaction scope minimal reduces the risk of locking issues and improves performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency and Deadlocks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of locks can lead to deadlocks if not managed carefully, especially in a high-concurrency environment."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on "
                },
                {
                  "type": "text",
                  "text": "@@ERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for error detection, which may not capture all types of errors. Consider using "
                },
                {
                  "type": "text",
                  "text": "TRY...CATCH",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " blocks for more robust error handling."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Email Uniqueness",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@UniqueEmail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is set, the procedure checks for email uniqueness, which can be a performance bottleneck if not indexed properly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Storing passwords, even if hashed, requires careful handling to prevent security vulnerabilities. Ensure that password hashing and salting are implemented securely."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the user base grows, the performance of this procedure may degrade if not optimized, particularly the checks for existing users and emails."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [dbo].[aspnet_Membership_CreateUser]\n    @ApplicationName                        nvarchar(256),\r\n    @UserName                               nvarchar(256),\r\n    @Password                               nvarchar(128),\r\n    @PasswordSalt                           nvarchar(128),\r\n    @Email                                  nvarchar(256),\r\n    @PasswordQuestion                       nvarchar(256),\r\n    @PasswordAnswer                         nvarchar(128),\r\n    @IsApproved                             bit,\r\n    @CurrentTimeUtc                         datetime,\r\n    @CreateDate                             datetime = NULL,\r\n    @UniqueEmail                            int      = 0,\r\n    @PasswordFormat                         int      = 0,\r\n    @UserId                                 uniqueidentifier OUTPUT\r\nAS\r\nBEGIN\r\n    DECLARE @ApplicationId uniqueidentifier\r\n    SELECT  @ApplicationId = NULL\r\n\r\n    DECLARE @NewUserId uniqueidentifier\r\n    SELECT @NewUserId = NULL\r\n\r\n    DECLARE @IsLockedOut bit\r\n    SET @IsLockedOut = 0\r\n\r\n    DECLARE @LastLockoutDate  datetime\r\n    SET @LastLockoutDate = CONVERT( datetime, '17540101', 112 )\r\n\r\n    DECLARE @FailedPasswordAttemptCount int\r\n    SET @FailedPasswordAttemptCount = 0\r\n\r\n    DECLARE @FailedPasswordAttemptWindowStart  datetime\r\n    SET @FailedPasswordAttemptWindowStart = CONVERT( datetime, '17540101', 112 )\r\n\r\n    DECLARE @FailedPasswordAnswerAttemptCount int\r\n    SET @FailedPasswordAnswerAttemptCount = 0\r\n\r\n    DECLARE @FailedPasswordAnswerAttemptWindowStart  datetime\r\n    SET @FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 )\r\n\r\n    DECLARE @NewUserCreated bit\r\n    DECLARE @ReturnValue   int\r\n    SET @ReturnValue = 0\r\n\r\n    DECLARE @ErrorCode     int\r\n    SET @ErrorCode = 0\r\n\r\n    DECLARE @TranStarted   bit\r\n    SET @TranStarted = 0\r\n\r\n    IF( @@TRANCOUNT = 0 )\r\n    BEGIN\r\n\t    BEGIN TRANSACTION\r\n\t    SET @TranStarted = 1\r\n    END\r\n    ELSE\r\n    \tSET @TranStarted = 0\r\n\r\n    EXEC dbo.aspnet_Applications_CreateApplication @ApplicationName, @ApplicationId OUTPUT\r\n\r\n    IF( @@ERROR <> 0 )\r\n    BEGIN\r\n        SET @ErrorCode = -1\r\n        GOTO Cleanup\r\n    END\r\n\r\n    SET @CreateDate = @CurrentTimeUtc\r\n\r\n    SELECT  @NewUserId = UserId FROM dbo.aspnet_Users WHERE LOWER(@UserName) = LoweredUserName AND @ApplicationId = ApplicationId\r\n    IF ( @NewUserId IS NULL )\r\n    BEGIN\r\n        SET @NewUserId = @UserId\r\n        EXEC @ReturnValue = dbo.aspnet_Users_CreateUser @ApplicationId, @UserName, 0, @CreateDate, @NewUserId OUTPUT\r\n        SET @NewUserCreated = 1\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        SET @NewUserCreated = 0\r\n        IF( @NewUserId <> @UserId AND @UserId IS NOT NULL )\r\n        BEGIN\r\n            SET @ErrorCode = 6\r\n            GOTO Cleanup\r\n        END\r\n    END\r\n\r\n    IF( @@ERROR <> 0 )\r\n    BEGIN\r\n        SET @ErrorCode = -1\r\n        GOTO Cleanup\r\n    END\r\n\r\n    IF( @ReturnValue = -1 )\r\n    BEGIN\r\n        SET @ErrorCode = 10\r\n        GOTO Cleanup\r\n    END\r\n\r\n    IF ( EXISTS ( SELECT UserId\r\n                  FROM dbo.aspnet_Membership\r\n                  WHERE  @NewUserId = UserId ) )\r\n    BEGIN\r\n        SET @ErrorCode = 6\r\n        GOTO Cleanup\r\n    END\r\n\r\n    SET @UserId = @NewUserId\r\n\r\n    IF (@UniqueEmail = 1)\r\n    BEGIN\r\n        IF (EXISTS (SELECT *\r\n                    FROM dbo.aspnet_Membership m WITH ( UPDLOCK, HOLDLOCK )\r\n                    WHERE ApplicationId = @ApplicationId AND LoweredEmail = LOWER(@Email)))\r\n        BEGIN\r\n            SET @ErrorCode = 7\r\n            GOTO Cleanup\r\n        END\r\n    END\r\n\r\n    IF (@NewUserCreated = 0)\r\n    BEGIN\r\n        UPDATE dbo.aspnet_Users\r\n        SET    LastActivityDate = @CreateDate\r\n        WHERE  @UserId = UserId\r\n        IF( @@ERROR <> 0 )\r\n        BEGIN\r\n            SET @ErrorCode = -1\r\n            GOTO Cleanup\r\n        END\r\n    END\r\n\r\n    INSERT INTO dbo.aspnet_Membership\r\n                ( ApplicationId,\r\n                  UserId,\r\n                  Password,\r\n                  PasswordSalt,\r\n                  Email,\r\n                  LoweredEmail,\r\n                  PasswordQuestion,\r\n                  PasswordAnswer,\r\n                  PasswordFormat,\r\n                  IsApproved,\r\n                  IsLockedOut,\r\n                  CreateDate,\r\n                  LastLoginDate,\r\n                  LastPasswordChangedDate,\r\n                  LastLockoutDate,\r\n                  FailedPasswordAttemptCount,\r\n                  FailedPasswordAttemptWindowStart,\r\n                  FailedPasswordAnswerAttemptCount,\r\n                  FailedPasswordAnswerAttemptWindowStart )\r\n         VALUES ( @ApplicationId,\r\n                  @UserId,\r\n                  @Password,\r\n                  @PasswordSalt,\r\n                  @Email,\r\n                  LOWER(@Email),\r\n                  @PasswordQuestion,\r\n                  @PasswordAnswer,\r\n                  @PasswordFormat,\r\n                  @IsApproved,\r\n                  @IsLockedOut,\r\n                  @CreateDate,\r\n                  @CreateDate,\r\n                  @CreateDate,\r\n                  @LastLockoutDate,\r\n                  @FailedPasswordAttemptCount,\r\n                  @FailedPasswordAttemptWindowStart,\r\n                  @FailedPasswordAnswerAttemptCount,\r\n                  @FailedPasswordAnswerAttemptWindowStart )\r\n\r\n    IF( @@ERROR <> 0 )\r\n    BEGIN\r\n        SET @ErrorCode = -1\r\n        GOTO Cleanup\r\n    END\r\n\r\n    IF( @TranStarted = 1 )\r\n    BEGIN\r\n\t    SET @TranStarted = 0\r\n\t    COMMIT TRANSACTION\r\n    END\r\n\r\n    RETURN 0\r\n\r\nCleanup:\r\n\r\n    IF( @TranStarted = 1 )\r\n    BEGIN\r\n        SET @TranStarted = 0\r\n    \tROLLBACK TRANSACTION\r\n    END\r\n\r\n    RETURN @ErrorCode\r\n\r\nEND"
        }
      ]
    }
  ]
}
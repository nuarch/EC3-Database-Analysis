{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Lookup_GetAccountListForTariffReport",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Lookup_GetAccountListForTariffReport",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve a list of accounts for a tariff report based on specified criteria. It logs the report usage, processes input parameters, and queries account information from various tables, filtering and ordering the results before returning them. The procedure supports pagination through "
        },
        {
          "type": "text",
          "text": "@StartIndex",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "text": "@EndIndex",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " parameters and outputs the total count of records."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple table joins and subqueries."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It processes XML input for filtering."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes logging functionality."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles pagination and dynamic filtering based on input parameters."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC AS AgencyCodeOEC = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Filters accounts by agency code. Defaults to '*' if not provided."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UtilityTariffInformationSeqIDs AS XML = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": XML input to filter by specific utility tariff information IDs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartIndex AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The starting index for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndIndex AS INT = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ending index for pagination. Defaults to the total count if not provided."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Email AS emailaddr",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the requester, used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@TotalCount AS INT OUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that returns the total number of records found."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs the report usage by calling "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with relevant details."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If "
                        },
                        {
                          "type": "text",
                          "text": "@AgencyCodeOEC",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is null or empty, it defaults to '*'."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If "
                        },
                        {
                          "type": "text",
                          "text": "@UtilityTariffInformationSeqIDs",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is null, it selects all IDs from "
                        },
                        {
                          "type": "text",
                          "text": "Billing.UtilityTariffRateInformation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ". Otherwise, it parses the XML to extract specific IDs."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A temporary table "
                        },
                        {
                          "type": "text",
                          "text": "@SelectedAccounts",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is used to store the results."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure performs a series of joins across "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "Billing.UtilityCompany",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "Billing.UtilityTariffRateInformation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "billing.Facility",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " tables."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It filters accounts based on status and agency code, and orders the results by agency code, utility provider, and account number."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The total count of records is calculated and stored in "
                        },
                        {
                          "type": "text",
                          "text": "@TotalCount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The final result set is selected based on the "
                        },
                        {
                          "type": "text",
                          "text": "@StartIndex",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "@EndIndex",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " parameters, ensuring only the requested page of data is returned."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Read Uncommitted Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This level can improve performance by reducing locking overhead but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "XML Parsing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Parsing XML can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple joins and filtering conditions can impact performance, particularly if indexes are not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Efficient pagination is implemented, but performance may degrade with large datasets if indexes are not properly utilized."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted data, which may not be suitable for all scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "XML Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Errors in XML structure or large XML inputs can cause performance bottlenecks or errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Defaults",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Defaulting "
                },
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to '*' may lead to unintended results if not handled correctly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Lack of proper indexing on joined columns and filtering criteria can lead to slow query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": High concurrency scenarios may lead to contention issues, especially with large datasets and complex joins."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Lookup_GetAccountListForTariffReport]\n(\r\n\t@AgencyCodeOEC AS AgencyCodeOEC = NULL\r\n\t,@UtilityTariffInformationSeqIDs AS XML = NULL\r\n\t,@StartIndex AS INT\r\n\t,@EndIndex AS INT = NULL\r\n\t,@Email AS emailaddr\r\n\t,@TotalCount AS INT OUT\r\n)\t\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\tDECLARE @UtilityTariffInformation TABLE(UtilityTariffInfomrationSeqid INT);\r\n\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName\t\t\t\t\t= @spname,\r\n\t\t@StoredProcName\t\t\t\t= @spname,\r\n\t\t@RequestedBy\t\t\t\t= @Email,    \r\n\t\t@prmPublishedBillingPeriod\t= NULL,\r\n\t\t@prmBillingPeriod\t\t\t= NULL,\r\n\t\t@prmAgency_ies\t\t\t\t= @AgencyCodeOEC,\r\n\t\t@prmFacilityNumber_s\t\t= NULL,\r\n\t\t@prmStartingBillingPeriod\t= NULL,\r\n\t\t@prmEndingBillingPeriod\t\t= NULL;\r\n\t\r\n\tIF (@AgencyCodeOEC IS NULL OR @AgencyCodeOEC = '') \r\n    BEGIN\r\n        SET @AgencyCodeOEC = '*';\r\n    END;\r\n\r\n\tIF (@UtilityTariffInformationSeqIDs IS NULL) \r\n    BEGIN\r\n        INSERT INTO @UtilityTariffInformation(UtilityTariffInfomrationSeqid)\r\n        SELECT UtilityTariffRateInformationSeqid\r\n        FROM Billing.UtilityTariffRateInformation;\r\n    END;\r\n\tELSE\r\n    BEGIN\r\n        INSERT INTO @UtilityTariffInformation(UtilityTariffInfomrationSeqid)\r\n        SELECT CAST(CAST(tbl.col.query('data(UtilityTariffInformationSeqID)') AS VARCHAR) AS INT) AS UtilityTariffInformationSeqID\r\n        FROM @UtilityTariffInformationSeqIDs.nodes('//serviceClasses//serviceClass') tbl (col);\r\n    END;\r\n\t\r\n\t-- put selected accounts into table\r\n\tDECLARE @SelectedAccounts TABLE\r\n\t\t(RowID INT IDENTITY,\r\n\t\tAccountSeqID seqid,\r\n\t\tOriginalAccountNumber acctnum,\r\n\t\tFacilityName VARCHAR(100),\r\n\t\tFacilityAddress LongAddress,\r\n\t\tAccountAddress LongAddress,\r\n\t\tOECFacilityNumber OECBuildingNumber,\r\n\t\tEnergyDeliveryType VARCHAR(3),\r\n\t\tUtilityCompanySeqID seqid,\r\n\t\tUtilityCompanyName ldesc,\r\n\t\tDeliveryTariffClass ServiceClassification,\r\n\t\tTariffDescription ldesc,\r\n\t\tAgencyDivisionSeqID seqid,\r\n\t\tAgencyName ldesc,\r\n\t\tAgencyCodeOEC AgencyCodeOEC,\r\n\t\tUtilityTariffRateInformationSeqid seqid)\r\n\t\r\n\t-- insert \r\n\tINSERT  INTO @SelectedAccounts\r\n\t\t(AccountSeqID,\r\n\t\tOriginalAccountNumber,\r\n\t\tAgencyDivisionSeqID,\r\n\t\tAgencyName,\r\n\t\tAgencyCodeOEC,\r\n\t\tUtilityTariffRateInformationSeqid,\r\n\t\tUtilityCompanySeqID,\r\n\t\tUtilityCompanyName,\r\n\t\tAccountAddress,\r\n\t\tEnergyDeliveryType,\r\n\t\tDeliveryTariffClass,\r\n\t\tTariffDescription,\r\n\t\tOECFacilityNumber,\r\n\t\tFacilityAddress,\r\n\t\tFacilityName)\r\n\tSELECT DISTINCT ac.AccountSeqID,\r\n\t\tac.OriginalAccountNumber,\r\n\t\tac.AgencyAccount,\r\n\t\tad.AgencyName,\r\n\t\tad.AgencyCodeOEC,\r\n\t\tutiEc3.UtilityTariffRateInformationSeqid,\r\n\t\tac.UtilityAccountProvider,\r\n\t\tuc.[Description],\r\n\t\tac.UtilityServiceAddress,\r\n\t\tutiEc3.EnergyDeliveryType,\r\n\t\tutiEC3.DeliveryTariffRate,\r\n\t\tutiEC3.[Description] AS TariffDescription,\r\n\t\tf.OecFacilityNumber,\r\n\t\tf.Address1,\r\n\t\tf.FacilityName\r\n    FROM Billing.Account AS ac\r\n        INNER JOIN billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @Email) ad ON ac.AgencyAccount = ad.AgencyDivisionSeqid\r\n        INNER JOIN Billing.UtilityCompany uc ON ac.UtilityAccountProvider = uc.UtilityCompanySeqid\r\n        INNER JOIN @UtilityTariffInformation AS uti ON ac.UtilityTariffRateInformationSeqid = uti.UtilityTariffInfomrationSeqid\r\n        INNER JOIN Billing.UtilityTariffRateInformation AS utiEc3 ON uti.UtilityTariffInfomrationSeqid = utiEc3.UtilityTariffRateInformationSeqid\r\n\t\tINNER JOIN billing.Facility AS f ON ac.FacilityAccount = f.FacilitySeqid\r\n    WHERE ac.AccountStatus IN ('AC', '46', 'UA')\r\n    ORDER BY ad.AgencyCodeOEC,\r\n        ac.UtilityAccountProvider,\r\n        ac.OriginalAccountNumber;\r\n\t\r\n\tSELECT  @TotalCount = COALESCE(MAX(RowID),0) FROM @SelectedAccounts;\r\n\r\n\tSELECT  \r\n\t\tRowID,\r\n        AccountSeqID,\r\n        OriginalAccountNumber,\r\n\t\tFacilityName,\r\n\t\tFacilityAddress,\r\n\t\tAccountAddress,\r\n\t\tOECFacilityNumber,\r\n\t\tEnergyDeliveryType,\r\n\t\tUtilityCompanyName,\r\n\t\tDeliveryTariffClass,\r\n\t\tTariffDescription,\r\n        AgencyName,\r\n\t\tAgencyDivisionSeqID,\r\n        AgencyCodeOEC,\r\n        UtilityTariffRateInformationSeqid,\r\n        UtilityCompanySeqID\r\n\tFROM @SelectedAccounts\r\n\tWHERE RowID > @StartIndex\r\n        AND RowID <= ISNULL(@EndIndex, @TotalCount) \r\n\tORDER BY OriginalAccountNumber, OECFacilityNumber;\r\nEND;"
        }
      ]
    }
  ]
}
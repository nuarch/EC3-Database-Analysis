{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_SummaryElectricCycleMeterBillingPreProcess",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_SummaryElectricCycleMeterBillingPreProcess",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to insert data into the "
        },
        {
          "type": "text",
          "text": "SummaryElectricCycleMeterBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table from a temporary table "
        },
        {
          "type": "text",
          "text": "UploadNYPAMeterBillingTemporary",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and related tables "
        },
        {
          "type": "text",
          "text": "MeterBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "text": "MeterBillingElectric",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". The procedure is currently commented out, meaning it does not execute any operations except for printing \"HI\". When uncommented, it would perform a data transformation and insertion operation, likely as part of a billing preprocessing step for electric cycle meters."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure involves multiple table joins and conditional logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles a significant number of columns, indicating a complex data structure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The use of conditional logic (e.g., "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements) adds to the complexity."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to track the user who initiated the procedure, likely for auditing purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Status int output",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This output parameter is intended to return the status of the procedure execution, although it is not currently utilized in the commented-out code."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure is designed to insert records into the "
                },
                {
                  "type": "text",
                  "text": "SummaryElectricCycleMeterBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. It selects data from "
                },
                {
                  "type": "text",
                  "text": "UploadNYPAMeterBillingTemporary",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and joins it with "
                },
                {
                  "type": "text",
                  "text": "MeterBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "MeterBillingElectric",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to enrich the data with additional details."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements to handle null values in the "
                },
                {
                  "type": "text",
                  "text": "MeterBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table, ensuring that default values (0) are used when necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Mapping",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure maps fields from the source tables to the target table, including handling historical data flags and time-of-day account indicators."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Audit Fields",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure records the authenticated user ID and timestamps for when the data was added and last updated."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins, which can impact performance, especially if the tables are large or not properly indexed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Null Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements to handle null values can add overhead, although it is necessary for data integrity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure are run simultaneously, it could lead to contention on the target table, especially if there are no mechanisms to handle concurrent writes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Commented Code",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The entire insertion logic is commented out, which means the procedure currently does not perform its intended function. This could lead to confusion or errors if not properly documented."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the joins will always find matching records. If there are mismatches or missing data, it could lead to incomplete or incorrect records being inserted."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no error handling implemented in the procedure. If an error occurs during execution, it could fail silently without updating the "
                },
                {
                  "type": "text",
                  "text": "@Status",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter or logging the issue."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the performance of the procedure could degrade if not optimized, particularly concerning the joins and conditional logic."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [dbo].[usp_SummaryElectricCycleMeterBillingPreProcess] (@AuthenticatedUserID int, @Status int output)\nAS\r\nPrint 'HI'\r\n/*\r\nINSERT INTO [dbo].[SummaryElectricCycleMeterBilling]\r\n           ([UtilityCompanyId]\r\n           ,[AccountBillingGroup]\r\n           ,[AccountSeqid]\r\n           ,[AccountExchangeMeterTrackSeqid]\r\n           ,[MeterSeqid]\r\n           ,[MeterBillingSeqid]\r\n           ,[MeterBillingElectricSeqid]\r\n           ,[OriginalAccountNumber]\r\n           ,[OriginalMeterNumber]\r\n           ,[IsHistoricalData]\r\n           ,[IsTimeOfDayAccount]\r\n           ,[BillingPeriod]\r\n           ,[BillingPeriodRevision]\r\n           ,[StartFromDate]\r\n           ,[StartToDate]\r\n           ,[StartEnergyUsage]\r\n           ,[StartDemandUsage]\r\n           ,[UploadFileSeqid]\r\n           ,[UploadFromDate]\r\n           ,[UploadToDate]\r\n           ,[UploadCancelFromDate]\r\n           ,[UploadCancelToDate]\r\n           ,[UploadEnergyUsage]\r\n           ,[UploadCancelEnergyUsage]\r\n           ,[UploadDemandUsage]\r\n           ,[UploadCancelDemandUsage]\r\n           ,[AuthenticatedUserID]\r\n           ,[DateAdded]\r\n           ,[LastUpdate])\r\nSELECT \r\n            UploadNYPAMeterBillingTemporary.[UtilityCompanySeqid]\t--\t           ,[UtilityCompanyId]\r\n           ,UploadNYPAMeterBillingTemporary.[AccountBillingGroup]\t--\t           ,[AccountBillingGroup]\r\n           ,UploadNYPAMeterBillingTemporary.[AccountSeqid]\t--\t           ,[AccountSeqid]\r\n           ,UploadNYPAMeterBillingTemporary.[AccountExchangeMeterTrackSeqid]\t--\t           ,[AccountExchangeMeterTrackSeqid]\r\n           ,UploadNYPAMeterBillingTemporary.[MeterSeqid]\t--\t           ,[MeterSeqid]\r\n\t\t   ,MeterBilling.[MeterBillingSeqid]\t--\t           ,[MeterBillingSeqid]\r\n\t\t   ,MeterBillingElectric.[MeterBillingElectricSeqid]\t--\t           ,[MeterBillingElectricSeqid]\r\n           ,UploadNYPAMeterBillingTemporary.[CurrentAccountNumber]\t--\t           ,[OriginalAccountNumber]\r\n           ,UploadNYPAMeterBillingTemporary.[CurrentMeter]\t--\t           ,[OriginalMeterNumber]\r\n\t\t   ,'N'\t--\t           ,[IsHistoricalData]\r\n           ,UploadNYPAMeterBillingTemporary.[IsTimeOfDayAccount]\t--\t           ,[IsTimeOfDayAccount]\r\n           ,UploadNYPAMeterBillingTemporary.[BillingPeriod]\t--\t           ,[BillingPeriod]\r\n           ,UploadNYPAMeterBillingTemporary.[RevisedBillingPeriod]\t--\t           ,[BillingPeriodRevision]\r\n\t\t   ,CASE WHEN MeterBilling.FromDate is null THEN 0 ELSE MeterBilling.FromDate END\t--\t           ,[StartFromDate]\r\n\t\t   ,CASE WHEN MeterBilling.ToDate is null THEN 0 ELSE MeterBilling.ToDate END\t--\t           ,[StartToDate]\r\n\t\t   ,CASE WHEN MeterBilling.Consumption is null THEN 0 ELSE MeterBilling.Consumption END\t--\t           ,[StartEnergyUsage]\r\n\t\t   ,CASE WHEN MeterBilling.Demand is null THEN 0 ELSE MeterBilling.Demand END\t--\t           ,[StartDemandUsage]\r\n\t\t   ,UploadNYPAMeterBillingTemporary.[UploadNYPAMeterBillingSeqid]\t--\t           ,[UploadFileSeqid]\r\n           ,UploadNYPAMeterBillingTemporary.[FromDate]\t--\t           ,[UploadFromDate]\r\n           ,UploadNYPAMeterBillingTemporary.[ToDate]\t--\t           ,[UploadToDate]\r\n           ,UploadNYPAMeterBillingTemporary.[CancelFromDate]\t--\t           ,[UploadCancelFromDate]\r\n           ,UploadNYPAMeterBillingTemporary.[CancelToDate]\t--\t           ,[UploadCancelToDate]\r\n           ,UploadNYPAMeterBillingTemporary.[Consumption]\t--\t           ,[UploadEnergyUsage]\r\n           ,UploadNYPAMeterBillingTemporary.[CancelConsumption]\t--\t           ,[UploadCancelEnergyUsage]\r\n           ,UploadNYPAMeterBillingTemporary.[Demand]\t--\t           ,[UploadDemandUsage]\r\n           ,UploadNYPAMeterBillingTemporary.[CancelDemand]\t--\t           ,[UploadCancelDemandUsage]\r\n\t\t   ,@AuthenticatedUserID\t--\t           ,[AuthenticatedUserID]\r\n\t\t   ,GETDATE()\t--\t           ,[DateAdded]\r\n\t\t   ,GETDATE()\t--\t           ,[LastUpdate]\r\nFROM MeterBillingElectric INNER JOIN\r\n                MeterBilling ON MeterBillingElectric.MeterBillingRowId = MeterBilling.MeterBillingSeqid RIGHT JOIN\r\n                UploadNYPAMeterBillingTemporary ON MeterBilling.OriginalMeterNumber = UploadNYPAMeterBillingTemporary.CurrentAccountNumber AND \r\n                MeterBilling.BillingPeriod = UploadNYPAMeterBillingTemporary.RevisedBillingPeriod AND \r\n                MeterBilling.BillingPeriodRevision = UploadNYPAMeterBillingTemporary.RevisedBillingPeriod\r\n*/"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ConEd",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Upload_6_ProcessSpannedBills",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Upload_6_ProcessSpannedBills",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process billing data for Con Edison accounts, specifically focusing on handling \"spanned bills,\" which are bills that cover more than one billing period. The procedure performs several key operations: it processes single-period bills, handles multi-period (spanned) bills, and merges the processed data into a summary table for further analysis or reporting."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple steps with intricate logic for handling both single-period and multi-period billing data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a cursor to iterate over records, which adds complexity and potential performance concerns."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves numerous calculations and transformations, including date conversions, percentage calculations, and data aggregation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure interacts with multiple tables and relies on several user-defined functions for its operations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on predefined tables within the "
        },
        {
          "type": "text",
          "text": "ConEd",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " schema and uses hardcoded values and logic to process the data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is structured into several main steps:"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert 0-1 Period Data",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Truncates the "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonAccountSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts data from "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonAccountPreload",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where the number of periods ("
                        },
                        {
                          "type": "text",
                          "text": "DeltaNumberOfPeriods",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ") is 0 or 1."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Utilizes various user-defined functions to calculate billing days, convert dates, and determine billing types."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Process Spanned Bills",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Loading Spanned Bills",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ":"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Truncates "
                                },
                                {
                                  "type": "text",
                                  "text": "UploadConEdisonAccountTempSummarySpanned",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": "."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Inserts data from "
                                },
                                {
                                  "type": "text",
                                  "text": "UploadConEdisonAccount",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " where "
                                },
                                {
                                  "type": "text",
                                  "text": "DeltaNumberOfPeriods",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " is greater than 1."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Insert Processed Spanned Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ":"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Uses a cursor to iterate over spanned bills."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "For each spanned bill, calculates monthly percentages and prorates amounts across periods."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Inserts prorated data into "
                                },
                                {
                                  "type": "text",
                                  "text": "UploadConEdisonAccountSummary",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": "."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Correct Billing Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "BillingPeriodRevision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to ensure it does not exceed "
                        },
                        {
                          "type": "text",
                          "text": "BillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Merge Data",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Truncates "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Aggregates and inserts data from "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonAccountSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", ensuring one record per account and billing period revision."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor to process spanned bills can lead to performance bottlenecks, especially with large datasets. Cursors are generally slower than set-based operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Truncation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Frequent truncation of tables can lead to locking issues and should be managed carefully in a production environment."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies heavily on user-defined functions, which can impact performance if not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure processes potentially large volumes of data, which can affect execution time and resource usage."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency and Locking",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating tables and using cursors can lead to locking issues, affecting concurrent access to the database."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete data processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The current design may not scale well with increasing data volumes due to its reliance on cursors and row-by-row processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Without input validation or error handling, there is a risk of inserting incorrect or incomplete data into the summary tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity and reliance on multiple user-defined functions make the procedure challenging to maintain and debug."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE PROCEDURE [ConEd].[usp_Upload_6_ProcessSpannedBills]\r\nAS \r\n    BEGIN\r\n    \r\n\t/*\r\n\tSteps:\r\n\t1) Insert 0-1 period data into UploadConEdisonAccountSummary\r\n\t2) insert processed spanned data UploadConEdisonAccountSummary\r\n\t3) Merge data (one record per account + billingperiodrevision\r\n\t*/\r\n\r\n\t\t/*\r\n\t\t1) Insert 0-1 period data into UploadConEdisonAccountSummary\r\n\t\t*/\r\n        BEGIN\r\n        \r\n            TRUNCATE TABLE ConEd.UploadConEdisonAccountSummary\r\n            INSERT  INTO ConEd.[UploadConEdisonAccountSummary]\r\n                    ([AdjustedAccount]\r\n                    ,[AccountUtilityCompanySeqid]\r\n                    ,[NumberOfTransactions]\r\n                    ,[NumberOfRebillTransactions]\r\n                    ,[NumberOfCancelTransactions]\r\n                    ,[OriginalAccountNumber]\r\n                    ,[BillingPeriod]\r\n                    ,[BillingPeriodRevision]\r\n                    ,[FirstCanceledBillingPeriod]\r\n                    ,[EstimatedOrActualBilling]\r\n                    ,[InitialCancelFromDate]\r\n                    ,[CurrentBillingToDate]\r\n                    ,[NumberOfBillingPeriods]\r\n                    ,[TotalBillingDaysRebilled]\r\n                    ,[TotalRebilledAmount]\r\n                    ,[TotalCanceledAmount]\r\n                    ,[AverageRebillCostOfGasCharge]\r\n                    ,[AverageRebillThermsFactor]\r\n                    ,[BillingDays]\r\n                    ,[BillingDate]\r\n                    ,[ToDate]\r\n                    ,[FromDate]\r\n                    ,[MTATaxAmount]\r\n                    ,[BillingAction]\r\n                    ,[ProcessedInTheCurrentPeriod]\r\n                    ,[GasRateCode]\r\n                    ,[TotalCCF]\r\n                    ,[TotalTherms]\r\n                    ,[ThermsFactor]\r\n                    ,[CancelFromDate]\r\n                    ,[CancelToDate]\r\n                    ,[CancelTotalCCF]\r\n                    ,[CancelTotalTherms]\r\n                    ,[CancelThermsFactor]\r\n                    ,[ProcessEffectiveDate]\r\n                    ,[Notes]\r\n                    ,[AuthenticatedUserID]\r\n                    ,[DateAdded]\r\n                    ,[LastUpdate]\r\n                    ,[DeliveryChargeAmount]\r\n                    ,[ThermsChargeAmount]\r\n                    ,[DiscountedAmount]\r\n                    ,[DiscountPercentage]\r\n                    ,[CustomerMinimumCharge]\r\n                    ,[CostOfGasCharge]\r\n                    ,[SpecialCharge]\r\n                    ,[SomeCharge]\r\n                    ,[CancelDeliveryChargeAmount]\r\n                    ,[CancelThermsChargeAmount]\r\n                    ,[CancelDiscountedAmount]\r\n                    ,[CancelDiscountPercentage]\r\n                    ,[CancelCustomerMinimumCharge]\r\n                    ,[CancelCostOfGasCharge]\r\n                    ,[CancelSpecialCharge]\r\n                    ,[CancelSomeCharge]\r\n                    ,[FacilityName]\r\n                    ,[ServiceAddress] )\r\n            SELECT  'AdjustedAccount' = NULL\r\n            ,       'AccountUtilityCompanySeqid' = 9\r\n            ,       'NumberOfTransactions' = 1\r\n            ,       'NumberOfRebillTransactions' = 1\r\n            ,       'NumberOfCancelTransactions' = 0\r\n            ,       'OriginalAccountNumber' = UploadConEdisonAccountPreload.AccountNumber\r\n            ,       'BillingPeriod' = UploadConEdisonAccountPreload.BillingPeriod\r\n            ,       'BillingPeriodRevision' = UploadConEdisonAccountPreload.BillingPeriodRevision\r\n            ,       'FirstCanceledBillingPeriod' = UploadConEdisonAccountPreload.FirstPeriodCanceled\r\n            ,       'EstimatedOrActualBilling' = [dbo].[DetermineConEdisonActualOrEstimatedBilling](UploadConEdisonAccountPreload.AccountNumber, UploadConEdisonAccountPreload.BillingPeriodRevision)\r\n            ,       'InitialCancelFromDate' = NULL\r\n            ,       'CurrentBillingToDate' = NULL\r\n            ,       'NumberOfBillingPeriods' = DeltaNumberOfPeriods\r\n            ,       'TotalBillingDaysRebilled' = dbo.CalculateNumberOfBillingDays([dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.FromDate), [dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.ToDateJul))\r\n            ,       'TotalRebilledAmount' = dbo.ConvertOverpunch9ToMoney(UploadConEdisonAccountPreload.BilledAmount)\r\n            ,       'TotalCanceledAmount' = 0\r\n            ,       'AverageRebillCostOfGasCharge' = dbo.ConvertOverpunch9ToMoney(UploadConEdisonAccountPreload.CommodityCharge)\r\n            ,       'AverageRebillThermsFactor' = dbo.ConvertOverpunch4ToDecimal(UploadConEdisonAccountPreload.ThermFactor)\r\n            ,       'BillingDays' = dbo.CalculateNumberOfBillingDays([dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.FromDate), [dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.ToDateJul))\r\n            ,       'BillingDate' = [dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.PostingDate)\r\n            ,       'ToDate' = [dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.ToDateJul)\r\n            ,       'FromDate' = [dbo].[JulianDateToYYYYMMDD](UploadConEdisonAccountPreload.FromDate)\r\n            ,       'MTATaxAmount' = 0\r\n            ,       'BillingAction' = CASE WHEN UploadConEdisonAccountPreload.BillingPeriod = UploadConEdisonAccountPreload.BillingPeriodRevision THEN 'O' ELSE 'A' END\r\n            ,       'ProcessedInTheCurrentPeriod' = 'N'\r\n            ,       'GasRateCode' = UploadConEdisonAccountPreload.TariffCode\r\n            ,       'TotalCCF' = dbo.ConvertOverpunch8ToInt32(UploadConEdisonAccountPreload.CCF)\r\n            ,       'TotalTherms' = dbo.ConvertOverpunch8ToInt32(UploadConEdisonAccountPreload.Therms)\r\n            ,       'ThermsFactor' = dbo.ConvertOverpunch4ToDecimal(UploadConEdisonAccountPreload.ThermFactor)\r\n            ,       'CancelFromDate' = NULL\r\n            ,       'CancelToDate' = NULL\r\n            ,       'CancelTotalCCF' = NULL\r\n            ,       'CancelTotalTherms' = NULL\r\n            ,       'CancelThermsFactor' = NULL\r\n            ,       'ProcessEffectiveDate' = [dbo].ConvertDateToYYYYMMDD(GETDATE())\r\n            ,       'Notes' = NULL\r\n            ,       'AuthenticatedUserID' = 1\r\n            ,       'DateAdded' = GETDATE()\r\n            ,       'LastUpdate' = GETDATE()\r\n            ,       'DeliveryChargeAmount' = 0\r\n            ,       'ThermsChargeAmount' = 0\r\n            ,       'DiscountedAmount' = 0\r\n            ,       'DiscountPercentage' = 0\r\n            ,       'CustomerMinimumCharge' = 0\r\n            ,       'CostOfGasCharge' = dbo.ConvertOverpunch9ToMoney(UploadConEdisonAccountPreload.CommodityCharge)\r\n            ,       'SpecialCharge' = 0\r\n            ,       'SomeCharge' = 0\r\n            ,       'CancelDeliveryChargeAmount' = NULL\r\n            ,       'CancelThermsChargeAmount' = NULL\r\n            ,       'CancelDiscountedAmount' = NULL\r\n            ,       'CancelDiscountPercentage' = NULL\r\n            ,       'CancelCustomerMinimumCharge' = NULL\r\n            ,       'CancelCostOfGasCharge' = NULL\r\n            ,       'CancelSpecialCharge' = NULL\r\n            ,       'CancelSomeCharge' = NULL\r\n            ,       FacilityName\r\n            ,       ServiceAddress\r\n            FROM ConEd.UploadConEdisonAccountPreload\r\n            WHERE   UploadConEdisonAccountPreload.DeltaNumberOfPeriods <= 1;\t\r\n\r\n        END -- 1 ends\t\r\n\r\n\r\n\t\t/*\r\n\t\t2) insert processed spanned data UploadConEdisonAccountSummary\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\t2.1) Loading >1 Period Bills (Spanned Bills) (Temporarily here)\r\n\t\t*/ \t\t\t\r\n        BEGIN\r\n        \r\n            TRUNCATE TABLE ConEd.UploadConEdisonAccountTempSummarySpanned\r\n\r\n            INSERT  INTO UploadConEdisonAccountTempSummarySpanned\r\n                    (title\r\n                    ,AccountNumber\r\n                    ,BillingPeriod\r\n                    ,BillingPeriodRevision\r\n                    ,FirstPeriodCanceled\r\n                    ,FromDate\r\n                    ,ToDate\r\n                    ,BilledAmount\r\n                    ,AveragePreviousBalance\r\n                    ,Therms\r\n                    ,ThermFactor\r\n                    ,CCF\r\n                    ,TariffCode\r\n                    ,DeltaNumberOfPeriods\r\n                    ,BillingPeriodDays\r\n                    ,FacilityName\r\n                    ,ServiceAddress\r\n                    ,PostingDate )\r\n            SELECT  'title' = 'SpannedAccountbilling'\r\n            ,       AccountNumber\r\n            ,       UploadConEdisonAccount.BillingPeriod\r\n            ,       BillingPeriodRevision\r\n            ,       FirstPeriodCanceled\r\n            ,       FromDate\r\n            ,       ToDate\r\n            ,       BilledAmount\r\n            ,       'AveragePreviousBalance' = PreviousBalance\r\n            ,       Therms\r\n            ,       ThermFactor\r\n            ,       CCF\r\n            ,       TariffCode\r\n            ,       DeltaNumberOfPeriods\r\n            ,       BillingPeriodDays\r\n            ,       FacilityName\r\n            ,       ServiceAddress\r\n            ,       PostingDate\r\n            FROM ConEd.UploadConEdisonAccount\r\n            WHERE   ( DeltaNumberOfPeriods > 1 );\t\t\r\n\t\t\r\n        END -- 2.1 ends\r\n\r\n\t\t/*\r\n\t\t2.2) Processed and insert spanned data into UploadConEdisonAccountSummary\r\n\t\t*/\r\n        BEGIN\r\n            DECLARE @UploadConEdisonAccountTempSummarySpannedSeqid dbo.seqid\r\n--\r\n            DECLARE @Notes dbo.notes\r\n            DECLARE @AccountNumber dbo.acctnum\r\n            DECLARE @FacilityName dbo.UtilityServiceAccountName\r\n            DECLARE @ServiceAddress dbo.addr\r\n            DECLARE @TariffCode dbo.tariff\r\n            DECLARE @PostingDate dbo.PostingDate\r\n--\r\n            DECLARE @NumberOfPeriodsMinusOne dbo.Accumulator\r\n            DECLARE @DeltaNumberOfPeriods dbo.Accumulator\r\n            DECLARE @BillingPeriod dbo.yyyymm \r\n            DECLARE @FirstPeriodCanceled dbo.yyyymm \r\n            DECLARE @ThermFactor dbo.ThermsFactor \r\n            DECLARE @FudgedThermFactor dbo.ThermsFactor \r\n            DECLARE @BillingPeriodRevision dbo.yyyymm \r\n            DECLARE @FromDate dbo.yyyymmdd \r\n            DECLARE @ToDate dbo.yyyymmdd \r\n            DECLARE @CalculatedBillingPeriodRevision dbo.yyyymm \r\n            DECLARE @CalculatedFromDate dbo.yyyymmdd \r\n            DECLARE @CalculatedToDate dbo.yyyymmdd \r\n            DECLARE @BilledAmount dbo.BillingAmt \r\n            DECLARE @BilledAmountMonthly dbo.BillingAmt \r\n            DECLARE @BilledAmountMonthlySum dbo.BillingAmt \r\n            DECLARE @BilledAmountAverage dbo.BillingAmt \r\n            DECLARE @BilledAmountRemainder dbo.BillingAmt \r\n            DECLARE @BillingPeriodDays dbo.Accumulator \r\n            DECLARE @BillingPeriodDaysAverage dbo.Accumulator \r\n            DECLARE @BillingPeriodDaysRemainder dbo.Accumulator \r\n            DECLARE @Therms dbo.EnergyUnit \r\n            DECLARE @LastPeriodTherms dbo.EnergyUnit \r\n            DECLARE @ThermsAverage dbo.EnergyUnit \r\n            DECLARE @ThermsRemainder dbo.EnergyUnit \r\n            DECLARE @CCF dbo.EnergyUnit \r\n            DECLARE @CCFAverage dbo.EnergyUnit \r\n            DECLARE @CCFRemainder dbo.EnergyUnit \r\n            DECLARE @SumAverageCCF dbo.EnergyUnit \r\n            DECLARE @idx INT\r\n            DECLARE @StartingBillingPeriodDaysIncrement INT\r\n            DECLARE @StartingBillingPeriodCCFIncrement INT\r\n            DECLARE @StartingBillingPeriodThermsIncrement INT\r\n            DECLARE @IncrementBillingPeriodDays INT\r\n            DECLARE @IncrementBillingPeriodCCF INT\r\n            DECLARE @IncrementBillingPeriodTherms INT\r\n-- \r\n            DECLARE @BilledAmountMonthlyLastPeriod dbo.BillingAmt\r\n            DECLARE @ThermsMonthlyLastPeriod dbo.EnergyUnit \r\n            DECLARE @CCFMonthlyLastPeriod dbo.EnergyUnit \r\n\r\n            DECLARE @ConEdUtilityCode dbo.seqid\r\n            DECLARE @ApplyMonthlyPercentage dbo.DiscountPercentage\r\n            DECLARE @ThermsMonthlySum dbo.EnergyUnit \r\n            DECLARE @ThermsMonthly dbo.EnergyUnit \r\n            DECLARE @CCFMonthly dbo.EnergyUnit \r\n            DECLARE @CCFMonthlySum dbo.EnergyUnit \r\n            DECLARE @TotalGasSpannedBilledPercentage dbo.DiscountPercentage\r\n            DECLARE @BillingCycle dbo.MonthlyBillingCycle\r\n--\r\n--\r\n--**************************************************************************************  \r\n--SET DEFAULTS                                                  \r\n--**************************************************************************************\r\n\r\n            SELECT TOP 1\r\n                    @BillingPeriod = BillingPeriod\r\n            FROM ConEd.UploadConEdisonAccount\r\n--\r\n            SET @BillingCycle = 'M'\r\n            SET @ConEdUtilityCode = 9\r\n--\r\n--**************************************************************************************  \r\n--Main Process                                      \r\n--**************************************************************************************\r\n--\r\n--\tDECLARE a cursor to find all account bills that span more than one period.\r\n--\r\n            DECLARE SpannedGasBillCursor CURSOR\r\n            FOR\r\n                SELECT  UploadConEdisonAccountTempSummarySpannedSeqid\r\n                FROM ConEd.UploadConEdisonAccountTempSummarySpanned\r\n                WHERE   ( DeltaNumberOfPeriods > 1 ) --and @BillingPeriod=@BillingPeriod\r\n--\r\n            OPEN SpannedGasBillCursor;\r\n--\r\n            FETCH NEXT FROM SpannedGasBillCursor INTO @UploadConEdisonAccountTempSummarySpannedSeqid\r\n--\r\n-- Check @@FETCH_STATUS to see if there are any more rows to fetch.\r\n--\r\n            WHILE @@FETCH_STATUS = 0 \r\n                BEGIN\r\n\t--\r\n\t--\tBuffer all of the columns from the spanned row for parsing purposes\r\n\t--\r\n                    SELECT  @DeltaNumberOfPeriods = DeltaNumberOfPeriods ,\r\n                            @BillingPeriodRevision = BillingPeriodRevision ,\r\n                            @FirstPeriodCanceled = FirstPeriodCanceled ,\r\n                            @FromDate = FromDate ,\r\n                            @ToDate = ToDate ,\r\n                            @BilledAmount = BilledAmount ,\r\n                            @CCF = CCF ,\r\n                            @Therms = Therms ,\r\n                            @ThermFactor = ThermFactor ,\r\n                            @BillingPeriodDays = BillingPeriodDays ,\r\n                            @BillingPeriod = BillingPeriod ,\r\n                            @AccountNumber = AccountNumber ,\r\n                            @FacilityName = FacilityName ,\r\n                            @ServiceAddress = ServiceAddress ,\r\n                            @TariffCode = TariffCode ,\r\n                            @PostingDate = PostingDate\r\n                    FROM ConEd.UploadConEdisonAccountTempSummarySpanned\r\n                    WHERE   ( UploadConEdisonAccountTempSummarySpannedSeqid = @UploadConEdisonAccountTempSummarySpannedSeqid ) \r\n\t--\r\n\t--\tAggregate the average City wide monthly gas usage percentage for the spanned row billing periods \r\n\t--\r\n                    SELECT  @TotalGasSpannedBilledPercentage = [dbo].[CalculateTotalGasSpannedBilledPercentage](@BillingCycle, @DeltaNumberOfPeriods, @FirstPeriodCanceled, @BillingPeriodRevision)\r\n\t--\r\n\t--\tDetermine the number of periods minus 1 to pro-rate the money and usage.  The last period will derive the money and usage\r\n\t--\tby row totals - (the n-1 aggregates of money and usage)\r\n\t--\r\n                    SET @NumberOfPeriodsMinusOne = @DeltaNumberOfPeriods - 1\r\n\t--\r\n\t--\tInitialize the counters for the n-1 parses\r\n\t--\r\n                    SET @CalculatedBillingPeriodRevision = @FirstPeriodCanceled\r\n                    SET @CalculatedFromDate = @FromDate\r\n                    SET @CalculatedToDate = @ToDate\r\n                    SET @idx = 0\r\n                    SET @BilledAmountMonthlySum = 0.00\r\n                    SET @ThermsMonthlySum = 0\r\n                    SET @CCFMonthlySum = 0\r\n\t--\r\n                    WHILE ( @NumberOfPeriodsMinusOne > @idx ) \r\n                        BEGIN\r\n\t\t\t--\r\n\t\t\t-- The @ApplyMonthlyPercentage holds the weigthed average for the particular month\r\n\t\t\t--\r\n                            SELECT  @ApplyMonthlyPercentage = [dbo].[CalculateApplyMonthlyPercentageGasSpannedBilled](@CalculatedBillingPeriodRevision,\r\n                                                              @TotalGasSpannedBilledPercentage)\r\n\t\t\t--\r\n\t\t\t-- Apply the Monthly Percentage to the CCF,Therms and Billed Amount and accumulate the weigthed average units.\r\n\t\t\t--\r\n                            SET @BilledAmountMonthly = ROUND(@BilledAmount * @ApplyMonthlyPercentage, 2)\r\n                            SET @BilledAmountMonthlySum = @BilledAmountMonthlySum + @BilledAmountMonthly\r\n                            SET @ThermsMonthly = ROUND(@Therms * @ApplyMonthlyPercentage, 0)\r\n                            SET @ThermsMonthlySum = @ThermsMonthlySum + @ThermsMonthly\r\n                            SET @CCFMonthly = ROUND(@CCF * @ApplyMonthlyPercentage, 0)\r\n                            SET @CCFMonthlySum = @CCFMonthlySum + @CCFMonthly\r\n\t\t\t--\r\n\t\t\t--\tThe Billing Period Projected \"ToDate\" is derived from the table \"dbo.BillingPeriodProjected\" using the utility company seqid and the\r\n\t\t\t--\tRevisedBillingPeriod and using the \"EndofPeriodTodate\" as the derived \"Todate\" for the account.\r\n\t\t\t--\r\n                            SELECT  @CalculatedToDate = [dbo].[DetermineConEdisonBillingPeriodProjectedToDate](@CalculatedBillingPeriodRevision, @TariffCode, @ConEdUtilityCode)\r\n\t\t\t--\r\n                            PRINT @AccountNumber + ' ' + @BillingPeriodRevision + ' ' + @FromDate + ' ' + @ToDate\r\n\t\t\t--\r\n\t\t\t--\tCreate a custom note that explains how the information was parsed and what was the original information of the spanned row.\r\n\t\t\t--\tIt will note in EC3 that the transaction was derived.\r\n\t\t\t--\r\n                            SELECT  @Notes = 'Therm factor '\r\n                                    + CAST(@ThermFactor AS VARCHAR(6))\r\n                                    + ' for '\r\n                                    + CAST(@DeltaNumberOfPeriods AS VARCHAR(6))\r\n                                    + ' First: ' + @FirstPeriodCanceled\r\n                                    + ' ( ' + @FromDate + ') Last: '\r\n                                    + @BillingPeriodRevision + ' ( '\r\n                                    + @FromDate + '). ' + ' period: '\r\n                                    + @CalculatedBillingPeriodRevision\r\n                                    + ' Month %: '\r\n                                    + CAST(@ApplyMonthlyPercentage AS VARCHAR(10))\r\n                                    + ' - Total %: '\r\n                                    + CAST(@TotalGasSpannedBilledPercentage AS VARCHAR(10))\r\n\t\t\t--\r\n\t\t\t--\tINSERT the data into the table \"ConEd.UploadConEdisonAccountSummary\"\r\n\t\t\t--\r\n                            INSERT  INTO ConEd.UploadConEdisonAccountSummary\r\n                                    (AccountUtilityCompanySeqid\r\n                                    ,OriginalAccountNumber\r\n                                    ,NumberOfRebillTransactions\r\n                                    ,NumberOfTransactions\r\n                                    ,DerivedFromSpannedBill\r\n                                    ,BillingPeriod\r\n                                    ,BillingPeriodRevision\r\n                                    ,FirstCanceledBillingPeriod\r\n                                    ,EstimatedOrActualBilling\r\n                                    ,InitialCancelFromDate\r\n                                    ,CurrentBillingToDate\r\n                                    ,NumberOfBillingPeriods\r\n                                    ,TotalBillingDaysRebilled\r\n                                    ,TotalRebilledAmount\r\n                                    ,TotalCanceledAmount\r\n                                    ,PriorRevisedBilledAmount\r\n                                    ,RevisedBilledAmount\r\n                                    ,CanceledBilledAmount\r\n                                    ,AverageRebillCostOfGasCharge\r\n                                    ,AverageRebillThermsFactor\r\n                                    ,BillingDays\r\n                                    ,BillingDate\r\n                                    ,FromDate\r\n                                    ,ToDate\r\n                                    ,BillingAction\r\n                                    ,ProcessedInTheCurrentPeriod\r\n                                    ,GasRateCode\r\n                                    ,DeliveryChargeAmount\r\n                                    ,TotalCCF\r\n                                    ,TotalTherms\r\n                                    ,ThermsFactor\r\n                                    ,CancelFromDate\r\n                                    ,CancelToDate\r\n                                    ,CancelDeliveryChargeAmount\r\n                                    ,CancelTotalCCF\r\n                                    ,CancelTotalTherms\r\n                                    ,CancelThermsFactor\r\n                                    ,ProcessEffectiveDate\r\n                                    ,Notes\r\n                                    ,SpannedBillingPeriodRevision\r\n                                    ,SpannedFirstCanceledBillingPeriod\r\n                                    ,SpannedBilledAmount\r\n                                    ,SpannedCCF\r\n                                    ,SpannedThermFactor\r\n                                    ,SpannedTherm\r\n                                    ,SpannedMonthlyPercentage\r\n                                    ,SpannedTotalPercentage\r\n                                    ,FacilityName\r\n                                    ,ServiceAddress\r\n                                    ,AuthenticatedUserID )\r\n                            SELECT  'AccountUtilityCompanySeqid' = @ConEdUtilityCode\r\n                            ,       'OriginalAccountNumber' = @AccountNumber\r\n                            ,       'NumberOfRebillTransactions' = 1\r\n                            ,       'NumberOfTransactions' = 1\r\n                            ,       'DerivedFromSpannedBill' = 'Y'\r\n                            ,       UploadConEdisonAccountTempSummarySpanned.BillingPeriod\r\n                            ,       'BillingPeriodRevision' = @CalculatedBillingPeriodRevision\r\n                            ,       'FirstCanceledBillingPeriod' = @CalculatedBillingPeriodRevision\r\n                            ,       'EstimatedOrActualBilling' = 'ACT'\r\n                            ,       'InitialCancelFromDate' = @FromDate\r\n                            ,       'CurrentBillingToDate' = @ToDate\r\n                            ,       'NumberOfBillingPeriods' = 1\r\n                            ,       'TotalBillingDaysRebilled' = [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate, @CalculatedToDate)\r\n                            ,       'TotalRebilledAmount' = @BilledAmountMonthly\r\n                            ,       'TotalCanceledAmount' = 0\r\n                            ,       'PriorRevisedBilledAmount' = 0\r\n                            ,       'RevisedBilledAmount' = 0\r\n                            ,       'CanceledBilledAmount' = 0\r\n                            ,       'AverageRebillCostOfGasCharge' = 0\r\n                            ,       'AverageRebillThermsFactor' = 1.00\r\n                            ,       'BillingDays' = [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate, @CalculatedToDate)\r\n                            ,       'BillingDate' = [dbo].ConvertDateToYYYYMMDD(@PostingDate)\r\n                            ,       'FromDate' = @CalculatedFromDate\r\n                            ,       'ToDate' = @CalculatedToDate\r\n                            ,       'BillingAction' = CASE WHEN @BillingPeriod = @CalculatedBillingPeriodRevision THEN 'O' ELSE 'A' END\r\n                            ,       'ProcessedInTheCurrentPeriod' = 'N'\r\n                            ,       'GasRateCode' = UploadConEdisonAccountTempSummarySpanned.TariffCode\r\n                            ,       'DeliveryChargeAmount' = @BilledAmountMonthly\r\n                            ,       'TotalCCF' = @CCFMonthly\r\n                            ,       'TotalTherms' = @ThermsMonthly\r\n                            ,       'ThermsFactor' = CASE @CCFMonthly WHEN 0 THEN 1.0000 ELSE ROUND(@ThermsMonthly * 1.0 / @CCFMonthly, 4) END\r\n                            ,       'CancelFromDate' = NULL\r\n                            ,       'CancelToDate' = NULL\r\n                            ,       'CancelDeliveryChargeAmount' = 0\r\n                            ,       'CancelTotalCCF' = 0\r\n                            ,       'CancelTotalTherms' = 0\r\n                            ,       'CancelThermsFactor' = 1.0\r\n                            ,       'ProcessEffectiveDate' = [dbo].ConvertDateToYYYYMMDD(GETDATE())\r\n                            ,       'Notes' = @Notes\r\n                            ,       'SpannedBillingPeriodRevision' = @BillingPeriodRevision\r\n                            ,       'SpannedFirstCanceledBillingPeriod' = @FirstPeriodCanceled\r\n                            ,       'SpannedBilledAmount' = @BilledAmount\r\n                            ,       'SpannedCCF' = @CCF\r\n                            ,       'SpannedThermFactor' = @ThermFactor\r\n                            ,       'SpannedTherm' = @Therms\r\n                            ,       'SpannedMonthlyPercentage' = @ApplyMonthlyPercentage\r\n                            ,       'SpannedTotalPercentage' = @TotalGasSpannedBilledPercentage\r\n                            ,       'FacilityName' = @FacilityName\r\n                            ,       'ServiceAddress' = @ServiceAddress\r\n                            ,       'AuthenticatedUserID' = 1 -- AuthenticatedUserID\r\n                            FROM ConEd.UploadConEdisonAccountTempSummarySpanned\r\n                            WHERE   ( UploadConEdisonAccountTempSummarySpannedSeqid = @UploadConEdisonAccountTempSummarySpannedSeqid ); \r\n\t\t\t--\r\n\t\t\t--\tSet up for the next the Revised Billing Period row.\r\n\t\t\t--\r\n                            SET @SumAverageCCF = @SumAverageCCF + @CCFAverage \t  \r\n                            SET @idx = @idx + 1\r\n\t\t\t--\r\n\t\t\t--\tCalculate the next the Revised Billing Period row.\r\n                            SELECT  @CalculatedBillingPeriodRevision = [dbo].[CalculateNextBillingPeriod](@CalculatedBillingPeriodRevision, @BillingCycle)\r\n\t\t\t--\tThis will derive the new Revised Billing Period row's \"FromDate\"\r\n                            SELECT  @CalculatedFromDate = [dbo].[DetermineConEdisonBillingPeriodProjectedFromDate](@CalculatedBillingPeriodRevision, @TariffCode, @ConEdUtilityCode)\r\n\t\t\t--\r\n\t\t\t--\tProcess the next Revised Billing Period row\r\n\t\t\t--\r\n                        END\r\n\t--\r\n\t--\tFinish up the last period's processing\r\n\t--\r\n\t--\tUse the (Nth -1) periods @CalculatedToDate as the \"FromDate\" and the acutal \"ToDate\" from the spanned record as the \"ToDate\"\r\n\t--\r\n                    SELECT  @CalculatedFromDate = @CalculatedToDate\r\n                    SELECT  @CalculatedToDate = @ToDate\r\n\t--\r\n\t--\t@ApplyMonthlyPercentage is used for the notes purposes only\r\n\t--\r\n                    SELECT  @ApplyMonthlyPercentage = [dbo].[CalculateApplyMonthlyPercentageGasSpannedBilled](@CalculatedBillingPeriodRevision, @TotalGasSpannedBilledPercentage)\r\n\t--\r\n\t--\tDerive the net changes to avoid rounding errors\r\n\t--\r\n                    SET @BilledAmountMonthlyLastPeriod = @BilledAmount - @BilledAmountMonthlySum\r\n                    SET @ThermsMonthlyLastPeriod = @Therms - @ThermsMonthlySum\r\n                    SET @CCFMonthlyLastPeriod = @CCF - @CCFMonthlySum\r\n\t--\r\n\t--\tprint @AccountNumber+' '+@BillingPeriodRevision+' '+@FromDate+' '+@ToDate\r\n\t--\r\n\t--\r\n\t--\tCreate a custom note that explains how the information was parsed and what was the original information of the spanned row.\r\n\t--\tIt will note in EC3 that the transaction was derived.\r\n\t--\r\n                    SELECT  @Notes = 'Therm factor '\r\n                            + CAST(@ThermFactor AS VARCHAR(6)) + ' for '\r\n                            + CAST(@DeltaNumberOfPeriods AS VARCHAR(6))\r\n                            + ' First: ' + @FirstPeriodCanceled + ' ( '\r\n                            + @FromDate + ') Last: ' + @BillingPeriodRevision\r\n                            + ' ( ' + @FromDate + '). ' + ' period: '\r\n                            + @CalculatedBillingPeriodRevision + ' Month %: '\r\n                            + CAST(@ApplyMonthlyPercentage AS VARCHAR(10))\r\n                            + ' - Total %: '\r\n                            + CAST(@TotalGasSpannedBilledPercentage AS VARCHAR(10))\r\n\t--\r\n\t--\tINSERT the data into the table \"ConEd.UploadConEdisonAccountSummary\"\r\n\t--\r\n                    INSERT  INTO ConEd.UploadConEdisonAccountSummary\r\n                            (AccountUtilityCompanySeqid\r\n                            ,OriginalAccountNumber\r\n                            ,NumberOfRebillTransactions\r\n                            ,NumberOfTransactions\r\n                            ,DerivedFromSpannedBill\r\n                            ,BillingPeriod\r\n                            ,BillingPeriodRevision\r\n                            ,FirstCanceledBillingPeriod\r\n                            ,EstimatedOrActualBilling\r\n                            ,InitialCancelFromDate\r\n                            ,CurrentBillingToDate\r\n                            ,NumberOfBillingPeriods\r\n                            ,TotalBillingDaysRebilled\r\n                            ,TotalRebilledAmount\r\n                            ,TotalCanceledAmount\r\n                            ,PriorRevisedBilledAmount\r\n                            ,RevisedBilledAmount\r\n                            ,CanceledBilledAmount\r\n                            ,AverageRebillCostOfGasCharge\r\n                            ,AverageRebillThermsFactor\r\n                            ,BillingDays\r\n                            ,BillingDate\r\n                            ,FromDate\r\n                            ,ToDate\r\n                            ,BillingAction\r\n                            ,ProcessedInTheCurrentPeriod\r\n                            ,GasRateCode\r\n                            ,DeliveryChargeAmount\r\n                            ,TotalCCF\r\n                            ,TotalTherms\r\n                            ,ThermsFactor\r\n                            ,CancelFromDate\r\n                            ,CancelToDate\r\n                            ,CancelDeliveryChargeAmount\r\n                            ,CancelTotalCCF\r\n                            ,CancelTotalTherms\r\n                            ,CancelThermsFactor\r\n                            ,ProcessEffectiveDate\r\n                            ,Notes\r\n                            ,SpannedBillingPeriodRevision\r\n                            ,SpannedFirstCanceledBillingPeriod\r\n                            ,SpannedBilledAmount\r\n                            ,SpannedCCF\r\n                            ,SpannedThermFactor\r\n                            ,SpannedTherm\r\n                            ,SpannedMonthlyPercentage\r\n                            ,SpannedTotalPercentage\r\n                            ,FacilityName\r\n                            ,ServiceAddress\r\n                            ,AuthenticatedUserID )\r\n                    SELECT  'AccountUtilityCompanySeqid' = @ConEdUtilityCode\r\n                    ,       'OriginalAccountNumber' = @AccountNumber\r\n                    ,       'NumberOfRebillTransactions' = 1\r\n                    ,       'NumberOfTransactions' = 1\r\n                    ,       'DerivedFromSpannedBill' = 'Y'\r\n                    ,       'BillingPeriod' = UploadConEdisonAccountTempSummarySpanned.BillingPeriod\r\n                    ,       'BillingPeriodRevision' = @CalculatedBillingPeriodRevision\r\n                    ,       'FirstCanceledBillingPeriod' = @CalculatedBillingPeriodRevision\r\n                    ,       'EstimatedOrActualBilling' = 'ACT'\r\n                    ,       'InitialCancelFromDate' = @FromDate\r\n                    ,       'CurrentBillingToDate' = @ToDate\r\n                    ,       'NumberOfBillingPeriods' = [dbo].[CalculateDeltaBillingPeriods]([dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(@CalculatedFromDate,\r\n                                                              @TariffCode,\r\n                                                              @ConEdUtilityCode),\r\n                                                              @BillingCycle),\r\n                                                              [dbo].DetermineConEdisonBillingPeriodProjected(@CalculatedToDate,\r\n                                                              @TariffCode,\r\n                                                              @ConEdUtilityCode),\r\n                                                              @BillingCycle)\r\n                    ,       'TotalBillingDaysRebilled' = [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate, @CalculatedToDate)\r\n                    ,       'TotalRebilledAmount' = @BilledAmountMonthlyLastPeriod\r\n                    ,       'TotalCanceledAmount' = 0\r\n                    ,       'PriorRevisedBilledAmount' = 0\r\n                    ,       'RevisedBilledAmount' = @BilledAmountMonthly\r\n                    ,       'CanceledBilledAmount' = 0\r\n                    ,       'AverageRebillCostOfGasCharge' = 0\r\n                    ,       'AverageRebillThermsFactor' = 1.00\r\n                    ,       'BillingDays' = [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate, @CalculatedToDate)\r\n                    ,       'BillingDate' = [dbo].ConvertDateToYYYYMMDD(@PostingDate)\r\n                    ,       'FromDate' = @CalculatedFromDate\r\n                    ,       'ToDate' = @CalculatedToDate\r\n                    ,       'BillingAction' = CASE WHEN @BillingPeriod = @CalculatedBillingPeriodRevision THEN 'O' ELSE 'A' END\r\n                    ,       'ProcessedInTheCurrentPeriod' = 'N'\r\n                    ,       'GasRateCode' = UploadConEdisonAccountTempSummarySpanned.TariffCode\r\n                    ,       'DeliveryChargeAmount' = @BilledAmountMonthlyLastPeriod\r\n                    ,       'TotalCCF' = @CCFMonthlyLastPeriod\r\n                    ,       'TotalTherms' = @ThermsMonthlyLastPeriod\r\n                    ,       'ThermsFactor' = CASE @CCFMonthlyLastPeriod WHEN 0 THEN 0 ELSE ROUND(@ThermsMonthlyLastPeriod * 1.0 / @CCFMonthlyLastPeriod, 4) END\r\n                    ,       'CancelFromDate' = NULL\r\n                    ,       'CancelToDate' = NULL\r\n                    ,       'CancelDeliveryChargeAmount' = 0\r\n                    ,       'CancelTotalCCF' = 0\r\n                    ,       'CancelTotalTherms' = 0\r\n                    ,       'CancelThermsFactor' = 1.0\r\n                    ,       'ProcessEffectiveDate' = [dbo].ConvertDateToYYYYMMDD(GETDATE())\r\n                    ,       'Notes' = @Notes\r\n                    ,       'SpannedBillingPeriodRevision' = @BillingPeriodRevision\r\n                    ,       'SpannedFirstCanceledBillingPeriod' = @FirstPeriodCanceled\r\n                    ,       'SpannedBilledAmount' = @BilledAmount\r\n                    ,       'SpannedCCF' = @CCF\r\n                    ,       'SpannedThermFactor' = @ThermFactor\r\n                    ,       'SpannedTherm' = @Therms\r\n                    ,       'SpannedMonthlyPercentage' = @ApplyMonthlyPercentage\r\n                    ,       'SpannedTotalPercentage' = @TotalGasSpannedBilledPercentage\r\n                    ,       'FacilityName' = FacilityName\r\n                    ,       'ServiceAddress' = ServiceAddress\r\n                    ,       'AuthenticatedUserID' = 1 -- AuthenticatedUserID\r\n                    FROM ConEd.UploadConEdisonAccountTempSummarySpanned\r\n                    WHERE   ( UploadConEdisonAccountTempSummarySpannedSeqid = @UploadConEdisonAccountTempSummarySpannedSeqid ); \r\n\t--\r\n\t--\tProcess the next row\r\n\t--\r\n                    FETCH NEXT FROM SpannedGasBillCursor INTO @UploadConEdisonAccountTempSummarySpannedSeqid\r\n                END\r\n\r\n            CLOSE SpannedGasBillCursor;\r\n            DEALLOCATE SpannedGasBillCursor;\r\n\r\n        END -- 2.2 ends\r\n\r\n\t\t/*\r\n\t\t2.3) Correct billing period\r\n\t\t*/\r\n\t\t--\tMake sure that the max BillingPeriodRevision is less than or equal to the current BillingPeriod\r\n        BEGIN\r\n            UPDATE  ConEd.UploadConEdisonAccountSummary\r\n            SET     BillingPeriodRevision = CASE WHEN BillingPeriodRevision > BillingPeriod THEN BillingPeriod ELSE BillingPeriodRevision END\r\n            WHERE   ( BillingPeriod < BillingPeriodRevision )\r\n        END -- end 2.3\r\n\r\n\t\t/*\r\n\t\t3) Merge data. One record for each account + billingperiodrevision. Save data into the adjustment gas table\r\n\t\t*/\r\n        BEGIN\r\n            TRUNCATE TABLE ConEd.UploadConEdisonAccountBillingAdjustmentGas\r\n            INSERT  INTO ConEd.[UploadConEdisonAccountBillingAdjustmentGas]\r\n                    ([AdjustedAccount]\r\n                    ,[AccountUtilityCompanySeqid]\r\n                    ,[NumberOfTransactions]\r\n                    ,[NumberOfRebillTransactions]\r\n                    ,[NumberOfCancelTransactions]\r\n                    ,[OriginalAccountNumber]\r\n                    ,[BillingPeriod]\r\n                    ,[BillingPeriodRevision]\r\n                    ,[FirstCanceledBillingPeriod]\r\n                    ,[EstimatedOrActualBilling]\r\n                    ,[InitialCancelFromDate]\r\n                    ,[CurrentBillingToDate]\r\n                    ,[NumberOfBillingPeriods]\r\n                    ,[TotalBillingDaysRebilled]\r\n                    ,[TotalRebilledAmount]\r\n                    ,[TotalCanceledAmount]\r\n                    ,[AverageRebillCostOfGasCharge]\r\n                    ,[AverageRebillThermsFactor]\r\n                    ,[BillingDays]\r\n                    ,[BillingDate]\r\n                    ,[ToDate]\r\n                    ,[FromDate]\r\n                    ,[BillingAction]\r\n                    ,[ProcessedInTheCurrentPeriod]\r\n                    ,[GasRateCode]\r\n                    ,[TotalCCF]\r\n                    ,[TotalTherms]\r\n                    ,[ThermsFactor]\r\n                    ,[CancelFromDate]\r\n                    ,[CancelToDate]\r\n                    ,[CancelTotalCCF]\r\n                    ,[CancelTotalTherms]\r\n                    ,[CancelThermsFactor]\r\n                    ,[ProcessEffectiveDate]\r\n                    ,[DerivedFromSpannedBill]\r\n                    ,[SpannedBillingPeriodRevision]\r\n                    ,[SpannedFirstCanceledBillingPeriod]\r\n                    ,[SpannedBilledAmount]\r\n                    ,[SpannedCCF]\r\n                    ,[SpannedThermFactor]\r\n                    ,[SpannedTherm]\r\n                    ,[SpannedMonthlyPercentage]\r\n                    ,[SpannedTotalPercentage]\r\n                    ,[Notes]\r\n                    ,[AuthenticatedUserID]\r\n                    ,[DateAdded]\r\n                    ,[LastUpdate]\r\n                    ,[FacilityName]\r\n                    ,[ServiceAddress]\r\n                    ,[BillingCycle] )\r\n            SELECT  'AdjustedAccount' = NULL\r\n            ,       'AccountUtilityCompanySeqid' = 9\r\n            ,       'NumberOfTransactions' = COUNT(*)\r\n            ,       'NumberOfRebillTransactions' = COUNT(*)\r\n            ,       'NumberOfCancelTransactions' = 0\r\n            ,       'OriginalAccountNumber' = UploadConEdisonAccountSummary.OriginalAccountNumber\r\n            ,       'BillingPeriod' = MAX(UploadConEdisonAccountSummary.BillingPeriod)\r\n            ,       'BillingPeriodRevision' = UploadConEdisonAccountSummary.BillingPeriodRevision\r\n            ,       'FirstCanceledBillingPeriod' = [dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(MIN(UploadConEdisonAccountSummary.FromDate), MIN(UploadConEdisonAccountSummary.GasRateCode), 9), 'M')\r\n            ,       'EstimatedOrActualBilling' = [dbo].[DetermineConEdisonActualOrEstimatedBilling](UploadConEdisonAccountSummary.OriginalAccountNumber, UploadConEdisonAccountSummary.BillingPeriodRevision)\r\n            ,       'InitialCancelFromDate' = NULL\r\n            ,       'CurrentBillingToDate' = NULL\r\n            ,       'NumberOfBillingPeriods' = [dbo].[CalculateDeltaBillingPeriods]([dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(MIN(UploadConEdisonAccountSummary.FromDate), MIN(UploadConEdisonAccountSummary.GasRateCode), 9), 'M'), [dbo].DetermineConEdisonBillingPeriodProjected(MAX(UploadConEdisonAccountSummary.ToDate), MAX(UploadConEdisonAccountSummary.GasRateCode), 9), 'M')\r\n            ,       'TotalBillingDaysRebilled' = dbo.CalculateNumberOfBillingDays(MIN(UploadConEdisonAccountSummary.FromDate), MAX(UploadConEdisonAccountSummary.ToDate))\r\n            ,       'TotalRebilledAmount' = SUM(UploadConEdisonAccountSummary.TotalRebilledAmount)\r\n            ,       'TotalCanceledAmount' = 0\r\n            ,       'AverageRebillCostOfGasCharge' = AVG(UploadConEdisonAccountSummary.CostOfGasCharge)\r\n            ,       'AverageRebillThermsFactor' = AVG(UploadConEdisonAccountSummary.ThermsFactor)\r\n            ,       'BillingDays' = dbo.CalculateNumberOfBillingDays(MIN(UploadConEdisonAccountSummary.FromDate), MAX(UploadConEdisonAccountSummary.ToDate))\r\n            ,       'BillingDate' = MAX(UploadConEdisonAccountSummary.BillingDate)\r\n            ,       'ToDate' = MAX(UploadConEdisonAccountSummary.ToDate)\r\n            ,       'FromDate' = MIN(UploadConEdisonAccountSummary.FromDate)\r\n            ,       'BillingAction' = CASE WHEN MAX(UploadConEdisonAccountSummary.BillingPeriod) = MIN(UploadConEdisonAccountSummary.BillingPeriodRevision) THEN 'O' ELSE 'A' END\r\n            ,       'ProcessedInTheCurrentPeriod' = 'N'\r\n            ,       'GasRateCode' = MAX(UploadConEdisonAccountSummary.GasRateCode)\r\n            ,       'TotalCCF' = SUM(UploadConEdisonAccountSummary.TotalCCF)\r\n            ,       'TotalTherms' = SUM(UploadConEdisonAccountSummary.TotalTherms)\r\n            ,       'ThermsFactor' = SUM(UploadConEdisonAccountSummary.ThermsFactor)\r\n            ,       'CancelFromDate' = NULL\r\n            ,       'CancelToDate' = NULL\r\n            ,       'CancelTotalCCF' = NULL\r\n            ,       'CancelTotalTherms' = NULL\r\n            ,       'CancelThermsFactor' = NULL\r\n            ,       'ProcessEffectiveDate' = [dbo].ConvertDateToYYYYMMDD(GETDATE())\r\n            ,       'DerivedFromSpannedBill' = MAX(UploadConEdisonAccountSummary.DerivedFromSpannedBill)\r\n            ,       'SpannedBillingPeriodRevision' = MAX(UploadConEdisonAccountSummary.SpannedBillingPeriodRevision)\r\n            ,       'SpannedFirstCanceledBillingPeriod' = MAX(UploadConEdisonAccountSummary.SpannedFirstCanceledBillingPeriod)\r\n            ,       'SpannedBilledAmount' = MAX(UploadConEdisonAccountSummary.SpannedBilledAmount)\r\n            ,       'SpannedCCF' = MAX(UploadConEdisonAccountSummary.SpannedCCF)\r\n            ,       'SpannedThermFactor' = MAX(UploadConEdisonAccountSummary.SpannedThermFactor)\r\n            ,       'SpannedTherm' = MAX(UploadConEdisonAccountSummary.SpannedTherm)\r\n            ,       'SpannedMonthlyPercentage' = MAX(UploadConEdisonAccountSummary.SpannedMonthlyPercentage)\r\n            ,       'SpannedTotalPercentage' = MAX(UploadConEdisonAccountSummary.SpannedTotalPercentage)\r\n            ,       'Notes' = MAX(UploadConEdisonAccountSummary.Notes)\r\n            ,       'AuthenticatedUserID' = MAX(UploadConEdisonAccountSummary.AuthenticatedUserID)\r\n            ,       'DateAdded' = GETDATE()\r\n            ,       'LastUpdate' = GETDATE()\r\n            ,       'FacilityName' = MAX(FacilityName)\r\n            ,       'ServiceAddress' = MAX(ServiceAddress)\r\n            ,       'BillingCycle] )' = 'M'\r\n            FROM ConEd.UploadConEdisonAccountSummary\r\n            GROUP BY UploadConEdisonAccountSummary.OriginalAccountNumber, UploadConEdisonAccountSummary.BillingPeriodRevision;\t\r\n        END -- 3 end\r\n    END"
        }
      ]
    }
  ]
}
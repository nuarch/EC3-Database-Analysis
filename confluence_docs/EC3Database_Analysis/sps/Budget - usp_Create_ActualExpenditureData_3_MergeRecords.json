{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Create_ActualExpenditureData_3_MergeRecords",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Create_ActualExpenditureData_3_MergeRecords",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to manage and update expenditure data within a budgetary system. It processes data related to agency expenditures, updates records, handles agency restructuring, and merges records to ensure data consistency and accuracy. The procedure involves several steps, including updating agency information, removing invalid data, restructuring data based on agency hierarchy, summarizing data for parent and grandparent agencies, and merging records to consolidate expenditure data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple operations, including data insertion, updates, deletions, and complex joins."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses temporary tables and loops to handle hierarchical data processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic to manage data integrity and restructuring."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure performs aggregation and summarization of financial data, which can be computationally intensive."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the expenditure data is being processed. It is used to filter records in various operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the published billing period, used alongside the billing period to filter and manage records."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Information Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A table variable "
                        },
                        {
                          "type": "text",
                          "text": "@AgencyDivision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is declared to store agency hierarchy and related information."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Data is inserted into this table from a function "
                        },
                        {
                          "type": "text",
                          "text": "Budget.uftn_BudgetAgencyDivision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", which provides agency division details."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Agency Information",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure updates the "
                        },
                        {
                          "type": "text",
                          "text": "BudgetVersusActualExpendituresByAgencyAndServiceClassification",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table with new agency codes and names based on the "
                        },
                        {
                          "type": "text",
                          "text": "@AgencyDivision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Validation and Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It checks for records with invalid agency codes (not present in "
                        },
                        {
                          "type": "text",
                          "text": "@AgencyDivision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ") and raises an error if such records exist with non-zero actual dollars."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If no invalid records are found, it deletes records with invalid agency codes."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Restructuring",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates records to reflect agency restructuring, where data for new budget agencies is assigned to parent agencies."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Summarization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A loop iterates over agency levels to summarize data for parent and grandparent agencies, aggregating financial figures."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Record Merging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Merges data for each agency to consolidate records, ensuring that the record with the highest sequence ID contains the merged data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Deletes duplicate records, retaining only the record with the highest sequence ID."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved, especially "
                },
                {
                  "type": "text",
                  "text": "BudgetVersusActualExpendituresByAgencyAndServiceClassification",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", have appropriate indexes to optimize join and filter operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The summarization and merging operations involve aggregation, which can be resource-intensive. Consider optimizing these queries for performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves updates and deletions, which may lead to locking issues. Consider using transaction isolation levels to manage concurrency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Plan",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Analyze the execution plan to identify any potential bottlenecks and optimize query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the data in "
                },
                {
                  "type": "text",
                  "text": "@AgencyDivision",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is accurate and complete. Any discrepancies can lead to incorrect updates or deletions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure raises an error if invalid data is found, but it does not handle other potential errors, such as those arising from database constraints or transaction failures."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the data volume grows, the performance of aggregation and summarization operations may degrade. Consider partitioning or archiving old data to maintain performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency Conflicts",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances are executed simultaneously, leading to potential data inconsistencies. Implementing locking mechanisms or using transactions can mitigate this risk."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE PROCEDURE [Budget].[usp_Create_ActualExpenditureData_3_MergeRecords]\r\n\t@BillingPeriod BillingPeriod,\r\n\t@PublishedBillingPeriod BillingPeriod\r\nAS\r\nBEGIN\r\n\t\r\n\t-- 3.0 agency information\r\n\tDECLARE @AgencyDivision AS TABLE\r\n\t\t(\r\n\t\t\tAgencyCodeOEC varchar(6) PRIMARY KEY,\r\n\t\t\tparentAgencyCode OECAgencyCode,\r\n\t\t\tparentAgencyDivisionSeqID int,\r\n\t\t\tgrandParantAgencyCode OECAgencyCode,\r\n\t\t\tagencyLevel INT,\r\n\t\t\tAgencyOECL1 OECAgencyCode,\r\n\t\t\tAgencyOECL2 OECAgencyCode,\r\n\t\t\tAgencyOECL3 OECAgencyCode,\r\n\t\t\tAgencyDivisionHierarchy HIERARCHYID,\r\n\t\t\tAgencyShortDesc VARCHAR(75),\r\n\t\t\tAgencyDivisionSeqid INT,\r\n\t\t\tAgencyFundingSeqid int,\r\n\t\t\tIsHidden VARCHAR(1) -- data is hidden in report \r\n\t\t)\r\n\t\r\n\tINSERT INTO @AgencyDivision\r\n\t        ( AgencyCodeOEC ,\r\n\t          parentAgencyCode ,\r\n\t          parentAgencyDivisionSeqID ,\r\n\t          grandParantAgencyCode ,\r\n\t          agencyLevel ,\r\n\t          AgencyOECL1 ,\r\n\t          AgencyOECL2 ,\r\n\t          AgencyOECL3 ,\r\n\t          AgencyDivisionHierarchy ,\r\n\t          AgencyShortDesc ,\r\n\t          AgencyDivisionSeqid ,\r\n\t          AgencyFundingSeqid ,\r\n\t          IsHidden\r\n\t        )\r\n\tSELECT AgencyCodeOEC ,\r\n\t          parentAgencyCode ,\r\n\t          parentAgencyDivisionSeqID ,\r\n\t          grandParantAgencyCode ,\r\n\t          agencyLevel ,\r\n\t          AgencyOECL1 ,\r\n\t          AgencyOECL2 ,\r\n\t          AgencyOECL3 ,\r\n\t          AgencyDivisionHierarchy ,\r\n\t          AgencyShortDesc ,\r\n\t          AgencyDivisionSeqid ,\r\n\t          AgencyFundingSeqid ,\r\n\t          IsHidden FROM Budget.uftn_BudgetAgencyDivision(NULL, NULL, 'Y')\r\n\t \r\n\tUPDATE data\r\n\tSET \r\n\tdata.AgencyCodeOEC = ad.AgencyCodeOEC, -- take the new \r\n\tdata.AgencyName= ad.AgencyShortDesc,\r\n\tdata.ParentAgencyCodeOEC = ad.parentAgencyCode\r\n\tfrom\r\n\tbudget.BudgetVersusActualExpendituresByAgencyAndServiceClassification AS data\r\n\tINNER JOIN @AgencyDivision AS ad\r\n\tON data.AgencyCodeOEC = ad.AgencyCodeOEC\r\n\tWHERE data.BillingPeriod = @BillingPeriod AND data.PublishedBillingPeriod = @PublishedBillingPeriod\r\n\t\r\n\t-- remove data not in the budget division table\r\n\tIF(EXISTS(SELECT * from budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\tWHERE AgencyCodeOEC NOT IN (SELECT AgencyCodeOEC FROM @AgencyDivision) AND PublishedBillingPeriod = @PublishedBillingPeriod AND BillingPeriod = @BillingPeriod AND CurrentMonthActualDollars<>0))\r\n\tbegin\r\n\t\tRAISERROR('Dataset contains invalid agency', 12, 1)\r\n\tEND\t\r\n\tELSE\r\n\tbegin\r\n\t\tDELETE budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\tWHERE AgencyCodeOEC NOT IN (SELECT AgencyCodeOEC FROM @AgencyDivision) AND PublishedBillingPeriod = @PublishedBillingPeriod AND BillingPeriod = @BillingPeriod\r\n\tEND\r\n\r\n\t--3.1 Handle agency restructuring for budget \r\n\t--\t\t\tdata = parent.data - sum(parent.child.data)\t: \r\n\t--\t\t\texample: data for 801000 assigned to 801101 ; data for 057000 is assigned to 057010\r\n\t-- Data for new budget agency = parent of budget agency. New agency will have the summary information that were associated with the parent agency.\r\n\tUPDATE DATA\r\n\tSET data.AgencyCodeOEC = adInfo.AgencyCodeOEC, -- take the new \r\n\tdata.AgencyName= adInfo.AgencyShortDesc,\r\n\tdata.ParentAgencyCodeOEC = data.AgencyCodeOEC\r\n\tfrom\r\n\tbudget.BudgetVersusActualExpendituresByAgencyAndServiceClassification AS data\r\n\tINNER JOIN Budget.BudgetAgencyDivision AS ad\r\n\tON data.AgencyCodeOEC = ad.BudgetParentAgencyCode\r\n\tINNER JOIN @AgencyDivision as adInfo ON\r\n\tad.BudgetGroupByAgencyCodeOEC = adInfo.AgencyCodeOEC\r\n\tWHERE ad.isBudgetNewAgency = 'Y' OR ad.IsToTakeParentAgencyData = 'Y'\r\n\tAND data.billingPeriod = @BillingPeriod AND data.PublishedBillingPeriod = @PublishedBillingPeriod\r\n\t\r\n\t--3.2 Summarize for parent and grandparent\r\n\r\n\tDECLARE @AgencyLevel int = 2\r\n\tWHILE (@AgencyLevel >= 1)\r\n\tBEGIN\r\n\t\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t\t( \r\n\t\t\t\t  PublishedBillingPeriod ,\r\n\t\t\t\t  BillingPeriod ,\r\n\t\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t\t  AgencyCodeOEC ,\r\n\t\t\t\t  AgencyName ,\r\n\t\t\t\t  ParentAgencyCodeOEC,\r\n\t\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t\t  CurrentMonthBudgetEnergyDollars,\r\n\t\t\t\t  CurrentMonthBudgetEnergyUsage,\r\n\t\t\t\t  YearToDateBudgetDollars,\r\n\t\t\t\t  YearToDateActuralDollars,\r\n\t\t\t\t  EndOfYearBudgetDollars,\r\n\t\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t\t  EnergyDeliveryType,\r\n\t\t\t\t  EndOfYearProjectionDollars\r\n\t\t\t\t)\r\n\t\tSELECT @PublishedBillingPeriod ,\r\n\t\t\t\t  @BillingPeriod ,\r\n\t\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t\t  DATA.ParentAgencyCodeOEC ,\r\n\t\t\t\t  adInfo.AgencyShortDesc ,\r\n\t\t\t\t  adInfo.parentAgencyCode,\r\n\t\t\t\t  SUM(CurrentMonthActualDollars),\r\n\t\t\t\t  SUM(CurrentMonthActualUsage),\r\n\t\t\t\t  SUM(CurrentMonthBudgetEnergyDollars),\r\n\t\t\t\t  SUM(CurrentMonthBudgetEnergyUsage),\r\n\t\t\t\t  SUM(YearToDateBudgetDollars),\r\n\t\t\t\t  SUM(YearToDateActuralDollars),\r\n\t\t\t\t  SUM(EndOfYearBudgetDollars),\r\n\t\t\t\t  SUM(CurrentMonthPaidAdjustment),\r\n\t\t\t\t  'N',\r\n\t\t\t\t  MAX(EnergyDeliveryType),\r\n\t\t\t\t  SUM(EndOfYearProjectionDollars)\r\n\t\tFROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification AS DATA\r\n\t\tINNER JOIN @AgencyDivision as adInfo\r\n\t\tON DATA.ParentAgencyCodeOEC = adInfo.AgencyCodeOEC\r\n\t\tWHERE DATA.ParentAgencyCodeOEC IS NOT NULL AND adInfo.AgencyLevel = @AgencyLevel AND DATA.BillingPeriod = @BillingPeriod AND DATA.PublishedBillingPeriod = @PublishedBillingPeriod\r\n\t\tGROUP BY DATA.ParentAgencyCodeOEC, BudgetVersusExpenditureTypeSeqID, adInfo.AgencyShortDesc, adInfo.parentAgencyCode\r\n\t\t\r\n\t\tSET @AgencyLevel = @AgencyLevel -1\r\n\tEND\r\n\r\n\r\n\t--3.3 Merge record for each agency code\r\n\r\n\t-- merge data for each agency and put into record with max seq id. There are two reasons for merge. 1) Actual data is inserted in separate column. 2) It is possible to have a usage information associated with parent agencies. 3.2 statement might create additional record for the parent record\r\n\r\n\t-- move merged data into record with the highest\r\n\tUPDATE expenditureInfo\r\n\tSET \r\n\t\texpenditureInfo.CurrentMonthActualDollars = mergedData.CurrentMonthActualDollars,\r\n\t\texpenditureInfo.CurrentMonthActualUsage = mergedData.CurrentMonthActualUsage,\r\n\t\texpenditureInfo.CurrentMonthBudgetEnergyDollars = mergedData.CurrentMonthBudgetEnergyDollars,\r\n\t\texpenditureInfo.CurrentMonthBudgetEnergyUsage = mergedData.CurrentMonthBudgetEnergyUsage,\r\n\t\texpenditureInfo.YearToDateBudgetDollars = mergedData.YearToDateBudgetDollars,\r\n\t\texpenditureInfo.YearToDateActuralDollars = mergedData.YearToDateActuralDollars,\r\n\t\texpenditureInfo.EndOfYearBudgetDollars = mergedData.EndOfYearBudgetDollars,\r\n\t\texpenditureInfo.CurrentMonthPaidAdjustment = mergedData.CurrentMonthPaidAdjustment,\r\n\t\texpenditureInfo.AgencyName = mergedData.agencyName,\r\n\t\texpenditureInfo.EndOfYearProjectionDollars = mergedData.EndOfYearProjectionDollars\r\n\tfrom\r\n\tbudget.BudgetVersusActualExpendituresByAgencyAndServiceClassification AS expenditureInfo\r\n\tINNER join\r\n\t(\r\n\t\tSELECT \r\n\t\t\tIsSourceOfFundingGroupData IsSourceOfFundingGroupData,\r\n\t\t\tMAX(BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID) BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID,\r\n\t\t\tSUM(CurrentMonthActualDollars) CurrentMonthActualDollars,\r\n\t\t\tSUM(CurrentMonthActualUsage) CurrentMonthActualUsage,\r\n\t\t\tSUM(CurrentMonthBudgetEnergyDollars) CurrentMonthBudgetEnergyDollars,\r\n\t\t\tSUM(CurrentMonthBudgetEnergyUsage) CurrentMonthBudgetEnergyUsage,\r\n\t\t\tSUM(YearToDateBudgetDollars) YearToDateBudgetDollars,\r\n\t\t\tSUM(YearToDateActuralDollars) YearToDateActuralDollars,\r\n\t\t\tSUM(EndOfYearBudgetDollars) EndOfYearBudgetDollars,\r\n\t\t\tSUM(CurrentMonthPaidAdjustment) CurrentMonthPaidAdjustment,\r\n\t\t\tmax(AgencyName) AS agencyName,\r\n\t\t\tSUM(EndOfYearProjectionDollars) AS EndOfYearProjectionDollars\r\n\t\tFROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification \r\n\t\tWHERE BillingPeriod = @BillingPeriod AND PublishedBillingPeriod = @publishedBillingPeriod\r\n\t\tGROUP BY PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  IsSourceOfFundingGroupData\r\n\t) AS mergedData\r\n\tON mergedData.BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID = expenditureInfo.BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID\r\n\r\n\tDELETE \r\n\texpenditureInfo\r\n\tfrom\r\n\tbudget.BudgetVersusActualExpendituresByAgencyAndServiceClassification AS expenditureInfo\r\n\tINNER join\r\n\t(\r\n\t\tSELECT \r\n\t\tMAX(BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID) BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID,\r\n\t\tPublishedBillingPeriod ,\r\n\t\tBillingPeriod ,\r\n\t\tBudgetVersusExpenditureTypeSeqID,\r\n\t\tAgencyCodeOEC,\r\n\t\tIsSourceOfFundingGroupData\r\n\t\tFROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification \r\n\t\tWHERE BillingPeriod = @BillingPeriod\r\n\t\tGROUP BY PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  IsSourceOfFundingGroupData\r\n\t) AS mergedData\r\n\tON  expenditureInfo.BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID < mergedData.BudgetVersusActualExpendituresByAgencyAndServiceClassificationSeqID\r\n\tAND expenditureInfo.AgencyCodeOEC = mergedData.AgencyCodeOEC\r\n\tAND expenditureInfo.BillingPeriod = mergedData.BillingPeriod\r\n\tAND expenditureInfo.BudgetVersusExpenditureTypeSeqID = mergedData.BudgetVersusExpenditureTypeSeqID\r\n\tAND expenditureInfo.PublishedBillingPeriod = mergedData.PublishedBillingPeriod\r\n\tAND expenditureInfo.IsSourceOfFundingGroupData = mergedData.IsSourceOfFundingGroupData\r\n\r\nEND"
        }
      ]
    }
  ]
}
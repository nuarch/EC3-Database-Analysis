{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Common",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ProcessExchange_Code47",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ProcessExchange_Code47",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to create a new account in the "
        },
        {
          "type": "text",
          "text": "Billing.Account",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table based on data from the "
        },
        {
          "type": "text",
          "text": "Common.ExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. It performs several validation checks before proceeding with the account creation. The procedure also updates the "
        },
        {
          "type": "text",
          "text": "ExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " record to mark it as processed once the account is successfully created. The procedure includes exception handling to manage errors during execution."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple validation checks, conditional logic, and database operations, including inserts and updates. It also includes exception handling, which adds to its complexity. However, it does not involve complex calculations or extensive data transformations, keeping it at a medium complexity level."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ExchangeSeqid AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The unique identifier for the exchange data record to be processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ID of the user executing the procedure, used for auditing purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that indicates the status of the procedure execution (1 for success, 0 for failure)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Message AS VARCHAR(1000) OUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that provides a message about the procedure's execution, including error messages if applicable."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exclusion Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure first checks if the exchange record is marked as excluded. If so, it sets a message and status code, throws an exception, and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Existence Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It verifies if the exchange record exists. If not, it sets a message and status code, throws an exception, and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Processing Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if the exchange record has already been processed. If it has, it sets a message and status code, throws an exception, and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account Existence Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if the account number already exists in the system with an active status or as a current account. If so, it sets a message and status code, throws an exception, and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Service Classification",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It determines the service classification by joining "
                },
                {
                  "type": "text",
                  "text": "ExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with "
                },
                {
                  "type": "text",
                  "text": "UtilityTariffRateInformation",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". If no classification is found, it sets a message and status code, throws an exception, and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It inserts a new record into the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table with data from "
                },
                {
                  "type": "text",
                  "text": "ExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and some default values."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Post-Insertion Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": After insertion, it updates the new account record to set "
                },
                {
                  "type": "text",
                  "text": "UniqueAccountSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "IsCurrentRecord",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "RecordVersion",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Mark as Processed",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It updates the "
                },
                {
                  "type": "text",
                  "text": "ExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " record to mark it as processed and associates it with the new account."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exception Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If any error occurs during the process, it catches the exception, sets an error message and status code, and throws the exception."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the "
                },
                {
                  "type": "text",
                  "text": "ExchangeDataSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "OriginalAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " columns are indexed to optimize the "
                },
                {
                  "type": "text",
                  "text": "SELECT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " queries used for validation checks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Although not explicitly mentioned, wrapping the insert and update operations in a transaction could ensure atomicity and consistency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider potential concurrency issues if multiple instances of this procedure are executed simultaneously, especially regarding the "
                },
                {
                  "type": "text",
                  "text": "ident_current",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " function."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "THROW",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " after setting the "
                },
                {
                  "type": "text",
                  "text": "@Message",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could lead to the procedure terminating abruptly, which might not be ideal for all scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values like '99991231' and '999912' for dates could lead to issues if these values are not handled correctly in the application logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the "
                },
                {
                  "type": "text",
                  "text": "ExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " record is accurate and complete. Any missing or incorrect data could lead to incorrect account creation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of the procedure might degrade if not optimized, particularly the validation checks and joins."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the procedure is executed with appropriate permissions to prevent unauthorized data access or modifications."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Description:\t\"47\" Create a new account and identify the first associated meter\r\n--*\r\n--* AUTHOR:       MOHAMMED BELARREM\r\n--* Created On:   06/15/2016\r\n--**************************************************************************************\r\n--* Change Log\r\n--* \r\n--* 06/15/2016 MOH  First Version \r\n--* 11/29/2016\tzd\t9999 99 99 and 9999 99 dates to 99991231 and 999912\r\n--* 03/27/2017 zd  Added Throw for exception handling\r\n--* 04/09/2019 VY   Modified for EnergySubTypeID\r\n--***************************************************************************************\r\nCREATE PROCEDURE [Common].[usp_ProcessExchange_Code47]\r\n(\r\n\t@ExchangeSeqid AS INT\r\n\t,@AuthenticatedUserID AS INT\r\n\t,@StatusCode AS INT OUTPUT\r\n\t,@Message AS VARCHAR(1000) OUT\r\n)\r\nAS\r\nBEGIN\r\n\tDECLARE @RecordExchangeCode VARCHAR(2)\r\n\r\n\t-- if the record is flagged as exclude, return and exit\r\n\tIF ('Y' = (SELECT Exclude FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid))\r\n\tBEGIN\r\n\t\tSET @Message = 'This exchange is excluded from processing. ExchangeSeqid: ' + CAST(@ExchangeSeqid AS VARCHAR(8)) \r\n\t\tSET @StatusCode = 1\t-- this is not necessary an error\r\n\t\t;THROW 50000,@Message,1;\r\n\t\tRETURN\r\n\tEND;\r\n\t-- do some validation \r\n\r\n\t-- CHECK IF the record exists\r\n\tIF (NOT EXISTS(SELECT ExchangeDataSeqid FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid))\r\n\tBEGIN\r\n\t\tSET @Message = 'The ExchangeSeqid ' + CAST(@ExchangeSeqid AS VARCHAR(8)) + ' does not exist. Please verify '\r\n\t\tSET @StatusCode = 0\r\n\t\t;THROW 50000,@Message,1;\r\n\t\tRETURN\r\n\tEND;\r\n\r\n\t-- check if the record was processed\r\n\tIF ('N' <> (SELECT IsProcessed FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid))\r\n\tBEGIN\r\n\t\tSET @Message = 'This 47 exchange was already processed. ExchangeSeqid: ' + CAST(@ExchangeSeqid AS VARCHAR(8)) \r\n\t\tSET @StatusCode = 0\r\n\t\t;THROW 50000,@Message,1;\r\n\t\tRETURN\r\n\tEND;\r\n\r\n\t-- check if the current account number is already in the system under an active status\r\n\tDECLARE @AccountNumber VARCHAR(15)\r\n\tSELECT @AccountNumber = CurrentAccountNumber FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid\r\n\r\n\tIF (EXISTS (SELECT * FROM Billing.Account WHERE OriginalAccountNumber = @AccountNumber AND AccountStatus IN ('AC' , '47', '46', 'UA') AND IsCurrentRecord = 'Y'))\r\n\tBEGIN\r\n\t\tSET @Message = 'The account number: ' + @AccountNumber + ' is already in the system under an active status. Please verfiy ' \r\n\t\tSET @StatusCode = 0\r\n\t\t;THROW 50000,@Message,1;\r\n\t\tRETURN\r\n\tEND;\r\n\r\n\tIF (EXISTS (SELECT * FROM Billing.Account WHERE OriginalAccountNumber = @AccountNumber AND IsCurrentRecord = 'Y'))\r\n\tBEGIN\r\n\t\tSET @Message = 'The account number: ' + @AccountNumber + ' is already in the system under as current account. If account has the same facility, agency and the address its same account, activate if its inactive and ignore the exchange data, if it doesnt match contact DEM.' \r\n\t\tSET @StatusCode = 0\r\n\t\t;THROW 50000,@Message,1;\r\n\t\tRETURN\r\n\tEND;\r\n\r\n\r\n\tBEGIN TRY\t\r\n\t\t-- set some defaults\r\n\t\tDECLARE @UnknownAgencySeqid\tAS INT, @UnknownFacilitySeqid AS INT, @AccountStatus AS VARCHAR(2)\r\n\t\t\t,@PreviousAccountStatus AS VARCHAR(2), @UtilityTariffRateInformationSeqid AS INT\r\n\t\t\t,@ServiceClassification AS VARCHAR(3), @BillingPeriod AS VARCHAR(6);\r\n\r\n\t\tSELECT @UnknownAgencySeqid = 396, @UnknownFacilitySeqid\t= 4623, @AccountStatus = 'AC', @PreviousAccountStatus = 'AC';\r\n\t\tSELECT @BillingPeriod = BillingPeriod FROM Billing.ApplicationTimeFrame WHERE CurrentProcessingPeriod = 'Y';\r\n\r\n\t\t-- figure out the service classification \r\n\t\tSELECT @UtilityTariffRateInformationSeqid = UtilityTariffRateInformationSeqid \r\n\t\tFROM Billing.UtilityTariffRateInformation INNER JOIN \r\n\t\t\t\tCommon.ExchangeData ON ExchangeData.UtilityCompanySeqid = UtilityTariffRateInformation.UtilityCompanyTariff \r\n\t\t\t\tAND ExchangeData.DeliveryServiceClass = UtilityTariffRateInformation.DeliveryTariffRate\r\n\t\t\t\tAND ExchangeData.TODAccount = UtilityTariffRateInformation.IsTod\r\n\t\tWHERE ExchangeDataSeqid = @ExchangeSeqid\r\n\t\r\n\t\tIF (@UtilityTariffRateInformationSeqid IS NULL or @UtilityTariffRateInformationSeqid = 0)\r\n\t\tBEGIN\r\n            SET @Message = 'The service classification reported on account: ' + @AccountNumber + ' is not in the system. Please verify or create first '\r\n\t\t\tSET @StatusCode = 0\r\n\t\t\t;THROW 50000,@Message,1;\r\n\t\t\tRETURN\r\n\t\tEND;\r\n\t\t\t\t\r\n\t\t-- insert the new account number\r\n\t\tINSERT INTO [Billing].[Account]\r\n\t\t\t([ExcessDistributionAssocEnergyAccount]\r\n\t\t\t,[IsExcessDistribution]\r\n\t\t\t,[CommodityAssocDeliveryAccount]\r\n\t\t\t,[IsCommodityAccount]\r\n\t\t\t,[UtilityAccountProvider]\r\n\t\t\t,[AgencyAccount]\r\n\t\t\t,[FacilityAccount]\r\n\t\t\t,UtilityTariffRateInformationSeqid\r\n\t\t\t,[AgencyEnergyBillingBudgetLine]\r\n\t\t\t,[ManualDataEntry]\r\n\t\t\t,[CurrentAccountNumber]\r\n\t\t\t,[OriginalAccountNumber]\r\n\t\t\t,[ReadingCycleNumber]\r\n\t\t\t,[AccountStatus]\r\n\t\t\t,[AccountPreviousStatus]\r\n\t\t\t,[AccountStatusCodePeriod]\r\n\t\t\t,[CurrentInvoiceAccountGroup]\r\n\t\t\t,[AccountEffectiveTurnOn]\r\n\t\t\t,[AccountEffectiveTurnOff]\r\n\t\t\t,[EnergySource]\r\n\t\t\t,[EnergyAccountDescription]\r\n\t\t\t,[EnergyDeliverySubTypeId] /* added on 4/9/2019 */\r\n\t\t\t,[IsMultipleEnergySourceAccount]\r\n\t\t\t,[IsTimeOfDayAccount]\r\n\t\t\t,[HasAccountLevelChange]\r\n\t\t\t,[HasMeters]\r\n\t\t\t,[HasMultipleActiveMeters]\r\n\t\t\t,[SalesType]\r\n\t\t\t,[DeliveryTariffRate]\r\n\t\t\t,[DeliveryTariffEffectiveDate]\r\n\t\t\t,[CommodityTariffRate]\r\n\t\t\t,[CommodityTariffEffectiveDate]\r\n\t\t\t,[BillingCycle]\r\n\t\t\t,[Delivery]\r\n\t\t\t,[AccountInMultipleBuildings]\r\n\t\t\t,[SourceOfRevenue]\r\n\t\t\t,[TurnOnDate]\r\n\t\t\t,[TurnOffDate]\r\n\t\t\t,[MunicipalCode]\r\n\t\t\t,[Territory]\r\n\t\t\t,[Tension]\r\n\t\t\t,[TripNumber]\r\n\t\t\t,[PartSupplied]\r\n\t\t\t,[UtilityServiceAccountName]\r\n\t\t\t,[UtilityServiceAddress]\r\n\t\t\t,[Borough]\r\n\t\t\t,[Block]\r\n\t\t\t,[LotNumber]\r\n\t\t\t,[CityPlanningBIN]\r\n\t\t\t,[ELOAgencyAddress]\r\n\t\t\t,[LastPeriodOriginalBilled]\r\n\t\t\t,[LastPeriodAdjustmentBilled]\r\n\t\t\t,[LastZeroDollarsBillingPeriod]\r\n\t\t\t,[IsSeasonalAccount]\r\n\t\t\t,[AdjustmentRecordSeqid]\r\n\t\t\t,[ContractNumber]\r\n\t\t\t,[FireAuditTrigger]\r\n\t\t\t,[Notes]\r\n\t\t\t,[AuthenticatedUserID]\r\n\t\t\t,[DateAdded]\r\n\t\t\t,[LastUpdate])\r\n\t\tSELECT \r\n\t\t\tNULL --[ExcessDistributionAssocEnergyAccount]\r\n\t\t\t,'N' --[IsExcessDistribution]\r\n\t\t\t,null --[CommodityAssocDeliveryAccount]\r\n\t\t\t,'N' --[IsCommodityAccount]\r\n\t\t\t,UtilityCompanySeqid\t --[UtilityAccountProvider]\r\n\t\t\t,ISNULL(AgencySeqid, @UnknownAgencySeqid) --[AgencyAccount]\r\n\t\t\t,ISNULL(FacilitySeqid, @UnknownFacilitySeqid) --[FacilityAccount]\r\n\t\t\t,@UtilityTariffRateInformationSeqid --[UtilityTariffRateInformationSeqid]\r\n\t\t\t,NULL --[AgencyEnergyBillingBudgetLine]\r\n\t\t\t,ManualDataEntry --[ManualDataEntry]\r\n\t\t\t,CurrentAccountNumber --[CurrentAccountNumber]\r\n\t\t\t,CurrentAccountNumber --[OriginalAccountNumber]\r\n\t\t\t,NULL --[ReadingCycleNumber]\r\n\t\t\t,@AccountStatus --[AccountStatus]\r\n\t\t\t,@PreviousAccountStatus --[AccountPreviousStatus]\r\n\t\t\t,@BillingPeriod --[AccountStatusCodePeriod]\r\n\t\t\t,AccountBillingGroupSeqid --[CurrentInvoiceAccountGroup]\r\n\t\t\t,AccountEffectiveTurnOn --[AccountEffectiveTurnOn]\r\n\t\t\t,'99991231' --[AccountEffectiveTurnOff]\r\n\t\t\t,EnergyDeliveryType --[EnergySource]\r\n\t\t\t,EnergyDeliveryType --[EnergyAccountDescription]\r\n\t\t\t,EnergyDeliverySubTypeId --[EnergyDeliverySubTypeID] added on 4/9/2019 \r\n\t\t\t,'N' --[IsMultipleEnergySourceAccount]\r\n\t\t\t,TODAccount --[IsTimeOfDayAccount]\r\n\t\t\t,'N' --[HasAccountLevelChange]\r\n\t\t\t, CASE EnergyDeliveryType WHEN '5' THEN 'Y' ELSE 'N' END --- IsOECDefinedMeter --[HasMeters]\r\n\t\t\t,'N' --[HasMultipleActiveMeters]\r\n\t\t\t,SalesType --[SalesType]\r\n\t\t\t,DeliveryServiceClass --[DeliveryTariffRate]\r\n\t\t\t,DeliveryServiceClassEffectiveDate --[DeliveryTariffEffectiveDate]\r\n\t\t\t,DeliveryServiceClass --[CommodityTariffRate]\r\n\t\t\t,DeliveryServiceClassEffectiveDate --[CommodityTariffEffectiveDate]\r\n\t\t\t,BillingCycle --[BillingCycle]\r\n\t\t\t,'Y' --[Delivery]\r\n\t\t\t,'N' --[AccountInMultipleBuildings]\r\n\t\t\t,'N' --[SourceOfRevenue]\r\n\t\t\t,@BillingPeriod --[TurnOnDate]\r\n\t\t\t,'999912' --[TurnOffDate]\r\n\t\t\t,MunicipalCode --[MunicipalCode]\r\n\t\t\t,null --[Territory]\r\n\t\t\t,TensionCode --[Tension]\r\n\t\t\t,TripNumber --[TripNumber]\r\n\t\t\t,null --[PartSupplied]\r\n\t\t\t,AccountName --[UtilityServiceAccountName]\r\n\t\t\t,AccountAddress --[UtilityServiceAddress]\r\n\t\t\t,Borough --[Borough]\r\n\t\t\t,null --[Block]\r\n\t\t\t,null --[LotNumber]\r\n\t\t\t,NULL --[CityPlanningBIN]\r\n\t\t\t,null --[ELOAgencyAddress]\r\n\t\t\t,NULL --[LastPeriodOriginalBilled]\r\n\t\t\t,NULL --[LastPeriodAdjustmentBilled]\r\n\t\t\t,NULL --[LastZeroDollarsBillingPeriod]\r\n\t\t\t, CASE EnergyDeliveryType WHEN '5' THEN NULL ELSE 'N' END --[IsSeasonalAccount]\r\n\t\t\t,null --[AdjustmentRecordSeqid]\r\n\t\t\t,ContractNumber --- ContractNumber\r\n\t\t\t,'Y' --[FireAuditTrigger]\r\n\t\t\t,NULL --[Notes]\r\n\t\t\t,@AuthenticatedUserID --[AuthenticatedUserID]\r\n\t\t\t,GETDATE() --[DateAdded]\r\n\t\t\t,GETDATE() --[LastUpdate]\r\n\t\tFROM Common.ExchangeData\r\n\t\tWHERE ExchangeDataSeqid = @ExchangeSeqid;\r\n\r\n\t\t-- update UniqueAccount and isCurrentRecord since this is a freshly created record\r\n\t\tDECLARE @AccountSeqid seqid\r\n\t\t-- Get the Account sequence id after it is inserted\r\n\t\tSELECT @AccountSeqid  = ident_current('Billing.Account');\r\n\r\n\t\tUPDATE Billing.Account\r\n\t\tSET UniqueAccountSeqid = @AccountSeqid,\r\n\t\t\tIsCurrentRecord = 'Y',\r\n\t\t\tRecordVersion = 1 , -- since this is the first one\r\n\t\t\tFireAuditTrigger = 'N'\r\n\t\tWHERE AccountSeqid = @AccountSeqid;\r\n\r\n\t\t-- if we make it here and all is well, come back and update the record as processes\r\n\t\tUPDATE Common.ExchangeData\r\n\t\tSET IsProcessed = 'Y',\r\n\t\t\tAccountSeqid = @AccountSeqid\r\n\t\tWHERE ExchangeDataSeqid = @ExchangeSeqid;\r\n\r\n\t\tSELECT @Message = '', @StatusCode = 1;\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tSET @Message = 'Error processing exchange  ' + CAST(@ExchangeSeqid AS VARCHAR(8))  + ' error message: ' + ERROR_MESSAGE()\r\n\t\tSET @StatusCode = 0\r\n\t\t;THROW 50000,@Message,1;\r\n\tEND CATCH;\r\nEND;"
        }
      ]
    }
  ]
}
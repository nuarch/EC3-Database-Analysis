{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Nypa",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ProRateCustomerLevelShorePowerCredit",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ProRateCustomerLevelShorePowerCredit",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process shore power credits for a specific account within a billing system. It calculates the total shore power credit amount for a given billing period, updates the customer level adjustment amounts in the "
        },
        {
          "type": "text",
          "text": "Nypa.UploadNYPAAccountBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table, and handles rounding discrepancies by adjusting the account with the highest energy usage."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple SQL operations, including data selection, conditional logic, updates, and calculations. It interacts with several tables and performs operations based on specific conditions, making it moderately complex."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Status int output",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is an output parameter intended to return the status of the procedure execution. However, it is not utilized within the procedure, which might be an oversight."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variable Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Several variables are declared to store intermediate values such as billing period, credit amounts, and account numbers."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure retrieves the minimum billing period and the sum of total dollars from the "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPACoverSheet",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table where the "
                        },
                        {
                          "type": "text",
                          "text": "CoverSheetRecordType",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is '90'."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It fetches the current account number for a specific "
                        },
                        {
                          "type": "text",
                          "text": "UniqueAccountSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " from the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If there are rows returned from the previous selection ("
                        },
                        {
                          "type": "text",
                          "text": "@IsShorePowerCredit > 0",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "), the procedure proceeds with further processing."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "CustomerLevelAdjustmentAmount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Notes",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " in the "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAAccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table for records matching the current account number and billing period."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Discrepancy Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calculates the rounding discrepancy by comparing the total shore power credit amount with the sum of rounded amounts."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Adjustment for Rounding Discrepancy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "CustomerLevelAdjustmentAmount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for the account with the highest energy usage to account for the rounding discrepancy."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Selects the sum of "
                        },
                        {
                          "type": "text",
                          "text": "CustomerLevelAdjustmentAmount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and the total shore power credit amount for verification or reporting purposes."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the columns used in joins and where clauses, such as "
                },
                {
                  "type": "text",
                  "text": "UniqueAccountSeqID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", are indexed to improve query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Row Count Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "@@ROWCOUNT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is appropriate for checking if any rows were affected, but it should be used immediately after the relevant SQL statement to ensure accuracy."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances are executed simultaneously, especially when updating shared resources."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Unused Output Parameter",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "@Status",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " output parameter is declared but not used, which could lead to confusion or errors in calling applications expecting a status code."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses hardcoded values like "
                },
                {
                  "type": "text",
                  "text": "UniqueAccountSeqid = 15851",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which reduces flexibility and requires changes in the code for different accounts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The rounding discrepancy logic assumes that rounding errors will always be present and correctable, which may not always be the case."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no explicit error handling within the procedure, which could lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the data grows, the performance of the procedure might degrade if not optimized for larger datasets."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE     PROCEDURE [Nypa].[usp_ProRateCustomerLevelShorePowerCredit] (@Status int output)\nAS --**************************************************************************************\r\n--* Name:         \r\n--* Description:  Process to shore power credits to a specific account 690118804820004\r\n--*\r\n--* AUTHOR:       ZD\r\n--* Created On:   03/23/2016\r\n--**************************************************************************************\r\n--* Date\t\t\tTech\tDescription of Change\r\n--* ----------\t\t----\t-------------------------------------------------------------\r\n--* 03/23/2016\t\tZD\t\tFirst Version  \r\n--* 04/13/2016\t\tzd\t\tfixed the issue with update customerleveladjustmentamount\r\n--* 12/13/2018      VY      modified for UniqueAccountSeqID\r\n--***************************************************************************************\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\n\r\n--DECLARE @TotalShorePowerCurrentPeriodKWH bigint\r\ndeclare @BillingPeriod varchar(6)\t\r\ndeclare @IsShorePowerCredit int\r\ndeclare @CoverSheetRecordDesc varchar(250)\r\ndeclare @NumberOfAdjustments int\r\ndeclare @TotalShorePowerCreditAmount money\r\ndeclare @TotalShorePowerCreditRounding money\r\ndeclare @TopEnergyUserSeqid int\r\n\r\n--\t\t\r\nSELECT \r\n\t\t@BillingPeriod = min(BillingPeriod), \r\n\t\t@TotalShorePowerCreditAmount = SUM(TotalDollars)\r\nFROM \r\n\t\tNypa.UploadNYPACoverSheet\r\nWHERE \r\n\t\tCoverSheetRecordType ='90'\r\n\t\t-- This CoverSheetRecordType 'D1' is generated by us to avoid possible codes sent by NYPA or CONED\r\n--\r\nDECLARE @ShorePowerAccount VARCHAR(15)\r\nSELECT @ShorePowerAccount = A.CurrentAccountNumber FROM Billing.Account AS A WHERE A.UniqueAccountSeqid =15851 AND A.IsCurrentRecord ='Y'\r\n\r\n\r\n--\r\nset @IsShorePowerCredit =  @@rowcount\r\n--\r\nif (@IsShorePowerCredit > 0 )\r\n\tbegin\r\n\t\t--\t\t\r\n\t\tselect @CoverSheetRecordDesc = '  Total Shore Power Credit Amount $'+CONVERT(varchar, CONVERT(money, @TotalShorePowerCreditAmount), 1)\r\n\t\tSELECT @BillingPeriod=BillingPeriod FROM Billing.ApplicationTimeFrame WHERE CurrentProcessingPeriod='Y'\r\n\r\n\r\n\t\tUPDATE  Nypa.UploadNYPAAccountBilling\r\n\t\tSET             \r\n\t\t\t\tCustomerLevelAdjustmentAmount = CustomerLevelAdjustmentAmount + ROUND(@TotalShorePowerCreditAmount,2), \r\n\t\t\t\tNotes = Nypa.UploadNYPAAccountBilling.Notes + @CoverSheetRecordDesc\r\n\t\tFROM     \r\n\t\t\t\tBilling.Account INNER JOIN\r\n\t\t\t\tNypa.UploadNYPAAccountBilling ON /* Billing.Account.AccountSeqid = Nypa.UploadNYPAAccountBilling.AccountSeqid Comment out on 12/13/2018 */\r\n\t\t\t\tBilling.Account.UniqueAccountSeqid = Nypa.UploadNYPAAccountBilling.UniqueAccountSeqID and Billing.Account.IsCurrentRecord = 'Y' INNER JOIN\r\n\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\tWHERE   Billing.Account.CurrentAccountNumber = @ShorePowerAccount\r\n\t\t\t\tAND ( Nypa.UploadNYPAAccountBilling.BillingPeriod = Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod )\r\n\r\n\t\t--\r\n\t\t--\tCalculate the rounding discrepancy.\r\n\t\t--\r\n\t\tselect\t@TotalShorePowerCreditRounding = @TotalShorePowerCreditAmount - sum(ROUND(@TotalShorePowerCreditAmount,2))\r\n\t\tFROM     \r\n\t\t\t\tBilling.Account INNER JOIN\r\n\t\t\t\tBilling.AgencyDivision ON Billing.Account.AgencyAccount = Billing.AgencyDivision.AgencyDivisionSeqid INNER JOIN\r\n\t\t\t\tNypa.UploadNYPAAccountBilling ON /* Billing.Account.AccountSeqid = Nypa.UploadNYPAAccountBilling.AccountSeqid Comment out on 12/13/2018 */\r\n\t\t\t\tBilling.Account.UniqueAccountSeqID = Nypa.UploadNYPAAccountBilling.UniqueAccountSeqID and Billing.Account.IsCurrentRecord = 'Y' /* added on 12/13/2018 */ INNER JOIN\r\n\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\tWHERE   Billing.Account.CurrentAccountNumber = @ShorePowerAccount\r\n\t\t\t\tAND ( Nypa.UploadNYPAAccountBilling.BillingPeriod = Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod )\r\n\t\t--\r\n\t\t--\tCalculate the rounding discrepancy.\r\n\t\t--\r\n\t\t--\tAdd the rounding discrepancy to the CustomerLevelAdjustmentAmount of the account with the highest energy usage\r\n\t\t--\r\n\t\tUPDATE    Nypa.UploadNYPAAccountBilling\r\n\t\tSET              CustomerLevelAdjustmentAmount = CustomerLevelAdjustmentAmount + @TotalShorePowerCreditRounding\r\n\t\twhere Nypa.UploadNYPAAccountBilling.UploadNYPAAccountBillingSeqid  \r\n\t\t\t\tin (\r\n\t\t\t\t\t\t-- this should only pick up the current billing period\r\n\t\t\t\t\t\tSELECT Nypa.UploadNYPAAccountBilling.UploadNYPAAccountBillingSeqid\r\n\t\t\t\t\t\tFROM     \r\n\t\t\t\t\t\t\t\tBilling.Account INNER JOIN\r\n\t\t\t\t\t\t\t\tNypa.UploadNYPAAccountBilling ON /* Billing.Account.AccountSeqid = Nypa.UploadNYPAAccountBilling.AccountSeqid Comment out on 12/13/2018 */\r\n\t\t\t\t                Billing.Account.UniqueAccountSeqID = Nypa.UploadNYPAAccountBilling.UniqueAccountSeqID and Billing.Account.IsCurrentRecord = 'Y' /* added on 12/13/2018 */ INNER JOIN\r\n\t\t\t\t\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\t\t\t\t\tWHERE   Billing.Account.CurrentAccountNumber = @ShorePowerAccount\r\n\t\t\t\t\t\t\t\tAND ( Nypa.UploadNYPAAccountBilling.BillingPeriod = Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t)\r\n\t\t\tselect sum(CustomerLevelAdjustmentAmount) as ShorePowerCalcCustomerLevelAdjustmentAmount,@TotalShorePowerCreditAmount AS TotalShorePowerCreditAmount\r\n\t\t\tFROM     \r\n\t\t\t\t\tBilling.Account INNER JOIN\r\n\t\t\t\t\tNypa.UploadNYPAAccountBilling ON /* Billing.Account.AccountSeqid = Nypa.UploadNYPAAccountBilling.AccountSeqid Comment out on 12/13/2018 */\r\n\t\t\t\tBilling.Account.UniqueAccountSeqID = Nypa.UploadNYPAAccountBilling.UniqueAccountSeqID and Billing.Account.IsCurrentRecord = 'Y' /* added on 12/13/2018 */ INNER JOIN\r\n\t\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\t\tWHERE   Billing.Account.CurrentAccountNumber = @ShorePowerAccount\r\n\t\t\t\t\tAND ( Nypa.UploadNYPAAccountBilling.BillingPeriod = Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod )\r\nend \r\n\r\n\r\nend"
        }
      ]
    }
  ]
}
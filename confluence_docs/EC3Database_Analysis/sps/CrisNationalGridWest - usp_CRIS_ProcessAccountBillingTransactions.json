{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_ProcessAccountBillingTransactions",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_ProcessAccountBillingTransactions",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process account billing transactions for the New York Power Authority (NYPA) within a specific utility company's billing cycle. It primarily focuses on handling gas billing adjustments by inserting new records into the "
        },
        {
          "type": "text",
          "text": "Billing.AccountBillingAdjustmentCrisGas",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table if certain conditions are met. The procedure checks if billing adjustments for a given period have already been processed and, if not, inserts the necessary data from the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple steps and conditions to determine whether to insert data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It interacts with multiple tables and requires understanding of the billing process."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes a significant number of columns in the insert operation, which increases the complexity of maintaining and understanding the procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is intended to capture the ID of the user executing the procedure, likely for auditing or logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode int OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This output parameter is used to indicate the success or failure of the procedure's execution. A value of 0 indicates success, while a value of 9 would indicate failure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variable Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Several variables are declared to store intermediate data such as billing period, utility company ID, and transaction counts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure retrieves the current billing period, account billing group, and utility company sequence ID from the "
                },
                {
                  "type": "text",
                  "text": "CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Check for Existing Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if billing adjustments for the current period have already been processed by counting records in the "
                },
                {
                  "type": "text",
                  "text": "Billing.AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. If no records are found, it proceeds to insert new records."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the billing adjustments have not been processed, it inserts data from "
                },
                {
                  "type": "text",
                  "text": "CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " into "
                },
                {
                  "type": "text",
                  "text": "Billing.AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". This includes a wide range of fields related to billing adjustments, such as charge amounts, billing periods, and account statuses."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Set Status Code",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure sets the "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to 0 to indicate successful execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves inserting potentially large volumes of data, which could impact performance if not managed properly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensuring that the tables involved have appropriate indexes can help improve the performance of the SELECT and INSERT operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not explicitly manage transactions, which could lead to issues if partial updates occur due to errors."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure are executed simultaneously, there could be race conditions or data integrity issues, especially if the same billing period is processed concurrently."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which means that any runtime errors could leave the database in an inconsistent state."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of the procedure could degrade if not optimized for large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the data in "
                },
                {
                  "type": "text",
                  "text": "CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is accurate and complete, which may not always be the case."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_ProcessAccountBillingTransactions] @AuthenticatedUserID int , @StatusCode int  OUTPUT\n   \r\n AS --**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  Process the NYPA account billing original bills.  The sequential processing steps needed to\r\n--* \r\n--                     Step 01)      Insert the new Cover sheet billing types\r\n--\r\n-- Update the Account billing records with the correct account statuses of the existing accounts and the\r\n-- current cycle exchange actions.  The exchange code will be set to null.\r\n-- \r\n-- Determine the active accounts that the utility company did not send a bill for the cycle and add them to the \r\n-- to the \"UploadNYPAAccountBilling\" table.  At this point, we should have a collection of all of the accounts \r\n-- that were billed and all of the accounts that should have been billed.\r\n-- \r\n--*               \r\n--* Exec:  \t\t usp_ProcessAccountBillingSaveCanceRebillAdjustments\r\n--*\r\n--* Parameter(s):         \r\n--*\t\t\t       AuthenticatedUserID int Output\r\n--*\t\t\t       NumberOfAdjustmentsAdded int Output\r\n--*                            StatusCode  int output       -  Execution Return Status \r\n--*\r\n--* Database:     OEC\r\n--*\r\n--* Return:\t    0 Success\r\n--*                   9 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   10/26/2005\r\n--* Updated On:  12/10/2018 Vicky Yu (VY) for UniqueAccountSeqID \r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 10/26/2005 PAH  First Version  \r\n--* 03/27/2006 PAH  Revised to \r\n--\t\t\t\tCancelCommodityChargeAmount\r\n--\t\t\t\tCancelDeliveryChargeAmount\r\n--\t\t\t\tCancelMTACommodityTax\r\n--\t\t\t\tCancelMTADeliveryTax\r\n--\t\t\t\tCancelSalesTax\r\n--\t\t\t\tCancelSystemBenefitsCharge\r\n--\t\t\t\tCancelRetailDecouplingMechanismCharge\r\n--\t\t\t\tCancelDeliveryRateSurcharge\r\n--\t\t\t\tCancelRealTimeNormalizationCharge\r\n--\t\t\t\tCancelLatePaymentCharge\r\n--\t\t\t\tCancelPaperBillCharge\r\n--***************************************************************************************\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\n--\r\ndeclare @NumberOfAdjustmentsAdded int\r\ndeclare @CurrentBillingPeriod varchar(8)\r\ndeclare @AccountInvoiceBillingGroup int \r\ndeclare @UtilityCompanySeqid int\r\n--\r\ndeclare @HasAccountBillingAdjustmentGasBeenProcessed int\r\ndeclare @HasAccountBillingGasBeenProcessed int\r\ndeclare @HasAccountBillingBeenProcessed int\r\n--\r\ndeclare @BillingAccountBillingGasUpdateTransactionCount int\r\ndeclare @BillingAccountBillingUpdateTransactionCount int \r\n--\r\ndeclare @BillingAccountBillingGasInsertTransactionCount int\r\ndeclare @BillingAccountBillingInsertTransactionCount int \r\n--**************************************************************************************  \r\n--SET DEFAULTS                                                  \r\n--**************************************************************************************\r\n--\r\n--************************************************************************************** \r\n--\tMain Processing\r\n--**************************************************************************************\r\n-- Get all of the generalized parameters needed to process the account billing from the Gas.UploadAccountBillingAdjustmentGas\r\n--\r\n--\t\t@CurrentBillingPeriod = BillingPeriod \r\n--\t\t@InvoiceAccountBillingGroupSeqid=InvoiceAccountBillingGroupSeqid \r\n--\t\t@UtilityCompanySeqid=UtilityCompanySeqid\r\n--\r\nSELECT\tTOP (1)\t@CurrentBillingPeriod = BillingPeriod, \r\n\t\t\t\t@AccountInvoiceBillingGroup=AccountInvoiceBillingGroup, \r\n\t\t\t\t@UtilityCompanySeqid=UtilityCompanySeqid\r\nFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n--\r\nselect @HasAccountBillingAdjustmentGasBeenProcessed = count(*) from Billing.AccountBillingAdjustmentCrisGas where BillingPeriod = @CurrentBillingPeriod and @UtilityCompanySeqid=UtilityCompanySeqid AND AccountInvoiceBillingGroup = @AccountInvoiceBillingGroup\r\n--\r\n-- if this occurs \"isnull(@HasAccountBillingAdjustmentGasBeenProcessed,1)\" then set the value to 1 and not process\r\n--\r\nprint '@HasAccountBillingAdjustmentGasBeenProcessed count: '+str(@@rowcount)\r\nif (isnull(@HasAccountBillingAdjustmentGasBeenProcessed,1) = 0)\r\n\tbegin\r\n\t--\r\n\t\tINSERT INTO Billing.AccountBillingAdjustmentCrisGas\r\n\t\t(\t\t\t\r\n\t\t\t\tIsProcessed, NumberOfTransactions, BillingPeriod, BillingPeriodRevision, CancelLastRebillPeriod, \r\n\t\t\t\tFirstBillingPeriodCanceled, IsSpannedBilling, NumberOfBillingPeriod, UtilityCompanySeqid, AccountSeqid, \r\n\t\t\t\tUniqueAccountSeqID, /* added 12/10/2018 */ \r\n\t\t\t\tAccountBillingSeqid, \r\n\t\t\t\tAccountBillingCrisGasSeqid, AccountInvoiceBillingGroup, OriginalAccountNumber, MeterReadWorkDay, AccountBillingStatus, PreviousAccountBillingStatus, \r\n\t\t\t\tAccountBillingStatusCodePeriod, SpecialLedgerAccountNUmber, GasRateCode, BillFrequency, EstimatedOrActualBillingCode, PaidAdjustmentAmount, \r\n\t\t\t\tTotalNetPaidAdjustmentCalc, OriginalBilledAmount, RevisedBilledAmount, CancelBilledAmount, NetChangeDollars, OriginalTherms, RevisedTherms, \r\n\t\t\t\tCancelTherms, NetChangeTherms, ThermFactor, OriginalCCF, RevisedCCF, CancelCCF, NetChangeCCF, FromDate, ToDate, BillingDays, \r\n\t\t\t\tNumberOfMeters, CommodityChargeAmount, DeliveryChargeAmount, MTACommodityTax, MTADeliveryTax, SalesTax, SystemBenefitsCharge, \r\n\t\t\t\tRetailDecouplingMechanismCharge, DeliveryRateSurcharge, RealTimeNormalizationCharge, LatePaymentCharge, PaperBillCharge, \r\n\t\t\t\tPriorPeriodAccountBalance, AccountArrears, TerminationBalance, TotalPaymentsPosted, CurrentAccountBalance, DateLastPayment, \r\n\t\t\t\tMiscellaneousChargeAmount, MiscellaneousChargeType, MiscellaneousCreditAmount, MiscellaneousCreditType, \r\n\t\t\t\tMiscellaneousCreditPaymentBillingPeriod, SpannedGasChargeAmount, SpannedBilledCCF, SpannedBilledTherms, SpannedBillingPeriodRevision, \r\n\t\t\t\tSpannedFirstBillingPeriodCanceled, SpannedFromDate, SpannedToDate, BillRenderDate, PostMarkDate, DatePaymentDue, DateAcceptanceIntoOEC, \r\n\t\t\t\tNotes, AuthenticatedUserID, DateAdded, LastUpdate,CurrentAccountNumber,IsOldCrisGasAdjustment,AccountBillingGasSeqid, GasChargeAmount,\r\n\t\t\t\tCancelFromDate,CancelToDate, CancelCommodityChargeAmount, CancelDeliveryChargeAmount, CancelMTACommodityTax, CancelMTADeliveryTax, \r\n\t\t\t\tCancelSalesTax, CancelSystemBenefitsCharge, CancelRetailDecouplingMechanismCharge, CancelDeliveryRateSurcharge, \r\n\t\t\t\tCancelRealTimeNormalizationCharge, CancelLatePaymentCharge, CancelPaperBillCharge,PriorAccountArrears, PriorMiscellaneousChargeAmount,ExcludePriorGasChargeAmount,\r\n\t\t\t\tRevisedGasChargeAmount\r\n\t\t)\r\n\t\tSELECT \r\n\t\t\t\tIsProcessed, NumberOfTransactions, BillingPeriod, BillingPeriodRevision, CancelLastRebillPeriod, \r\n\t\t\t\tFirstBillingPeriodCanceled, IsSpannedBilling, NumberOfBillingPeriod, UtilityCompanySeqid, AccountSeqid, \r\n\t\t\t\tUniqueAccountSeqid, /* added 12/10/2018 */\r\n\t\t\t\tAccountBillingSeqid, \r\n\t\t\t\tAccountBillingCrisGasSeqid, AccountInvoiceBillingGroup, OriginalAccountNumber, MeterReadWorkDay, AccountBillingStatus, PreviousAccountBillingStatus, \r\n\t\t\t\tAccountBillingStatusCodePeriod, SpecialLedgerAccountNUmber, GasRateCode, BillFrequency, EstimatedOrActualBillingCode, PaidAdjustmentAmount, \r\n\t\t\t\tTotalNetPaidAdjustmentCalc, OriginalBilledAmount, RevisedBilledAmount, CancelBilledAmount, NetChangeDollars, OriginalTherms, RevisedTherms, \r\n\t\t\t\tCancelTherms, NetChangeTherms, ThermFactor, OriginalCCF, RevisedCCF, CancelCCF, NetChangeCCF, FromDate, ToDate, BillingDays, \r\n\t\t\t\tNumberOfMeters, CommodityChargeAmount, DeliveryChargeAmount, MTACommodityTax, MTADeliveryTax, SalesTax, SystemBenefitsCharge, \r\n\t\t\t\tRetailDecouplingMechanismCharge, DeliveryRateSurcharge, RealTimeNormalizationCharge, LatePaymentCharge, PaperBillCharge, \r\n\t\t\t\tPriorPeriodAccountBalance, AccountArrears, TerminationBalance, TotalPaymentsPosted, CurrentAccountBalance, DateLastPayment, \r\n\t\t\t\tMiscellaneousChargeAmount, MiscellaneousChargeType, MiscellaneousCreditAmount, MiscellaneousCreditType, \r\n\t\t\t\tMiscellaneousCreditPaymentBillingPeriod, SpannedGasChargeAmount, SpannedBilledCCF, SpannedBilledTherms, SpannedBillingPeriodRevision, \r\n\t\t\t\tSpannedFirstBillingPeriodCanceled, SpannedFromDate, SpannedToDate, BillRenderDate, PostMarkDate, DatePaymentDue, DateAcceptanceIntoOEC, \r\n\t\t\t\tNotes, AuthenticatedUserID, DateAdded, LastUpdate,AccountNumber,IsOldCrisGasAdjustment,AccountBillingGasSeqid, GasChargeAmount,\r\n\t\t\t\tCancelFromDate,CancelToDate,CancelCommodityChargeAmount, CancelDeliveryChargeAmount, CancelMTACommodityTax, CancelMTADeliveryTax, \r\n\t\t\t\tCancelSalesTax, CancelSystemBenefitsCharge, CancelRetailDecouplingMechanismCharge, CancelDeliveryRateSurcharge, \r\n\t\t\t\tCancelRealTimeNormalizationCharge, CancelLatePaymentCharge, CancelPaperBillCharge,PriorAccountArrears, PriorMiscellaneousChargeAmount,ExcludePriorGasChargeAmount,\r\n\t\t\t\tRevisedGasChargeAmount\r\n\t\tFROM \r\n\t\t\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\r\nend\r\n\t\r\n\t\t\t\r\n--\r\nset @StatusCode = 0\r\n\r\nEnd"
        }
      ]
    }
  ]
}
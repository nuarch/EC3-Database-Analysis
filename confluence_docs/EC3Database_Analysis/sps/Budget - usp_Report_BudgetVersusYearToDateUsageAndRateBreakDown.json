{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Report_BudgetVersusYearToDateUsageAndRateBreakDown",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Report_BudgetVersusYearToDateUsageAndRateBreakDown",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report comparing budgeted versus actual energy usage and expenditures for a specified billing period. It aggregates data at different levels of detail (citywide, funding source, or agency) and calculates various financial metrics, including budget rates, actual rates, and different types of surpluses. The procedure processes data from the "
        },
        {
          "type": "text",
          "text": "Budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table and other related tables, and it outputs the results into a temporary table for further analysis."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to its multi-step data processing, conditional logic based on input parameters, and multiple calculations involving financial metrics. It also involves nested queries, updates, and joins, which add to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress emailaddr",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used to filter data based on the user's email address, likely for security or personalization purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC VARCHAR(MAX)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the agency code to filter the data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Defines the billing period for which the report is generated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@InformationGroupLevel INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Determines the level of detail for the report (1: citywide, 2: funding source, 3: agency)."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by determining the fiscal year start period using a helper function "
                },
                {
                  "type": "text",
                  "text": "dbo.CreateFiscalYearPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Depending on the "
                },
                {
                  "type": "text",
                  "text": "@InformationGroupLevel",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", it inserts aggregated agency data into a table variable "
                },
                {
                  "type": "text",
                  "text": "@AgencyData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Special Case Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Adjusts data for specific agency codes (e.g., '856090' and '856001') to exclude state funds and reallocate budgeted quantities."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates "
                },
                {
                  "type": "text",
                  "text": "@AgencyData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with calculated budget rates, actual rates, and various surplus metrics."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Result Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Depending on the "
                },
                {
                  "type": "text",
                  "text": "@InformationGroupLevel",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", it aggregates data into "
                },
                {
                  "type": "text",
                  "text": "@QueryResult",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for funding group or citywide levels."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hierarchy Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Iteratively updates surplus values based on hierarchical expenditure types."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Selects and orders the results from "
                },
                {
                  "type": "text",
                  "text": "@QueryResult",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for the final report."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of table variables ("
                },
                {
                  "type": "text",
                  "text": "@AgencyData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@QueryResult",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can impact performance if the data volume is large. Consider using temporary tables for better performance with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Aggregations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins and aggregations, which can be resource-intensive. Indexing the underlying tables appropriately can help improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's logic branches based on "
                },
                {
                  "type": "text",
                  "text": "@InformationGroupLevel",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which can lead to different execution paths and performance characteristics."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of table variables may not scale well with large datasets, potentially leading to memory pressure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple users execute this procedure simultaneously, it could lead to contention on shared resources, especially if temporary tables are used."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes certain data conditions (e.g., specific agency codes) that, if changed, could lead to incorrect results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete data processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses an email address as a parameter, which could pose a security risk if not properly validated or sanitized."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE PROCEDURE [Budget].[usp_Report_BudgetVersusYearToDateUsageAndRateBreakDown]\r\n\t\r\n\t@EmailAddress emailaddr,\r\n\t@AgencyCodeOEC VARCHAR(MAX),\r\n\t@BillingPeriod BillingPeriod,\r\n\t@InformationGroupLevel INT -- 1:citywide;2:funding source;3:agency\r\nAS\r\nBEGIN\r\n\r\n\t DECLARE @FiscalYearBegin BillingPeriod\r\n\t SET @FiscalYearBegin = dbo.CreateFiscalYearPeriod(@BillingPeriod, 'S')\r\n\r\n\t DECLARE @AgencyData TABLE\r\n\t (\r\n\t\tAgencyCodeOEC AgencyCodeOEC,\r\n\t\tAgencyName ldesc,\r\n\t\tCurrentMonthBudgetEnergyUsage FLOAT ,\r\n\t\tCurrentMonthBudgetEnergyDollars MONEY,\r\n\t\tCurrentMonthActualDollars MONEY,\r\n\t\tCurrentMonthActualUsage float,\r\n\t\tIsSourceOfFundingGroupData VARCHAR(1),\r\n\t\tBudgetVersusExpenditureTypeSeqID INT,\r\n\t\tCurrentMonthPaidAdjustment MONEY,\r\n\t\tIsHidden VARCHAR(1),\r\n\t\tBudgetRate FLOAT,\r\n\t\tActualRate FLOAT,\r\n\t\tTotalSurplus MONEY,\r\n\t\tAdjustmentSurplus MONEY,\r\n\t\tCurrentMonthSurplus FLOAT,\r\n\t\tRateSurplus FLOAT,\r\n\t\tUsageSurplus FLOAT,\r\n\t\tCombinedSurplus FLOAT,\r\n\t\tAgencyFundingSeqID int\r\n\t )\t\r\n\r\n\tDECLARE @QueryResult TABLE\r\n\t(\t\r\n\t\tGroupDescription VARCHAR(75),\r\n\t\texpenditureTypeID INT,\r\n\t\texpenditureType VARCHAR(75) ,\r\n\t\tCurrentMonthBudgetEnergyUsage FLOAT ,\r\n\t\tCurrentMonthBudgetEnergyDollars MONEY,\r\n\t\tCurrentMonthActualDollars MONEY,\r\n\t\tCurrentMonthActualUsage FLOAT,\r\n\t\tBudgetRate FLOAT,\r\n\t\tActualRate FLOAT,\r\n\t\tTotalSurplus MONEY,\r\n\t\tAdjustmentSurplus MONEY,\r\n\t\tCurrentMonthSurplus FLOAT,\r\n\t\tRateSurplus FLOAT,\r\n\t\tUsageSurplus FLOAT,\r\n\t\tCombinedSurplus FLOAT,\r\n\t\tIngoreEnergySum VARCHAR(1),\r\n\t\tInformationLevel int -- 1:citywide;2:funding source;3:agency\r\n\t)\r\n\r\n\t\r\n\t/*\r\n\t1. insert agency data into table variable\r\n\t2. handle special case\r\n\t3. insert data into final result table\r\n\t*/\r\n\t-- 1. insert agency data into table variable\r\n\tIF(@InformationGroupLevel <3)\r\n\tBEGIN\r\n\t\tINSERT INTO @AgencyData\r\n\t\t( \r\n\t\t\tAgencyCodeOEC ,\r\n\t\t\tAgencyName ,\r\n\t\t\tCurrentMonthBudgetEnergyUsage  ,\r\n\t\t\tCurrentMonthBudgetEnergyDollars ,\r\n\t\t\tCurrentMonthActualDollars ,\r\n\t\t\tCurrentMonthActualUsage ,\r\n\t\t\tIsSourceOfFundingGroupData,\r\n\t\t\tBudgetVersusExpenditureTypeSeqID,\r\n\t\t\tCurrentMonthPaidAdjustment,\r\n\t\t\tIsHidden,\r\n\t\t\tAdjustmentSurplus,\r\n\t\t\tAgencyFundingSeqID\r\n\t\t)\r\n\t\tSELECT  budgetsummary.AgencyCodeOEC ,\r\n\t\t\tAgencyName ,\r\n\t\t\tSUM(CurrentMonthBudgetEnergyUsage)  ,\r\n\t\t\tSUM(CurrentMonthBudgetEnergyDollars),\r\n\t\t\tSUM(CurrentMonthActualDollars) ,\r\n\t\t\tSUM(CurrentMonthActualUsage) ,\r\n\t\t\tIsSourceOfFundingGroupData,\r\n\t\t\tbudgetsummary.BudgetVersusExpenditureTypeSeqID ,\r\n\t\t\tSUM(CurrentMonthPaidAdjustment),\r\n\t\t\tIsHidden,\t\t\r\n\t\t\tSUM(AdjustmentSurplus),\r\n\t\t\tAgencyFundingSeqid\r\n\t\tFROM Budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification budgetsummary\r\n\t\t\t\tLEFT JOIN [Budget].[uftn_BudgetAgencyDivision](@EmailAddress,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t@AgencyCodeOEC, 'N')\r\n\t\t\t\tAS BudgetAgencyDivision ON budgetsummary.AgencyCodeOEC = BudgetAgencyDivision.AgencyCodeOEC\r\n\t\tWHERE   BillingPeriod BETWEEN @FiscalYearBegin AND @BillingPeriod\r\n\t\tGROUP BY budgetsummary.AgencyCodeOEC ,\r\n\t\t\tAgencyName ,IsSourceOfFundingGroupData,\r\n\t\t\tbudgetsummary.BudgetVersusExpenditureTypeSeqID ,IsHidden, AgencyFundingSeqid,  BudgetAgencyDivision.AgencyOECL1 ,\r\n\t\t\tBudgetAgencyDivision.AgencyOECL2 ,\r\n\t\t\tBudgetAgencyDivision.AgencyOECL3 \r\n\t\tORDER BY BudgetAgencyDivision.AgencyOECL1 ,\r\n\t\t\t\tBudgetAgencyDivision.AgencyOECL2 ,\r\n\t\t\t\tBudgetAgencyDivision.AgencyOECL3 \r\n\tend\r\n\t-- 2. handle special case\r\n\r\n\t/*\r\n\tState Funds should be excluded from this report.\r\n\tThe budgeted quantities for State Funds should be added to 856001.\r\n\t*/\r\n\tUPDATE  data856001\r\n\tSET     CurrentMonthBudgetEnergyUsage = ISNULL(CurrentMonthBudgetEnergyUsage, 0)\r\n\t\t\t+ ( SELECT  ISNULL(SUM(CurrentMonthBudgetEnergyUsage), 0)\r\n\t\t\t\tFROM @AgencyData AS data856090\r\n\t\t\t\tWHERE   AgencyCodeOEC = '856090'\r\n\t\t\t\t\t\tAND data856090.BudgetVersusExpenditureTypeSeqID = data856001.BudgetVersusExpenditureTypeSeqID\r\n\t\t\t\t\t\tAND data856001.IsSourceOfFundingGroupData = data856001.IsSourceOfFundingGroupData\r\n\t\t\t  ),\r\n\t\t\tCurrentMonthBudgetEnergyDollars = ISNULL(CurrentMonthBudgetEnergyDollars, 0)\r\n\t\t\t+ ( SELECT  ISNULL(SUM(CurrentMonthBudgetEnergyDollars), 0)\r\n\t\t\t\tFROM @AgencyData AS data856090\r\n\t\t\t\tWHERE   AgencyCodeOEC = '856090'\r\n\t\t\t\t\t\tAND data856090.BudgetVersusExpenditureTypeSeqID = data856001.BudgetVersusExpenditureTypeSeqID\r\n\t\t\t\t\t\tAND data856001.IsSourceOfFundingGroupData = data856001.IsSourceOfFundingGroupData\r\n\t\t\t  )\r\n\tFROM @AgencyData AS data856001\r\n\tWHERE   data856001.AgencyCodeOEC = '856001'\r\n\t\r\n\tDELETE @AgencyData WHERE AgencyCodeOEC = '856090'\r\n\t\r\n\t\r\n\tUPDATE @AgencyData\r\n\tSET BudgetRate = budget.CalcBudgetRate(CurrentMonthBudgetEnergyDollars, CurrentMonthBudgetEnergyUsage),\r\n\t\tActualRate = budget.CalcActualRate(CurrentMonthActualDollars, CurrentMonthPaidAdjustment,  CurrentMonthActualUsage),\r\n\t\tTotalSurplus = ISNULL(CurrentMonthBudgetEnergyDollars, 0) - ISNULL(CurrentMonthActualDollars, 0)\r\n\r\n\t\r\n\tUPDATE @AgencyData\r\n\tSET CurrentMonthSurplus = TotalSurplus - AdjustmentSurplus\r\n\t\r\n\tUPDATE \t@AgencyData\r\n\tSET RateSurplus = budget.CalcBudgetRateSurplus(BudgetRate, ActualRate, CurrentMonthBudgetEnergyUsage),\r\n\t\tUsageSurplus = budget.CalcBudgetUsageSurplus(CurrentMonthBudgetEnergyUsage, CurrentMonthActualUsage, BudgetRate)\r\n\r\n\t\r\n\tUPDATE \t@AgencyData\r\n\tSET CombinedSurplus = CurrentMonthSurplus - (RateSurplus + UsageSurplus)\r\n\r\n\t\r\n\r\n\t\r\n\tIF(@InformationGroupLevel IN (1, 2)) \r\n\tBEGIN\r\n\t\r\n\t\t-- store funding group level information\r\n\t\tINSERT INTO @QueryResult\r\n\t\t\t\t( \r\n\t\t\t\t  GroupDescription ,\r\n\t\t\t\t  expenditureTypeID,\r\n\t\t\t\t  expenditureType ,\r\n\t\t\t\t  CurrentMonthBudgetEnergyUsage ,\r\n\t\t\t\t  CurrentMonthBudgetEnergyDollars ,\r\n\t\t\t\t  CurrentMonthActualDollars ,\r\n\t\t\t\t  CurrentMonthActualUsage ,\r\n\t\t\t\t  BudgetRate ,\r\n\t\t\t\t  ActualRate ,\r\n\t\t\t\t  TotalSurplus ,\r\n\t\t\t\t  AdjustmentSurplus ,\r\n\t\t\t\t  CurrentMonthSurplus ,\r\n\t\t\t\t  IngoreEnergySum,\r\n\t\t\t\t  InformationLevel\r\n\t\t\t\t)\t\r\n\t\tSELECT  \r\n\t\t\t\tMAX(AgencyFundingSource.fundingSourceDescription),\r\n\t\t\t\texpenditureTypee.BudgetVersusExpenditureTypeSeqid,\r\n\t\t\t\tMAX(expenditureTypee.Description) expenditureType,\r\n\t\t\t\tSUM(CurrentMonthBudgetEnergyUsage) ,\r\n\t\t\t\tSUM(CurrentMonthBudgetEnergyDollars) ,\r\n\t\t\t\tSUM(CurrentMonthActualDollars) ,\r\n\t\t\t\tSUM(CurrentMonthActualUsage) ,\r\n\t\t\t\tbudget.CalcBudgetRate(SUM(CurrentMonthBudgetEnergyDollars), SUM(CurrentMonthBudgetEnergyUsage)) AS budgetRate,\r\n\t\t\t\tbudget.CalcActualRate(SUM(CurrentMonthActualDollars), SUM(CurrentMonthPaidAdjustment), SUM(CurrentMonthActualUsage)) AS actualRate,\r\n\t\t\t\tSUM(TotalSurplus),\r\n\t\t\t\tSUM(AdjustmentSurplus) ,\r\n\t\t\t\tSUM(CurrentMonthSurplus) ,\r\n\t\t\t\tMAX(IngoreEnergySum),\r\n\t\t\t\t2\r\n\t\tFROM @AgencyData budgetsummary\r\n\t\t\t\tINNER JOIN Budget.BudgetVersusExpenditureType expenditureTypee ON budgetsummary.BudgetVersusExpenditureTypeSeqID = expenditureTypee.BudgetVersusExpenditureTypeSeqid\r\n\t\t\t\tINNER JOIN Billing.AgencyFunding AgencyFundingSource ON AgencyFundingSource.AgencyFundingSeqid = budgetsummary.AgencyFundingSeqid\r\n\t\tWHERE IsSourceOfFundingGroupData = 'Y' AND expenditureTypee.isHidden = 'N'\r\n\t\tGROUP BY \r\n\t\t\tAgencyFundingSource.AgencyFundingSeqid, \r\n\t\t\texpenditureTypee.BudgetVersusExpenditureTypeSeqid, \r\n\t\t\texpenditureTypee.DisplayOrderIndex\r\n\t\tORDER BY \r\n\t\tAgencyFundingSource.AgencyFundingSeqid, \r\n\t\texpenditureTypee.DisplayOrderIndex\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tUPDATE \t@QueryResult\r\n\t\tSET RateSurplus = budget.CalcBudgetRateSurplus(BudgetRate, ActualRate, CurrentMonthBudgetEnergyUsage),\r\n\t\t\tUsageSurplus = budget.CalcBudgetUsageSurplus(CurrentMonthBudgetEnergyUsage, CurrentMonthActualUsage, BudgetRate)\r\n\t\t\r\n\t\tUPDATE @QueryResult\r\n\t\tSET CurrentMonthSurplus = TotalSurplus - AdjustmentSurplus\r\n\t\t\r\n\t\tUPDATE \t@QueryResult\r\n\t\tSET CombinedSurplus = CurrentMonthSurplus - (RateSurplus + UsageSurplus)\r\n\r\n\t\t\r\n\t\tIF(@InformationGroupLevel = 1) -- citywide\r\n\t\tBEGIN\r\n\t\t\t\r\n\t\t\t-- method 1 aggregate \r\n\t\t\tINSERT INTO @QueryResult\r\n\t\t\t\t( \r\n\t\t\t\t  GroupDescription ,\r\n\t\t\t\t  expenditureTypeID,\r\n\t\t\t\t  expenditureType ,\r\n\t\t\t\t  CurrentMonthBudgetEnergyUsage ,\r\n\t\t\t\t  CurrentMonthBudgetEnergyDollars ,\r\n\t\t\t\t  CurrentMonthActualDollars ,\r\n\t\t\t\t  CurrentMonthActualUsage ,\r\n\t\t\t\t  BudgetRate ,\r\n\t\t\t\t  ActualRate ,\r\n\t\t\t\t  TotalSurplus ,\r\n\t\t\t\t  AdjustmentSurplus ,\r\n\t\t\t\t  CurrentMonthSurplus ,\r\n\t\t\t\t  RateSurplus,\r\n\t\t\t\t  UsageSurplus ,\r\n\t\t\t\t  CombinedSurplus,\r\n\t\t\t\t  InformationLevel,\r\n\t\t\t\t  IngoreEnergySum\r\n\t\t\t\t)\t\r\n\t\t\tSELECT  \r\n\t\t\t\t'Citywide',\r\n\t\t\t\tbudgetsummary.expenditureTypeID,\r\n\t\t\t\tMAX(budgetsummary.expenditureType) expenditureType,\r\n\t\t\t\tSUM(CurrentMonthBudgetEnergyUsage) ,\r\n\t\t\t\tSUM(CurrentMonthBudgetEnergyDollars) ,\r\n\t\t\t\tSUM(CurrentMonthActualDollars) ,\r\n\t\t\t\tSUM(CurrentMonthActualUsage) ,\r\n\t\t\t\tbudget.CalcBudgetRate(SUM(CurrentMonthBudgetEnergyDollars), SUM(CurrentMonthBudgetEnergyUsage)) AS budgetRate,\r\n\t\t\t\tbudget.CalcActualRate(SUM(CurrentMonthActualDollars), -1*SUM(AdjustmentSurplus), SUM(CurrentMonthActualUsage)) AS actualRate,\r\n\t\t\t\tSUM(TotalSurplus),\r\n\t\t\t\tSUM(AdjustmentSurplus) ,\r\n\t\t\t\tSUM(CurrentMonthSurplus) ,\r\n\t\t\t\tSUM(RateSurplus),\r\n\t\t\t\tSUM(UsageSurplus),\r\n\t\t\t\tSUM(CombinedSurplus),\t\t\t\t\r\n\t\t\t\t1,\r\n\t\t\t\tMAX(budgetsummary.IngoreEnergySum)\r\n\t\t\tFROM @QueryResult budgetsummary\r\n\t\t\tINNER JOIN Budget.BudgetVersusExpenditureType expenditureTypee ON budgetsummary.expenditureTypeID = expenditureTypee.BudgetVersusExpenditureTypeSeqid\r\n\t\t\t\r\n\t\t\tGROUP BY budgetsummary.expenditureTypeID, expenditureTypee.DisplayOrderIndex\r\n\t\t\tORDER BY expenditureTypee.DisplayOrderIndex\r\n\t\t\t\t\r\n\t\t\tDELETE FROM @QueryResult WHERE InformationLevel = 2\r\n\t\t\t-- method 2 recalculate citywide total\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t--UPDATE \t@QueryResult\r\n\t\t\t--SET RateSurplus = budget.CalcBudgetRateSurplus(BudgetRate, ActualRate, CurrentMonthBudgetEnergyUsage),\r\n\t\t\t--\tUsageSurplus = budget.CalcBudgetUsageSurplus(CurrentMonthBudgetEnergyUsage, CurrentMonthActualUsage, BudgetRate)\r\n\t\t\t\r\n\t\t\t--UPDATE \t@QueryResult\r\n\t\t\t--SET CombinedSurplus = CurrentMonthSurplus - (RateSurplus + UsageSurplus)\r\n\t\tEND\r\n\tEND\r\n\t\r\n\t\r\n\r\n\tDECLARE @Level INT = 4\r\n\tWHILE(@Level > 1)\r\n\tBEGIN\r\n\t\tUPDATE BAData\r\n\t\tSET BAData.UsageSurplus = childTotal.UsageSurplus,\r\n\t\t\tBAData.RateSurplus = childTotal.RateSurplus,\r\n\t\t\tBAData.CombinedSurplus = childTotal.CombinedSurplus,\r\n\t\t\tBAData.AdjustmentSurplus = childTotal.AdjustmentSurplus,\r\n\t\t\tBAData.TotalSurplus = childTotal.TotalSurplus\r\n\t\tFROM \r\n\t\t@QueryResult AS BAData \r\n\t\tINNER JOIN Budget.BudgetVersusExpenditureType AS parentType\r\n\t\tON BAData.expenditureTypeID = parentType.BudgetVersusExpenditureTypeSeqID\r\n\t\tINNER JOIN \t\r\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\tSUM(childData.UsageSurplus) UsageSurplus,\r\n\t\t\tSUM(childData.RateSurplus) RateSurplus,\r\n\t\t\tSUM(childData.CombinedSurplus) CombinedSurplus,\r\n\t\t\tSUM(childData.AdjustmentSurplus) AdjustmentSurplus,\r\n\t\t\tSUM(childData.TotalSurplus) TotalSurplus,\r\n\t\t\tchildData.GroupDescription,\r\n\t\t\tchildType.ParentExpenditureTypeID AS expenditureTypeID\r\n\t\t\tFROM @QueryResult AS childData \r\n\t\t\tINNER JOIN Budget.BudgetVersusExpenditureType AS childType\r\n\t\t\tON childData.expenditureTypeID = childType.BudgetVersusExpenditureTypeSeqID\r\n\t\t\tAND childType.HierarchyLevel = @Level\r\n\t\t\tGROUP BY childData.GroupDescription, childType.ParentExpenditureTypeID\r\n\t\t) AS childTotal\r\n\t\tON \r\n\t\tBAData.GroupDescription = childTotal.GroupDescription\r\n\t\tAND \r\n\t\tBADATa.expenditureTypeID = childTotal.expenditureTypeID\r\n\t\t\r\n\t\tSET @Level = @Level -1\r\n\tEND\r\n\r\n\tSELECT * FROM @QueryResult  budgetsummary\r\n\tINNER JOIN Budget.BudgetVersusExpenditureType expenditureTypee ON budgetsummary.expenditureTypeID = expenditureTypee.BudgetVersusExpenditureTypeSeqid\r\n\tORDER BY budgetsummary.GroupDescription, DisplayOrderIndex\t\r\nEND"
        }
      ]
    }
  ]
}
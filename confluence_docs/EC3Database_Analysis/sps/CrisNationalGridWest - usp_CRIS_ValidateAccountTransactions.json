{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_ValidateAccountTransactions",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_ValidateAccountTransactions",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to validate account transactions for a specified billing period. It processes records from the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest.UploadAccountBillingDetail",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table, identifying and excluding transactions based on specific validation rules. The procedure focuses on handling cancellations ("
        },
        {
          "type": "text",
          "text": "BC",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " transactions) and billing ("
        },
        {
          "type": "text",
          "text": "BI",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " transactions), ensuring that net-zero transactions are excluded and that cancellations are correctly matched with their corresponding bills, either in the current set or from previous periods."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple conditional checks and logical operations to validate transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a cursor to iterate over potentially large datasets, which can be complex to manage and optimize."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes logic to handle both current and historical data, requiring careful consideration of data integrity and consistency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod varchar(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which transactions are being validated. It is expected to be in the format "
                },
                {
                  "type": "text",
                  "text": "yyyymm",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@authenticatedID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An identifier for the authenticated user or process executing the procedure. It is not directly used in the current logic but may be intended for logging or auditing purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode int OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter intended to return the status of the procedure execution. It is not currently set within the procedure, indicating a potential area for enhancement."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by declaring several variables to store transaction details and processing flags."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A cursor is declared and opened to iterate over records in the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingDetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each record, transaction details are fetched into local variables."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Cancellation Handling (`BC` Transactions)",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ":"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Checks if the cancellation matches a bill in the current set or previous periods."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Identifies partial cancellations from prior period merged billings."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Billing Handling (`BI` Transactions)",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ":"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Checks if there is a corresponding cancellation in the current period."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Records",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": After processing each transaction, the procedure updates the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingDetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table with the findings."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The cursor is closed and deallocated after processing all records."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can lead to performance bottlenecks, especially with large datasets, as it processes records row-by-row. Consider refactoring to set-based operations if possible."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingDetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "ARCHIVEUploadAccountBillingDetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables are properly indexed on columns used in WHERE clauses to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not include transaction management, which could lead to concurrency issues if multiple instances are run simultaneously."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The cursor-based approach may not scale well with increasing data volumes, leading to longer execution times."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Incomplete Status Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " output parameter is not utilized, which could lead to incomplete status reporting."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks error handling mechanisms, such as TRY...CATCH blocks, to manage exceptions and ensure graceful failure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The logic assumes that cancellations and bills are perfectly matched by specific criteria, which may not account for all real-world scenarios, potentially leading to incorrect exclusions or inclusions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains hardcoded logic for specific transaction codes ("
                },
                {
                  "type": "text",
                  "text": "BC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "BI",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "), which may require updates if new transaction types are introduced."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_ValidateAccountTransactions]\n\t@BillingPeriod varchar(6),\r\n\t@authenticatedID int,\r\n\t@StatusCode int  OUTPUT      \r\n   \r\n AS \r\n BEGIN\r\n\t\t--********************************************************************************\r\n\t\t--\tAuthor: Mohammed Belerram\r\n\t\t--\tDescription: Exclude the Account information before processing base upon \r\n\t\t--\t\t\t\t [CrisNationalGridWest].[usp_CRIS_ValidateAccountTransactions] recommedations\r\n\t\t--\r\n\t\t--\t\t--  Validation rules\r\n\t\t--\t\t\tsearch and exculde the net zero transactions\r\n\t\t--\t\t\tidentify the rebills that have cancels in the current set of data and exculde those from processing\r\n\t\t--\t\t\tvalidate cancellations and identify what they cancel in the current set or from the archive table\r\n\t\t--\t\t\r\n\t\t--\t\t\tthis is work in progress you can build on it if you would like\r\n\t\t--\r\n\t\t--\t\t--  Implemented ExcludeAndReview rules\r\n\t\t--\t\t\texculde the net zero transactions\r\n\t\t--\r\n\t\t--\tLog: \r\n\t\t--\t\t05/27/2011\tMOH\tCreate\r\n\t\t--\t\t06/25/2011\tPAH\texculde the net zero transactions\r\n\t\t--\t\t11/26/2013\tPAH\texculde the net zero transactions Corrected to match pairs\r\n\t\t--********************************************************************************\r\n\t \r\n\t\tDECLARE @UploadAccountBillingDetailSeqid dbo.seqid\r\n\t\t\r\n\r\n\t\tDECLARE @RecordBillingPeriod yyyymm\r\n\t\tDECLARE @BillingPeriodRevision yyyymm\t\r\n\t\tDECLARE @FirstBillingPeriodCanceled yyyymm\r\n\t\tDECLARE @TransactionCode VARCHAR(2)\r\n\t\tDECLARE @AccountNumber\tacctnum\r\n\t\tDECLARE @ActivityDateTime DATETIME\r\n\t\tDECLARE @GasChargeAmount BillingAmt\r\n\t\tDECLARE @BilledCCF EnergyUnit\r\n\t\tDECLARE @BillRenderDate yyyymmdd\r\n\t\tDECLARE @FromDate yyyymmdd\r\n\t\tDECLARE @ToDate yyyymmdd\r\n\t\t\r\n\t\t-- processing variables\r\n\t\tDECLARE @IsCurrentTransactionCancelFound VARCHAR(1)\r\n\t\tDECLARE\t@IsCancelMatchesABillInCurrentSet VARCHAR(1)\r\n\t\tDECLARE\t@IsCancelMatchesABillInPreviousPeriods VARCHAR(1)\r\n\t\tDECLARE\t@IsPartialCancelattionFromPriorPeriodMergedBilling VARCHAR(1)\r\n\t\tDECLARE\t@ExcludeAndReview VARCHAR(1)\r\n\t\t\t\t\r\n\t\tDECLARE @Notes VARCHAR(10)\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tDECLARE AccountBillingCursor CURSOR FOR\r\n\t\t\t\tSELECT  UploadAccountBillingDetailSeqid\r\n\t\t\t\tFROM CrisNationalGridWest.UploadAccountBillingDetail\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tOPEN AccountBillingCursor;\r\n\r\n\t\t\t\tFETCH NEXT FROM AccountBillingCursor INTO @UploadAccountBillingDetailSeqid\r\n\t\t\t\t--\r\n\t\t\t\t-- Check @@FETCH_STATUS to see if there are any more rows to fetch.\r\n\t\t\t\t--\r\n\t\t\t\tWHILE @@FETCH_STATUS = 0\r\n\t\t\t\tBEGIN -- begin processing for fetched record\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t-- reset variables\r\n\t\t\t\t\t\tSET\t@IsCurrentTransactionCancelFound = 'N'\r\n\t\t\t\t\t\tSET @IsCancelMatchesABillInCurrentSet = 'N'\r\n\t\t\t\t\t\tSET @IsCancelMatchesABillInPreviousPeriods = 'N'\r\n\t\t\t\t\t\tSET @ExcludeAndReview = 'N'\r\n\t\t\t\t\t\tSET @Notes = ''\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tSET\t@IsPartialCancelattionFromPriorPeriodMergedBilling = 'N'\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t-- collect the information\r\n\t\t\t\t\t\tSELECT\t @RecordBillingPeriod\t\t\t= BillingPeriod\r\n\t\t\t\t\t\t\t\t,@BillingPeriodRevision\t\t\t= BillingPeriodRevision\r\n\t\t\t\t\t\t\t\t,@FirstBillingPeriodCanceled\t= FirstBillingPeriodCanceled\r\n\t\t\t\t\t\t\t\t,@TransactionCode\t\t\t\t= TransactionCode\r\n\t\t\t\t\t\t\t\t,@AccountNumber\t\t\t\t\t= AccountNumber\r\n\t\t\t\t\t\t\t\t,@GasChargeAmount\t\t\t\t= GasChargeAmount\r\n\t\t\t\t\t\t\t\t,@FromDate\t\t\t\t\t\t= BillingFromDate\r\n\t\t\t\t\t\t\t\t,@ToDate\t\t\t\t\t\t= BillingToDate\r\n\t\t\t\t\t\t\t\t,@BillRenderDate\t\t\t\t= BillRenderDate\r\n\t\t\t\t\t\t\t\t,@BilledCCF\t\t\t\t\t\t= BilledCCF\r\n\t\t\t\t\t\t\t\t,@ActivityDateTime\t\t\t\t= cast(ActivityDate+' '+ActivityTime as datetime)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tFROM CrisNationalGridWest.UploadAccountBillingDetail  \r\n\t\t\t\t\t\tWHERE UploadAccountBillingDetailSeqid = @UploadAccountBillingDetailSeqid \r\n\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t-- let's handle the cancelations first\r\n\t\t\t\t\t\tIF (@TransactionCode = 'BC' )\r\n\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t-- check if the cancel matches a bill in the current set\r\n\t\t\t\t\t\t\tIF (EXISTS (\r\n\t\t\t\t\t\t\t\t\t\t\tSELECT  AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\tFROM CrisNationalGridWest.UploadAccountBillingDetail \r\n\t\t\t\t\t\t\t\t\t\t\tWHERE   AccountNumber\t\t= @AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND TransactionCode = 'BI'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingFromDate = @FromDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingToDate\t= @ToDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BilledCCF\t\t= (-1) * @BilledCCF\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND GasChargeAmount = (-1) * @GasChargeAmount\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND cast(ActivityDate+' '+ActivityTime as datetime)\t<= @ActivityDateTime\t\t-- this transaction should have happened before\r\n\t\t\t\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\t\t\tSET @IsCancelMatchesABillInCurrentSet = 'Y'\r\n\t\t\t\t\t\t\t\t\tSET @ExcludeAndReview = 'Y'\r\n\t\t\t\t\t\t\tEND\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t-- check if the cancel matches a transaction from previous periods\r\n\t\t\t\t\t\t\tIF (EXISTS (\r\n\t\t\t\t\t\t\t\t\t\t\tSELECT  AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\tFROM CrisNationalGridWest.ARCHIVEUploadAccountBillingDetail \r\n\t\t\t\t\t\t\t\t\t\t\tWHERE   AccountNumber = @AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingPeriod < @RecordBillingPeriod\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND TransactionCode = 'BI'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingFromDate = @FromDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingToDate\t= @ToDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BilledCCF\t\t= (-1) * @BilledCCF\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND GasChargeAmount = (-1) * @GasChargeAmount\r\n\t\t\t\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\t\t\tSET @IsCancelMatchesABillInPreviousPeriods = 'Y'\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\t--\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t-- check if the cancel is partial cancellation of a previous merged billing transaction from previous periods\r\n\t\t\t\t\t\t\t--\tCrisNationalGridWest.UploadAccountBillingDetail.BillingToDate = Billing.AccountBillingAdjustmentCrisGas.ToDate and\t\t\t\t\t\r\n\t\t\t\t\t\t\t--\tCrisNationalGridWest.UploadAccountBillingDetail.BillingFromDate > Billing.AccountBillingAdjustmentCrisGas.FromDate\t\t\t\t\t\r\n\t\t\t\t\t\t\t--\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t--\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tIF (EXISTS (\r\n\t\t\t\t\t\t\t\t\t\t\tselect\tCrisNationalGridWest.UploadAccountBillingDetail.AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\tfrom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail INNER JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas ON \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.AccountNumber = Billing.AccountBillingAdjustmentCrisGas.OriginalAccountNumber AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingPeriodRevision = Billing.AccountBillingAdjustmentCrisGas.BillingPeriodRevision AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingToDate = Billing.AccountBillingAdjustmentCrisGas.ToDate AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingFromDate > Billing.AccountBillingAdjustmentCrisGas.FromDate\r\n\t\t\t\t\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(CrisNationalGridWest.UploadAccountBillingDetail.TransactionCode = N'BC') and \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.UploadAccountBillingDetailSeqid = @UploadAccountBillingDetailSeqid\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\tor\r\n\t\t\t\t\t\t\t\tEXISTS (\r\n\t\t\t\t\t\t\t\t\t\t\tselect\tCrisNationalGridWest.UploadAccountBillingDetail.AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\tfrom\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail INNER JOIN\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas ON \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.AccountNumber = Billing.AccountBillingAdjustmentCrisGas.OriginalAccountNumber AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingPeriodRevision = Billing.AccountBillingAdjustmentCrisGas.BillingPeriodRevision AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingToDate < Billing.AccountBillingAdjustmentCrisGas.ToDate AND \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingFromDate = Billing.AccountBillingAdjustmentCrisGas.FromDate\r\n\t\t\t\t\t\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(CrisNationalGridWest.UploadAccountBillingDetail.TransactionCode = N'BC') and \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.UploadAccountBillingDetailSeqid = @UploadAccountBillingDetailSeqid\r\n\t\t\t\t\t\t\t\t\t\t) \r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\t\t\tSET @IsPartialCancelattionFromPriorPeriodMergedBilling = 'Y'\r\n\t\t\t\t\t\t\t\t\t--\r\n\t\t\t\t\t\t\t\t\t--EXEC\t[CrisNationalGridWest].[usp_CRIS_CorrectPartialCancelattionFromPriorPeriodMergedBill]\r\n\t\t\t\t\t\t\t\t\t--\t\t@UploadAccountBillingDetailSeqid = @UploadAccountBillingDetailSeqid,\r\n\t\t\t\t\t\t\t\t\t--\t\t@ExcludeReason = N'Insert Partial billing from previous billing due to partial cancellation where ToDates are equal and From Dates mismatch',\r\n\t\t\t\t\t\t\t\t\t--\t\t@authenticatedID = 1,\r\n\t\t\t\t\t\t\t\t\t--\t\t@StatusCode = @StatusCode OUTPUT\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tEND -- BC transactions\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t-- let's handle the BI transactions \r\n\t\t\t\t\t\tELSE\r\n\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t-- check if there is a cancel for this transaction in the current period\r\n\t\t\t\t\t\t\tIF (EXISTS (\r\n\t\t\t\t\t\t\t\t\t\t\tSELECT  AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\tFROM CrisNationalGridWest.UploadAccountBillingDetail \r\n\t\t\t\t\t\t\t\t\t\t\tWHERE   AccountNumber\t\t= @AccountNumber\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND TransactionCode = 'BC'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingFromDate = @FromDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BillingToDate\t= @ToDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND BilledCCF\t\t= (-1) * @BilledCCF\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND GasChargeAmount = (-1) * @GasChargeAmount\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND cast(ActivityDate+' '+ActivityTime as datetime)\t>= @ActivityDateTime\t\t-- this transaction should have happened before\r\n\t\t\t\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t\tBEGIN\r\n\t\t\t\t\t\t\t\t\tSET @IsCurrentTransactionCancelFound = 'Y'\r\n\t\t\t\t\t\t\t\t\tSET @ExcludeAndReview = 'Y'\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tEND\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tEND -- BI transactions\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t-- update the all transactions with the findings\r\n\t\t\t\t\t\tUPDATE CrisNationalGridWest.UploadAccountBillingDetail\r\n\t\t\t\t\t\tSET\t IsCancelForCurrentTransaction\t\t= @IsCancelMatchesABillInCurrentSet\r\n\t\t\t\t\t\t\t,IsCancelForPreviousTransaction\t\t= @IsCancelMatchesABillInPreviousPeriods\r\n\t\t\t\t\t\t\t,IsTransactionCancelFound\t\t\t= @IsCurrentTransactionCancelFound\r\n\t\t\t\t\t\t\t,ExcludeAndReview\t\t\t\t\t= @ExcludeAndReview\r\n\t\t\t\t\t\t\t,IsPartialCancelattionFromPriorPeriodMergedBilling = @IsPartialCancelattionFromPriorPeriodMergedBilling\r\n\t\t\t\t\t\tWHERE UploadAccountBillingDetailSeqid\t= @UploadAccountBillingDetailSeqid\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t--\tProcess the next row\r\n\t\t\t\t\t\t--\r\n\t\t\t\t\t\tFETCH NEXT FROM AccountBillingCursor INTO @UploadAccountBillingDetailSeqid\r\n\t\t\t\tEnd -- end processing for fetched record\r\n\r\n\t\t\t\tCLOSE AccountBillingCursor; -- close cursor\r\n\t\t\t\tDEALLOCATE AccountBillingCursor;\r\n\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\nEND"
        }
      ]
    }
  ]
}
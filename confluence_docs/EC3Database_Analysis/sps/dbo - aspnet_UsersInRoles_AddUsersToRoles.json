{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "aspnet_UsersInRoles_AddUsersToRoles",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "aspnet_UsersInRoles_AddUsersToRoles",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to add multiple users to multiple roles within a specified application in a SQL Server database. It processes lists of usernames and role names, verifies their existence, and inserts records into the "
        },
        {
          "type": "text",
          "text": "aspnet_UsersInRoles",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table to establish the user-role associations. The procedure handles transactions to ensure data integrity and returns specific codes to indicate success or failure."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure involves multiple steps, including parsing input strings, validating data, and managing transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses temporary tables and dynamic SQL operations to handle lists of users and roles."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes error handling and rollback mechanisms to maintain data consistency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ApplicationName nvarchar(256)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The name of the application for which users are being added to roles. It is used to identify the application context."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UserNames nvarchar(4000)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A comma-separated list of usernames to be added to roles. The procedure parses this list to process each username."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@RoleNames nvarchar(4000)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A comma-separated list of role names to which users will be added. The procedure parses this list to process each role name."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CurrentTimeUtc datetime",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The current UTC time, used to set the "
                },
                {
                  "type": "text",
                  "text": "LastActivityDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for new users."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Application ID Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure starts by retrieving the "
                },
                {
                  "type": "text",
                  "text": "ApplicationId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for the given "
                },
                {
                  "type": "text",
                  "text": "@ApplicationName",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". If not found, it returns a code "
                },
                {
                  "type": "text",
                  "text": "2",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if a transaction is already in progress. If not, it starts a new transaction."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Role Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Parses "
                        },
                        {
                          "type": "text",
                          "text": "@RoleNames",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into individual role names and inserts them into a temporary table "
                        },
                        {
                          "type": "text",
                          "text": "@tbNames",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves "
                        },
                        {
                          "type": "text",
                          "text": "RoleId",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for each role name and inserts them into "
                        },
                        {
                          "type": "text",
                          "text": "@tbRoles",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If any role does not exist, it rolls back the transaction and returns "
                        },
                        {
                          "type": "text",
                          "text": "2",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "User Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Parses "
                        },
                        {
                          "type": "text",
                          "text": "@UserNames",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into individual usernames and inserts them into "
                        },
                        {
                          "type": "text",
                          "text": "@tbNames",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves "
                        },
                        {
                          "type": "text",
                          "text": "UserId",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for each username and inserts them into "
                        },
                        {
                          "type": "text",
                          "text": "@tbUsers",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If any user does not exist, it creates new user records in "
                        },
                        {
                          "type": "text",
                          "text": "aspnet_Users",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and reattempts to populate "
                        },
                        {
                          "type": "text",
                          "text": "@tbUsers",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "User-Role Association",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Checks for existing user-role associations in "
                        },
                        {
                          "type": "text",
                          "text": "aspnet_UsersInRoles",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ". If any exist, it rolls back the transaction and returns "
                        },
                        {
                          "type": "text",
                          "text": "3",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts new user-role associations into "
                        },
                        {
                          "type": "text",
                          "text": "aspnet_UsersInRoles",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Commit",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If a new transaction was started, it commits the transaction and returns "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to indicate success."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "String Parsing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "CHARINDEX",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "SUBSTRING",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to parse comma-separated strings, which can be inefficient for large lists."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of table variables ("
                },
                {
                  "type": "text",
                  "text": "@tbNames",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "@tbRoles",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "@tbUsers",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can impact performance, especially if the lists are large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure manages transactions carefully, but long-running transactions can lead to locks and affect concurrency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the "
                },
                {
                  "type": "text",
                  "text": "aspnet_Applications",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "aspnet_Roles",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "aspnet_UsersInRoles",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables are properly indexed to optimize lookups and joins."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances are executed simultaneously, potentially leading to deadlocks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Input Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that input strings are well-formed. Malformed input could lead to unexpected behavior or errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Handling large lists of users or roles may degrade performance due to string parsing and temporary table operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While the procedure includes rollback mechanisms, it may not handle all possible errors, such as database connectivity issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that input parameters are sanitized to prevent SQL injection, especially since the procedure dynamically constructs SQL queries."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [dbo].[aspnet_UsersInRoles_AddUsersToRoles]\n\t@ApplicationName  nvarchar(256),\r\n\t@UserNames\t\t  nvarchar(4000),\r\n\t@RoleNames\t\t  nvarchar(4000),\r\n\t@CurrentTimeUtc   datetime\r\nAS\r\nBEGIN\r\n\tDECLARE @AppId uniqueidentifier\r\n\tSELECT  @AppId = NULL\r\n\tSELECT  @AppId = ApplicationId FROM aspnet_Applications WHERE LOWER(@ApplicationName) = LoweredApplicationName\r\n\tIF (@AppId IS NULL)\r\n\t\tRETURN(2)\r\n\tDECLARE @TranStarted   bit\r\n\tSET @TranStarted = 0\r\n\r\n\tIF( @@TRANCOUNT = 0 )\r\n\tBEGIN\r\n\t\tBEGIN TRANSACTION\r\n\t\tSET @TranStarted = 1\r\n\tEND\r\n\r\n\tDECLARE @tbNames\ttable(Name nvarchar(256) NOT NULL PRIMARY KEY)\r\n\tDECLARE @tbRoles\ttable(RoleId uniqueidentifier NOT NULL PRIMARY KEY)\r\n\tDECLARE @tbUsers\ttable(UserId uniqueidentifier NOT NULL PRIMARY KEY)\r\n\tDECLARE @Num\t\tint\r\n\tDECLARE @Pos\t\tint\r\n\tDECLARE @NextPos\tint\r\n\tDECLARE @Name\t\tnvarchar(256)\r\n\r\n\tSET @Num = 0\r\n\tSET @Pos = 1\r\n\tWHILE(@Pos <= LEN(@RoleNames))\r\n\tBEGIN\r\n\t\tSELECT @NextPos = CHARINDEX(N',', @RoleNames,  @Pos)\r\n\t\tIF (@NextPos = 0 OR @NextPos IS NULL)\r\n\t\t\tSELECT @NextPos = LEN(@RoleNames) + 1\r\n\t\tSELECT @Name = RTRIM(LTRIM(SUBSTRING(@RoleNames, @Pos, @NextPos - @Pos)))\r\n\t\tSELECT @Pos = @NextPos+1\r\n\r\n\t\tINSERT INTO @tbNames VALUES (@Name)\r\n\t\tSET @Num = @Num + 1\r\n\tEND\r\n\r\n\tINSERT INTO @tbRoles\r\n\t  SELECT RoleId\r\n\t  FROM dbo.aspnet_Roles ar, @tbNames t\r\n\t  WHERE  LOWER(t.Name) = ar.LoweredRoleName AND ar.ApplicationId = @AppId\r\n\r\n\tIF (@@ROWCOUNT <> @Num)\r\n\tBEGIN\r\n\t\tSELECT TOP 1 Name\r\n\t\tFROM @tbNames\r\n\t\tWHERE  LOWER(Name) NOT IN (SELECT ar.LoweredRoleName FROM dbo.aspnet_Roles ar,  @tbRoles r WHERE r.RoleId = ar.RoleId)\r\n\t\tIF( @TranStarted = 1 )\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\tRETURN(2)\r\n\tEND\r\n\r\n\tDELETE FROM @tbNames WHERE 1=1\r\n\tSET @Num = 0\r\n\tSET @Pos = 1\r\n\r\n\tWHILE(@Pos <= LEN(@UserNames))\r\n\tBEGIN\r\n\t\tSELECT @NextPos = CHARINDEX(N',', @UserNames,  @Pos)\r\n\t\tIF (@NextPos = 0 OR @NextPos IS NULL)\r\n\t\t\tSELECT @NextPos = LEN(@UserNames) + 1\r\n\t\tSELECT @Name = RTRIM(LTRIM(SUBSTRING(@UserNames, @Pos, @NextPos - @Pos)))\r\n\t\tSELECT @Pos = @NextPos+1\r\n\r\n\t\tINSERT INTO @tbNames VALUES (@Name)\r\n\t\tSET @Num = @Num + 1\r\n\tEND\r\n\r\n\tINSERT INTO @tbUsers\r\n\t  SELECT UserId\r\n\t  FROM dbo.aspnet_Users ar, @tbNames t\r\n\t  WHERE  LOWER(t.Name) = ar.LoweredUserName AND ar.ApplicationId = @AppId\r\n\r\n\tIF (@@ROWCOUNT <> @Num)\r\n\tBEGIN\r\n\t\tDELETE FROM @tbNames\r\n\t\tWHERE LOWER(Name) IN (SELECT LoweredUserName FROM dbo.aspnet_Users au,  @tbUsers u WHERE au.UserId = u.UserId)\r\n\r\n\t\tINSERT dbo.aspnet_Users (ApplicationId, UserId, UserName, LoweredUserName, IsAnonymous, LastActivityDate)\r\n\t\t  SELECT @AppId, NEWID(), Name, LOWER(Name), 0, @CurrentTimeUtc\r\n\t\t  FROM @tbNames\r\n\r\n\t\tINSERT INTO @tbUsers\r\n\t\t  SELECT  UserId\r\n\t\t  FROM\tdbo.aspnet_Users au, @tbNames t\r\n\t\t  WHERE   LOWER(t.Name) = au.LoweredUserName AND au.ApplicationId = @AppId\r\n\tEND\r\n\r\n\tIF (EXISTS (SELECT * FROM dbo.aspnet_UsersInRoles ur, @tbUsers tu, @tbRoles tr WHERE tu.UserId = ur.UserId AND tr.RoleId = ur.RoleId))\r\n\tBEGIN\r\n\t\tSELECT TOP 1 UserName, RoleName\r\n\t\tFROM\t\t dbo.aspnet_UsersInRoles ur, @tbUsers tu, @tbRoles tr, aspnet_Users u, aspnet_Roles r\r\n\t\tWHERE\t\tu.UserId = tu.UserId AND r.RoleId = tr.RoleId AND tu.UserId = ur.UserId AND tr.RoleId = ur.RoleId\r\n\r\n\t\tIF( @TranStarted = 1 )\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\tRETURN(3)\r\n\tEND\r\n\r\n\tINSERT INTO dbo.aspnet_UsersInRoles (UserId, RoleId)\r\n\tSELECT UserId, RoleId\r\n\tFROM @tbUsers, @tbRoles\r\n\r\n\tIF( @TranStarted = 1 )\r\n\t\tCOMMIT TRANSACTION\r\n\tRETURN(0)\r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_ProcessAccountBillingOldCrisRebilledAdjustment",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_ProcessAccountBillingOldCrisRebilledAdjustment",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process old CRIS (Customer Relationship Information System) rebilled adjustments for gas accounts. It performs several operations to update and insert records in various billing tables, ensuring that old CRIS adjustments are correctly transitioned into the new billing system. The procedure checks for unprocessed adjustments, updates account billing records, inserts new records into the "
        },
        {
          "type": "text",
          "text": "AccountBillingCrisGas",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table, and updates the status of processed records."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple complex operations, including conditional checks, updates, and inserts across several tables. It also includes business logic that requires understanding of the billing system's data structure and dependencies between tables. The complexity is further increased by the use of multiple joins and the need to maintain data integrity across related tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the ID of the user who is authenticated to execute this procedure. It is used to track changes made by the user in the "
                },
                {
                  "type": "text",
                  "text": "AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure initializes several local variables to store data such as the current billing period, utility company ID, and row counts for various operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Check for Unprocessed Adjustments",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if there are any old CRIS bills that have an account billing row but no corresponding "
                },
                {
                  "type": "text",
                  "text": "AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " row and are not processed ("
                },
                {
                  "type": "text",
                  "text": "IsProcessed = 'N'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "). If none are found, the procedure exits early."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Account Billing Records",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": For each unprocessed adjustment, it updates the "
                },
                {
                  "type": "text",
                  "text": "AccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table with data from "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", ensuring that the records reflect the latest adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert into AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It inserts new records into the "
                },
                {
                  "type": "text",
                  "text": "AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table for each adjustment, using data from "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update AccountBillingCrisGasSeqid",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates the "
                },
                {
                  "type": "text",
                  "text": "AccountBillingCrisGasSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " in "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to link the newly inserted records and marks them as processed ("
                },
                {
                  "type": "text",
                  "text": "IsProcessed = 'Y'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ")."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Orphan Old Records",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Finally, it updates "
                },
                {
                  "type": "text",
                  "text": "AccountBillingGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to nullify the "
                },
                {
                  "type": "text",
                  "text": "AccountBillingSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", marking these records as transitioned to the new system and preventing double linkages."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved have appropriate indexes, especially on columns used in joins and where clauses, to improve query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not explicitly use transactions, which could lead to data inconsistency if an error occurs mid-execution. Consider wrapping operations in a transaction."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Row Count Checks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses row count checks to print the number of affected rows, which can be useful for debugging but may add overhead."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs multiple updates and inserts across related tables. Without proper transaction management, there is a risk of data inconsistency if an error occurs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the procedure processes potentially large datasets, it may face performance bottlenecks if not optimized for large-scale operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses hardcoded values, such as the billing period '201011', which may need to be parameterized for flexibility and maintainability."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_ProcessAccountBillingOldCrisRebilledAdjustment]\n \t@AuthenticatedUserID int\r\nAS \r\nBegin \r\n\t\r\n\t/*\r\n\t0. if current period has been processd, throw error exception\r\n\t1. Insert Account Billing Record\r\n\t2. Insert Account Billing Cris Gas\r\n\t3. update AccountBillingCrisGasSeqid  in AccountBillingAdjustmentCrisGas\r\n\t4. Update IsProcess Status in adjustmentCrisGas\r\n\t\r\n\tChange Date\r\n\t20110120\tPAH Update account billing and insert ccountBillingCrisGas transactions\r\n\t\t\t\t\tDefer the SET IsProcessed = 'Y' in UPDATE Billing.AccountBillingAdjustmentCrisGas\r\n\t\t\t\t\tfor IsProcessed = 'N' and AccountBillingSeqid is NOT NULL AND AccountBillingCrisGasSeqid IS NOT null in the rebill \r\n\t\t\t\t\tsection or else all of the  rebills will notr be processed.\r\n\t--\r\n\t20101103\tDHO\tNetChanges set to zero for the current period\r\n\t20181126    VY add changes for UniqueAccountSeqid\r\n\t*/\r\n\t\t\r\n\tDECLARE @CurrentBillingPeriod varchar(8)\r\n\tDECLARE @CurrentAccountBillingGroupSeqID int\r\n\tDECLARE @UtilityCompanySeqID int\r\n\tDECLARE @errMessage varchar(1000)\r\n\tDECLARE @energySource INT \r\n\tSET @energySource = 5 -- gas\r\n\t--\r\n\tdeclare @AccountBillingRowcount int\r\n\tdeclare @AccountBillingSeqidRowcount int\r\n\tdeclare @AccountBillingCrisGasRowcount int\r\n\tdeclare @AccountBillingCrisGasSeqidRowcount int\r\n\tdeclare @AccountBillingAdjustmentCrisGasRowcount int\r\n\tdeclare @AccountBillingAdjustmentCrisGasIsProcessedRowcount int \r\n\tdeclare @BillingAccountBillingUpdateTransactionCount int\r\n\tdeclare @AccountBillingOldCrisRebilledAdjustment int\r\n\t\r\n\tselect TOP 1 @CurrentBillingPeriod =  BillingPeriod,\r\n\t\t\t\t @CurrentAccountBillingGroupSeqID = AccountInvoiceBillingGroup,\r\n\t\t\t\t @UtilityCompanySeqID = UtilityCompanySeqid\r\n\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas \r\n\t--\r\n\t-- Check if there are any old CRIS bills with an account billing row and no account billing cris gas row \r\n\t--\r\n\tselect\t@AccountBillingOldCrisRebilledAdjustment = isnull(count(*) ,0)\r\n\tfrom \r\n\t\t\tbilling.AccountBillingAdjustmentCrisGas\r\n\twhere\t\r\n\t\t\tbillingPeriod = @CurrentBillingPeriod and\r\n\t\t\tAccountBillingSeqid is not null and\r\n\t\t\tAccountBillingCrisGasSeqid is null and\r\n\t\t\tIsProcessed = 'N'\r\n\tprint 'Number of Old Cris Bills to be processed: '+str(@AccountBillingOldCrisRebilledAdjustment)\r\n\tif (@AccountBillingOldCrisRebilledAdjustment = 0) return \r\n\r\n\t\r\n\t/******************************************************\r\n\t1. Update Old Cris Account Billing Record\r\n\t\t\tNote:\tThis is a unique combination where the Billing.AccountBillingAdjustmentCrisGas.AccountBillingSeqid is not null\r\n\t\t\t\t\tand the Billing.AccountBillingAdjustmentCrisGas.AccountBillingCrisGasSeqid IS NULL. We update the AccountBilling table\r\n\t\t\t\t\tand insert the new cris adjustment into AccountBillingCrisGas.\r\n\t*******************************************************/\r\n\t\t\r\n\t\t--RevisedBilledAmount =Billing.AccountBillingAdjustmentCrisGas.RevisedBilledAmount+Billing.AccountBillingAdjustmentCrisGas.DiscountedAmount\r\n\t\t--Note:\r\n\t\t--\t\tBilling.AccountBillingAdjustmentCrisGas.DiscountedAmount is zero for Con Ed and National Grid West CRIS accounts\r\n\t\t--      Modified 11/26/2018 VY for UniqueAccountSeqID */\r\n\t\tUPDATE  Billing.AccountBilling\r\n\t\tSET     OriginalAccountNumber = Billing.AccountBillingAdjustmentCrisGas.CurrentAccountNumber,\r\n\t\t\t\tAccountSeqid = Billing.AccountBillingAdjustmentCrisGas.AccountSeqid,\r\n\t\t\t\tUniqueAccountSeqid = Billing.AccountBillingAdjustmentCrisGas.UniqueAccountSeqId, /* added 11/26/2018 for UniqueAccountSeqID */\r\n\t\t\t\tLastPeriodModified = Billing.AccountBillingAdjustmentCrisGas.BillingPeriod,         \r\n\t\t\t\tFromDate =Billing.AccountBillingAdjustmentCrisGas.FromDate, \r\n\t\t\t\tToDate =Billing.AccountBillingAdjustmentCrisGas.ToDate, \r\n\t\t\t\tAccountBillingStatus =Billing.AccountBillingAdjustmentCrisGas.AccountBillingStatus,\r\n\t\t\t\tPreviousAccountBillingStatus =Billing.AccountBillingAdjustmentCrisGas.PreviousAccountBillingStatus, \r\n\t\t\t\tAccountBillingStatusCodePeriod =Billing.AccountBillingAdjustmentCrisGas.AccountBillingStatusCodePeriod, \r\n\t\t\t\tRevisedBilledAmount =Billing.AccountBillingAdjustmentCrisGas.RevisedBilledAmount,\r\n\t\t\t\tAccountEnergyUsage =Billing.AccountBillingAdjustmentCrisGas.RevisedTherms, \r\n\t\t\t\tNetEnergyUsageChange =Billing.AccountBillingAdjustmentCrisGas.NetChangeTherms,\r\n\t\t\t\tNetDollarChange = Billing.AccountBillingAdjustmentCrisGas.NetChangeDollars,\r\n\t\t\t\tBillingPeriodDays =Billing.AccountBillingAdjustmentCrisGas.BillingDays,  \r\n\t\t\t\tSplitFiscalYear = dbo.[IsFiscalYearSplit] (Billing.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate), -- SplitFiscalYear\r\n\t\t\t\tChargeToFiscalYear = dbo.[CalculateFiscalYearIfSplit] (Billing.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate,'T'), --ChargeToFiscalYear \t\r\n\t\t\t\tChargeToPriorFiscalYear = dbo.[CalculateFiscalYearIfSplit] (Billing.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate,'F'), -- ChargeToPriorFiscalYear\r\n\t\t\t\tLastUpdate = getdate(),\r\n\t\t\t\tFireAuditTrigger = 'Y'\r\n\t\tFROM     \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\t\t\tBilling.AccountBilling ON Billing.AccountBillingAdjustmentCrisGas.AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid AND \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.UtilityCompanySeqid = Billing.AccountBilling.UtilityCompanySeqid AND \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision INNER JOIN\r\n\t\t\t\tBilling.Account ON /* Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid AND */\r\n\t\t\t\tBilling.AccountBilling.UniqueAccountSeqID = Billing.Account.UniqueAccountSeqID AND Billing.Account.IsCurrentRecord = 'Y' /* added 11/16/2018 for UniqueAccountSeqID */\r\n\t\tWHERE \r\n\t\t\t\t(Billing.AccountBillingAdjustmentCrisGas.BillingPeriod = @CurrentBillingPeriod) AND \r\n\t\t\t\t(Billing.AccountBillingAdjustmentCrisGas.AccountBillingCrisGasSeqid IS NULL) \r\n\t\t\t\tAND (Billing.AccountBillingAdjustmentCrisGas.IsOldCrisGasAdjustment = 'Y')\r\n\t\t\r\n\t\tset @BillingAccountBillingUpdateTransactionCount = @@rowcount\r\n\t\tprint 'Update Old Cris Account Billing Record: '+str(@BillingAccountBillingUpdateTransactionCount)\r\n\t\r\n    --\r\n\t/******************************\r\n\t2. Insert Account Billing Cris Gas\r\n\t\t\tNote:\tThis is a unique combination where the Billing.AccountBillingAdjustmentCrisGas.AccountBillingSeqid is not null\r\n\t\t\t\t\tand the Billing.AccountBillingAdjustmentCrisGas.AccountBillingCrisGasSeqid IS NULL. We update the AccountBilling table\r\n\t\t\t\t\tand insert the new cris adjustment into AccountBillingCrisGas.\r\n\t********************************/\r\n\tINSERT INTO [Billing].[AccountBillingCrisGas]\r\n           ([AccountBillingSeqid]\r\n\t\t   ,[UniqueAccountSeqId] /* added on 12/19/2019 */\r\n           ,[AccountBillingAdjustmentCrisGasSeqid]\r\n           ,[UtilityCompanySeqid]\r\n           ,[AccountInvoiceBillingGroup]\r\n           ,[BillingPeriod]\r\n           ,[BillingPeriodRevision]\r\n           ,[LastPeriodModified]\r\n           ,[OriginalAccountNumber]\r\n           ,[MeterReadWorkDay]\r\n           ,[SpecialLedgerAccountNUmber]\r\n           ,[GasRateCode]\r\n           ,[BillFrequency]\r\n           ,[EstimatedOrActualBillingCode]\r\n           ,[TotalNetPaidAdjustmentCalc]\r\n           ,[AccountArrears]\r\n           ,[TerminationBalance]\r\n           ,[TotalPaymentsPosted]\r\n           ,[DateLastPayment]\r\n           ,[MiscellaneousChargeAmount]\r\n           ,[MiscellaneousChargeType]\r\n           ,[BillRenderDate]\r\n           ,[BillingDays]\r\n           ,[BilledCCF]\r\n           ,[ThermFactor]\r\n           ,[BilledTherms]\r\n           ,[NumberOfMeters]\r\n           ,[CommodityChargeAmount]\r\n           ,[DeliveryChargeAmount]\r\n           ,[MTACommodityTax]\r\n           ,[MTADeliveryTax]\r\n           ,[SalesTax]\r\n           ,[SystemBenefitsCharge]\r\n           ,[RetailDecouplingMechanismCharge]\r\n           ,[DeliveryRateSurcharge]\r\n           ,[RealTimeNormalizationCharge]\r\n           ,[LatePaymentCharge]\r\n           ,[PaperBillCharge]\r\n           ,[FireAuditTrigger]\r\n           ,[Notes]\r\n           ,[AuthenticatedUserID]\r\n           ,[DateAdded]\r\n           ,[LastUpdate]\r\n           ,MiscellaneousCreditAmount\r\n           ,MiscellaneousCreditType\r\n           ,OriginalGasChargeAmount\r\n           ,RevisedGasChargeAmount)\r\n     SELECT \r\n            AccountBillingSeqid AS AccountBillingSeqid\r\n\t\t   ,UniqueAccountSeqid /* added on 12/19/2018 */\r\n           ,AccountBillingAdjustmentCrisGasSeqid AS AccountBillingAdjustmentCrisGasSeqid\r\n           ,UtilityCompanySeqid AS UtilityCompanySeqid\r\n           ,AccountInvoiceBillingGroup AS AccountInvoiceBillingGroup\r\n           ,BillingPeriodRevision AS BillingPeriod\r\n           ,BillingPeriodRevision AS BillingPeriodRevision\r\n           ,@CurrentBillingPeriod AS LastPeriodModified\r\n           ,CurrentAccountNumber AS OriginalAccountNumber\r\n           ,MeterReadWorkDay AS MeterReadWorkDay\r\n           ,SpecialLedgerAccountNUmber AS SpecialLedgerAccountNUmber\r\n           ,GasRateCode\r\n           ,BillFrequency\r\n           ,EstimatedOrActualBillingCode\r\n           ,TotalNetPaidAdjustmentCalc AS TotalNetPaidAdjustmentCalc\r\n           ,AccountArrears\r\n           ,TerminationBalance\r\n           ,TotalPaymentsPosted\r\n           ,DateLastPayment\r\n           ,MiscellaneousChargeAmount\r\n           ,MiscellaneousChargeType\r\n           ,BillRenderDate\r\n           ,BillingDays\r\n           ,RevisedCCF\r\n           ,ThermFactor\r\n           ,RevisedTherms\r\n           ,NumberOfMeters\r\n           ,CommodityChargeAmount\r\n           ,DeliveryChargeAmount\r\n           ,MTACommodityTax\r\n           ,MTADeliveryTax\r\n           ,SalesTax\r\n           ,SystemBenefitsCharge\r\n           ,RetailDecouplingMechanismCharge\r\n           ,DeliveryRateSurcharge\r\n           ,RealTimeNormalizationCharge\r\n           ,LatePaymentCharge\r\n           ,PaperBillCharge\r\n           ,'N' AS [FireAuditTrigger]\r\n           ,Notes\r\n           ,@AuthenticatedUserID\r\n           ,GETDATE()\r\n           ,GETDATE()\r\n           ,MiscellaneousCreditAmount\r\n           ,MiscellaneousCreditType\r\n           ,GasChargeAmount as OriginalGasChargeAmount\r\n           ,GasChargeAmount as RevisedGasChargeAmount\r\n                      \r\n    from\r\n\tbilling.AccountBillingAdjustmentCrisGas\r\n\tWHERE \r\n\tAccountBillingCrisGasSeqid IS null and\r\n\tAccountBillingSeqid is not null AND \r\n\tBillingPeriod = @CurrentBillingPeriod and\r\n\tIsOldCrisGasAdjustment = 'Y'\r\n\r\n    --\r\n\tset @AccountBillingCrisGasRowcount = @@ROWCOUNT\r\n\tprint 'Old Cris AccountBillingCrisGas Row count: '+str(@AccountBillingCrisGasRowcount)\r\n\r\n\r\n\t/******************************\r\n\t3. update AccountBillingCrisGasSeqid in AccountBillingAdjustmentCrisGas\r\n\t\t\tNote:\tAt this point, CRIS has a correct combination of the AccountBilling and AccountBillingCrisGas row combination in the billing\r\n\t\t\t\t\tand the Billing.AccountBillingAdjustmentCrisGas has the updated AccountBillingCrisGasSeqid and the IsProcessed='Y'.\r\n\t********************************/\r\n\tUPDATE abacg\r\n    SET \r\n\t\tabacg.AccountBillingCrisGasSeqid = abcg.AccountBillingCrisGasSeqid,\r\n\t\tIsProcessed='Y'\r\n\tfrom \r\n\t\t\tBilling.AccountBillingAdjustmentCrisGas AS abacg\r\n\t\t\tINNER JOIN Billing.AccountBillingCrisGas AS abcg\r\n\t\t\tON \tabacg.UtilityCompanySeqid = abcg.UtilityCompanySeqid AND \r\n\t\t\tabacg.AccountInvoiceBillingGroup = abcg.AccountInvoiceBillingGroup AND \r\n\t\t\tabacg.BillingPeriodRevision = abcg.BillingPeriodRevision\r\n\tWHERE \r\n\t\t\tabacg.AccountBillingCrisGasSeqid IS null AND \r\n\t\t\tabcg.AccountBillingSeqid = abacg.AccountBillingSeqid and\r\n\t\t\tabacg.BillingPeriod = @CurrentBillingPeriod and\r\n\t\t\tabacg.IsOldCrisGasAdjustment = 'Y'\r\n\t\t\t\r\n\t/******************************\r\n\t4. Update IsProcess Status in adjustmentCrisGas\r\n\t\t\tNote:\tFinally, we null the AccountBillingSeqid in the Billing.AccountBillingGas to orphan gas and associate it with the AccountBillingCrisGas row.\r\n\t\t\t\t\tUpdating the notes to identify 'Old Cris transitioned into New Cris billing subsystem.  This is an orpahned row'.  This eliminates double linkages.\r\n\t******************************/\r\n\tUPDATE    Billing.AccountBillingGas\r\n\tSET              \r\n\tAccountBillingSeqid =null, \r\n\tNewCrisAccountAdjustment ='Y', \r\n\tNewCrisAccountAdjustmentPeriod =Billing.AccountBillingAdjustmentCrisGas.BillingPeriod, \r\n\tFireAuditTrigger = 'Y',\r\n\tNotes = 'Old Cris transitioned into New Cris billing subsystem.  This is an orpahned row'\r\n\tFROM    \r\n\t\t\tBilling.AccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\t\tBilling.AccountBillingGas ON Billing.AccountBillingAdjustmentCrisGas.AccountBillingGasSeqid = Billing.AccountBillingGas.AccountBillingGasSeqid AND\r\n\t\t\tBilling.AccountBillingAdjustmentCrisGas.AccountBillingSeqid = Billing.AccountBillingGas.AccountBillingSeqid INNER JOIN\r\n\t\t\tBilling.AccountBillingCrisGas ON \r\n\t\t\tBilling.AccountBillingAdjustmentCrisGas.AccountBillingAdjustmentCrisGasSeqid = Billing.AccountBillingCrisGas.AccountBillingAdjustmentCrisGasSeqid\r\n\t\t\tAND Billing.AccountBillingGas.AccountBillingSeqid = Billing.AccountBillingCrisGas.AccountBillingSeqid\r\n\tWHERE    \r\n\t\t\t(Billing.AccountBillingAdjustmentCrisGas.BillingPeriod = '201011') AND \r\n\t\t\t(Billing.AccountBillingAdjustmentCrisGas.IsOldCrisGasAdjustment = 'Y') AND \r\n\t\t\t(Billing.AccountBillingAdjustmentCrisGas.IsProcessed = 'Y') AND \r\n\t\t\t(Billing.AccountBillingAdjustmentCrisGas.AccountBillingCrisGasSeqid IS NOT NULL)End"
        }
      ]
    }
  ]
}
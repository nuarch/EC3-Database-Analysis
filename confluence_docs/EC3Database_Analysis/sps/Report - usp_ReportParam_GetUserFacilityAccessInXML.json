{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ReportParam_GetUserFacilityAccessInXML",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ReportParam_GetUserFacilityAccessInXML",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve and return a list of facilities that a user has access to, based on their email address and selected agency codes. The output is formatted as XML, which includes agency and facility details. Additionally, the procedure logs the usage of the report for auditing purposes."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including logging, data retrieval with joins, data transformation, and XML generation. The use of temporary tables and XML formatting adds to its complexity, but it remains manageable due to its structured approach."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UserEmailAddress emailaddr",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the email address of the user requesting the report. It is used to filter the data based on user access."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC varchar(max)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter contains a list of agency codes selected by the user. It is used to determine which agencies' facilities should be included in the report."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by logging the report request using the "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " stored procedure. This includes details such as the report name, stored procedure name, and the requesting user's email address."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A temporary table "
                        },
                        {
                          "type": "text",
                          "text": "@FacilityAccess",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is created to store facility access details."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure populates this table by selecting distinct facility information from the "
                        },
                        {
                          "type": "text",
                          "text": "Billing",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " schema tables. It joins the "
                        },
                        {
                          "type": "text",
                          "text": "Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "Facility",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "AgencyDivision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " tables based on agency access derived from the function "
                        },
                        {
                          "type": "text",
                          "text": "uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The facility address is formatted by concatenating parts of the address and facility name, with specific handling for unassigned facilities."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Transformation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure updates the "
                        },
                        {
                          "type": "text",
                          "text": "OecFacilityAddress",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " field in the temporary table to replace semicolons with spaces, ensuring clean data for XML output."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "XML Generation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure constructs an XML document using the "
                        },
                        {
                          "type": "text",
                          "text": "FOR XML PATH",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " clause. It organizes the data hierarchically, with agencies as the root elements and facilities as nested elements."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The XML includes attributes for agency names, codes, and facility details."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins, which can be resource-intensive if the underlying tables are large. Indexes on join columns can help improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "XML Generation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "FOR XML PATH",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clause can be computationally expensive, especially with large datasets. Ensuring efficient data retrieval before XML conversion is crucial."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table can impact performance if not managed properly. However, it helps in organizing and transforming data before final output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the function "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and the joins will always return valid and consistent data. Any changes in these underlying structures could affect the output."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the number of agencies and facilities grows, the performance of the XML generation and data retrieval could degrade."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions if any part of the process fails."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on user input for agency codes and email addresses. Ensuring these inputs are sanitized and validated is important to prevent SQL injection or other security vulnerabilities."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n\t\t--* Description:  \r\n\t\t--*\r\n\t\t--* AUTHOR:            \r\n\t\t--* Created On :  \r\n\t\t--**************************************************************************************\r\n\t\t--* Date       Tech Description of Change\r\n\t\t--* ---------- ---\t-------------------------------------------------------------\r\n\t\t--* 2015-11-13  ZD  Added Report log SP block\r\n\t\t--**************************************************************************************\r\n\r\nCREATE PROCEDURE [Report].[usp_ReportParam_GetUserFacilityAccessInXML]\t\r\n\r\n\t@UserEmailAddress emailaddr,\r\n\t@AgencyCodeOEC varchar(max) -- user selected agency list\t\r\n\r\nAS\r\nBEGIN\r\n--------------------------------------------------------------------------\r\n-- This block is added to track report log -------------------------------\r\n DECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID)\r\nEXEC [Audit].usp_AddReportUsageLog\r\n\t@ReportName\t\t\t\t\t= @spname,\r\n    @StoredProcName\t\t\t\t= @spname,\r\n    @RequestedBy\t\t\t\t= @UserEmailAddress, -- emailaddr\r\n    \r\n    @prmPublishedBillingPeriod\t= NULL,\r\n    @prmBillingPeriod\t\t\t= NULL,\r\n    @prmAgency_ies\t\t\t\t= @AgencyCodeOEC,\r\n    @prmFacilityNumber_s\t\t= NULL,\r\n    @prmStartingBillingPeriod\t= NULL,\r\n    @prmEndingBillingPeriod\t\t= NULL\r\n\r\n--------------------------------------------------------------------------\r\n\r\n\tDECLARE @FacilityAccess TABLE\r\n\t(\r\n\t\tFacilitySeqid seqid,\r\n\t\tOecFacilityNumber OECBuildingNumber NULL,\r\n\t\tOecFacilityAddress VARCHAR(MAX) null,\r\n\t\tAgencyCodeOEC AgencyCodeOEC NULL, \r\n\t\tAgencyShortDesc sdesc NULL\r\n\t)\r\n\t\r\n\tINSERT INTO @FacilityAccess\r\n\t        ( FacilitySeqid,\r\n\t          OecFacilityNumber ,\r\n\t          OecFacilityAddress ,\r\n\t          AgencyCodeOEC ,\r\n\t          AgencyShortDesc\r\n\t        )\r\n\t SELECT DISTINCT\r\n\t\t\tfac.FacilitySeqid,\r\n\t\t\tfac.OecFacilityNumber ,\r\n\t\t\tSUBSTRING(fac.Address1, 0, 30)  + CASE WHEN fac.FacilityName like '%unassigned%' THEN '' ELSE '-' + SUBSTRING(fac.FacilityName, 0, 25) end ,\r\n\t\t\tad.AgencyCodeOEC ,\r\n\t\t\tad.AgencyShortDesc\r\n\t FROM [Billing].[uftn_TableGetAgencyChildrenByAgencyCodeOEC](@AgencyCodeOEC,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  @UserEmailAddress)\r\n\t\t\tAS agencyAccess\r\n\t\t\tINNER JOIN Billing.Account AS acc ON acc.AgencyAccount = agencyAccess.AgencyDivisionSeqID\r\n\t\t\tINNER JOIN Billing.Facility AS fac ON acc.FacilityAccount = fac.FacilitySeqid\r\n\t\t\tINNER JOIN billing.AgencyDivision AS ad ON agencyAccess.AgencyDivisionSeqID = ad.AgencyDivisionSeqid\r\n\t\r\n\tUPDATE @FacilityAccess\r\n\tSET OecFacilityAddress = REPLACE(OecFacilityAddress, ';', ' ')\r\n\t\r\n\tSELECT \r\n\t\tl1.AgencyCodeOEC + '-' + l1.AgencyShortDesc AS '@AgencyName', \r\n\t\tl1.AgencyCodeOEC AS '@AgencyCodeOEC'\r\n\t\t,\r\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\t\t'(' + l2.OecFacilityNumber + ') ' + REPLACE(ISNULL(l2.OecFacilityAddress, ''), '  ', ' ') AS '@FacilityAddress', \r\n\t\t\t\tl2.OecFacilityNumber AS '@OecFacilityNumber'\r\n\t\t\tFROM \r\n\t\t\t@FacilityAccess AS l2\r\n\t\t\tWHERE l1.AgencyCodeOEC = l2.AgencyCodeOEC AND l2.OecFacilityNumber <> ''\r\n\t\t\tORDER BY l2.OecFacilityNumber\r\n\t\t\tFOR XML PATH('Facility'), type\r\n\t\t)\r\n\tFROM \r\n\t(\r\n\t\tSELECT DISTINCT\r\n\t\tAgencyCodeOEC ,\r\n\t    AgencyShortDesc \r\n\t    FROM @FacilityAccess\r\n\t) AS l1\r\n\tORDER BY l1.AgencyCodeOEC\r\n\tFOR XML PATH('Agency'), ROOT('Facilities')\r\n\r\nEND"
        }
      ]
    }
  ]
}
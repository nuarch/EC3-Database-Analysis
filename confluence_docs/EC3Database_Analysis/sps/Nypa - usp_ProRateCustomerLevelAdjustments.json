{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Nypa",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ProRateCustomerLevelAdjustments",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "[Nypa].[usp_ProRateCustomerLevelAdjustments]",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to calculate and apply customer-level adjustments to account billing records based on energy usage. It aggregates total adjustments from a cover sheet, prorates these adjustments across individual accounts according to their energy consumption, and handles any rounding discrepancies by adjusting the account with the highest energy usage. The procedure also executes another stored procedure, "
        },
        {
          "type": "text",
          "text": "[Nypa].[usp_ProRateCustomerLevelCunyWindCharges]",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", at the end."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple SQL operations, including SELECT, UPDATE, and aggregation functions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses conditional logic to determine if adjustments are necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles rounding discrepancies, which adds a layer of complexity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves joining tables and executing another stored procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Status int output",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is an output parameter used to return the execution status of the procedure. It is intended to indicate success or failure of the procedure's execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variable Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Several variables are declared to store intermediate results, such as total adjustments, billing period, and energy usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregate Adjustments",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure calculates the total customer-level adjustments from the "
                },
                {
                  "type": "text",
                  "text": "Nypa.UploadNYPACoverSheet",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table for records that are not of type '20' and have miscellaneous charges marked as 'Y'. It groups these by "
                },
                {
                  "type": "text",
                  "text": "BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Check for Adjustments",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if any adjustments exist by evaluating the row count from the previous query."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Description Construction",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If adjustments exist, it constructs a description string of the adjustments using XML PATH to concatenate descriptions and amounts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculate Total Energy Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the total energy usage for the current billing period from the same table, considering specific record types ('1', '2', '5')."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Prorate Adjustments",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates the "
                },
                {
                  "type": "text",
                  "text": "Nypa.UploadNYPAAccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table, setting the "
                },
                {
                  "type": "text",
                  "text": "CustomerLevelAdjustmentAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for each account based on its proportion of total energy usage. It also updates the "
                },
                {
                  "type": "text",
                  "text": "Notes",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " field with the constructed description."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Handle Rounding Discrepancy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates any rounding discrepancy between the total adjustments and the sum of prorated adjustments. This discrepancy is added to the account with the highest energy usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execute Additional Procedure",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Finally, it executes another stored procedure, "
                },
                {
                  "type": "text",
                  "text": "[Nypa].[usp_ProRateCustomerLevelCunyWindCharges]",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", passing the "
                },
                {
                  "type": "text",
                  "text": "@Status",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation and Grouping",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of aggregation functions and grouping can be resource-intensive, especially if the "
                },
                {
                  "type": "text",
                  "text": "Nypa.UploadNYPACoverSheet",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The inner join with "
                },
                {
                  "type": "text",
                  "text": "Billing.ApplicationTimeFrame",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could impact performance if the tables are large and not indexed appropriately."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculation and adjustment of rounding discrepancies involve additional processing steps."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure run simultaneously, there could be issues with data consistency, especially when updating the same records."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and unclear failure states."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the performance of aggregation and join operations may degrade if not optimized with appropriate indexing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Errors",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The logic for handling rounding discrepancies assumes that the largest energy user should absorb the discrepancy, which may not always align with business rules or fairness considerations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE    PROCEDURE [Nypa].[usp_ProRateCustomerLevelAdjustments] (@Status int output)\nAS --**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  Process to ProRateCustomerLevelAdjustments to a specific account.\r\n--*                         \r\n--* Exec:        [Nypa].[usp_ProRateCustomerLevelAdjustments]\r\n--*\r\n--* Parameter(s):         \r\n--*                            StatusCode  int output       -  Execution Return Status \r\n--*\r\n--*\r\n--* Database:     OEC\r\n--*\r\n--* Return:\t    0 Success\r\n--*                 1 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   06/24/2009\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 06/24/2009 PAH  First Version  \r\n--***************************************************************************************\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\ndeclare @TotalCurrentPeriodKWH bigint\r\ndeclare @BillingPeriod varchar(6)\t\r\ndeclare @IsCust18Adjustment int\r\ndeclare @CoverSheetRecordDesc varchar(250)\r\ndeclare @NumberOfAdjustments int\r\ndeclare @TotalCustomerLevelAdjustments money\r\ndeclare @TotalCustomerLevelAdjustmentsRounding money\r\ndeclare @TopEnergyUserSeqid int\r\n\r\n--\t\t\r\nSELECT \r\n\t\t@BillingPeriod = BillingPeriod, \r\n\t\t@TotalCustomerLevelAdjustments = SUM(TotalDollars)\r\nFROM \r\n\t\tNypa.UploadNYPACoverSheet\r\nWHERE (CoverSheetRecordType <> '20' and  MiscellaneousCharges='Y')\r\nGROUP BY \r\n\t\tBillingPeriod --, CoverSheetRecordDesc\r\n--\r\n--\tDetermine if there were any customer account adjustments\r\n--\r\nset @IsCust18Adjustment =  @@rowcount\r\n--\r\nif (@IsCust18Adjustment > 0 )\r\n\tbegin\r\n\t\t--\t\t\r\n\t\tSELECT @CoverSheetRecordDesc =\r\n\t\t\tREPLACE(\r\n\t\t\t\t\t(SELECT   CoverSheetRecordDesc+': $'+CONVERT(varchar, CONVERT(money, TotalDollars), 1) AS [data()]\r\n\t\t\t\t\t\tFROM \r\n\t\t\t\t\t\t\t\tNypa.UploadNYPACoverSheet\r\n\t\t\t\t\tWHERE  (CoverSheetRecordType <> '20' and  MiscellaneousCharges='Y')\r\n\t\t\t\t\tFOR XML PATH ('')), ' ', ' - ')\r\n\t\t\t\t\t\r\n\t\t--\r\n\t\t--\r\n\t\t--\t\tselect @CoverSheetRecordDesc\r\n\t\t--\r\n\t\t--\tGet Current period KWH only as the basis for pro-rating the adjustment for the\r\n\t\t--\tindividual accounts using Account level KWH / TotalCurrentPeriodKWH. The largest account\r\n\t\t--\twill get the \r\n\t\t--\r\n\t\tSELECT @BillingPeriod=BillingPeriod, @TotalCurrentPeriodKWH = SUM(EnergyKilowattHours)\r\n\t\tFROM   Nypa.UploadNYPACoverSheet\r\n\t\tWHERE (CoverSheetRecordType IN ('1', '2', '5'))\r\n\t\tGROUP BY BillingPeriod\r\n\t\t--\r\n\t\t--\tselect @BillingPeriod,@TotalCurrentPeriodKWH\r\n\t\t--\r\n\t\t--\tCalculate the current period Account Level Adjustment Amount rounded to the nearest penny\r\n\t\t--\r\n\t\tUPDATE    Nypa.UploadNYPAAccountBilling\r\n\t\tSET             \r\n\t\t\t\tCustomerLevelAdjustmentAmount = round(@TotalCustomerLevelAdjustments * Nypa.UploadNYPAAccountBilling.AccountEnergyUsage / @TotalCurrentPeriodKWH,2),\r\n\t\t\t\tNotes = @CoverSheetRecordDesc\r\n\t\tFROM \r\n\t\t\t\tNypa.UploadNYPAAccountBilling INNER JOIN\r\n\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod AND \r\n\t\t\t\tNypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\tWHERE (Billing.ApplicationTimeFrame.CurrentProcessingPeriod = 'Y')\t\t\r\n\t\t--\r\n\t\t--\tCalculate the rounding discrepancy.\r\n\t\t--\r\n\t\tselect\t@TotalCustomerLevelAdjustmentsRounding = @TotalCustomerLevelAdjustments - sum(Nypa.UploadNYPAAccountBilling.CustomerLevelAdjustmentAmount)\r\n\t\tFROM     \r\n\t\t\t\tNypa.UploadNYPAAccountBilling INNER JOIN\r\n\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod AND \r\n\t\t\t\tNypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\tWHERE \r\n\t\t\t\t(Billing.ApplicationTimeFrame.CurrentProcessingPeriod = 'Y')\r\n\t\t--\r\n\t\t--\tAdd the rounding discrepancy to the CustomerLevelAdjustmentAmount of the account with the highest energy usage\r\n\t\t--\r\n\t\tUPDATE    Nypa.UploadNYPAAccountBilling\r\n\t\tSET              CustomerLevelAdjustmentAmount = CustomerLevelAdjustmentAmount + @TotalCustomerLevelAdjustmentsRounding\r\n\t\twhere Nypa.UploadNYPAAccountBilling.UploadNYPAAccountBillingSeqid  \r\n\t\t\t\tin (\r\n\t\t\t\t\t\tSELECT top 1    \r\n\t\t\t\t\t\t\t\tNypa.UploadNYPAAccountBilling.UploadNYPAAccountBillingSeqid  \r\n\t\t\t\t\t\tFROM \r\n\t\t\t\t\t\t\t\tNypa.UploadNYPAAccountBilling INNER JOIN\r\n\t\t\t\t\t\t\t\tBilling.ApplicationTimeFrame ON Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod AND \r\n\t\t\t\t\t\t\t\tNypa.UploadNYPAAccountBilling.BillingPeriod = Billing.ApplicationTimeFrame.BillingPeriod\r\n\t\t\t\t\t\tWHERE \r\n\t\t\t\t\t\t\t\t(Billing.ApplicationTimeFrame.CurrentProcessingPeriod = 'Y')\r\n\t\t\t\t\t\tORDER BY \r\n\t\t\t\t\t\t\t\tNypa.UploadNYPAAccountBilling.AccountEnergyUsage desc\r\n\t\t\t\t\t)\r\n\t\t--\t\t\t\t\t\r\n\t\tselect sum(CustomerLevelAdjustmentAmount) as CalcCustomerLevelAdjustmentAmount,@TotalCustomerLevelAdjustments as TotalCustomerLevelAdjustments from Nypa.UploadNYPAAccountBilling \r\nend \r\n\r\n\r\nEXECUTE [Nypa].[usp_ProRateCustomerLevelCunyWindCharges]    @Status OUTPUT\r\nend"
        }
      ]
    }
  ]
}
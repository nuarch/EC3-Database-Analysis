{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "NationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_LegacyData_PrepareDataTransfer",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_LegacyData_PrepareDataTransfer",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to prepare data for transfer by updating and inserting records related to account and meter billing adjustments in a legacy gas billing system. It performs a series of updates and inserts across multiple tables to adjust billing information, handle discrepancies, and prepare data for further processing or reporting. The procedure involves complex business logic to manage billing adjustments, account statuses, and meter readings, ensuring that the data is consistent and ready for transfer."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple update and insert operations across several tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic to handle various scenarios, such as discrepancies and adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs calculations and data transformations, such as setting default values, calculating discounts, and handling rounding errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It interacts with multiple related tables, requiring careful management of joins and conditions."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the data transfer is being prepared."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@authenticatedID AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An identifier for the authenticated user executing the procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingCycle AS VARCHAR(1)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing cycle associated with the data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@TotalDiscountedAmount AS MONEY",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The total amount to be discounted across the billing adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@InvoiceAccountBillingGroupSeqid AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The sequence ID for the invoice account billing group."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Sets a utility code and initializes default values for various fields in the "
                },
                {
                  "type": "text",
                  "text": "UploadLegacyKeyspanWestAccountBillingAdjustmentGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account Billing Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates account billing information, setting default values and revising amounts and therms."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Joins with "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to update prior revised information."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates account status and other fields based on data from "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Meter Billing Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Sets default values for meter billing adjustments."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates meter billing information based on data from "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountExchangeMeterTrack",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Meter",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Handles unknown meter statuses and sets consumption information."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Transfer Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts data into "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadCommonElectronicGasExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for exchange processing."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Handles back-billed records and creates current billing records for accounts without original bills."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Discount Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calculates and applies discounts to billing adjustments, handling rounding errors."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Facility Name Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates facility names for records where they are missing, using data from "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Facility",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Large Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple updates and inserts, which can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of multiple joins across tables can impact performance, particularly if indexes are not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not explicitly manage transactions, which could lead to partial updates in case of failure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The rounding logic for discounts may introduce performance overhead due to additional calculations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Consistency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs complex updates that could lead to data inconsistency if not carefully managed, especially with concurrent executions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no explicit error handling, which could result in unhandled exceptions and incomplete data processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may not scale well with increasing data volumes due to its complexity and the number of operations performed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values (e.g., '99991231') may lead to maintenance challenges and potential errors if business rules change."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The lack of transaction management and potential for concurrent execution could lead to race conditions or deadlocks."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Change Log\r\n--* xx/xx/xxxx\txx  First Version \r\n--* 11/29/2016\tzd\tturn off date 9999 99 99 to 99991231\r\n--***************************************************************************************\r\nCREATE PROCEDURE [NationalGridWest].[usp_LegacyData_PrepareDataTransfer]\r\n(\r\n\t@BillingPeriod AS VARCHAR(6),\r\n\t@authenticatedID AS INT,\r\n\t@BillingCycle AS VARCHAR(1),\r\n\t@TotalDiscountedAmount AS MONEY,\r\n\t@InvoiceAccountBillingGroupSeqid AS INT\r\n)\r\nAS\r\nBEGIN\r\n\tDECLARE @UtilityCode AS VARCHAR(1);\r\n\tSET @UtilityCode = '2';\r\n\r\n\t/*=============================\r\n\t1. Update Account Billing Information (status, billedAmount etc)\r\n\t===============================*/\r\n\t\r\n\t/*\r\n\t  1.1 set default values  \r\n\t*/\t\r\n\t UPDATE NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t SET    \r\n\t\tTotalRebilledAmount = ISNULL(TotalRebilledAmount,0), \r\n\t\tTotalCanceledAmount = ISNULL(TotalCanceledAmount,0), \r\n\t\tPriorRevisedBilledAmount = ISNULL(TotalCanceledAmount,0)*-1.00, \r\n\t\tCanceledBilledAmount = ISNULL(TotalCanceledAmount,0), \r\n\t\tRevisedBilledAmount = ISNULL(TotalRebilledAmount, 0),\r\n\t\tTotalTherms = ISNULL(TotalTherms,0),\r\n\t\tCancelTotalTherms = ISNULL(CancelTotalTherms, 0),\r\n\t\tPriorRevisedTherms = CancelTotalTherms*-1, \r\n\t\tCanceledTherms = CancelTotalTherms, \r\n\t\tRevisedTherms = ISNULL(TotalTherms,0),\r\n\t\tTotalCCF = ISNULL(TotalCCF,0), \r\n\t\tCancelTotalCCF = ISNULL(CancelTotalCCF,0),\r\n\t\tPriorRevisedCCF = CancelTotalCCF*-1, \r\n\t\tCanceledCCF = CancelTotalCCF, \r\n\t\tRevisedCCF = ISNULL(TotalCCF,0), -- CancelTotalCCF*-1+(TotalCCF+CancelTotalCCF),\r\n\t\tAccountStatus = 'UA',\r\n\t\tAccountpreviousStatus = 'NU',\r\n\t\tAccountStatusPeriod = @BillingPeriod,\r\n\t\tInitialCancelFromDate = Case when InitialCancelFromDate is null then FromDate else InitialCancelFromDate end,\r\n\t\tCurrentBillingToDate = Case when CurrentBillingToDate is null then ToDate else CurrentBillingToDate end,\r\n\t\tSpannedThermFactor = Case when SpannedThermFactor is null then ThermsFactor else SpannedThermFactor END,\r\n\t\tbillingCycle = @BillingCycle\r\n\t\r\n\t/*\r\n\t\t1.2 Set values prior revised information (billed amount, therms and ccf)\r\n\t*/\r\n\t  UPDATE    NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t  SET       PriorRevisedBilledAmount = AccountBilling.RevisedBilledAmount,\r\n\t\t\t\tPriorRevisedTherms = ISNULL(AccountBilling.AccountEnergyUsage, 0),\r\n\t\t\t\tPriorRevisedCCF = ISNULL(AccountBillingGas.TotalCCF, 0)\r\n\t  FROM   NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t\t\t\tINNER JOIN \r\n\t\t\t\tBilling.AccountBilling \r\n\t\t\t\tON \r\n\t\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision \r\n\t\t\t\t\t= Billing.AccountBilling.BillingPeriod\r\n\t\t\t\t\tAND \r\n\t\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision \r\n\t\t\t\t\t= Billing.AccountBilling.BillingPeriodRevision\r\n\t\t\t\t\tAND \r\n\t\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber \r\n\t\t\t\t\t= Billing.AccountBilling.OriginalAccountNumber\r\n\t\t\t\tINNER JOIN Billing.AccountBillingGas \r\n\t\t\t\tON \r\n\t\t\t\t\tBilling.AccountBilling.AccountBillingSeqid = Billing.AccountBillingGas.AccountBillingSeqid\r\n\t\t\t\t\tAND \r\n\t\t\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingGas.BillingPeriod\r\n\t\t\t\t\tAND \r\n\t\t\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingGas.BillingPeriodRevision\r\n\t  WHERE ( NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod = @BillingPeriod )\r\n\t\t\t\r\n\t/*\r\n\t\t1.3 Set information taken from EC3 for account found in EC3\r\n\t*/\r\n\tUPDATE\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\tSET              \r\n\t\tAdjustedAccount =Billing.Account.AccountSeqid, \r\n\t\tAccountStatus = 'AC', --Billing.Account.AccountStatus, \r\n\t\tAccountpreviousStatus = 'AC', --Billing.Account.AccountpreviousStatus,  \r\n\t\tCurrentInvoiceAccountBillingGroup = @InvoiceAccountBillingGroupSeqid, --Billing.Account.CurrentInvoiceAccountGroup, \r\n\t\tAccountUtilityCompanySeqid =Billing.Account.UtilityAccountProvider,\r\n\t\tEnergySource = 5, -- Billing.Account.EnergySource,\r\n\t\tIsTimeOfDayAccount = 'N',\r\n\t\tLastPeriodModified = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas .BillingPeriod,\r\n\t\tBillingCycle =  Billing.Account.BillingCycle,\r\n\t\tSalesType =  Billing.Account.SalesType,\r\n\t\tManualPaymentOverride = 'N',\r\n\t\tManualDataEntry  = 'N'\r\n\tFROM \r\n\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas \r\n\t\tINNER JOIN\r\n\t\tBilling.Account \r\n\t\t\tON \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber \r\n\t\t\t= Billing.Account.OriginalAccountNumber \r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.AccountUtilityCompanySeqid \r\n\t\t\t= Billing.Account.UtilityAccountProvider \r\n\t\r\n\t--/*\r\n\t--\t1.4 Set information taken from EC3 for adjustment (billingPeriod <> BillingPeriodRevision)\r\n\t--*/\t\r\n\t UPDATE NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t SET    AdjustedAccountBilling = Billing.AccountBilling.AccountBillingSeqid,\r\n\t\t\tAdjustedAccountBillingGas = Billing.AccountBillingGas.AccountBillingGasSeqid,  -- Fixed Peter\r\n\t\t\tAccountStatus = case when Billing.AccountBilling.AccountBillingStatus is null\r\n\t\t\t\t\t\t\t\t then 'BA'\r\n\t\t\t\t\t\t\t\t else Billing.AccountBilling.AccountBillingStatus\r\n\t\t\t\t\t\t\tend,\r\n\t\t\tAccountpreviousStatus = case when Billing.AccountBilling.PreviousAccountBillingStatus is null\r\n\t\t\t\t\t\t\t\t\t\t then 'NB'\r\n\t\t\t\t\t\t\t\t\t\t else Billing.AccountBilling.PreviousAccountBillingStatus\r\n\t\t\t\t\t\t\t\t\tend,\r\n\t\t\tAccountStatusPeriod = case when Billing.AccountBilling.AccountBillingStatusCodePeriod is null\r\n\t\t\t\t\t\t\t\t\t   then @BillingPeriod\r\n\t\t\t\t\t\t\t\t\t   else Billing.AccountBilling.AccountBillingStatusCodePeriod\r\n\t\t\t\t\t\t\t\t  end\r\n\t FROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t\t\tINNER JOIN \r\n\t\t\tBilling.AccountBilling \r\n\t\t\t\tON \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision \r\n\t\t\t\t= Billing.AccountBilling.BillingPeriod\r\n\t\t\t\tAND \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision \r\n\t\t\t\t= Billing.AccountBilling.BillingPeriodRevision\r\n\t\t\t\tAND\r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber \r\n\t\t\t\t= Billing.AccountBilling.OriginalAccountNumber\r\n\t\t\tINNER JOIN \r\n\t\t\tBilling.AccountBillingGas \r\n\t\t\t\tON \r\n\t\t\t\tBilling.AccountBilling.AccountBillingSeqid \r\n\t\t\t\t= Billing.AccountBillingGas.AccountBillingSeqid\r\n\t\t\t\tAND \r\n\t\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingGas.BillingPeriod\r\n\t\t\t\tAND \r\n\t\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingGas.BillingPeriodRevision\r\n\t WHERE  \r\n\t ( NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod <> NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision )\r\n\r\n\tUPDATE NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\tSET              \r\n\t\t\tAccountStatus = 'BA', \r\n\t\t\tAccountpreviousStatus = 'NB',\r\n\t\t\tAccountStatusPeriod = @BillingPeriod, \r\n\t\t\tPriorRevisedCCF =0, \r\n\t\t\tRevisedCCF = ISNULL(TotalCCF,0), \r\n\t\t\tCanceledCCF = ISNULL(CancelTotalCCF,0), \r\n\t\t\tPriorRevisedTherms =0, \r\n\t\t\tRevisedTherms = ISNULL(TotalTherms,0),\r\n\t\t\tCanceledTherms = ISNULL(CancelTotalTherms,0)\r\n\tWHERE \r\n\t\t\t(AccountStatus <> 'BC') AND \r\n\t\t\t(BillingPeriod <> BillingPeriodRevision) AND \r\n\t\t\t(AdjustedAccountBilling IS NULL)\r\n\r\n\tUPDATE  NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\tSET\r\n\t\t\tCurrentInvoiceAccountBillingGroup = @InvoiceAccountBillingGroupSeqid,              \r\n\t\t\tPriorRevisedCCF =0, \r\n\t\t\tRevisedCCF = ISNULL(TotalCCF,0), \r\n\t\t\tCanceledCCF =0,\r\n\t\t\tCancelTotalCCF = 0, \r\n\t\t\tPriorRevisedTherms =0, \r\n\t\t\tRevisedTherms = ISNULL(TotalTherms,0),\r\n\t\t\tCancelTotalTherms = 0,\r\n\t\t\tCanceledTherms =0 \r\n\tWHERE \r\n\t\t\t(AccountStatus in ('UA','AC')) AND \r\n\t\t\t(BillingPeriod = BillingPeriodRevision) AND \r\n\t\t\t(AdjustedAccountBilling IS NULL)\t\t\r\n\t\r\n\t-- Account and Meter Billing usage Discrepancies are noted in the meter billing and the \r\n\t-- reported information saved as the rebilled amount.\r\n\tUPDATE    NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\tSET              \r\n\t\t\tNotes ='Account and Meter Billing usage Discrepancies  ' +\r\n\t\t\tcase when netTherms <> 0 then 'Net Therms('+cast(netTherms as varchar(10))+') ' +\r\n\t\t\tcase when netCCF <> 0 then ')  CCF('+cast(netCCF as varchar(10))+')  '  else '' end + \r\n\t\t\t':           Reported: Therms('+cast(AccountTotalTherms as varchar(10)) +')           CCF('+cast(AccountTotalCcf as varchar(10)) +')           ThermsFactor('+cast(AccountTotalThermsFactor as varchar(10)) +')  ' else '' end --+\r\n\tFROM \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas \r\n\t\t\tINNER JOIN\r\n\t\t\tNationalGridWest.uvw_NG_GasUsageDiscrepanciesBetweenAccountAndMeterReportedBilling NGV\r\n\t\t\tON \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod = NGV.BillingPeriod\r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber = NGV.OriginalAccountNumber\r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision = NGV.BillingPeriodRevision\r\n\r\n\t/*=============================\r\n\t2. Update Meter Billing Information (status, billedAmount etc)\r\n\t===============================*/\r\n\t\r\n\t/*\r\n\t\t2.1 set default value\r\n\t*/\r\n\tupdate\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tSET      \r\n\t\t\tNumberOfCancelTransactions = 0, \r\n\t\t\tMeterBillingStatus = 'UM', \r\n\t\t\tMeterBillingPreviousStatus = 'NU', \r\n\t\t\tMeterBillingStatusPeriod = @BillingPeriod, \r\n\t\t\tRevisedBilledCCF = ISNULL(Ccf, 0), \r\n\t\t\tCanceledBilledCCF = 0, \r\n\t\t\tRevisedBilledTherms = ISNULL(Therms, 0), \r\n\t\t\tCanceledBilledTherms = 0,\r\n\t\t\tMeterReset = case when Notes is null then 'N' \r\n\t\t\t\t\t\t\t  else case when CHARINDEX('Reset:', Notes) <> 0 then 'Y' else 'N' end\r\n\t\t\t\t\t\t END,\r\n\t\t\tbillingCycle = @BillingCycle\r\n\r\n\t/*\r\n\t\t2.2 Set value for meter found in EC3 or in \r\n\t*/\r\n\tUPDATE    NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tSET              \r\n\t\tAccountUtilityCompanySeqid =Billing.Account.UtilityAccountProvider, \r\n\t\tAccountBilled =Billing.Account.AccountSeqid, \r\n\t\tMeterBilled =Billing.Meter.MeterSeqid, \r\n\t\tAccountExchangeMeterTrackSeqid =Billing.AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid, \r\n\t\tMeterBillingStatus ='AC', \r\n\t\tMeterBillingPreviousStatus = 'AC', \r\n\t\tMeterBillingStatusPeriod = Billing.Meter.MeterStatusCodePeriod\r\n\tFROM     \r\n\t\tBilling.AccountExchangeMeterTrack \r\n\t\tINNER JOIN\r\n\t\t\tBilling.Account \r\n\t\t\t\tON Billing.AccountExchangeMeterTrack.OriginalAccountSeqid = Billing.Account.AccountSeqid AND \r\n\t\t\t\tBilling.AccountExchangeMeterTrack.OriginalAccountSeqid = Billing.Account.AccountSeqid \r\n\t\tINNER JOIN\r\n\t\t\tBilling.Meter \r\n\t\t\t\tON Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid AND \r\n\t\t\t\tBilling.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid \r\n\t\tINNER JOIN\r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas \r\n\t\tINNER JOIN\r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas ON \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriod AND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision\r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber\r\n\t\t\tON Billing.Account.AccountSeqid = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.AdjustedAccount AND \r\n\t\t\tBilling.Meter.OriginalAccountNumber = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber AND \r\n\t\t\tBilling.Meter.OriginalMeterNumber = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalMeterNumber AND \r\n\t\t\tBilling.AccountExchangeMeterTrack.OriginalAccountNumber = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber AND \r\n\t\t\tBilling.AccountExchangeMeterTrack.OriginalMeterNumber = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalMeterNumber\r\n\r\n\t/*\r\n\t\t2.3 For meter with \"Unknown\" status, if the acount cannot be found, set status to \"UA\", unknown account\r\n\t*/\r\n\tUPDATE\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tSET             \r\n\t\t\tAccountBilled =Billing.Account.AccountSeqid,\r\n\t\t\tMeterBillingStatus = Case when Billing.Account.AccountSeqid is null then 'UA' else 'UM' end\r\n\tFROM \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas \r\n\t\t\tLEFT JOIN\r\n\t\t\tBilling.Account \r\n\t\t\tON NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber = Billing.Account.OriginalAccountNumber \r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.AccountUtilityCompanySeqid = Billing.Account.UtilityAccountProvider\r\n\tWHERE (NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBillingStatus = 'UM')\r\n\r\n\r\n\r\n\t/*\r\n\t\t2.4 Set consumption information for meter record\r\n\t*/\r\n\tupdate\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tset\t\t\r\n\t\t\tNumberOfCancelTransactions = 1, \r\n\t\t\tNumberOfTransactions = NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.NumberOfTransactions + 1, \r\n\t\t\tAdjustedMeterBilling = Billing.MeterBilling.MeterBillingSeqid,\r\n\t\t\tAdjustedMeterBillingGas =Billing.MeterBillingGas.MeterBillingGasSeqid,\r\n\t\t\tMeterBillingStatus = Billing.MeterBilling.MeterBillingStatus, \r\n\t\t\tMeterBillingPreviousStatus = Billing.MeterBilling.PreviousMeterBillingStatus, \r\n\t\t\tMeterBillingStatusPeriod = Billing.MeterBilling.MeterBillingStatusCodePeriod, \r\n\t\t\tRevisedBilledCCF = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.CCF,0),\r\n\t\t\tCanceledBilledCCF = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.CancelCcf, 0),\r\n\t\t\tPriorRevisedBilledCCF = ISNULL(Billing.MeterBillingGas.Ccf,0),\r\n\t\t\tCCF = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.CCF,0),\r\n\t\t\tCancelCcf = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.CancelCcf,0), -- Con Edison does not report Cancellations on the meter billing level\r\n\t\t\tPriorRevisedBilledTherms = ISNULL(Billing.MeterBilling.Consumption,0), \r\n\t\t\tRevisedBilledTherms = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.Therms,0),\r\n\t\t\tCanceledBilledTherms = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.CancelTherms,0),\r\n\t\t\tTherms = ISNULL(UploadLegacyKeyspanWestMeterBillingAdjustmentGas.Therms,0),\r\n\t\t\tCancelTherms = ISNULL(CancelTherms,0),\r\n\t\t\tCancelMeterFromReading = ISNULL(CancelMeterFromReading,0),\r\n\t\t\tCancelMeterToReading = ISNULL(CancelMeterToReading,0),\r\n\t\t\tCancelThermsFactor = ISNULL(CancelThermsFactor, 1.03),\r\n\t\t\tCancelMeterConstant = ISNULL(CancelMeterConstant,1)\r\n\r\n\t\tfrom\t\r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas \r\n\t\t\tINNER JOIN\r\n\t\t\tBilling.MeterBilling \r\n\t\t\t\tON \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.AccountExchangeMeterTrackSeqid = Billing.MeterBilling.AccountExchangeMeterTrackSeqid AND \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision = Billing.MeterBilling.BillingPeriodRevision AND \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision = Billing.MeterBilling.BillingPeriod \r\n\t\t\tINNER JOIN\r\n\t\t\tBilling.MeterBillingGas \r\n\t\t\t\tON Billing.MeterBilling.MeterBillingSeqid = Billing.MeterBillingGas.MeterBillingSeqid AND \r\n\t\t\t\tBilling.MeterBilling.OriginalAccountNumber = Billing.MeterBillingGas.OriginalAccountNumber AND \r\n\t\t\t\tBilling.MeterBilling.OriginalMeterNumber = Billing.MeterBillingGas.OriginalMeterNumber AND \r\n\t\t\t\tBilling.MeterBilling.BillingPeriodRevision = Billing.MeterBillingGas.BillingPeriodRevision\r\n\twhere\t\r\n\t\t\t(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.AccountBilled IS NOT NULL) AND \r\n\t\t\t(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBilled IS NOT NULL)\r\n\r\n\t/*\r\n\t\t2.5 set status for backbilled (account found in EC3 but billingperiod not equal to billingPeriodRevision\r\n\t\t\tQuery ignore unknown meter. Record with \"Ux\" will be added as new meter.\t\r\n\t\t\tAlso ignores adjustment with known meterbilling to be adjusted.\r\n\t*/\r\n\tUPDATE    NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tSET              \r\n\t\t\tMeterBillingStatus = 'BA', \r\n\t\t\tMeterBillingPreviousStatus = 'NB', \r\n\t\t\tMeterBillingStatusPeriod = '200611',\r\n\t\t\tNotes = SUBSTRING(\r\n\t\t\t\t\t\t(SELECT \r\n\t\t\t\t\t\t(Case when DerivedFromSpannedBill = 'Y' \r\n\t\t\t\t\t\t\t\tthen Notes + ' Back Billed in: '+ '200611'+ ' for Revised Billing Period: '+NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision\r\n\t\t\t\t\t\t\t\telse         ' Back Billed in: '+ '200611'+ ' for Revised Billing Period: '+NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision end)),\r\n\t\t\t\t\t\t\t\t1, 300)\t\t\t\t\t\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tWHERE \r\n\t\t\t(BillingPeriod <> BillingPeriodRevision) AND \r\n\t\t\t(AdjustedMeterBilling IS NULL) AND \r\n\t\t\t(MeterBillingStatus NOT LIKE 'U%')\r\n\r\n\t/*=============================\r\n\t3. Insert exchange record data to do the exchange processing\r\n\t===============================*/\r\n\t\r\n\ttruncate table Gas.UploadCommonElectronicGasExchangeData\r\n\t\r\n\tINSERT INTO Gas.UploadCommonElectronicGasExchangeData\r\n\t(\r\n\t\tUtilityCompanyId,\r\n\t\tAccountBillingGroup,\r\n\t\tBillingPeriod,\r\n\t\tApprovedForCreation,\r\n\t\tCurrentAccountNumber,\r\n\t\tCurrentMeterNumber,\r\n\t\tExchangeCode,\r\n\t\tAccountStatus,\r\n\t\tAccountEffectiveTurnOn,\r\n\t\tAccountEffectiveTurnOff,\r\n\t\tSalesType,\r\n\t\tDeliveryServiceClass,\r\n\t\tDeliveryServiceClassEffectiveDate,\r\n\t\tProductionServiceClass,\r\n\t\tProductionServiceClassEffectiveDate,\r\n\t\tBillingCycle,\r\n\t\tTODAccount,\r\n\t\tTripNumber,\r\n\t\tAccountName,\r\n\t\tAccountAddress,\r\n\t\tBorough,\r\n\t\tMeterStatus,\r\n\t\tMeterEffectiveTurnOnDate,\r\n\t\tMeterEffectiveTurnOffDate,\r\n\t\tMeterType,\r\n\t\tMeterNumberofDials,\r\n\t\tMeterConstant,\r\n\t\tManualDataEntry,\r\n\t\tEnergyDeliveryCount, \r\n\t\tEnergyDeliveryType,\r\n\t\tauthenticatedUserID \r\n\t)\r\n\tSELECT \r\n\t\tMin(@UtilityCode) as UtilityCompanyId,\r\n\t\tmin(@InvoiceAccountBillingGroupSeqid) as AccountBillingGroup,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriod) as BillingPeriod,\r\n\t\tmin('Y') as ApprovedForCreation,\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber, \r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalMeterNumber,\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBillingStatus as ExchangeCode,\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBillingStatus as AccountStatus,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.FromDate) as AccountEffectiveTurnOn,\r\n\t\tmin('99991231') as AccountEffectiveTurnOff,\r\n\t\tmin('BT') as SalesType,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.GasRateCode) as DeliveryServiceClass,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.FromDate) as DeliveryServiceClassEffectiveDate,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.GasRateCode) as ProductionServiceClass,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.FromDate) as ProductionServiceClassEffectiveDate,\r\n\t\tmin(@BillingCycle) as BillingCycle,\r\n\t\tmin('Y') as TODAccount,\r\n\t\tsubstring(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber, 12, 2) as TripNumber,\r\n\t\tmin(case when NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.FacilityName is null then 'Missing Facility Name' else NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.FacilityName end ) as AccountName,\r\n\t\tmin(case when NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.ServiceAddress is null then 'Missing Service Address' else NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.ServiceAddress end ) as AccountAddress,\r\n\t\tmin(1) as Borough,\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBillingStatus as MeterStatus,\r\n\t\tmin(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.FromDate) as MeterEffectiveTurnOnDate,\r\n\t\tmin('99991231') as MeterEffectiveTurnOffDate,\r\n\t\tmin('G') as MeterType,\r\n\t\tmin(NumberOfDials) as MeterNumberofDials,\r\n\t\tmin(MeterConstant) as MeterConstant,\r\n\t\tmin('N') as ManualDataEntry,\r\n\t\tmin(1) as EnergyDeliveryCount,\r\n\t\tmin(5) as EnergyDeliveryType,\r\n\t\tmin(1) as authenticatedUserID\r\n\t\tFROM \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas \r\n\t\t\t\tLEFT JOIN\r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas \r\n\t\t\t\tON \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber\r\n\t\t\t\tAND \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriod = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod \r\n\t\t\t\tAND \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision\r\n\t\tWHERE \r\n\t\t\t\t(NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.AccountStatus LIKE 'U%') OR\r\n\t\t\t\t(NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBillingStatus LIKE 'U%')\r\n\t\tgroup by \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber, \r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalMeterNumber,\r\n\t\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBillingStatus\r\n\r\n\t\r\n\t/*=============================\r\n\t4. Create current bill record for back bill record that does not have original bill\r\n\t===============================*/\r\n\t\r\n\t/*\r\n\t\t4.1 Insert backbill that does not have current period bill into the UploadLegacyKeyspanWestCurrentlyBilledAccounts\r\n\t*/\r\n\ttruncate table NationalGridWest.UploadLegacyKeyspanWestCurrentlyBilledAccounts\r\n\r\n    /* Insert all account numbers into current billed account table */\r\n\tInsert into NationalGridWest.UploadLegacyKeyspanWestCurrentlyBilledAccounts\r\n\t(OriginalAccountNumber)\r\n\tSELECT DISTINCT OriginalAccountNumber\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n \r\n\t/* Delete original billed account number */\r\n\t DELETE FROM NationalGridWest.UploadLegacyKeyspanWestCurrentlyBilledAccounts\r\n\t FROM \r\n\t NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n    \tINNER JOIN \r\n    \tNationalGridWest.UploadLegacyKeyspanWestCurrentlyBilledAccounts \r\n    \tON \r\n    \tUploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber \r\n    \t= UploadLegacyKeyspanWestCurrentlyBilledAccounts.OriginalAccountNumber\r\n\t WHERE  \r\n\t ( UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod \r\n\t = UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision )\r\n\r\n\t/*\r\n\t\t4.2 Create current period billing for account in UploadLegacyKeyspanWestCurrentlyBilledAccounts\r\n\t*/\r\n\t-- All of these bills will have a status code of \"BC\" back billed without\r\n\t--\ta current period bill.  The Current period usage and dollars are zero.  This was included for interuptible gas that lags billing\r\n\t--\tby a month.  The money will be count as a net paid adjustment.\r\n\tINSERT INTO NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t(\r\n\t\tFacilityName,\r\n\t\tServiceAddress,\r\n\t\tAdjustedAccount,\r\n\t\tAccountUtilityCompanySeqid,\r\n\t\tAccountStatus,\r\n\t\tAccountpreviousStatus,\r\n\t\tAccountStatusPeriod,\r\n\t\tCurrentInvoiceAccountBillingGroup,\r\n\t\tNumberOfTransactions,\r\n\t\tNumberOfRebillTransactions,\r\n\t\tNumberOfCancelTransactions,\r\n\t\tOriginalAccountNumber,\r\n\t\tBillingPeriod,\r\n\t\tBillingPeriodRevision,\r\n\t\tFirstCanceledBillingPeriod,\r\n\t\tEstimatedOrActualBilling,\r\n\t\tInitialCancelFromDate,\r\n\t\tCurrentBillingToDate,\r\n\t\tNumberOfBillingPeriods,\r\n\t\tTotalBillingDaysRebilled,\r\n\t\tTotalRebilledAmount,\r\n\t\tTotalCanceledAmount,\r\n\t\tPriorRevisedBilledAmount,\r\n\t\tRevisedBilledAmount,\r\n\t\tCanceledBilledAmount,\r\n\t\tPriorRevisedCCF,\r\n\t\tRevisedCCF,\r\n\t\tCanceledCCF,\r\n\t\tPriorRevisedTherms,\r\n\t\tRevisedTherms,\r\n\t\tCanceledTherms,\r\n\t\tAverageRebillCostOfGasCharge,\r\n\t\tAverageRebillThermsFactor,\r\n\t\tBillingDays,\r\n\t\tBillingDate,\r\n\t\tToDate,\r\n\t\tFromDate,\r\n\t\tBillingAction,\r\n\t\tProcessedInTheCurrentPeriod,\r\n\t\tGasRateCode,\r\n\t\tTotalCCF,\r\n\t\tTotalTherms,\r\n\t\tThermsFactor,\r\n\t\tCancelFromDate,\r\n\t\tCancelToDate,\r\n\t\tCancelTotalCCF,\r\n\t\tCancelTotalTherms,\r\n\t\tCancelThermsFactor,\r\n\t\tCancelBillingDays,\r\n\t\tProcessEffectiveDate,\r\n\t\tDerivedFromSpannedBill,\r\n\t\tSpannedBillingPeriodRevision,\r\n\t\tSpannedFirstCanceledBillingPeriod,\r\n\t\tSpannedBilledAmount,\r\n\t\tSpannedCCF,\r\n\t\tSpannedThermFactor,\r\n\t\tSpannedTherm,\r\n\t\tSpannedMonthlyPercentage,\r\n\t\tSpannedTotalPercentage,\r\n\t\tNotes, \r\n\t\tAuthenticatedUserID\r\n\t)\r\n\tSELECT  \r\n\t\t-- AccountBillingAdjustmentGas.UploadConEdisonAccountBillingAdjustmentGasSeqid, \r\n\t\tAccountBillingAdjustmentGas.FacilityName, \r\n\t\tAccountBillingAdjustmentGas.ServiceAddress, \r\n\t\tAccountBillingAdjustmentGas.AdjustedAccount,\r\n\t\tAccountBillingAdjustmentGas.AccountUtilityCompanySeqid, \r\n\t\t'BC', -- AccountBillingAdjustmentGas.AccountStatus, \r\n\t\t'NB', -- AccountBillingAdjustmentGas.AccountpreviousStatus, \r\n\t\t@BillingPeriod, -- AccountBillingAdjustmentGas.AccountStatusPeriod, \r\n\t\tAccountBillingAdjustmentGas.CurrentInvoiceAccountBillingGroup, \r\n\t\t1, -- AccountBillingAdjustmentGas.NumberOfTransactions, \r\n\t\t1, -- AccountBillingAdjustmentGas.NumberOfRebillTransactions,\r\n\t\t0, --  AccountBillingAdjustmentGas.NumberOfCancelTransactions, \r\n\t\tAccountBillingAdjustmentGas.OriginalAccountNumber, \r\n\t\t@BillingPeriod, \r\n\t\t@BillingPeriod, -- @BillingPeriodRevision, \r\n\t\t@BillingPeriod, -- AccountBillingAdjustmentGas.FirstCanceledBillingPeriod, \r\n\t\t'EST', -- AccountBillingAdjustmentGas.EstimatedOrActualBilling, \r\n\t\tAccountBillingAdjustmentGas.InitialCancelFromDate, \r\n\t\tAccountBillingAdjustmentGas.CurrentBillingToDate, \r\n\t\tAccountBillingAdjustmentGas.NumberOfBillingPeriods, \r\n\t\tAccountBillingAdjustmentGas.TotalBillingDaysRebilled, \r\n\t\t0, --  AccountBillingAdjustmentGas.TotalRebilledAmount, \r\n\t\t0, --  AccountBillingAdjustmentGas.TotalCanceledAmount, \r\n\t\t0, --  AccountBillingAdjustmentGas.PriorRevisedBilledAmount,\r\n\t\t0, --  AccountBillingAdjustmentGas.RevisedBilledAmount, \r\n\t\t0, --  AccountBillingAdjustmentGas.CanceledBilledAmount, \r\n\t\t0, --  AccountBillingAdjustmentGas.PriorRevisedCCF, \r\n\t\t0, --  AccountBillingAdjustmentGas.RevisedCCF, \r\n\t\t0, --  AccountBillingAdjustmentGas.CanceledCCF,\r\n\t\t0, --  AccountBillingAdjustmentGas.PriorRevisedTherms, \r\n\t\t0, --  AccountBillingAdjustmentGas.RevisedTherms, \r\n\t\t0, --  AccountBillingAdjustmentGas.CanceledTherms, \r\n\t\t0, --  AccountBillingAdjustmentGas.AverageRebillCostOfGasCharge, \r\n\t\t0, --  AccountBillingAdjustmentGas.AverageRebillThermsFactor,\r\n\t\t[dbo].[CalculateNumberOfBillingDays]  (\r\n\t\t\tNationalGridWest.DetermineProjectedDate (@BillingCycle, @BillingPeriod, 'F',  substring(AccountBillingAdjustmentGas.OriginalAccountNumber, 12, 2))\r\n\t\t\t,\r\n\t\t\tNationalGridWest.DetermineProjectedDate (@BillingCycle, @BillingPeriod, 'T',  substring(AccountBillingAdjustmentGas.OriginalAccountNumber, 12, 2))\r\n\t\t)\t\r\n\t\t,\r\n\t\t[dbo].[ConvertDatetimeToYYYYMMDD] ( getDate()), --  AccountBillingAdjustmentGas.BillingDate,\r\n\t\t\r\n\t\tNationalGridWest.DetermineProjectedDate (@BillingCycle, @BillingPeriod, 'T',  substring(AccountBillingAdjustmentGas.OriginalAccountNumber, 12, 2)), --  AccountBillingAdjustmentGas.ToDate,\r\n\t\t\r\n\t\tNationalGridWest.DetermineProjectedDate (@BillingCycle, @BillingPeriod, 'F',  substring(AccountBillingAdjustmentGas.OriginalAccountNumber, 12, 2)), --  AccountBillingAdjustmentGas.FromDate,\r\n\t\t\r\n\t\t'O', --  AccountBillingAdjustmentGas.BillingAction,\r\n\t\t'N', --  AccountBillingAdjustmentGas.ProcessedInTheCurrentPeriod,\r\n\t\tAccountBillingAdjustmentGas.GasRateCode,\r\n\t\t0, --  AccountBillingAdjustmentGas.TotalCCF,\r\n\t\t0, --  AccountBillingAdjustmentGas.TotalTherms,\r\n\t\t0, --  AccountBillingAdjustmentGas.ThermsFactor,\r\n\t\tnull, --  AccountBillingAdjustmentGas.CancelFromDate,\r\n\t\tnull, --  AccountBillingAdjustmentGas.CancelToDate,\r\n\t\t0, --  AccountBillingAdjustmentGas.CancelTotalCCF,\r\n\t\t0, --  AccountBillingAdjustmentGas.CancelTotalTherms,\r\n\t\t0, --  AccountBillingAdjustmentGas.CancelThermsFactor,\r\n\t\t0, --  AccountBillingAdjustmentGas.CancelBillingDays,\r\n\t\t[dbo].[ConvertDatetimeToYYYYMMDD] ( getDate()), --  AccountBillingAdjustmentGas.ProcessEffectiveDate,\r\n\t\t'N', --  AccountBillingAdjustmentGas.DerivedFromSpannedBill,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedBillingPeriodRevision,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedFirstCanceledBillingPeriod,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedBilledAmount,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedCCF,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedThermFactor,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedTherm,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedMonthlyPercentage,\r\n\t\t0, --  AccountBillingAdjustmentGas.SpannedTotalPercentage,\r\n\t\t'No Current Account Billing Period record: '+@BillingPeriod, --  AccountBillingAdjustmentGas.Notes\r\n\t\t1 -- AuthenticatedUserID\r\n\tFROM\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestCurrentlyBilledAccounts AS NoOriginalAccountBilling \r\n\t\tINNER JOIN\r\n\t    NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas AS AccountBillingAdjustmentGas \r\n\t    ON \r\n\t\tNoOriginalAccountBilling.OriginalAccountNumber = AccountBillingAdjustmentGas.OriginalAccountNumber\r\n\tWHERE (AccountBillingAdjustmentGas.BillingPeriodRevision =\r\n\t\t  (SELECT MAX(BillingPeriodRevision) AS MaxBillingPeriodRevision\r\n\t\t\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas AS MaxRevised\r\n\t\t\tGROUP BY OriginalAccountNumber\r\n\t\t\tHAVING (OriginalAccountNumber = AccountBillingAdjustmentGas.OriginalAccountNumber)))\r\n\r\n\t/*\r\n\t\t4.3 Insert the AccountBilling records when the \"UploadConEdisonAccountBillingAdjustmentGasSeqid IS NULL and \r\n\t\t--\tUploadConEdisonMeterBillingAdjustmentGasSeqid is not null\".  This provides a record that can be used for the current period billing that\r\n\t\t--\twas not provided \r\n\t\tAll of these bills will have a status code of \"BM\" back billed meter billing without\r\n\t\t--\ta current period account bill.  The period will reflect the billing period revison and the usage is set to the CCF,Therms and Thermsfactor.  \r\n\t\t--\tAll dollar columns will be set to Zero (no money).\r\n\t*/\r\n\tINSERT INTO NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t(\r\n\t\tFacilityName,\r\n\t\tServiceAddress,\r\n\t\tAdjustedAccount,\r\n\t\tAccountUtilityCompanySeqid,\r\n\t\tAccountStatus,\r\n\t\tAccountpreviousStatus,\r\n\t\tAccountStatusPeriod,\r\n\t\tCurrentInvoiceAccountBillingGroup,\r\n\t\tNumberOfTransactions,\r\n\t\tNumberOfRebillTransactions,\r\n\t\tNumberOfCancelTransactions,\r\n\t\tOriginalAccountNumber,\r\n\t\tBillingPeriod,\r\n\t\tBillingPeriodRevision,\r\n\t\tFirstCanceledBillingPeriod,\r\n\t\tEstimatedOrActualBilling,\r\n\t\tInitialCancelFromDate,\r\n\t\tCurrentBillingToDate,\r\n\t\tNumberOfBillingPeriods,\r\n\t\tTotalBillingDaysRebilled,\r\n\t\tTotalRebilledAmount,\r\n\t\tTotalCanceledAmount,\r\n\t\tPriorRevisedBilledAmount,\r\n\t\tRevisedBilledAmount,\r\n\t\tCanceledBilledAmount,\r\n\t\tPriorRevisedCCF,\r\n\t\tRevisedCCF,\r\n\t\tCanceledCCF,\r\n\t\tPriorRevisedTherms,\r\n\t\tRevisedTherms,\r\n\t\tCanceledTherms,\r\n\t\tAverageRebillCostOfGasCharge,\r\n\t\tAverageRebillThermsFactor,\r\n\t\tBillingDays,\r\n\t\tBillingDate,\r\n\t\tToDate,\r\n\t\tFromDate,\r\n\t\tBillingAction,\r\n\t\tProcessedInTheCurrentPeriod,\r\n\t\tGasRateCode,\r\n\t\tTotalCCF,\r\n\t\tTotalTherms,\r\n\t\tThermsFactor,\r\n\t\tCancelFromDate,\r\n\t\tCancelToDate,\r\n\t\tCancelTotalCCF,\r\n\t\tCancelTotalTherms,\r\n\t\tCancelThermsFactor,\r\n\t\tCancelBillingDays,\r\n\t\tProcessEffectiveDate,\r\n\t\tDerivedFromSpannedBill,\r\n\t\tSpannedBillingPeriodRevision,\r\n\t\tSpannedFirstCanceledBillingPeriod,\r\n\t\tSpannedBilledAmount,\r\n\t\tSpannedCCF,\r\n\t\tSpannedThermFactor,\r\n\t\tSpannedTherm,\r\n\t\tSpannedMonthlyPercentage,\r\n\t\tSpannedTotalPercentage,\r\n\t\tNotes, \r\n\t\tAuthenticatedUserID\r\n\t)\r\n\tSELECT  MeterBillingAdjustmentGas.FacilityName,\r\n\t\t\tMeterBillingAdjustmentGas.ServiceAddress,\r\n\t\t\tMeterBillingAdjustmentGas.AccountBilled,\r\n\t\t\tMeterBillingAdjustmentGas.AccountUtilityCompanySeqid,\r\n\t\t\t'BM', -- AccountBillingAdjustmentGas.AccountStatus, \r\n\t\t\t'NB', -- AccountBillingAdjustmentGas.AccountpreviousStatus, \r\n\t\t\t@BillingPeriod, -- AccountBillingAdjustmentGas.AccountStatusPeriod, \r\n\t\t\t( SELECT    Billing.Account.CurrentInvoiceAccountGroup\r\n\t\t\t  FROM   Billing.Account\r\n\t\t\t  WHERE Billing.Account.AccountSeqid = MeterBillingAdjustmentGas.AccountBilled\r\n\t\t\t), --AccountBillingAdjustmentGas.CurrentInvoiceAccountBillingGroup, \r\n\t\t\t0, -- AccountBillingAdjustmentGas.NumberOfTransactions, \r\n\t\t\t0, -- AccountBillingAdjustmentGas.NumberOfRebillTransactions,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.NumberOfCancelTransactions, \r\n\t\t\tMeterBillingAdjustmentGas.OriginalAccountNumber,\r\n\t\t\t@BillingPeriod,\r\n\t\t\tMeterBillingAdjustmentGas.BillingPeriodRevision, -- @BillingPeriodRevision, \r\n\t\t\tMeterBillingAdjustmentGas.BillingPeriodRevision, -- AccountBillingAdjustmentGas.FirstCanceledBillingPeriod, \r\n\t\t\t'EST', -- AccountBillingAdjustmentGas.EstimatedOrActualBilling, \r\n\t\t\tMeterBillingAdjustmentGas.FromDate, -- AccountBillingAdjustmentGas.InitialCancelFromDate, \r\n\t\t\tMeterBillingAdjustmentGas.ToDate, -- AccountBillingAdjustmentGas.CurrentBillingToDate, \r\n\t\t\tMeterBillingAdjustmentGas.NumberOfBillingPeriods,\r\n\t\t\tMeterBillingAdjustmentGas.TotalBillingDaysRebilled,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.TotalRebilledAmount, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.TotalCanceledAmount, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.PriorRevisedBilledAmount,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.RevisedBilledAmount, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.CanceledBilledAmount, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.PriorRevisedCCF, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.RevisedCCF, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.CanceledCCF,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.PriorRevisedTherms, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.RevisedTherms, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.CanceledTherms, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.AverageRebillCostOfGasCharge, \r\n\t\t\t0, --  AccountBillingAdjustmentGas.AverageRebillThermsFactor,\r\n\t\t\tMeterBillingAdjustmentGas.BillingDays, --  AccountBillingAdjustmentGas.BillingDays,\r\n\t\t\tMeterBillingAdjustmentGas.BillingDate, -- [dbo].[ConvertDatetimeToYYYYMMDD] ( getDate()), --  AccountBillingAdjustmentGas.BillingDate,\r\n\t\t\tMeterBillingAdjustmentGas.ToDate,  --  [dbo].[DetermineConEdisonBillingPeriodProjectedToDate] (@BillingPeriod,AccountBillingAdjustmentGas.GasRateCode,AccountBillingAdjustmentGas.AccountUtilityCompanySeqid), --  AccountBillingAdjustmentGas.ToDate,\r\n\t\t\tMeterBillingAdjustmentGas.FromDate,  --  [dbo].[DetermineConEdisonBillingPeriodProjectedFromDate] (@BillingPeriod,AccountBillingAdjustmentGas.GasRateCode,AccountBillingAdjustmentGas.AccountUtilityCompanySeqid), --  AccountBillingAdjustmentGas.FromDate,\r\n\t\t\tMeterBillingAdjustmentGas.BillingAction, --  AccountBillingAdjustmentGas.BillingAction,\r\n\t\t\t'N', --  AccountBillingAdjustmentGas.ProcessedInTheCurrentPeriod,\r\n\t\t\t( SELECT    Billing.Account.CommodityTariffRate\r\n\t\t\t  FROM   Billing.Account\r\n\t\t\t  WHERE Billing.Account.AccountSeqid = MeterBillingAdjustmentGas.AccountBilled\r\n\t\t\t), --MeterBillingAdjustmentGas.GasRateCode,\r\n\t\t\t0, --  MeterBillingAdjustmentGas.Ccf, --  AccountBillingAdjustmentGas.TotalCCF,\r\n\t\t\t0, --  MeterBillingAdjustmentGas.Therms, --  AccountBillingAdjustmentGas.TotalTherms,\r\n\t\t\t0, --  MeterBillingAdjustmentGas.ThermsFactor, --  AccountBillingAdjustmentGas.ThermsFactor,\r\n\t\t\tNULL, --  AccountBillingAdjustmentGas.CancelFromDate,\r\n\t\t\tNULL, --  AccountBillingAdjustmentGas.CancelToDate,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.CancelTotalCCF,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.CancelTotalTherms,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.CancelThermsFactor,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.CancelBillingDays,\r\n\t\t\t[dbo].[ConvertDatetimeToYYYYMMDD](GETDATE()), --  AccountBillingAdjustmentGas.ProcessEffectiveDate,\r\n\t\t\t'N', --  AccountBillingAdjustmentGas.DerivedFromSpannedBill,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedBillingPeriodRevision,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedFirstCanceledBillingPeriod,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedBilledAmount,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedCCF,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedThermFactor,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedTherm,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedMonthlyPercentage,\r\n\t\t\t0, --  AccountBillingAdjustmentGas.SpannedTotalPercentage,\r\n\t\t\t'No Account Billing record, Revision: '\r\n\t\t\t+ MeterBillingAdjustmentGas.BillingPeriodRevision + ' Current: '\r\n\t\t\t+ @BillingPeriod + '  CCF ('\r\n\t\t\t+ CAST(MeterBillingAdjustmentGas.Ccf AS VARCHAR(12))\r\n\t\t\t+ ')  ThermsFactor ('\r\n\t\t\t+ CAST(MeterBillingAdjustmentGas.ThermsFactor AS VARCHAR(12))\r\n\t\t\t+ ')   Therms ('\r\n\t\t\t+ CAST(MeterBillingAdjustmentGas.Therms AS VARCHAR(12)) + ')', --  AccountBillingAdjustmentGas.Notes\r\n\t\t\t1 -- AuthenticatedUserID\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas AS AccountBillingAdjustmentGas\r\n\t\t\tRIGHT JOIN NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\t\t\tAS MeterBillingAdjustmentGas \r\n\t\t\tON \r\n\t\t\t\tAccountBillingAdjustmentGas.OriginalAccountNumber = MeterBillingAdjustmentGas.OriginalAccountNumber\r\n\t\t\t\tAND AccountBillingAdjustmentGas.BillingPeriod = MeterBillingAdjustmentGas.BillingPeriod\r\n\t\t\t\tAND AccountBillingAdjustmentGas.BillingPeriodRevision = MeterBillingAdjustmentGas.BillingPeriodRevision\r\n\tWHERE   ( AccountBillingAdjustmentGas.UploadLegacyKeyspanWestAccountBillingAdjustmentGasSeqid IS NULL ) \r\n\r\n\t-- Adjust NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas with information from the NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t-- that is to used in the Gas.UploadConEdisonMeterBillingAdjustmentGas.  Eventually, it be inserted into the Billing.MeterBilling and\r\n\t-- Billing.MeterBillingGas.  Grab BillCreationDate from the Common.UploadCycleParameters table.\r\n\tUPDATE    NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tSET              \r\n\t\t\tBillCreationDate =Common.UploadCycleParameters.BillCreationDate , \r\n\t\t\tEnergySource =NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.EnergySource, \r\n\t\t\tLastPeriodModified =NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.LastPeriodModified, \r\n\t\t\tBillingCycle =NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingCycle, \r\n\t\t\tSalesType =NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.SalesType, \r\n\t\t\tIsTimeOfDayAccount ='N',-- Electricity only \r\n\t\t\tUtilityServiceAddress =NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.ServiceAddress\r\n\tFROM \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas INNER JOIN\r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas ON \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.AccountUtilityCompanySeqid = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.AccountUtilityCompanySeqid\r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.OriginalAccountNumber\r\n\t\t\tAND NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriod = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod AND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriodRevision = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision\r\n\t\t\tAND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.AccountBilled = NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.AdjustedAccount INNER JOIN\r\n\t\t\tCommon.UploadCycleParameters ON \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod = Common.UploadCycleParameters.BillingPeriod AND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.AccountUtilityCompanySeqid = Common.UploadCycleParameters.UtilityCompanySeqid AND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.CurrentInvoiceAccountBillingGroup = Common.UploadCycleParameters.InvoiceAccountGroupSeqid\r\n\tWHERE (NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod = @BillingPeriod)\r\n\t\r\n\t-- Adjust NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas with information from the NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t-- that is to used in the Gas.UploadConEdisonMeterBillingAdjustmentGas.  Eventually, it be inserted into the Billing.MeterBilling and\r\n\t-- Billing.MeterBillingGas.  Grab MeterDials from the Billing.Meter.\r\n\tUPDATE  NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas\r\n\tSET     MeterDials =Billing.Meter.MeterDials\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas INNER JOIN\r\n\t\t\tBilling.Meter ON NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.MeterBilled = Billing.Meter.MeterSeqid AND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalAccountNumber = Billing.Meter.OriginalAccountNumber AND \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.OriginalMeterNumber = Billing.Meter.CurrentMeterNumber\r\n\tWHERE   (NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas.BillingPeriod = @BillingPeriod)                      \r\n\t\r\n\t/*=============================\r\n\t5. Set the discount amount for each of record in adjustment gas\r\n\t===============================*/\r\n\t\r\n\t/*\r\n\t\t5.1 set discount amount for original bill (billingPeriod = billingPeriodRevision)\r\n\t*/ \r\n\t\r\n\tDECLARE @discountRate AS dbo.DiscountPercentage;\r\n\t\r\n\t-- get discount rate = totalDiscountedAmount / original billed amount\r\n\tSET @discountRate = @TotalDiscountedAmount / (SELECT SUM(RevisedBilledAmount) \r\n\t\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t\tWHERE BillingPeriod = BillingPeriodRevision)\r\n\t\r\n\t-- set discounted amount and discount percentage \t\t\r\n\t UPDATE NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t SET    DiscountedAmount = ROUND(RevisedBilledAmount * @discountRate, 2),\r\n\t\t\tDiscountPercentage = @discountRate\r\n\t WHERE  BillingPeriod = BillingPeriodRevision;\r\n\t\r\n\t-- add the rounding error amount to the biggest discount amount\r\n\tDECLARE @RoundAmountError AS MONEY;\r\n\t\r\n\tSET @RoundAmountError =  @TotalDiscountedAmount - (SELECT SUM(DiscountedAmount) \r\n\t\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas \r\n\t\tWHERE BillingPeriod = BillingPeriodRevision);\t\t\r\n\t\t\r\n\tUPDATE NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\tSET DiscountedAmount = DiscountedAmount + @RoundAmountError\r\n\tWHERE UploadLegacyKeyspanWestAccountBillingAdjustmentGasSeqid \r\n\t\t= (SELECT MAX(UploadLegacyKeyspanWestAccountBillingAdjustmentGasSeqid)\r\n\t\t\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas\r\n\t\t\tWHERE \r\n\t\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod \r\n\t\t\t= NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision\r\n\t\t\tAND\r\n\t\t\tDiscountedAmount = \r\n\t\t\t (SELECT max(DiscountedAmount) \r\n\t\t\t FROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas \r\n\t\t\t WHERE NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriod \r\n\t\t\t\t= NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas.BillingPeriodRevision)\r\n\t\t)\r\n\t\r\n\t/*\r\n\t\t5.2 set discount amount for adjustment (billingPeriod <> billingPeriodRevision)\r\n\t*/\r\n\tUPDATE UG\r\n\tSET \r\n\t\tUG.DiscountedAmount = AG.DiscountedAmount,\r\n\t\tUG.DiscountPercentage =  AG.DiscountPercentage\r\n\tFROM\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas AS UG\r\n\t\tINNER JOIN Billing.AccountBillingAdjustmentGas AS AG ON \r\n\t\tUG.OriginalAccountNumber = AG.OriginalAccountNumber\r\n\t\tAND UG.BillingPeriodRevision = AG.BillingPeriodRevision\r\n\tWHERE UG.BillingPeriod <> UG.BillingPeriodRevision;\r\n\t\r\n\t/*=============================\r\n\t6. Set the facility name if facilityName is null\r\n\t===============================*/\r\n\t\r\n\tUPDATE g \r\n\tSET g.FacilityName = f.FacilityName\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeterBillingAdjustmentGas AS g \r\n\t\tINNER JOIN Billing.Account AS a ON g.OriginalAccountNumber = a.OriginalAccountNumber\r\n\t\tINNER JOIN Billing.Facility AS f ON a.FacilityAccount = f.FacilitySeqid\r\n\tWHERE g.FacilityName IS NULL;\r\n\r\n\r\n\tUPDATE g \r\n\tSET g.FacilityName = f.FacilityName\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestAccountBillingAdjustmentGas AS g \r\n\t\tINNER JOIN Billing.Account AS a ON g.OriginalAccountNumber = a.OriginalAccountNumber\r\n\t\tINNER JOIN Billing.Facility AS f ON a.FacilityAccount = f.FacilitySeqid\r\n\tWHERE g.FacilityName IS NULL;\r\nEND;"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ConEd",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Upload_19_helper_FixServiceClassificationDiscrepancy",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Upload_19_helper_FixServiceClassificationDiscrepancy",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to automate the process of resolving discrepancies in service classification at the account level for Con Edison. It performs several tasks, including identifying discrepancies, updating account information with new tariff rates, and ensuring that the changes are reflected in the database. The procedure also manages temporary data and provides a view for common usage."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple SQL operations, including "
                },
                {
                  "type": "text",
                  "text": "INSERT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "UPDATE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "SELECT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses temporary tables and joins across several tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic and data aggregation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It interacts with multiple entities within the database schema."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure does not take any input parameters directly. However, it uses internal variables:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CurrentInvoiceAccountGroup",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Initialized to 2, used to filter and identify the relevant account group."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UtilityCompanySeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Initialized to 9, used to filter records related to a specific utility company."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A variable to store the billing period, which is dynamically set during execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Identify Discrepancies",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts records into "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountLevelServiceClassificationDiscrepancy",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for accounts where there is a mismatch between the uploaded tariff code and the existing delivery tariff rate."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Retrieve Billing Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Selects the billing period from "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonAccount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and assigns it to "
                        },
                        {
                          "type": "text",
                          "text": "@BillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Accounts",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with new tariff rate information for accounts identified with discrepancies."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Mark Accounts as Updated",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountLevelServiceClassificationDiscrepancy",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to mark accounts as updated."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Manage Temporary Data",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Drops and recreates a temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#MinFromDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to store the minimum "
                        },
                        {
                          "type": "text",
                          "text": "FromDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for each account."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Tariff Effective Dates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with new tariff effective dates based on the data in "
                        },
                        {
                          "type": "text",
                          "text": "#MinFromDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Provide Common View",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Selects data from a common view "
                        },
                        {
                          "type": "text",
                          "text": "Common.uvw_AccountLevelServiceClassificationDiscrepancyCorrectionFromUploadData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for further analysis or reporting."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved in joins and where clauses have appropriate indexes to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table ("
                },
                {
                  "type": "text",
                  "text": "#MinFromDate",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can be resource-intensive if the dataset is large. Consider evaluating the necessity and optimizing its usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates multiple tables, which could lead to locking issues in a high-concurrency environment."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the dataset is large, consider processing in batches to reduce transaction size and improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the data in "
                },
                {
                  "type": "text",
                  "text": "ConEd.UploadConEdisonAccount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is accurate and complete. Any discrepancies in this data could lead to incorrect updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of the procedure may degrade, especially with the use of temporary tables and multiple joins."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values (e.g., "
                },
                {
                  "type": "text",
                  "text": "@CurrentInvoiceAccountGroup = 2",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "@UtilityCompanySeqid = 9",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") reduces flexibility and may require changes if business rules evolve."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE   PROCEDURE [ConEd].[usp_Upload_19_helper_FixServiceClassificationDiscrepancy]\nAS\r\n--**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  Automate the account level service classification discrepancy for con edison.\r\n--*\r\n--*\t\t\t1. Identify current period Account Level Service Classification Discrepancies\r\n--\t\t\t2. Get the BillingPeriod from ConEd.UploadConEdisonAccount\r\n--\t\t\t3. Update account with new UtilityTariffRateInformation\r\n--\t\t\t4. Update AccountLevelServiceClassificationDiscrepancy with AccountIsUpdated = 'Y' for all of the accounts that were changed.\r\n--\t\t\t5. Drop temp table #MinFromDate if it exists and recreate it\r\n--\t\t\t6. Update account with new Tariff Effective Date from upload data based upon the minimum from date of the billing\r\n--\t\t\t7. A view for common usage.\r\n--*               \r\n--* Exec:       \t\t[ConEd].[usp_ConEdAccountLevelServiceClassificationDiscrepancy]\r\n--*\r\n--* Parameter(s):         @Status int output\r\n--*\r\n--*\r\n--* Return:\t    0 Success\r\n--*                   9 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   08/16/2011\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 08/16/2011 PAH  First Version \r\n--**************************************************************************************\r\n\r\n--**************************************************************************************\r\n--Declare Variables\r\n--**************************************************************************************\r\n--\r\ndeclare @CurrentInvoiceAccountGroup int = 2\r\ndeclare @UtilityCompanySeqid int = 9\r\ndeclare @BillingPeriod varchar(6)\r\n\r\n--**************************************************************************************\r\n--Main Process\r\n--**************************************************************************************\r\nBEGIN\r\n--\r\n--\t\t\t1. Identify current period Account Level Service Classification Discrepancies\r\n--\r\ninsert  into  Billing.AccountLevelServiceClassificationDiscrepancy\r\n\t\t(CurrentInvoiceAccountGroup,UtilityTariffRateInformationSeqid, BillingPeriod, CurrentAccountNumber, AccountSeqid, \r\n\t\tUtilityServiceAddress, UtilityCompanyShortDesc, AgencyCodeOEC, AgencyShortDesc, OecFacilityNumber, FacilityName, Address1, \r\n\t\tBudgetRateClassDescription, Description, ShortDesc, AccountStatus, AccountStatusCodePeriod, IsTimeOfDayAccount, DeliveryTariffRate, TariffCode, \r\n\t\tUtilityCompanySeqid, IsTOD, AuthenticatedUserID, Notes, DateAdded, LastUpdate)\r\n--\r\nSELECT distinct\t\t\r\n\t\tBilling.Account.CurrentInvoiceAccountGroup,Billing.Account.UtilityTariffRateInformationSeqid,ConEd.UploadConEdisonAccount.BillingPeriod,   Billing.Account.CurrentAccountNumber, Billing.Account.AccountSeqid, Billing.Account.UtilityServiceAddress, Billing.UtilityCompany.ShortDesc AS UtilityCompanyShortDesc, \r\n\t\tBilling.AgencyDivision.AgencyCodeOEC, Billing.AgencyDivision.AgencyShortDesc, Billing.Facility.OecFacilityNumber, Billing.Facility.FacilityName, \r\n\t\tBilling.Facility.Address1, Billing.UtilityTariffRateInformation.BudgetRateClassDescription, Billing.UtilityTariffRateInformation.Description, \r\n\t\tBilling.UtilityTariffRateInformation.ShortDesc, Billing.Account.AccountStatus, Billing.Account.AccountStatusCodePeriod, Billing.Account.IsTimeOfDayAccount, \r\n\t\tBilling.UtilityTariffRateInformation.DeliveryTariffRate, ConEd.UploadConEdisonAccount.TariffCode, 9 AS UtilityCompanySeqid, 'N' AS IsTOD,\r\n\t\t1,null,getdate(),getdate()\r\nFROM \r\n\t\tBilling.Account INNER JOIN\r\n\t\tConEd.UploadConEdisonAccount ON Billing.Account.CurrentAccountNumber = ConEd.UploadConEdisonAccount.AccountNumber INNER JOIN\r\n\t\tBilling.UtilityTariffRateInformation ON \r\n\t\tBilling.UtilityTariffRateInformation.UtilityTariffRateInformationSeqid = Billing.Account.UtilityTariffRateInformationSeqid AND \r\n\t\tConEd.UploadConEdisonAccount.TariffCode <> Billing.UtilityTariffRateInformation.DeliveryTariffRate INNER JOIN\r\n\t\tBilling.AgencyDivision ON Billing.Account.AgencyAccount = Billing.AgencyDivision.AgencyDivisionSeqid INNER JOIN\r\n\t\tBilling.Facility ON Billing.Account.FacilityAccount = Billing.Facility.FacilitySeqid INNER JOIN\r\n\t\tBilling.UtilityCompany ON Billing.Account.UtilityAccountProvider = Billing.UtilityCompany.UtilityCompanySeqid AND \r\n\t\tBilling.UtilityTariffRateInformation.UtilityCompanyTariff = Billing.UtilityCompany.UtilityCompanySeqid AND \r\n\t\tBilling.UtilityTariffRateInformation.UtilityCompanyTariff = Billing.UtilityCompany.UtilityCompanySeqid\r\nWHERE \r\n\t\t(Billing.Account.CurrentInvoiceAccountGroup = 2) AND \r\n\t\t(Billing.Account.AccountStatus NOT IN ('AX'))\r\n--\r\n--\t\t\t2. Get the BillingPeriod from ConEd.UploadConEdisonAccount\r\n--\r\nSELECT  top 1   @BillingPeriod = BillingPeriod from ConEd.UploadConEdisonAccount\r\n--\r\n--\t\t\t3. Update account with new UtilityTariffRateInformation\r\n--\r\nUPDATE    Billing.Account\r\nSET              \r\n\t\tUtilityTariffRateInformationSeqid =Billing.UtilityTariffRateInformation.UtilityTariffRateInformationSeqid, \r\n\t\tIsTimeOfDayAccount =Billing.UtilityTariffRateInformation.IsTod, \r\n\t\tDeliveryTariffRate =Billing.UtilityTariffRateInformation.DeliveryTariffRate, \r\n\t\tCommodityTariffRate =Billing.UtilityTariffRateInformation.DeliveryTariffRate, \r\n\t\tAccountStatusCodePeriod = @BillingPeriod, \r\n\t\tFireAuditTrigger = 'Y', \r\n\t\tNotes = 'Automated Service Classification update', \r\n\t\tAuthenticatedUserID = 1, \r\n\t\tLastUpdate = GETDATE()\r\nFROM \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy INNER JOIN\r\n\t\tBilling.Account ON Billing.AccountLevelServiceClassificationDiscrepancy.AccountSeqid = Billing.Account.AccountSeqid INNER JOIN\r\n\t\tBilling.UtilityTariffRateInformation ON \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.TariffCode = Billing.UtilityTariffRateInformation.DeliveryTariffRate AND \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.UtilityCompanySeqid = Billing.UtilityTariffRateInformation.UtilityCompanyTariff AND \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.IsTOD = Billing.UtilityTariffRateInformation.IsTod\r\nWHERE \r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.BillingPeriod = @BillingPeriod) AND \r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.CurrentInvoiceAccountGroup = @CurrentInvoiceAccountGroup) and\r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.AccountIsUpdated = 'N')\r\n--\r\n--\t\t\t4. Update AccountLevelServiceClassificationDiscrepancy with AccountIsUpdated = 'Y' for all of the accounts that were changed.\r\n--\r\n\t\r\nupdate\tBilling.AccountLevelServiceClassificationDiscrepancy\r\nSET              \r\n\t\tAccountIsUpdated = 'Y',\r\n\t\tDeliveryTariffRateExistsInEC3 = 'Y'\r\nFROM \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy INNER JOIN\r\n\t\tBilling.Account ON Billing.AccountLevelServiceClassificationDiscrepancy.AccountSeqid = Billing.Account.AccountSeqid INNER JOIN\r\n\t\tBilling.UtilityTariffRateInformation ON \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.TariffCode = Billing.UtilityTariffRateInformation.DeliveryTariffRate AND \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.UtilityCompanySeqid = Billing.UtilityTariffRateInformation.UtilityCompanyTariff AND \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.IsTOD = Billing.UtilityTariffRateInformation.IsTod\r\nWHERE \r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.BillingPeriod = @BillingPeriod) AND \r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.CurrentInvoiceAccountGroup = @CurrentInvoiceAccountGroup) and\r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.AccountIsUpdated = 'N')\r\n--\r\n--\t\t\t5. Drop temp table #MinFromDate if it exists and recreate it\r\n--\r\nIF OBJECT_ID('tempdb..#MinFromDate') IS NOT NULL DROP TABLE #MinFromDate\r\n--\r\nSELECT  \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.CurrentInvoiceAccountGroup,\r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.BillingPeriod,   \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.CurrentAccountNumber, \r\n\t\tConEd.UploadConEdisonAccount.AccountNumber,\r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.AccountSeqid,\r\n\t\tmin(ConEd.UploadConEdisonAccount.FromDate) as DeliveryTariffEffectiveDate,\r\n\t\tAccountIsUpdated,\r\n\t\tDeliveryTariffRateExistsInEC3\r\n\t\r\ninto\t#MinFromDate\r\nFROM \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy INNER JOIN\r\n\t\tConEd.UploadConEdisonAccount ON \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.BillingPeriod = ConEd.UploadConEdisonAccount.BillingPeriod AND \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.CurrentAccountNumber = ConEd.UploadConEdisonAccount.AccountNumber\r\nwhere\r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.BillingPeriod = @BillingPeriod) and\r\n\t\t(Billing.AccountLevelServiceClassificationDiscrepancy.CurrentInvoiceAccountGroup = @CurrentInvoiceAccountGroup)\t\t\r\ngroup by \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.CurrentInvoiceAccountGroup,\r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.BillingPeriod,   \r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.CurrentAccountNumber, \r\n\t\tConEd.UploadConEdisonAccount.AccountNumber,\r\n\t\tBilling.AccountLevelServiceClassificationDiscrepancy.AccountSeqid,\r\n\t\tAccountIsUpdated,\r\n\t\tDeliveryTariffRateExistsInEC3\r\n--\r\n--\t\t\t6. Update account with new Tariff Effective Date from upload data based upon the minimum from date of the billing\r\n--\r\nUPDATE    Billing.Account\r\nSET              \r\n\t\tDeliveryTariffEffectiveDate = [#MinFromDate].DeliveryTariffEffectiveDate, \r\n\t\tCommodityTariffEffectiveDate =[#MinFromDate].DeliveryTariffEffectiveDate\r\nFROM \r\n\t\t[#MinFromDate] INNER JOIN\r\n\t\tBilling.Account ON [#MinFromDate].AccountSeqid = Billing.Account.AccountSeqid\r\nWHERE \r\n\t\t([#MinFromDate].AccountIsUpdated = 'Y') AND \r\n\t\t([#MinFromDate].DeliveryTariffRateExistsInEC3 = 'Y')\r\n--\r\n--\t\t\t7. Common view.\r\n--\r\nSELECT * \r\nFROM Common.uvw_AccountLevelServiceClassificationDiscrepancyCorrectionFromUploadData vw\r\nWHERE \r\n\t\t(vw.BillingPeriod = @BillingPeriod) AND \r\n\t\t(vw.CurrentInvoiceAccountGroup = @CurrentInvoiceAccountGroup)\r\n--\r\nEND"
        }
      ]
    }
  ]
}
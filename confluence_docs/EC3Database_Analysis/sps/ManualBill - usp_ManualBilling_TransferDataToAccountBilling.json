{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ManualBill",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ManualBilling_TransferDataToAccountBilling",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ManualBilling_TransferDataToAccountBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to handle the transfer and update of billing data from a manual billing upload process into the main billing tables within a Microsoft SQL Server database. It processes billing adjustments and original bills, updating or inserting records into "
        },
        {
          "type": "text",
          "text": "AccountBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", "
        },
        {
          "type": "text",
          "text": "AccountBillingAdjustmentPaperBill",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", and "
        },
        {
          "type": "text",
          "text": "AccountBillingPaperBill",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " tables. The procedure ensures that billing data is accurately reflected in the system, maintaining referential integrity and updating necessary fields based on the billing period and utility company."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to its extensive logic for handling billing adjustments, multiple table updates, and inserts. It involves conditional logic, joins, and subqueries, making it intricate to understand and maintain. The procedure also includes historical updates and modifications, adding to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the data transfer is being processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@authenticatedID AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ID of the authenticated user executing the procedure, used for auditing purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@utilityCompany AS dbo.seqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The unique identifier for the utility company associated with the billing data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Status AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter used to indicate the status of the procedure execution (e.g., success or failure)."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Sets the initial status to 9, indicating the start of the process."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Inserts new original and adjustment records into "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentPaperBill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " from "
                },
                {
                  "type": "text",
                  "text": "UploadManualBillingAccountAdjustment",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates existing records in "
                },
                {
                  "type": "text",
                  "text": "AccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "AccountBillingPaperBill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with new information from "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentPaperBill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Inserts",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Checks if there are unprocessed records and inserts them into "
                },
                {
                  "type": "text",
                  "text": "AccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "AccountBillingPaperBill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " if necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Referential Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates sequence IDs to maintain referential integrity between "
                },
                {
                  "type": "text",
                  "text": "AccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "AccountBillingPaperBill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentPaperBill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Finalization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Sets the status to 0 upon successful completion."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved have appropriate indexes to optimize join operations and WHERE clause conditions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider processing large data sets in batches to reduce transaction size and lock contention."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may lock tables for extended periods, potentially impacting concurrent operations. Implementing row-level locking or using snapshot isolation could mitigate this."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Plan",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Regularly review and optimize the execution plan to ensure efficient query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that data in "
                },
                {
                  "type": "text",
                  "text": "UploadManualBillingAccountAdjustment",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is accurate and complete. Any discrepancies could lead to incorrect billing records."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency Conflicts",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Simultaneous execution of this procedure by multiple users could lead to deadlocks or data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could result in unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of billing data grows, the procedure may become a performance bottleneck without optimization."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity and historical modifications make the procedure challenging to maintain and extend. Regular code reviews and documentation updates are necessary."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--****************************************************************************************************************************************************************************\n--\tAuthor: MOHAMMED BELARREM\r\n-- Description: \r\n--\tNotes:\t\t\r\n--\tLog: \r\n--\tCreation 02/XX/2009\r\n--\tUpdate   08/04/2009 MOH : I updated the section that inserts the AccountBilling records to reflect the correct OriginalBilledAmount and OriginalBilledAmountPaid\r\n--\t\t\t\t\t\t  this was necessary after the new credit changes to the other upload processing procedures \r\n--\tUpdate   01/13/2010 MOH : I changes AccountStatus to AccountBillingStatus \r\n--\tUpdate   03/03/2010 MOH : added ActualOrEstimated, NetDollarChange, NetEnergyUsageChange and NetDemandUsageChange to the AccountBilling table and had to include the changes \r\n--\tUpdate   03/22/2010 MOH : added the following fields LatePaymentAmount, CreditTransfer and PreviousAccountBalance\r\n--\tUpdate   10/29/2010 MOH : added FireAuditTrigger to the tables\r\n--\tUpdate   07/01/2011 MOH : added the logic to handle ManualPaymentOverrideAmount based on summary or nun summary\r\n--\t\t\t\t\t\t\t\tif invoice is summary ManualPaymentOverrideAmount = ManualPaymentOverrideAmount ( as operator entered it)\r\n--\t\t\t\t\t\t\t\tif invoice is not summary and if ManualPaymentOverrideAmount <= 0 then ManualPaymentOverrideAmount = 0\r\n--\t\t\t\t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ManualPaymentOverrideAmount = Revised + netPaidAdjustment\r\n--\tUpdate\t 07/06/2011\tMOH\t: added taxt field to the adjutment and AccountBillingPaperBill tables. this should help isolate taxes\r\n--\tUpdate\t 09/09/2011\tMOH\t: revised the ManualPaymentOverrideAmount to follow the following logic\r\n--\t\t\t\t\t\t\t  if  the insert is an adjustment ( or backbill)\t\t\t\t\t\t\t\tthen ManualPaymentOverrideAmount = 0\r\n--\t\t\t\t\t\t\t  else \r\n--\t\t\t\t\t\t\t\t\twhen  ( SummaryBilling = 'Y' )\t\t\t\t\t\t\t\t\t\t\tthen ManualPaymentOverrideAmount = ManualPaymentOverrideAmount (from the sum of the actual bills)\r\n--\t\t\t\t\t\t\t\t\twhen  ( SummaryBilling = 'N' and ( ManualPaymentOverrideAmount <= 0 ))\tthen 0\r\n--\t\t\t\t\t\t\t\t\twhen  ( SummaryBilling = 'N' and ( ManualPaymentOverrideAmount > 0 ))\tthen TotalAmountDue  \r\n--\r\n--*\tUPDATE\t2017-08-11\tZD\t\t[usp_UpdateUniqueSeqIDsForAllTables] SP is added at the end of the process\r\n--     UPDATE  2019-01-18  VYupdated for UniqueAccountSeqID\r\n--**************************************************************************************************************************************************************************** \r\nCREATE PROCEDURE [ManualBill].[usp_ManualBilling_TransferDataToAccountBilling] \r\n(\r\n\t@BillingPeriod AS VARCHAR(6),\r\n\t@authenticatedID AS INT,\r\n\t@utilityCompany AS dbo.seqid,\r\n\t@Status AS INT  OUTPUT\r\n)\r\nAS \r\nBEGIN\r\n\tSET @Status = 9;\r\n \r\n\t--***************************************************************************************************\r\n\t-- we need to insert some sort of validation to make sure that these same accounts werent processed\r\n\t-- or rather, these same bills, since the same account can have multiple bills within the same period\r\n\t--***************************************************************************************************\r\n\t\r\n\t/************************************************************************************************\r\n\t1. Insert all new originals and adjustments into AccountBillingAdjustmentPaperBill\r\n\t*************************************************************************************************/\r\n\tINSERT INTO [Billing].[AccountBillingAdjustmentPaperBill]\r\n\t\t([UploadManualBillingAccountAdjustmentSeqid]\r\n\t\t,[AccountSeqid]\r\n\t\t,[UniqueAccountSeqId] /* added on 1/18/2019 */\r\n\t\t,[AccountBillingSeqid]\r\n\t\t,[AccountBillingPaperBillSeqid]\r\n\t\t,[UtilityCompanySeqid]\r\n\t\t,[InvoiceAccountGroupSeqid]\r\n\t\t,[OriginalAccountNumber]\r\n\t\t,[FacilityName]\r\n\t\t,[ServiceAddress]\r\n\t\t,[BillingPeriod]\r\n\t\t,[BillingPeriodRevision]\r\n\t\t,[AccountBillingStatus]\r\n\t\t,[AccountBillingpreviousStatus]\r\n\t\t,[AccountBillingStatusPeriod]\r\n\t\t,[NumberOfTransactions]\r\n\t\t,[NumberOfRebillTransactions]\r\n\t\t,[NumberOfCancelTransactions]\r\n\t\t,[FirstCanceledBillingPeriod]\r\n\t\t,[EstimatedOrActualBilling]\r\n\t\t,[InitialCancelFromDate]\r\n\t\t,[CurrentBillingToDate]\r\n\t\t,[NumberOfBillingPeriods]\r\n\t\t,[TotalBillingDaysRebilled]\r\n\t\t,[TotalRebilledAmount]\r\n\t\t,[TotalCanceledAmount]\r\n\t\t,[PriorRevisedBilledAmount]\r\n\t\t,[RevisedBilledAmount]\r\n\t\t,[CanceledBilledAmount]\r\n\t\t,[PriorRevisedCCF]\r\n\t\t,[RevisedCCF]\r\n\t\t,[CanceledCCF]\r\n\t\t,[PriorRevisedEnergy]\r\n\t\t,[RevisedEnergy]\r\n\t\t,[CanceledEnergy]\r\n\t\t,[PriorRevisedDemand]\r\n\t\t,[RevisedDemand]\r\n\t\t,[CanceledDemand]\r\n\t\t,[BillingDays]\r\n\t\t,[BillingDate]\r\n\t\t,[ToDate]\r\n\t\t,[FromDate]\r\n\t\t,[BillingAction]\r\n\t\t,[ProcessedInTheCurrentPeriod]\r\n\t\t,[CommodityRate]\r\n\t\t,[TotalCCF]\r\n\t\t,[TotalEnergy]\r\n\t\t,[TotalDemand]\r\n\t\t,[ThermsFactor]\r\n\t\t,[CancelFromDate]\r\n\t\t,[CancelToDate]\r\n\t\t,[CancelTotalCCF]\r\n\t\t,[CancelTotalEnergy]\r\n\t\t,[CancelTotalDemand]\r\n\t\t,[CancelThermsFactor]\r\n\t\t,[CancelBillingDays]\r\n\t\t,[ProcessEffectiveDate]\r\n\t\t,[DerivedFromSpannedBill]\r\n\t\t,[SpannedBillingPeriodRevision]\r\n\t\t,[SpannedFirstCanceledBillingPeriod]\r\n\t\t,[SpannedBilledAmount]\r\n\t\t,[SpannedEnergy]\r\n\t\t,[SpannedDemand]\r\n\t\t,[SpannedCCF]\r\n\t\t,[SpannedThermFactor]\r\n\t\t,[SpannedMonthlyPercentage]\r\n\t\t,[SpannedTotalPercentage]\r\n\t\t,[BillCreationDate]\r\n\t\t,[PostMarkDate]\r\n\t\t,[DatePaymentDue]\r\n\t\t,[DateAcceptanceIntoOEC]\r\n\t\t,[billingCycle]\r\n\t\t,[SalesType]\r\n\t\t,[PaidAdjustmentAmount]\r\n\t\t,[EnergySource]\r\n\t\t,[LastPeriodModified]\r\n\t\t,[IsTimeOfDayAccount]\r\n\t\t,[ManualDataEntry]\r\n\t\t,[ManualPaymentOverride]\r\n\t\t,[ManualPaymentOverrideAmount]\r\n\t\t,[DiscountedAmount]\r\n\t\t,[DiscountPercentage]\r\n\t\t,BillTotalAmountDue\r\n\t\t,BillCreditedAmountPaid\r\n\t\t,BillCreditedAmountDate\r\n\t\t,LatePaymentAmount \r\n\t\t,Tax\r\n\t\t,CreditTransfer\r\n\t\t,PreviousAccountBalance\r\n\t\t,[Notes]\r\n\t\t,FireAuditTrigger\r\n\t\t,[AuthenticatedUserID]\r\n\t\t,[DateAdded]\r\n\t\t,[LastUpdate])\r\n\tSELECT\r\n\t\t[UploadManualBillingAccountAdjustmentSeqid]\r\n\t\t,[AccountSeqid]\r\n\t\t,[UniqueAccountSeqID] /* added on 1/18/2019 */\r\n\t\t,[AccountBillingSeqid]\r\n\t\t,[AccountBillingPaperBillSeqid]\r\n\t\t,[UtilityCompanySeqid]\r\n\t\t,[InvoiceAccountGroupSeqid]\r\n\t\t,[OriginalAccountNumber]\r\n\t\t,[FacilityName]\t\t\t\t\t\t---\t[FacilityName]\r\n\t\t,[ServiceAddress]\t\t\t\t\t---\t[ServiceAddress]\r\n\t\t,[BillingPeriod]\t\t\t\t\t\t--- [BillingPeriod]\r\n\t\t,[BillingPeriodRevision]\t\t\t\t---\t[BillingPeriodRevision]\r\n\t\t,[AccountBillingStatus]\t\t\t\t---\t[AccountBillingStatus]\r\n\t\t,[AccountBillingpreviousStatus]\t\t---\t[AccountBillingpreviousStatus]\r\n\t\t,[AccountBillingStatusPeriod]\t\t---\t[AccountBillingStatusPeriod]\r\n\t\t,[NumberOfTransactions]\t\t\t\t---\t[NumberOfTransactions]\r\n\t\t,[NumberOfRebillTransactions]\t\t---\t[NumberOfRebillTransactions]\r\n\t\t,[NumberOfCancelTransactions]\t\t---\t[NumberOfCancelTransactions]\r\n\t\t,[BillingPeriodRevision]\t\t\t\t---\t[FirstCanceledBillingPeriod]\r\n\t\t,[EstimatedOrActual]\t\t\t\t\t---\t[EstimatedOrActualBilling]\r\n\t\t,[InitialCancelFromDate]\t\t\t\t---\t[InitialCancelFromDate]\r\n\t\t,[CurrentBillingToDate]\t\t\t\t---\t[CurrentBillingToDate]\r\n\t\t,[NumberOfBillingPeriods]\t\t\t---\t[NumberOfBillingPeriods]\r\n\t\t,[TotalBillingDaysRebilled]\t---\t[TotalBillingDaysRebilled]\r\n\t\t,TotalRebilledAmount\t\t\t\t\t---\t[TotalRebilledAmount]\r\n\t\t,TotalCanceledAmount\t\t\t\t\t---\t[TotalCanceledAmount]\r\n\t\t,PriorRevisedBilledAmount\t\t\t---\t[PriorRevisedBilledAmount]\r\n\t\t,RevisedBilledAmount\t\t\t\t\t---\t[RevisedBilledAmount]\r\n\t\t,CanceledBilledAmount\t\t\t\t---\t[CanceledBilledAmount]\r\n\t\t,PriorRevisedCCF\t\t\t\t\t\t---\t[PriorRevisedCCF]\r\n\t\t,RevisedCCF\t\t\t\t\t\t\t---\t[RevisedCCF]\r\n\t\t,CanceledCCF\t\t\t\t\t\t\t---\t[CanceledCCF]\r\n\t\t,PriorRevisedEnergy\t\t\t\t\t---\t[PriorRevisedEnergy]\r\n\t\t,RevisedEnergy\t\t\t\t\t\t---\t[RevisedEnergy]\r\n\t\t,CanceledEnergy\t\t\t\t\t\t---\t[CanceledEnergy]\r\n\t\t,PriorRevisedDemand\t\t\t\t\t---\t[PriorRevisedDemand]\r\n\t\t,RevisedDemand\t\t\t\t\t\t---\t[RevisedDemand]\r\n\t\t,CanceledDemand\t\t\t\t\t\t---\t[CanceledDemand]\r\n\t\t,BillingDays\t\t\t\t\t\t\t---\t[BillingDays]\r\n\t\t,BillingDate\t\t\t\t\t\t\t---\t[BillingDate]\r\n\t\t,ToDate\t\t\t\t\t\t\t\t---\t[ToDate]\r\n\t\t,FromDate\t\t\t\t\t\t\t---\t[FromDate]\r\n\t\t,BillingAction\t\t\t\t\t\t---\t[BillingAction]\r\n\t\t,ProcessedInTheCurrentPeriod\t\t\t---\t[ProcessedInTheCurrentPeriod]\r\n\t\t,null\t\t\t\t\t\t\t\t---\t[CommodityRate]\r\n\t\t,TotalCCF\t\t\t\t\t\t\t---\t[TotalCCF]\r\n\t\t,TotalEnergy\t\t\t\t\t\t\t---\t[TotalEnergy]\r\n\t\t,TotalDemand\t\t\t\t\t\t\t---\t[TotalDemand]\r\n\t\t,ThermsFactor\t\t\t\t\t\t---\t[ThermsFactor]\r\n\t\t,CancelFromDate\t\t\t\t\t\t---\t[CancelFromDate]\r\n\t\t,CancelToDate\t\t\t\t\t\t---\t[CancelToDate]\r\n\t\t,CancelTotalCCF\t\t\t\t\t\t---\t[CancelTotalCCF]\r\n\t\t,CancelTotalEnergy\t\t\t\t\t---\t[CancelTotalEnergy]\r\n\t\t,CancelTotalDemand\t\t\t\t\t---\t[CancelTotalDemand]\r\n\t\t,CancelThermsFactor\t\t\t\t\t---\t[CancelThermsFactor]\r\n\t\t,dbo.CalculateNumberOfBillingDays(CancelFromDate, CancelToDate)\t\t\t---\t[CancelBillingDays]\r\n\t\t,ProcessEffectiveDate\t\t\t\t---\t[ProcessEffectiveDate]\r\n\t\t,DerivedFromSpannedBill\t\t\t\t---\t[DerivedFromSpannedBill]\r\n\t\t,SpannedBillingPeriodRevision\t\t---\t[SpannedBillingPeriodRevision]\r\n\t\t,SpannedFirstCanceledBillingPeriod\t---\t[SpannedFirstCanceledBillingPeriod]\r\n\t\t,SpannedBilledAmount\t\t\t\t\t---\t[SpannedBilledAmount]\r\n\t\t,SpannedEnergy\t\t\t\t\t\t---\t[SpannedEnergy]\r\n\t\t,SpannedDemand\t\t\t\t\t\t---\t[SpannedDemand]\r\n\t\t,SpannedCCF\t\t\t\t\t\t\t---\t[SpannedCCF]\r\n\t\t,SpannedThermFactor\t\t\t\t\t---\t[SpannedThermFactor]\r\n\t\t,SpannedMonthlyPercentage\t\t\t---\t[SpannedMonthlyPercentage]\r\n\t\t,SpannedTotalPercentage\t\t\t\t---\t[SpannedTotalPercentage]\r\n\t\t,BillCreationDate\t\t\t\t\t---\t[BillCreationDate]\r\n\t\t,PostMarkDate\t\t\t\t\t\t---\t[PostMarkDate]\r\n\t\t,DatePaymentDue\t\t\t\t\t\t---\t[DatePaymentDue]\r\n\t\t,DateAcceptanceIntoOEC\t\t\t\t---\t[DateAcceptanceIntoOEC]\r\n\t\t,BillingCycle\t\t\t\t\t\t---\t[billingCycle]\r\n\t\t,SalesType\t\t\t\t\t\t\t---\t[SalesType]\r\n\t\t,PaidAdjustmentAmount\t\t\t\t---\t[PaidAdjustmentAmount]\r\n\t\t,EnergySource\t\t\t\t\t\t---\t[EnergySource]\r\n\t\t,BillingPeriod\t\t\t\t\t\t---\t[LastPeriodModified]\r\n\t\t,IsTimeOfDayAccount  \t\t\t\t---\t[IsTimeOfDayAccount]\r\n\t\t,ManualDataEntry\t\t\t\t\t\t---\t[ManualDataEntry]\r\n\t\t,ManualPaymentOverride\t\t\t\t---\t[ManualPaymentOverride]\r\n\t\t,ManualPaymentOverrideAmount\t\t\t---\t[ManualPaymentOverrideAmount]\r\n\t\t,null\t\t\t\t\t\t\t\t---\t[DiscountedAmount]\r\n\t\t,null\t\t\t\t\t\t\t\t---\t[DiscountPercentage]\r\n\t\t,TotalAmountDue\t\t\t\t\t\t--- BillTotalAmountDue\r\n\t\t,CreditedAmountPaid\t\t\t\t\t--- BillCreditedAmountPaid\r\n\t\t,CreditedAmountDate\t\t\t\t\t--- BillCreditedAmountDate\r\n   \t\t,LatePaymentAmount\t\t\t\t\t--- LatePaymentAmount\r\n   \t\t,Tax\t\t\t\t\t\t\t\t\t--- Tax\t\r\n\t\t,TotalCancellationCreditTransfer \t--- CreditTransfer\r\n\t\t,PreviousAccountBalance\t\t\t\t--- PreviousAccountBalance\r\n\t\t,Notes\t\t\t\t\t\t\t\t---\t[Notes]\r\n\t\t,'N'\t\t\t\t\t\t\t\t\t--- FireAuditTrigger\r\n\t\t,@authenticatedID     \t\t\t\t---\t[AuthenticatedUserID]\r\n\t\t,getdate()\t\t\t\t\t\t\t---\t[DateAdded]\r\n\t\t,getdate()\t\t\t\t\t\t\t---\t[LastUpdate])\t \r\n\tFROM ManualBill.UploadManualBillingAccountAdjustment\r\n\r\n\t/************************************************************************************************\r\n\t2. update Billing.AccountBilling with the new information FROM AccountBillingAdjustmentPaperBill\r\n\t*************************************************************************************************/\r\n\tUPDATE  Billing.AccountBilling\r\n\tSET LastPeriodModified\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.BillingPeriod\r\n\t\t,FromDate\t\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.FromDate \r\n\t\t,ToDate\t\t\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.ToDate\r\n\t\t,AccountBillingStatus\t\t\t= Billing.AccountBillingAdjustmentPaperBill.AccountBillingStatus\r\n\t\t,PreviousAccountBillingStatus\t= Billing.AccountBillingAdjustmentPaperBill.AccountBillingpreviousStatus\r\n\t\t,AccountBillingStatusCodePeriod = Billing.AccountBillingAdjustmentPaperBill.AccountBillingStatusPeriod\r\n\t\t,RevisedBilledAmount\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedBilledAmount -- +isnull(Billing.AccountBillingAdjustmentPaperBill.DiscountedAmount,0)\r\n\t\t,AccountEnergyUsage\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedEnergy\r\n\t\t,AccountDemandUsage\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedDemand\r\n\t\t,BillingPeriodDays\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.BillingDays\r\n\t\t,BillingAction\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.BillingAction\r\n\t\t,UploadFileSeqid\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.AccountBillingAdjustmentPaperBillSeqid\r\n\t\t,SplitFiscalYear\t\t\t\t= dbo.IsFiscalYearSplit(Billing.AccountBillingAdjustmentPaperBill.FromDate, Billing.AccountBillingAdjustmentPaperBill.ToDate)\r\n\t\t,ChargeToFiscalYear\t\t\t\t= dbo.CalculateFiscalYearIfSplit(Billing.AccountBillingAdjustmentPaperBill.FromDate, Billing.AccountBillingAdjustmentPaperBill.ToDate, 'T')\r\n\t\t,ChargeToPriorFiscalYear\t\t= dbo.CalculateFiscalYearIfSplit(Billing.AccountBillingAdjustmentPaperBill.FromDate, Billing.AccountBillingAdjustmentPaperBill.ToDate, 'F')\r\n\t\t,ActualOrEstimated\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.EstimatedOrActualBilling\r\n\t\t,NetDollarChange\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedBilledAmount + Billing.AccountBillingAdjustmentPaperBill.CanceledBilledAmount\r\n\t\t,NetEnergyUsageChange\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedEnergy + Billing.AccountBillingAdjustmentPaperBill.CanceledEnergy\r\n\t\t,NetDemandUsageChange\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedDemand + Billing.AccountBillingAdjustmentPaperBill.CanceledDemand\r\n\t\t,LastUpdate\t\t\t\t\t\t= getdate()\t\r\n\t\t,FireAuditTrigger\t\t\t\t= 'Y'\t\t\r\n\tFROM Billing.AccountBilling INNER JOIN\r\n  Billing.AccountBillingAdjustmentPaperBill ON \r\n  Billing.AccountBilling.AccountBillingSeqid = Billing.AccountBillingAdjustmentPaperBill.AccountBillingSeqid AND \r\n  Billing.AccountBilling.BillingPeriodRevision = Billing.AccountBillingAdjustmentPaperBill.BillingPeriodRevision AND \r\n  Billing.AccountBilling.UtilityCompanySeqid = Billing.AccountBillingAdjustmentPaperBill.UtilityCompanySeqid\r\n\tWHERE (Billing.AccountBillingAdjustmentPaperBill.BillingPeriod = @BillingPeriod) AND \r\n  (Billing.AccountBillingAdjustmentPaperBill.UtilityCompanySeqid = @UtilityCompany) AND \r\n  (Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid  IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M')) \r\n \r\n\t/************************************************************************************************************\r\n\t3. update Billing.AccountBillingPaperBill with the new information FROM AccountBillingAdjustmentPaperBill\r\n\t*************************************************************************************************************/\r\n\tUPDATE\tBilling.AccountBillingPaperBill\r\n\tSET \r\n\t\t\tLastPeriodModified\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.BillingPeriod,\r\n\t\t\tAccountBillingPaperBillRowState = case when IsNull(AccountBillingPaperBillRowState,0)+1 > 1 then 2 else 1 end, \r\n\t\t\tBilledAmount\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedBilledAmount,\r\n\t\t\tTotalCCF\t\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedCCF, \r\n\t\t\tThermsFactor\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.ThermsFactor,   \r\n\t\t\tTotalEnergyUsage\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedEnergy, \r\n\t\t\tTotalDemandUsage\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.RevisedDemand, \r\n\t\t\tNotes\t\t\t\t\t\t\t= Billing.AccountBillingAdjustmentPaperBill.Notes,\r\n\t\t\tAccountBillingAdjustmentPaperBillSeqid = Billing.AccountBillingAdjustmentPaperBill.AccountBillingAdjustmentPaperBillSeqid, \r\n\t\t\tLastUpdate\t\t\t\t\t\t= getdate(),\r\n\t\t\tFireAuditTrigger\t\t\t\t= 'Y'\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill INNER JOIN\r\n\t\t\tBilling.AccountBilling ON Billing.AccountBillingAdjustmentPaperBill.AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid AND \r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision AND \r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill.BillingPeriodRevision = Billing.AccountBilling.BillingPeriod AND \r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill.AccountBillingSeqid IS NOT NULL INNER JOIN\r\n\t\t\tBilling.AccountBillingPaperBill ON Billing.AccountBilling.AccountBillingSeqid = Billing.AccountBillingPaperBill.AccountBillingSeqid AND \r\n\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingPaperBill.BillingPeriod AND \r\n\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingPaperBill.BillingPeriodRevision AND \r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill.BillingPeriod = @BillingPeriod\r\n\tWHERE   (Billing.AccountBillingAdjustmentPaperBill.UtilityCompanySeqid = @UtilityCompany) AND \r\n\t\t\t(Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M'))\t\r\n\t\r\n\t-- At this point the Billing.AccountBillingAdjustmentPaperBill for the current period has indetified all of the adjustments or \r\n\t-- original bill rows that do not exist in EC3.  The Billing.AccountBilling AccountBillingSeqid\r\n\t-- is null and the Billing.AccountBillingPaperBill AccountBillingPaperBillSeqid is null.\r\n\tdeclare @maxAccountBillingSeqid int\r\n\tdeclare @maxAccountBillingPaperBillSeqid int\r\n\tdeclare @HasAccountBillingInsertsBeenProcessed int\r\n\r\n\tselect @maxAccountBillingSeqid = max(AccountBillingSeqid) from Billing.AccountBilling\t\r\n\tselect @maxAccountBillingPaperBillSeqid = max(AccountBillingPaperBillSeqid) from Billing.AccountBillingPaperBill\t\r\n\r\n\tselect  @HasAccountBillingInsertsBeenProcessed = count(*) from Billing.AccountBillingAdjustmentPaperBill\r\n\twhere \r\n\t\t\tAccountBillingSeqid is null \r\n\t\t\tand\tBillingPeriod = @BillingPeriod\r\n\t\t\tand UtilityCompanySeqid = @UtilityCompany\r\n\t\t\tand InvoiceAccountGroupSeqid IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M')  \r\n\t\r\n\t-- if this occurs in the case of \"isnull(@HasAccountBillingInsertsBeenProcessed,1)\" then set the value to 0 and not process\r\n\t-- also if the count of the AccountBillingSeqid that are null is zero do not process since they have already been processed.\r\n\t--\r\n\tif (isnull(@HasAccountBillingInsertsBeenProcessed,0)<> 0)\r\n\tBEGIN\r\n\t\t/**************************************************************************************************\r\n\t\tInsert the remaining records from the AccountBillingAdjustmentPaperBill into the AccountBilling\r\n\t\tthese should be the original bills from the current billing period\r\n\t\t**************************************************************************************************/\r\n\t\tINSERT INTO [Billing].[AccountBilling]\r\n\t\t\t([OriginalAccountNumber]\r\n\t\t\t,[AccountSeqid]\r\n\t\t\t,[UniqueAccountSeqid] /* added on 1/18/2019 */\r\n\t\t\t,[InvoiceTrackingSeqid]\r\n\t\t\t,[CurrentInvoiceAccountBillingGroup]\r\n\t\t\t,[CurrentAccountBillingInvoiceContractBudgetLine]\r\n\t\t\t,[UtilityCompanySeqid]\r\n\t\t\t,[EnergySource]\r\n\t\t\t,[IsTimeOfDayAccount]\r\n\t\t\t,[LastPeriodModified]\r\n\t\t\t,[BillingCycle]\r\n\t\t\t,[SalesType]\r\n\t\t\t,[PreviousBillingPeriod]\r\n\t\t\t,[BillingPeriod]\r\n\t\t\t,[BillingPeriodRevision]\r\n\t\t\t,[NextMeterReading]\r\n\t\t\t,[NextBillingPeriod]\r\n\t\t\t,[FromDate]\r\n\t\t\t,[ToDate]\r\n\t\t\t,[AccountBillingStatus]\r\n\t\t\t,[PreviousAccountBillingStatus]\r\n\t\t\t,[ManualPaymentOverride]\r\n\t\t\t,[AccountBillingStatusCodePeriod]\r\n\t\t\t,[OriginalBilledAmount]\r\n\t\t\t,[RevisedBilledAmount]\r\n\t\t\t,[OriginalBilledAmountPaid]\r\n\t\t\t,[PaidAdjustmentAmount]\r\n\t\t\t,[TotalAmountDue]\r\n\t\t\t,[CreditedPaidAmount]\r\n\t\t\t,[CreditedPaidAmountDate]\r\n\t\t\t,[AccountEnergyUsage]\r\n\t\t\t,[AccountDemandUsage]\r\n\t\t\t,[OriginalEnergyUsage]\r\n\t\t\t,[OriginalDemandUsage]\r\n\t\t\t,[AccountEnergyUsage1]\r\n\t\t\t,[AccountDemandUsage1]\r\n\t\t\t,[ManualDataEntry]\r\n\t\t\t,[ProductionAndDeliveryTariff]\r\n\t\t\t,[BillingPeriodDays]\r\n\t\t\t,[BillCreationDate]\r\n\t\t\t,[PostMarkDate]\r\n\t\t\t,[BillingAction]\r\n\t\t\t,[DatePaymentDue]\r\n\t\t\t,[ManualPaymentOverrideAmount]\r\n\t\t\t,[DateAcceptanceIntoOEC]\r\n\t\t\t,[InitialPostingDate]\r\n\t\t\t,[UploadFileSeqid]\r\n\t\t\t,[SplitFiscalYear]\r\n\t\t\t,[ChargeToFiscalYear]\r\n\t\t\t,[ChargeToPriorFiscalYear]\r\n\t\t\t,[ProcessedInTheCurrentPeriod]\r\n\t\t\t,ActualOrEstimated\r\n\t\t\t,NetDollarChange\r\n\t\t\t,NetEnergyUsageChange\r\n\t\t\t,NetDemandUsageChange\r\n\t\t\t,[Notes]\r\n\t\t\t,FireAuditTrigger\r\n\t\t\t,[AuthenticatedUserID]\r\n\t\t\t,[DateAdded]\r\n\t\t\t,[LastUpdate])\r\n\t\tSELECT\r\n\t\t\tOriginalAccountNumber\t\t\t\t\t\t\t---\t[OriginalAccountNumber]\r\n\t\t\t,AccountSeqid\t\t\t\t\t\t\t\t\t--- [AccountSeqid]\r\n\t\t\t,UniqueAccountSeqID--- [UnqiueAccountSeqID], added on 1/18/2019\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t\t--- [InvoiceTrackingSeqid]\r\n\t\t\t,Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid\t\t\t\t\t\t--- [CurrentInvoiceAccountBillingGroup]\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t\t--- [CurrentAccountBillingInvoiceContractBudgetLine]\r\n\t\t\t,UtilityCompanySeqid\t\t\t\t\t\t\t\t--- [UtilityCompanySeqid]\r\n\t\t\t,EnergySource\t\t\t\t\t\t\t\t\t--- [EnergySource]\r\n\t\t\t,IsTimeOfDayAccount\t\t\t\t\t\t\t\t--- [IsTimeOfDayAccount]\r\n\t\t\t,BillingPeriod\t\t\t\t\t\t\t\t\t--- [LastPeriodModified]\r\n\t\t\t,billingCycle\t\t\t\t\t\t\t\t\t--- [BillingCycle]\r\n\t\t\t,SalesType\t\t\t\t\t\t\t\t\t\t--- [SalesType]\r\n\t\t\t,( SELECT top 1  BillingPeriod from Billing.AccountBilling WHERE (OriginalAccountNumber = OriginalAccountNumber) and BillingPeriod < @BillingPeriod ORDER BY BillingPeriod DESC\t)\t--- [PreviousBillingPeriod]\r\n\t\t\t,BillingPeriodRevision\t\t\t\t\t\t\t--- [BillingPeriod]\r\n\t\t\t,BillingPeriodRevision\t\t\t\t\t\t\t--- [BillingPeriodRevision]\r\n\t\t\t,ToDate\t\t\t\t\t\t\t\t\t\t\t--- [NextMeterReading]\r\n\t\t\t,dbo.CreateNextPeriod(Billing.AccountBillingAdjustmentPaperBill.BillingPeriod, BillingCycle)\t\t--- [NextBillingPeriod]\r\n\t\t\t,FromDate\t\t\t\t\t\t\t\t\t\t--- [FromDate]\r\n\t\t\t,ToDate\t\t\t\t\t\t\t\t\t\t\t--- [ToDate]\r\n\t\t\t,AccountBillingStatus\t\t\t\t\t\t\t--- [AccountBillingStatus]\r\n\t\t\t,AccountBillingpreviousStatus\t\t\t\t\t--- [PreviousAccountBillingStatus]\r\n\t\t\t,ManualPaymentOverride\t\t\t\t\t\t\t--- [ManualPaymentOverride]\r\n\t\t\t,AccountBillingStatusPeriod\t\t\t\t\t\t--- [AccountBillingStatusCodePeriod]\r\n\t\t\t,case when BillingAction ='O' then IsNull(RevisedBilledAmount,0) else 0.00 end\t\t\t--- [OriginalBilledAmount]\r\n\t\t\t,RevisedBilledAmount\t\t\t\t\t\t\t\t--- [RevisedBilledAmount]\r\n\t\t\t--,case when BillingAction ='O' then  (case when (PaidAdjustmentAmount < 0)  then (-1)*PaidAdjustmentAmount  else  RevisedBilledAmount  end )  else 0.00 end \t\t--- [OriginalBilledAmountPaid]\r\n\t\t\t--,case when ( BillingAction ='O' and (PaidAdjustmentAmount < 0)) then (-1)*PaidAdjustmentAmount  when ( BillingAction ='O' and (PaidAdjustmentAmount >= 0)) then  IsNull(RevisedBilledAmount,0)  else 0.00 end \t\t--- [OriginalBilledAmountPaid]\r\n\t\t\t,case when BillingAction ='O' then  IsNull(RevisedBilledAmount,0) + IsNull(PaidAdjustmentAmount,0)  else 0.00 end \t\t--- [OriginalBilledAmountPaid]\r\n\t\t\t,IsNull(PaidAdjustmentAmount,0)\t\t\t\t\t\t\t--- [PaidAdjustmentAmount]\r\n\t\t\t--,case when ( BillingAction ='O' and (PaidAdjustmentAmount < 0)) then (-1)*PaidAdjustmentAmount  when ( BillingAction ='O' and (PaidAdjustmentAmount >= 0)) then  IsNull(RevisedBilledAmount,0)  else 0.00 end + IsNull(PaidAdjustmentAmount,0)\t--- [TotalAmountDue]\r\n\t\t\t,case when BillingAction ='O' then  IsNull(RevisedBilledAmount,0) + IsNull(PaidAdjustmentAmount,0)  else 0.00 end\t\t--- [TotalAmountDue]\r\n/*revise */\t\t\t   --,case when ( BillingAction ='O' and (PaidAdjustmentAmount < 0)) then (-1)*PaidAdjustmentAmount  when ( BillingAction ='O' and (PaidAdjustmentAmount >= 0)) then  IsNull(RevisedBilledAmount,0)  else 0.00 end + IsNull(PaidAdjustmentAmount,0)\t--- [CreditedPaidAmount]\r\n/*revise */\t\t\t   ,null\t\t\t\t\t\t\t\t\t\t\t--- [CreditedPaidAmount]\r\n/*revise */\t\t\t   ,null\t\t\t\t\t\t\t\t\t\t\t--- [CreditedPaidAmountDate]\r\n\t\t\t,RevisedEnergy\t\t\t\t\t\t\t\t\t--- [AccountEnergyUsage]\r\n\t\t\t,RevisedDemand\t\t\t\t\t\t\t\t\t--- [AccountDemandUsage]\r\n\t\t\t,RevisedEnergy\t\t\t\t\t\t\t\t\t--- [OriginalEnergyUsage]\r\n\t\t\t,RevisedDemand\t\t\t\t\t\t\t\t\t--- [OriginalDemandUsage]\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t\t--- [AccountEnergyUsage1]\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t\t--- [AccountDemandUsage1]\r\n\t\t\t,ManualDataEntry\t\t\t\t\t\t\t\t\t--- [ManualDataEntry]\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t\t--- [ProductionAndDeliveryTariff]\r\n\t\t\t,BillingDays\t\t\t\t\t\t\t\t\t\t--- [BillingPeriodDays]\r\n\t\t\t,BillCreationDate\t\t\t\t\t\t\t\t--- [BillCreationDate]\r\n\t\t\t,PostMarkDate\t\t\t\t\t\t\t\t\t--- [PostMarkDate]\r\n\t\t\t,BillingAction\t\t\t\t\t\t\t\t\t--- [BillingAction]\r\n\t\t\t,DatePaymentDue\t\t\t\t\t\t\t\t\t--- [DatePaymentDue]\r\n\t\t\t--,case when ( BillingAction ='O' and (PaidAdjustmentAmount < 0)) then (-1)*PaidAdjustmentAmount  when ( BillingAction ='O' and (PaidAdjustmentAmount >= 0)) then  IsNull(RevisedBilledAmount,0)  else 0.00 end + IsNull(PaidAdjustmentAmount,0)\t\t--- [ManualPaymentOverrideAmount]\tOLD version before factoring in the IBG sumary or not \r\n\t\t\t--,case when ( SummaryBilling = 'Y' ) then Billing.AccountBillingAdjustmentPaperBill.ManualPaymentOverrideAmount  when ( SummaryBilling = 'N' and ( Billing.AccountBillingAdjustmentPaperBill.ManualPaymentOverrideAmount <= 0 )) then  0  else IsNull(RevisedBilledAmount,0) + IsNull(PaidAdjustmentAmount,0) end\t--- [ManualPaymentOverrideAmount]\r\n\t\t\t, CASE when BillingAction = 'O' \r\n\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase when ( SummaryBilling = 'Y' ) \r\n\t\t\t\t\t\t\t\tthen Billing.AccountBillingAdjustmentPaperBill.ManualPaymentOverrideAmount  \r\n\t\t\t\t\t\t\t\twhen ( SummaryBilling = 'N' and ( Billing.AccountBillingAdjustmentPaperBill.ManualPaymentOverrideAmount <= 0 )) \r\n\t\t\t\t\t\t\t\tthen  0  \r\n\t\t\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\t\tIsNull(RevisedBilledAmount,0) + IsNull(PaidAdjustmentAmount,0) \r\n\t\t\t\t\t\tend\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t    0.00\t\t\t\t-- should be zero if an insert to a a period other than current\r\n\t\t\tEND\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t--- [ManualPaymentOverrideAmount]\r\n\t\t\t,DateAcceptanceIntoOEC\t\t\t\t\t\t\t--- [DateAcceptanceIntoOEC]\r\n\t\t\t,getdate()\t\t\t\t\t\t\t\t\t\t--- [InitialPostingDate]\r\n\t\t\t,UploadManualBillingAccountAdjustmentSeqid\t\t--- [UploadFileSeqid]\r\n\t\t\t,dbo.IsFiscalYearSplit (Billing.AccountBillingAdjustmentPaperBill.FromDate, Billing.AccountBillingAdjustmentPaperBill.ToDate)\t\t\t\t--- [SplitFiscalYear]\r\n\t\t\t,dbo.CalculateFiscalYearIfSplit (Billing.AccountBillingAdjustmentPaperBill.FromDate, Billing.AccountBillingAdjustmentPaperBill.ToDate,'T')\t--- [ChargeToFiscalYear]\r\n\t\t\t,dbo.CalculateFiscalYearIfSplit (Billing.AccountBillingAdjustmentPaperBill.FromDate, Billing.AccountBillingAdjustmentPaperBill.ToDate,'F')\t--- [ChargeToPriorFiscalYear]\r\n\t\t\t,'N'\t\t\t\t\t\t\t\t\t\t\t\t--- [ProcessedInTheCurrentPeriod]\r\n\t\t\t,EstimatedOrActualBilling\t\t\t\t\t\t--- ActualOrEstimated\r\n\t\t\t,0\t\t\t\t\t\t\t\t\t\t\t\t--- NetDollarChange\r\n\t\t\t,0\t\t\t\t\t\t\t\t\t\t\t\t--- NetEnergyUsageChange\r\n\t\t\t,0\t\t\t\t\t\t\t\t\t\t\t\t--- NetDemandUsageChange\r\n\t\t\t,Notes\t\t\t\t\t\t\t\t\t\t\t--- [Notes]\r\n\t\t\t,'N'\t\t\t\t\t\t\t\t\t\t\t\t--- FireAuditTrigger\r\n\t\t\t,Billing.AccountBillingAdjustmentPaperBill.AuthenticatedUserID\t\t\t\t\t\t\t\t--- [AuthenticatedUserID]\r\n\t\t\t,getdate()\t\t\t\t\t\t\t\t\t\t--- [DateAdded]\r\n\t\t\t,getdate()\t\t\t\t\t\t\t\t\t\t--- [LastUpdate]\r\n\t\tfrom Billing.AccountBillingAdjustmentPaperBill\r\n\t\t\tINNER JOIN Billing.InvoiceAccountGroup\r\n\t\t\tON Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid = Billing.InvoiceAccountGroup.InvoiceAccountGroupSeqid\r\n\t\twhere AccountBillingSeqid is null  \r\n\t\t\t\tand BillingPeriod = @BillingPeriod \r\n\t\t\t\tand UtilityCompanySeqid = @UtilityCompany\r\n\t\t\t\tand Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M')  \r\n\r\n\t\t/************************************************************************************ \r\n\t\tinsert the same information into AccountBillingPaperBill\r\n\t\t*************************************************************************************/\r\n\t\tINSERT INTO [Billing].[AccountBillingPaperBill]\r\n\t\t\t([AccountBillingSeqid]\r\n\t\t\t,[AccountBillingAdjustmentPaperBillSeqid]\r\n\t\t\t,[UtilityCompanySeqid]\r\n\t\t\t,[InvoiceBillingGroupSeqid]\r\n\t\t\t,[AccountSeqid]\r\n\t\t\t,[UniqueAccountSeqId] /* added on 1/18/2019 */\r\n\t\t\t,[OriginalAccountNumber]\r\n\t\t\t,[LastPeriodModified]\r\n\t\t\t,[BillingPeriod]\r\n\t\t\t,[BillingPeriodRevision]\r\n\t\t\t,[AccountBillingPaperBillRowState]\r\n\t\t\t,[CommodityTariffRate]\r\n\t\t\t,[CommodityTariffEffectiveDate]\r\n\t\t\t,[BillCreationDate]\r\n\t\t\t,[PostMarkDate]\r\n\t\t\t,[DatePaymentDue]\r\n\t\t\t,[DateAcceptanceIntoOEC]\r\n\t\t\t,[EnergySource]\r\n\t\t\t,[BilledAmount]\r\n\t\t\t,[TotalEnergyUsage]\r\n\t\t\t,[TotalDemandUsage]\r\n\t\t\t,[TotalCCF]\r\n\t\t\t,[ThermsFactor]\r\n\t\t\t,[LevelPaymentPlan]\r\n\t\t\t,[DiscountedAmount]\r\n\t\t\t,[DiscountPercentage]\r\n\t\t\t,[PreviousAccountBalance]\r\n\t\t\t,BillTotalAmountDue\r\n\t\t\t,BillCreditedAmountPaid\r\n\t\t\t,BillCreditedAmountDate \r\n\t\t\t,LatePaymentAmount \r\n\t\t\t,Tax\r\n\t\t\t,CreditTransfer\r\n\t\t\t,[Notes]\r\n\t\t\t,FireAuditTrigger\r\n\t\t\t,[AuthenticatedUserID]\r\n\t\t\t,[DateAdded]\r\n\t\t\t,[LastUpdate])\r\n\t\tselect \r\n\t\t\tAccountBillingSeqid\t\t\t\t\t\t\t--- [AccountBillingSeqid]\r\n\t\t\t,AccountBillingAdjustmentPaperBillSeqid\t\t--- [AccountBillingAdjustmentPaperBillSeqid]\r\n\t\t\t,UtilityCompanySeqid\t\t\t\t\t\t\t--- [UtilityCompanySeqid]\r\n\t\t\t,InvoiceAccountGroupSeqid\t\t\t\t\t--- [InvoiceBillingGroupSeqid]\r\n\t\t\t,AccountSeqid\t\t\t\t\t\t\t\t--- [AccountSeqid]\r\n\t\t\t,UniqueAccountSeqid  --- [UniqueAccountSeqID] added on 1/18/2019\r\n\t\t\t,OriginalAccountNumber\t\t\t\t\t\t--- [OriginalAccountNumber]\r\n\t\t\t,BillingPeriod\t\t\t\t\t\t\t\t--- [LastPeriodModified]\r\n\t\t\t,BillingPeriodRevision\t\t\t\t\t\t--- [BillingPeriod]\r\n\t\t\t,BillingPeriodRevision\t\t\t\t\t\t--- [BillingPeriodRevision]\r\n\t\t\t,1\t\t\t\t\t\t\t\t\t\t\t--- [AccountBillingPaperBillRowState]\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t--- [CommodityTariffRate]\r\n\t\t\t,null\t\t\t\t\t\t\t\t\t\t--- [CommodityTariffEffectiveDate]\r\n\t\t\t,BillCreationDate\t\t\t\t\t\t\t--- [BillCreationDate]\r\n\t\t\t,PostMarkDate\t\t\t\t\t\t\t\t--- [PostMarkDate]\r\n\t\t\t,DatePaymentDue\t\t\t\t\t\t\t\t--- [DatePaymentDue]\r\n\t\t\t,DateAcceptanceIntoOEC\t\t\t\t\t\t--- [DateAcceptanceIntoOEC]\r\n\t\t\t,EnergySource\t\t\t\t\t\t\t\t--- [EnergySource]\r\n\t\t\t,RevisedBilledAmount\t\t\t\t\t\t\t--- [BilledAmount]\r\n\t\t\t,RevisedEnergy\t\t\t\t\t\t\t\t--- [TotalEnergyUsage]\r\n\t\t\t,RevisedDemand\t\t\t\t\t\t\t\t--- [TotalDemandUsage]\r\n\t\t\t,RevisedCCF\t\t\t\t\t\t\t\t\t--- [TotalCCF]\r\n\t\t\t,ThermsFactor\t\t\t\t\t\t\t\t--- [ThermsFactor]\r\n\t\t\t,'N'\t\t\t\t\t\t\t\t\t\t\t--- [LevelPaymentPlan]\r\n\t\t\t,0.00\t\t\t\t\t\t\t\t\t\t--- [DiscountedAmount]\r\n\t\t\t,0.00\t\t\t\t\t\t\t\t\t\t--- [DiscountPercentage]\r\n\t\t\t,PreviousAccountBalance\t\t\t\t\t\t--- [PreviousAccountBalance]\r\n\t\t\t,BillTotalAmountDue\t\t\t\t\t\t\t---\tBillTotalAmountDue\r\n\t\t\t,BillCreditedAmountPaid\t\t\t\t\t\t---\tBillCreditedAmountPaid\r\n\t\t\t,BillCreditedAmountDate\t\t\t\t\t\t---\tBillCreditedAmountDate \r\n\t\t\t,LatePaymentAmount\t\t\t\t\t\t\t--- LatePaymentAmount\r\n\t\t\t,Tax\t\t\t\t\t\t\t\t\t\t\t--- Tax\t\r\n\t\t\t,CreditTransfer\t\t\t\t\t\t\t\t--- CreditTransfer\r\n\t\t\t,Notes\t\t\t\t\t\t\t\t\t\t--- [Notes]\r\n\t\t\t,'N'\t\t\t\t\t\t\t\t\t\t\t--- FireAuditTrigger\r\n\t\t\t,AuthenticatedUserID\t\t\t\t\t\t\t--- [AuthenticatedUserID]\r\n\t\t\t,getdate()\t\t\t\t\t\t\t\t\t--- [DateAdded]\r\n\t\t\t,getdate()\t\t\t\t\t\t\t\t\t--- [LastUpdate]\r\n\t\tfrom Billing.AccountBillingAdjustmentPaperBill\r\n\t\twhere AccountBillingSeqid is null  \r\n\t\t\t\tand BillingPeriod = @BillingPeriod \r\n\t\t\t\tand UtilityCompanySeqid = @UtilityCompany\r\n\t\t\t\tand InvoiceAccountGroupSeqid IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M')\r\n\r\n\t\t-- The Billing.AccountBilling and the Billing.AccountBillingPaperBill rows have been inserted and their sequence ids were created.\r\n\t\t-- The two tables are joined to update the sequence id of the the Billing.AccountBilling in the the Billing.AccountBillingPaperBill table. \r\n\t\t-- It inforces the referential integrity between the two tables.\r\n\r\n\t\t/************************************************************************************ \r\n\t\tupdate the seqids in AccountBillingPaperBill and AccountBillingAdjustmentPaperBill\r\n\t\t*************************************************************************************/\r\n\t\tUPDATE  Billing.AccountBillingPaperBill\r\n\t\tSET   AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid\r\n\t\tFROM\t\r\n\t\t\tBilling.AccountBilling INNER JOIN\r\n\t\t\tBilling.AccountBillingPaperBill ON Billing.AccountBilling.OriginalAccountNumber = Billing.AccountBillingPaperBill.OriginalAccountNumber AND \r\n\t\t\tBilling.AccountBilling.CurrentInvoiceAccountBillingGroup = Billing.AccountBillingPaperBill.InvoiceBillingGroupSeqid AND \r\n\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingPaperBill.BillingPeriod AND \r\n\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingPaperBill.BillingPeriodRevision INNER JOIN\r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill ON \r\n\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingAdjustmentPaperBill.BillingPeriodRevision AND \r\n\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingAdjustmentPaperBill.BillingPeriodRevision AND \r\n\t\t\tBilling.AccountBilling.OriginalAccountNumber = Billing.AccountBillingAdjustmentPaperBill.OriginalAccountNumber AND \r\n\t\t\tBilling.AccountBilling.CurrentInvoiceAccountBillingGroup = Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid\r\n\t\tWHERE\r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill.AccountBillingSeqid is null  \r\n\t\t\tand Billing.AccountBillingAdjustmentPaperBill.BillingPeriod = @BillingPeriod \r\n\t\t\tand Billing.AccountBillingAdjustmentPaperBill.UtilityCompanySeqid = @UtilityCompany\r\n\t\t\tand Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M')  \r\n\r\n\t\tUPDATE  Billing.AccountBillingAdjustmentPaperBill\r\n\t\tSET\tAccountBillingSeqid\t\t\t= Billing.AccountBilling.AccountBillingSeqid\r\n\t\t\t,AccountBillingPaperBillSeqid\t= Billing.AccountBillingPaperBill.AccountBillingPaperBillSeqid\r\n\t\tFROM\t\r\n\t\t\tBilling.AccountBilling INNER JOIN\r\n\t\t\tBilling.AccountBillingPaperBill ON Billing.AccountBilling.OriginalAccountNumber = Billing.AccountBillingPaperBill.OriginalAccountNumber AND \r\n\t\t\tBilling.AccountBilling.CurrentInvoiceAccountBillingGroup = Billing.AccountBillingPaperBill.InvoiceBillingGroupSeqid AND \r\n\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingPaperBill.BillingPeriod AND \r\n\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingPaperBill.BillingPeriodRevision INNER JOIN\r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill ON \r\n\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingAdjustmentPaperBill.BillingPeriodRevision AND \r\n\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingAdjustmentPaperBill.BillingPeriodRevision AND \r\n\t\t\tBilling.AccountBilling.OriginalAccountNumber = Billing.AccountBillingAdjustmentPaperBill.OriginalAccountNumber AND \r\n\t\t\tBilling.AccountBilling.CurrentInvoiceAccountBillingGroup = Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid\r\n\t\tWHERE\t\r\n\t\t\tBilling.AccountBillingAdjustmentPaperBill.AccountBillingSeqid IS NULL\r\n\t\t\tand Billing.AccountBillingAdjustmentPaperBill.BillingPeriod = @BillingPeriod\r\n\t\t\tand Billing.AccountBillingAdjustmentPaperBill.UtilityCompanySeqid = @UtilityCompany\r\n\t\t\tand Billing.AccountBillingAdjustmentPaperBill.InvoiceAccountGroupSeqid IN (SELECT InvoiceAccountGroupSeqid FROM Billing.InvoiceAccountGroup WHERE BillingType = 'M');\r\n\tEND;\r\n\r\n\tSET @Status = 0;\r\n \r\n\t-- This Stored Procedure is added to integrate Uniqueaccountseqid and uniquemeterseqid update\r\n\t-- EXEC [Common].[usp_UpdateUniqueSeqIDsForAllTables]\r\nEND;"
        }
      ]
    }
  ]
}
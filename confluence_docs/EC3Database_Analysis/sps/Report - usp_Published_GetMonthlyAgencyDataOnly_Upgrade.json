{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_GetMonthlyAgencyDataOnly_Upgrade",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_GetMonthlyAgencyDataOnly_Upgrade",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve and process monthly energy usage and cost data for specified agencies. It aggregates data from various tables, applies conversion factors for energy types, and formats the results into a pivot table for reporting purposes. The procedure logs its execution for auditing and supports both agency and non-agency users."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple complex operations, including dynamic data retrieval, conditional logic, hierarchical data processing, and pivot table creation. It also handles multiple energy types and conversion factors, making it intricate in terms of both logic and execution."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report, used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which data is requested, formatted as 'YYYYMM'."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC AS VARCHAR(MAX)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A list of agency codes for which data is to be retrieved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsAgencyUser AS BIT = 0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A flag indicating if the user is an agency user. If set to 1, the procedure retrieves the current processing period."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initial Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Sets transaction isolation level to "
                        },
                        {
                          "type": "text",
                          "text": "READ UNCOMMITTED",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to avoid locking issues."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If the user is an agency user, it retrieves the current processing period from "
                        },
                        {
                          "type": "text",
                          "text": "Billing.ApplicationTimeFrame",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Logs the report usage by calling "
                        },
                        {
                          "type": "text",
                          "text": "Audit.usp_AddReportUsageLog",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conversion Factor Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves conversion factors for electricity, gas, and steam from "
                        },
                        {
                          "type": "text",
                          "text": "Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval and Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Uses a table variable "
                        },
                        {
                          "type": "text",
                          "text": "@SelectedAgency",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to store agency hierarchy data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts aggregated cost, demand, usage, and mmBTU data into "
                        },
                        {
                          "type": "text",
                          "text": "@TableReturn",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " from "
                        },
                        {
                          "type": "text",
                          "text": "Published.TemporalAccountLevelSummaryByAgency",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calculates totals and aggregates data for parent and grandparent agencies."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pivot Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Transforms the aggregated data into a pivot table format stored in "
                        },
                        {
                          "type": "text",
                          "text": "@PivotedTable",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Formats monetary values and outputs the final result set."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Aggregations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple joins and aggregations can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pivot Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The pivot operation can be computationally expensive and may impact performance if not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved in joins and aggregations are properly indexed to improve query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can result in reading uncommitted data, which may lead to inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's complexity and the volume of data processed may affect scalability and performance under high load."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that user inputs, especially "
                },
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", are sanitized to prevent SQL injection attacks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that conversion factors and agency hierarchy data are always available and correct, which may not always be the case."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_GetMonthlyAgencyDataOnly_Upgrade]\n(\r\n\t@EmailAddress AS VARCHAR(75)\r\n\t,@PublishedBillingPeriod AS VARCHAR(6)\r\n\t,@AgencyCodeOEC AS VARCHAR(MAX)\r\n\t,@IsAgencyUser AS BIT = 0\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tIF (@IsAgencyUser = 1)\r\n\tBEGIN\r\n\t\tSELECT @PublishedBillingPeriod = PublishedBillingPeriod FROM Billing.ApplicationTimeFrame WHERE CurrentProcessingPeriod = 'Y';\r\n\tEND;\r\n\r\n\tDECLARE @spname VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName\t = @spname,\r\n\t\t@StoredProcName = @spname,\r\n\t\t@RequestedBy = @EmailAddress,\r\n\t\t@prmPublishedBillingPeriod = @PublishedBillingPeriod,\r\n\t\t@prmBillingPeriod = NULL,\r\n\t\t@prmAgency_ies = @AgencyCodeOEC,\r\n\t\t@prmFacilityNumber_s = NULL,\r\n\t\t@prmStartingBillingPeriod = NULL,\r\n\t\t@prmEndingBillingPeriod = NULL;\r\n\r\n\tDECLARE @calendarYear AS VARCHAR(4), @levelIndex AS INT = 3, @mmBTUEleMultiplier AS FLOAT\r\n\t\t,@mmBTUGasMultiplier AS FLOAT, @mmBTUSTMMultiplier AS FLOAT;\r\n\t\r\n\tSET @calendarYear = SUBSTRING(@PublishedBillingPeriod, 1, 4);    \r\n\r\n\tDECLARE @BillingPeriod VARCHAR(6)= @PublishedBillingPeriod\r\n\r\n    SELECT @mmBTUEleMultiplier = MAX(MMBtusFactor) FROM Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod WHERE EnergyDeliveryType = 1 AND BillingPeriod = @BillingPeriod;\r\n    SELECT @mmBTUGasMultiplier = MAX(MMBtusFactor) FROM Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod WHERE EnergyDeliveryType = 5 AND BillingPeriod = @BillingPeriod;\r\n    SELECT @mmBTUSTMMultiplier = MAX(MMBtusFactor) FROM Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod WHERE EnergyDeliveryType = 6 AND BillingPeriod = @BillingPeriod;\r\n  \r\n               \r\n\tDECLARE @TableReturn TABLE\r\n\t\t(publishedBillingPeriod BillingPeriod,\r\n\t\tBillingPeriod BillingPeriod,\r\n\t\tFiscalYear VARCHAR(4),\r\n\t\tBillingMonth VARCHAR(20),\r\n\t\tAgencyCodeOEC AgencyCodeOEC,\r\n\t\tAgencyName ldesc,\r\n\t\tCost VARCHAR(30),\r\n\t\tRevisedBilledAmount MONEY, -- general column for both billed amount and usage\r\n\t\tLevelID INT,\r\n\t\tParentAgencyDivisionID INT,\r\n\t\tCostTypeID INT, -- 1=$, 2=KW, 3=KWH, 4=mmBTU\r\n\t\tIsCostTotal VARCHAR(1)); -- 'N'- not calculated total. Use 'N' to avoid summarize cost twice\r\n\r\n\tDECLARE @SelectedAgency TABLE\r\n\t\t(agencyLevel INT,\r\n\t\tagencyDivisionSeqId INT,\r\n\t\tParentAgencyDivisionSeqId INT,\r\n\t\tAgencyDivisionHierarchy HIERARCHYID,\r\n\t\tAgencyCodeOEC AgencyCodeOEC);\r\n\r\n\tINSERT INTO @SelectedAgency\r\n\t\t(agencyLevel,\r\n\t\tagencyDivisionSeqId,\r\n\t\tParentAgencyDivisionSeqId,\r\n\t\tAgencyDivisionHierarchy,\r\n\t\tAgencyCodeOEC)\r\n\tSELECT AgencyDivisionHierarchy.GetLevel(), agencyDivisionSeqId, ParentAgencyDivisionSeqId, AgencyDivisionHierarchy, AgencyCodeOEC\r\n\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress);\r\n\r\n\t/* dollar amount summary Calculation */\r\n\tINSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n\tSELECT @PublishedBillingPeriod,\r\n\t\tTA.BillingPeriod,\r\n\t\tMAX(TA.FiscalYear),\r\n\t\tMAX(TA.MonthName),\r\n\t\tTA.AgencyCodeOEC,\r\n\t\tMAX(TA.AgencyName),\r\n\t\tCASE WHEN TA.Energytype = 'ELE' THEN 'Electricity Cost ($)'\r\n\t\t\tWHEN TA.Energytype = 'GAS' THEN 'Gas Cost ($)'\r\n\t\t\tWHEN TA.Energytype = 'STM' THEN 'Steam Cost ($)'\r\n\t\tEND Cost,\r\n\t\tSUM(TA.BilledAmount) AS RevisedBilledAmount,\r\n\t\tMAX(A.AgencyLevel),\r\n\t\tMAX(A.ParentAgencyDivisionSeqid),\r\n\t\t1,\r\n\t\t'N'\r\n\tFROM Published.TemporalAccountLevelSummaryByAgency AS TA\r\n\t\tINNER JOIN @SelectedAgency AS A ON TA.AgencyCodeOEC = A.AgencyCodeOEC\r\n\tWHERE TA.EffectiveStartPeriod <= @PublishedBillingPeriod AND TA.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\tGROUP BY TA.BillingPeriod, TA.AgencyCodeOEC,      \r\n\t\tCASE WHEN TA.Energytype = 'ELE' THEN 'Electricity Cost ($)'\r\n\t\t\tWHEN TA.Energytype = 'GAS' THEN 'Gas Cost ($)'\r\n\t\t\tWHEN TA.Energytype = 'STM' THEN 'Steam Cost ($)'\r\n\t\tEND;\r\n\r\n\t/* KW (electricity deman) summary calculation */\r\n\tINSERT INTO @TableReturn (publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n\tSELECT @PublishedBillingPeriod,\r\n\t\tTA.BillingPeriod,\r\n\t\tMAX(TA.FiscalYear),\r\n\t\tMAX(TA.MonthName),\r\n\t\tTA.AgencyCodeOEC,\r\n\t\tMAX(TA.AgencyName),\r\n\t\tCASE WHEN TA.Energytype = 'ELE'\r\n\t\t\tTHEN 'Electricity Demand (kW)'\r\n\t\t\tELSE ''\r\n\t\tEND AS Demand,\r\n\t\tSUM(TA.DemandUsage) AS AccountDemandUsage,\r\n\t\tMAX(A.AgencyLevel),\r\n\t\tMAX(A.ParentAgencyDivisionSeqid),\r\n\t\t2,\r\n\t\t'N'\r\n\tFROM Published.TemporalAccountLevelSummaryByAgency AS TA\r\n\t\tINNER JOIN @SelectedAgency AS A ON TA.AgencyCodeOEC = A.AgencyCodeOEC\r\n\tWHERE TA.EffectiveStartPeriod <= @PublishedBillingPeriod AND TA.EffectiveEndPeriod > @PublishedBillingPeriod AND TA.EnergyType = 'ELE'\r\n\tGROUP BY TA.BillingPeriod, TA.AgencyCodeOEC,\r\n\t\tCASE WHEN TA.Energytype = 'ELE'\r\n\t\t\tTHEN 'Electricity Demand (kW)'\r\n\t\t\tELSE ''\r\n\t\tEND;\r\n\r\n\t/* Electricity Usage (kWh) summary calculation */\r\n\tINSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n\tSELECT @PublishedBillingPeriod,\r\n\t\tTA.BillingPeriod,\r\n\t\tMAX(TA.FiscalYear),\r\n\t\tMAX(TA.MonthName),\r\n\t\tTA.AgencyCodeOEC,\r\n\t\tMAX(TA.AgencyName),\r\n\t\tCASE WHEN TA.Energytype = 'ELE'\r\n\t\t\tTHEN 'Electricity Usage (kWh)'\r\n\t\t\tWHEN TA.Energytype = 'GAS' THEN 'Gas (Therms)'\r\n\t\t\tWHEN TA.Energytype = 'STM' THEN 'Steam (MLbs)'\r\n\t\tEND AS Usage,\r\n\t\tSUM(TA.EnergyUsage) AS AccountEnergyUsage,\r\n\t\tMAX(A.AgencyLevel),\r\n\t\tMAX(A.ParentAgencyDivisionSeqid),\r\n\t\t3,\r\n\t\t'N'\r\n\tFROM Published.TemporalAccountLevelSummaryByAgency AS TA\r\n\t\tINNER JOIN @SelectedAgency AS A ON TA.AgencyCodeOEC = A.AgencyCodeOEC\r\n\tWHERE TA.EffectiveStartPeriod <= @PublishedBillingPeriod AND TA.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\tGROUP BY TA.BillingPeriod, TA.AgencyCodeOEC,\r\n\t\tCASE WHEN TA.Energytype = 'ELE'\r\n\t\t\tTHEN 'Electricity Usage (kWh)'\r\n\t\t\tWHEN TA.Energytype = 'GAS' THEN 'Gas (Therms)'\r\n\t\t\tWHEN TA.Energytype = 'STM' THEN 'Steam (MLbs)'\r\n\t\tEND;\r\n                    \r\n\t/* mmBTU summary calculation */\r\n\tINSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n\tSELECT @PublishedBillingPeriod,\r\n\t\tTA.BillingPeriod,\r\n\t\tMAX(TA.FiscalYear),\r\n\t\tMAX(TA.MonthName),\r\n\t\tTA.AgencyCodeOEC,\r\n\t\tMAX(TA.AgencyName),\r\n\t\t'Total Usage (mmBTUs)',\r\n\t\tSUM(CASE WHEN TA.Energytype = 'ELE' THEN TA.EnergyUsage * @mmBTUEleMultiplier\r\n\t\t\t\tWHEN TA.Energytype = 'GAS' THEN TA.EnergyUsage * @mmBTUGasMultiplier\r\n\t\t\t\tWHEN TA.Energytype = 'STM' THEN TA.EnergyUsage * @mmBTUSTMMultiplier\r\n\t\t\tEND) AS AccountEnergyUsage,\r\n\t\tMAX(A.AgencyLevel),\r\n\t\tMAX(A.ParentAgencyDivisionSeqid),\r\n\t\t4,\r\n\t\t'N'\r\n\tFROM Published.TemporalAccountLevelSummaryByAgency AS TA\r\n\t\tINNER JOIN @SelectedAgency AS A ON TA.AgencyCodeOEC = A.AgencyCodeOEC\r\n\tWHERE TA.EffectiveStartPeriod <= @PublishedBillingPeriod AND TA.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\tGROUP BY TA.BillingPeriod, TA.AgencyCodeOEC;\r\n\t\t\r\n\t/* Calculate Total */\r\n\tINSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n\tSELECT MAX(publishedBillingPeriod),\r\n\t\tBillingPeriod,\r\n\t\tMAX(FiscalYear),\r\n\t\tMAX(BillingMonth),\r\n\t\tAgencyCodeOEC,\r\n\t\tMAX(AgencyName),\r\n\t\tCASE WHEN CostTypeID = '1' THEN 'Total Cost ($)' END AS Cost, \r\n\t\tSUM(RevisedBilledAmount),\r\n\t\tMAX(LevelID),\r\n\t\tMAX(ParentAgencyDivisionID),\r\n\t\tCostTypeID,\r\n\t\t'Y'\r\n\tFROM @TableReturn\r\n\tWHERE IsCostTotal = 'N' AND CostTypeID  = '1'\r\n\tGROUP BY BillingPeriod, AgencyCodeOEC, CostTypeID;\r\n\t\t\r\n\t/* Summarize for parent/grandparent */\t\r\n\tWHILE(@levelIndex > 1)\r\n\tBEGIN\r\n\t\tINSERT INTO @TableReturn\r\n\t\t\t(publishedBillingPeriod,\r\n\t\t\tBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tBillingMonth,\r\n\t\t\tAgencyCodeOEC,\r\n\t\t\tAgencyName,\r\n\t\t\tCost,\r\n\t\t\tRevisedBilledAmount,\r\n\t\t\tLevelID,\r\n\t\t\tParentAgencyDivisionID,\r\n\t\t\tCostTypeID,\r\n\t\t\tIsCostTotal)\r\n\t\tSELECT MAX(R.publishedBillingPeriod), \r\n\t\t\tR.BillingPeriod, \r\n\t\t\tMAX(R.FiscalYear),\r\n\t\t\tMAX(R.BillingMonth),\r\n\t\t\tMAX(ad.AgencyCodeOEC),\r\n\t\t\tMAX(ad.AgencyName),\r\n\t\t\tR.Cost, \r\n\t\t\tSUM(R.RevisedBilledAmount),\r\n\t\t\t@levelIndex-1,\r\n\t\t\tMAX(ad.ParentAgencyDivisionSeqid),\r\n\t\t\tMAX(R.CostTypeID),\r\n\t\t\tR.IsCostTotal\r\n\t\tFROM @TableReturn AS R\r\n\t\t\tINNER JOIN Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS ad ON R.ParentAgencyDivisionID = ad.AgencyDivisionSeqid\r\n\t\tWHERE R.LevelID = @levelIndex\r\n\t\tGROUP BY  R.BillingPeriod, R.ParentAgencyDivisionID, R.BillingPeriod, R.Cost, R.IsCostTotal;\r\n\t\r\n\t\tSET @levelIndex = @levelIndex - 1;\r\n\tEND;\r\n\r\n\tDECLARE @PivotedTable TABLE\r\n\t\t(PublishedBillingPeriod NVARCHAR(6),\r\n\t\tFiscalYear NVARCHAR(4),\r\n\t\tAgencyCodeOEC AgencyCodeOEC,\r\n\t\tAgencyName NVARCHAR(100),\r\n\t\t[Description] NVARCHAR(100),\r\n\t\tJuly DECIMAL(18,2),\r\n\t\tAugust DECIMAL(18,2),\r\n\t\tSeptember DECIMAL(18,2),\r\n\t\tOctober DECIMAL(18,2),\r\n\t\tNovember DECIMAL(18,2),\r\n\t\tDecember DECIMAL(18,2),\r\n\t\tJanuary DECIMAL(18,2),\r\n\t\tFebruary DECIMAL(18,2),\r\n\t\tMarch DECIMAL(18,2),\r\n\t\tApril DECIMAL(18,2),\r\n\t\tMay DECIMAL(18,2),\r\n\t\tJune DECIMAL(18,2));\r\n\r\n\tINSERT INTO @PivotedTable\r\n\tSELECT * \r\n\tFROM (SELECT \r\n\t\t\tMAX(PublishedBillingPeriod) AS PublishedBillingPeriod,\r\n\t\t\tMAX(FiscalYear) AS FiscalYear, \r\n\t\t\tMAX(BillingMonth) AS BillingMonth, \r\n\t\t\tAgencyCodeOEC, \r\n\t\t\tMAX(AgencyName) AS AgencyName, \r\n\t\t\tCost, \r\n\t\t\tSUM(RevisedBilledAmount) AS RevisedBilledAmount\r\n\t\tFROM @TableReturn\r\n\t\tGROUP BY billingperiod, AgencyCodeOEC, Cost, FiscalYear\r\n\t\t) AS MonthlyData\r\n\tPIVOT ( \r\n\t\t\tSUM(RevisedBilledAmount) FOR BillingMonth IN ([July],[August],[September],[October],[November],[December],[January],[February],[March],[April],[May],[June])\r\n\t\t   ) AS BPPivot\r\n\r\n\tSELECT ROW_NUMBER() OVER (ORDER BY FiscalYear DESC, AgencyCodeOEC, [Description]) AS Id,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\t[Description],\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(July, 'C') ELSE FORMAT(July, 'N2') END July,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(August, 'C') ELSE FORMAT(August, 'N2') END August,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(September, 'C') ELSE FORMAT(September, 'N2') END September,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(October, 'C') ELSE FORMAT(October, 'N2') END October,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(November, 'C') ELSE FORMAT(November, 'N2') END November,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(December, 'C') ELSE FORMAT(December, 'N2') END December,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(January, 'C') ELSE FORMAT(January, 'N2') END January,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(February, 'C') ELSE FORMAT(February, 'N2') END February,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(March, 'C') ELSE FORMAT(March, 'N2') END March,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(April, 'C') ELSE FORMAT(April, 'N2') END April,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(May, 'C') ELSE FORMAT(May, 'N2') END May,\r\n\t\tCASE WHEN CHARINDEX('($)', [Description]) > 0 THEN FORMAT(June, 'C') ELSE FORMAT(June, 'N2') END June\r\n    FROM @PivotedTable;\r\nEND;"
        }
      ]
    }
  ]
}
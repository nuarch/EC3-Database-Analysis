{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_ProcessAccountBillingRebilledAdjustment",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_ProcessAccountBillingRebilledAdjustment",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process account billing adjustments for a utility company, specifically focusing on gas billing adjustments. It updates billing records based on adjustments from a staging table and marks these adjustments as processed. The procedure is part of a larger billing system, likely used to ensure that billing records reflect the most current and accurate data after adjustments have been made."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this stored procedure is medium. It involves multiple SQL operations, including SELECT, UPDATE, and conditional logic. The procedure interacts with several tables and uses joins to ensure data consistency and integrity. The complexity is increased by the need to handle business logic related to billing adjustments and the use of audit triggers."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is intended to capture the ID of the user executing the procedure. However, it is not used within the procedure, which might indicate a design oversight or future extensibility."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode int OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This output parameter is used to indicate the success or failure of the procedure's execution. A value of "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " indicates success, while a value of "
                },
                {
                  "type": "text",
                  "text": "9",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " would indicate failure, although the latter is not explicitly set in the procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variable Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Several variables are declared to hold intermediate data, such as the number of adjustments processed and various identifiers related to billing periods and utility companies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure retrieves the current billing period, account invoice billing group, and utility company sequence ID from the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Check for Processed Billing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if the billing for the current period and utility company has already been processed by counting matching records in the "
                },
                {
                  "type": "text",
                  "text": "AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "AccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If no records have been processed ("
                },
                {
                  "type": "text",
                  "text": "@HasAccountBillingBeenProcessed",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is 0), the procedure proceeds to update the "
                },
                {
                  "type": "text",
                  "text": "AccountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables with data from "
                },
                {
                  "type": "text",
                  "text": "AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "AccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with revised billing amounts and other details."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with revised gas-specific billing details."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Marks records in "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " as processed by setting "
                        },
                        {
                          "type": "text",
                          "text": "IsProcessed",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to 'Y'."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Count Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": After each update, the procedure logs the number of rows affected using "
                },
                {
                  "type": "text",
                  "text": "@@ROWCOUNT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Status Code Setting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure sets the "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to indicate successful execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved, especially those with joins and WHERE clauses, have appropriate indexes to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not explicitly manage transactions, which could lead to partial updates if an error occurs. Consider wrapping updates in a transaction block."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances are run simultaneously, potentially leading to race conditions or deadlocks."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Unused Parameter",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter is not used, which might indicate incomplete implementation or a missed requirement."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks error handling mechanisms. Consider adding TRY...CATCH blocks to handle exceptions and set the "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " appropriately."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Audit Trigger Dependency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on audit triggers ("
                },
                {
                  "type": "text",
                  "text": "FireAuditTrigger = 'Y'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "), which could introduce performance overhead or complexity if not managed correctly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains hardcoded logic specific to certain utility companies (e.g., Con Ed and National Grid West), which may limit its reusability or require frequent updates if business rules change."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_ProcessAccountBillingRebilledAdjustment] @AuthenticatedUserID int , @StatusCode int  OUTPUT\n   \r\n AS --**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  \r\n--* \r\n--\r\n--*               \r\n--* Exec:  \t\t usp_ProcessAccountBillingSaveCanceRebillAdjustments\r\n--*\r\n--* Parameter(s):         \r\n--*\t\t\t       AuthenticatedUserID int Output\r\n--*                StatusCode  int output       -  Execution Return Status \r\n--*\r\n--* Database:     OEC\r\n--*\r\n--* Return:\t    0 Success\r\n--*                   9 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   10/26/2005\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 07/06/2010 PAH  First Version  \r\n--* 08/30/2011 PAH  RevisedGasChargeAmount = Billing.AccountBillingAdjustmentCrisGas.GasChargeAmount\r\n--***************************************************************************************\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\n--\r\ndeclare @NumberOfAdjustmentsAdded int\r\ndeclare @CurrentBillingPeriod varchar(8)\r\ndeclare @AccountInvoiceBillingGroup int \r\ndeclare @UtilityCompanySeqid int\r\n--\r\ndeclare @HasAccountBillingAdjustmentGasBeenProcessed int\r\ndeclare @HasAccountBillingGasBeenProcessed int\r\ndeclare @HasAccountBillingBeenProcessed int\r\n--\r\ndeclare @BillingAccountBillingCrisGasUpdateTransactionCount int\r\ndeclare @BillingAccountBillingUpdateTransactionCount int \r\n--\r\ndeclare @BillingAccountBillingGasInsertTransactionCount int\r\ndeclare @BillingAccountBillingInsertTransactionCount int \r\ndeclare @AccountBillingCrisGasIsProcessedTransactionCount int \r\n--\r\n--**************************************************************************************  \r\n--SET DEFAULTS                                                  \r\n--**************************************************************************************\r\n--\r\n--************************************************************************************** \r\n--\tMain Processing\r\n--**************************************************************************************\r\n-- Remove after testing\r\n--delete from Billing.AccountBillingAdjustmentCrisGas \r\n--DBCC CHECKIDENT ('Billing.AccountBillingAdjustmentCrisGas', RESEED,0)\r\n--\r\n-- Get all of the generalized parameters needed to process the account billing from the Gas.UploadAccountBillingAdjustmentGas\r\n--\r\n--\t\t@CurrentBillingPeriod = BillingPeriod \r\n--\t\t@AccountInvoiceBillingGroup=InvoiceAccountBillingGroupSeqid \r\n--\t\t@UtilityCompanySeqid=UtilityCompanySeqid\r\n--\r\nSELECT\tTOP (1)\t@CurrentBillingPeriod = BillingPeriod, \r\n\t\t\t\t@AccountInvoiceBillingGroup=AccountInvoiceBillingGroup, \r\n\t\t\t\t@UtilityCompanySeqid=UtilityCompanySeqid\r\nFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n--\r\n--\r\nselect\t@HasAccountBillingBeenProcessed = COUNT(*)\r\nFROM     \r\n\t\tBilling.AccountBillingCrisGas INNER JOIN\r\n\t\tBilling.AccountBilling ON Billing.AccountBillingCrisGas.AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid AND \r\n\t\tBilling.AccountBillingCrisGas.OriginalAccountNumber = Billing.AccountBilling.OriginalAccountNumber AND \r\n\t\tBilling.AccountBillingCrisGas.BillingPeriod = Billing.AccountBilling.BillingPeriod AND \r\n\t\tBilling.AccountBillingCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision\r\nWHERE \r\n\t\t(Billing.AccountBillingCrisGas.BillingPeriod = @CurrentBillingPeriod) AND \r\n\t\t(Billing.AccountBillingCrisGas.UtilityCompanySeqid = @UtilityCompanySeqid) and \r\n\t\t(Billing.AccountBilling.CurrentInvoiceAccountBillingGroup = @AccountInvoiceBillingGroup)\r\n--\r\n-- if this occurs \"isnull(@HasAccountBillingBeenProcessed,1)= 0\" then set the value to 1 or @HasAccountBillingBeenProcessed > 0 Then do not process\r\n--\r\nif (isnull(@HasAccountBillingBeenProcessed,1)= 0)\r\n   BEGIN\r\n\t\t--\r\n\t\t--\tNational Grid West Special Ledger current period discount.\r\n\t\t--\tRevisedBilledAmount =Billing.AccountBillingAdjustmentCrisGas.RevisedBilledAmount+Billing.AccountBillingAdjustmentCrisGas.DiscountedAmount\r\n\t\t--\tNote:\r\n\t\t--\t\t\tBilling.AccountBillingAdjustmentCrisGas.DiscountedAmount is zero for Con Ed and National Grid West CRIS accounts\r\n\t\t--\r\n\t\tUPDATE  Billing.AccountBilling\r\n\t\tSET     LastPeriodModified = Billing.AccountBillingAdjustmentCrisGas.BillingPeriod,         \r\n\t\t\t\tFromDate =Billing.AccountBillingAdjustmentCrisGas.FromDate, \r\n\t\t\t\tToDate =Billing.AccountBillingAdjustmentCrisGas.ToDate, \r\n\t\t\t\tAccountBillingStatus =Billing.AccountBillingAdjustmentCrisGas.AccountBillingStatus,\r\n\t\t\t\tPreviousAccountBillingStatus =Billing.AccountBillingAdjustmentCrisGas.PreviousAccountBillingStatus, \r\n\t\t\t\tAccountBillingStatusCodePeriod =Billing.AccountBillingAdjustmentCrisGas.AccountBillingStatusCodePeriod, \r\n\t\t\t\tRevisedBilledAmount =Billing.AccountBillingAdjustmentCrisGas.RevisedBilledAmount,\r\n\t\t\t\tAccountEnergyUsage =Billing.AccountBillingAdjustmentCrisGas.RevisedTherms, \r\n\t\t\t\tNetEnergyUsageChange =Billing.AccountBillingAdjustmentCrisGas.NetChangeTherms,\r\n\t\t\t\tNetDollarChange = Billing.AccountBillingAdjustmentCrisGas.NetChangeDollars,\r\n\t\t\t\tBillingPeriodDays =Billing.AccountBillingAdjustmentCrisGas.BillingDays,  \r\n\t\t\t\tSplitFiscalYear = dbo.[IsFiscalYearSplit] (Billing.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate), -- SplitFiscalYear\r\n\t\t\t\tChargeToFiscalYear = dbo.[CalculateFiscalYearIfSplit] (Billing.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate,'T'), --ChargeToFiscalYear \t\r\n\t\t\t\tChargeToPriorFiscalYear = dbo.[CalculateFiscalYearIfSplit] (Billing.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate,'F'), -- ChargeToPriorFiscalYear\r\n\t\t\t\tLastUpdate = getdate(),\r\n\t\t\t\tFireAuditTrigger = 'Y'\r\n\t\tFROM     \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\t\t\tBilling.AccountBilling ON Billing.AccountBillingAdjustmentCrisGas.AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid AND \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.UtilityCompanySeqid = Billing.AccountBilling.UtilityCompanySeqid AND \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision\r\n\t\tWHERE \r\n\t\t\t\t(Billing.AccountBillingAdjustmentCrisGas.BillingPeriod = @CurrentBillingPeriod) and \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.IsProcessed='N'\r\n\r\n--\r\n\t\tset @BillingAccountBillingUpdateTransactionCount = @@rowcount\r\n\t\tprint 'Update AccountBillingUpdateTransactionCount: '+str(@BillingAccountBillingUpdateTransactionCount)\r\n\t\t--\r\n\t\t--\r\n\t\t-- Update the adjustments first since the Billing.AccountBillingAdjustmentCrisGas for the current period\r\n\t\t-- has indetified all of the adjustments that exist in EC3.  The Billing.AccountBilling AccountBillingSeqid\r\n\t\t-- is not null and the Billing.AccountBillingCrisGas AccountBillingGasSeqid is not null.\r\n\t\t-- \r\n\t\t-- The key to this update is the setting of the LastUpdate to a null value so the audit trigger preserves\r\n\t\t-- the prior state of the row before the Billing.AccountBilling or Billing.AccountBillingCrisGas are updated\r\n\t\t-- with the adjusted values.\r\n\t\t--\r\n\t\t--  Note: Legacy MiscellaneousChargeAmount,AccountArrears, BalanceDollars & CreditDollars will never be adjusted.\r\n\t\t--\r\n\t\tupdate\t\tBilling.AccountBillingCrisGas\r\n\t\tSET         OldCrisLegacyAccountBillingAdjustmentGasSeqid = null,\r\n\t\t\t\t\tLastPeriodModified = Billing.AccountBillingAdjustmentCrisGas.BillingPeriod, \r\n\t\t\t\t\tBilledCCF = Billing.AccountBillingAdjustmentCrisGas.RevisedCCF, \r\n\t\t\t\t\tThermFactor = Billing.AccountBillingAdjustmentCrisGas.ThermFactor, \r\n\t\t\t\t\tBilledTherms = Billing.AccountBillingAdjustmentCrisGas.RevisedTherms, \r\n\t\t\t\t\tNotes = Billing.AccountBillingAdjustmentCrisGas.Notes, \r\n\t\t\t\t\tAccountBillingAdjustmentCrisGasSeqid = Billing.AccountBillingAdjustmentCrisGas.AccountBillingAdjustmentCrisGasSeqid, \r\n\t\t\t\t\tLastUpdate = GETDATE(), \r\n\t\t\t\t\tFireAuditTrigger = 'Y', \r\n\t\t\t\t\tNumberOfMeters = Billing.AccountBillingAdjustmentCrisGas.NumberOfMeters, \r\n\t\t\t\t\tCommodityChargeAmount = Billing.AccountBillingAdjustmentCrisGas.CommodityChargeAmount, \r\n\t\t\t\t\tDeliveryChargeAmount = Billing.AccountBillingAdjustmentCrisGas.DeliveryChargeAmount,\r\n\t\t\t\t\tMTACommodityTax = Billing.AccountBillingAdjustmentCrisGas.MTACommodityTax,\r\n\t\t\t\t\tMTADeliveryTax = Billing.AccountBillingAdjustmentCrisGas.MTADeliveryTax, \r\n\t\t\t\t\tSalesTax = Billing.AccountBillingAdjustmentCrisGas.SalesTax, \r\n\t\t\t\t\tSystemBenefitsCharge = Billing.AccountBillingAdjustmentCrisGas.SystemBenefitsCharge, \r\n\t\t\t\t\tRetailDecouplingMechanismCharge = Billing.AccountBillingAdjustmentCrisGas.RetailDecouplingMechanismCharge, \r\n\t\t\t\t\tDeliveryRateSurcharge = Billing.AccountBillingAdjustmentCrisGas.DeliveryRateSurcharge, \r\n\t\t\t\t\tRealTimeNormalizationCharge = Billing.AccountBillingAdjustmentCrisGas.RealTimeNormalizationCharge, \r\n\t\t\t\t\tLatePaymentCharge = Billing.AccountBillingAdjustmentCrisGas.LatePaymentCharge, \r\n\t\t\t\t\tPaperBillCharge = Billing.AccountBillingAdjustmentCrisGas.PaperBillCharge, \r\n\t\t\t\t\t--MiscellaneousChargeAmount = Billing.AccountBillingAdjustmentCrisGas.MiscellaneousChargeAmount, \r\n\t\t\t\t\t--MiscellaneousChargeType = Billing.AccountBillingAdjustmentCrisGas.MiscellaneousChargeType,\r\n\t\t\t\t\tGasRateCode = Billing.AccountBillingAdjustmentCrisGas.GasRateCode,\r\n\t\t\t\t\tRevisedGasChargeAmount = Billing.AccountBillingAdjustmentCrisGas.RevisedGasChargeAmount\r\n\t\tFROM \r\n\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\t\t\t\tBilling.AccountBilling ON Billing.AccountBillingAdjustmentCrisGas.AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid AND \r\n\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision AND \r\n\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriod INNER JOIN\r\n\t\t\t\t\tBilling.AccountBillingCrisGas ON Billing.AccountBilling.AccountBillingSeqid = Billing.AccountBillingCrisGas.AccountBillingSeqid AND \r\n\t\t\t\t\tBilling.AccountBilling.BillingPeriod = Billing.AccountBillingCrisGas.BillingPeriod AND \r\n\t\t\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingCrisGas.BillingPeriodRevision AND \r\n\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.AccountBillingCrisGasSeqid = Billing.AccountBillingCrisGas.AccountBillingCrisGasSeqid\r\n\t\tWHERE \r\n\t\t\t\t\t(Billing.AccountBillingAdjustmentCrisGas.BillingPeriod = @CurrentBillingPeriod)  and \r\n\t\t\t\tBilling.AccountBillingAdjustmentCrisGas.IsProcessed='N'\r\n\r\n\r\n\r\n      \t--\t\t\t\t\t\t\t\t\t           \r\n\t\tset @BillingAccountBillingCrisGasUpdateTransactionCount = @@rowcount\r\n   \t\tprint 'Update AccountBillingCrisGasUpdateTransactionCount: '+str(@BillingAccountBillingCrisGasUpdateTransactionCount)\r\n   \t\t--\r\n   \t\tupdate\tBilling.AccountBillingAdjustmentCrisGas\r\n   \t\tset\t\tIsProcessed='Y'\r\n\t\tFROM     \r\n\t\t\t\t\tBilling.AccountBillingCrisGas INNER JOIN\r\n\t\t\t\t\tBilling.AccountBilling ON Billing.AccountBillingCrisGas.AccountBillingSeqid = Billing.AccountBilling.AccountBillingSeqid AND \r\n\t\t\t\t\tBilling.AccountBillingCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision INNER JOIN\r\n\t\t\t\t\tBilling.AccountBillingAdjustmentCrisGas ON \r\n\t\t\t\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingAdjustmentCrisGas.BillingPeriodRevision AND \r\n\t\t\t\t\tBilling.AccountBilling.AccountBillingSeqid = Billing.AccountBillingAdjustmentCrisGas.AccountBillingSeqid AND \r\n\t\t\t\t\tBilling.AccountBillingCrisGas.AccountBillingCrisGasSeqid = Billing.AccountBillingAdjustmentCrisGas.AccountBillingCrisGasSeqid\r\n\t\tWHERE \r\n\t\t\t\t\t(Billing.AccountBillingAdjustmentCrisGas.BillingPeriod = @CurrentBillingPeriod) AND \r\n\t\t\t\t\t(Billing.AccountBillingAdjustmentCrisGas.IsProcessed = 'N')      \r\n\t\t\t\r\n--\t\t\t\t\t\t\t\t\t           \r\n\t\tset @AccountBillingCrisGasIsProcessedTransactionCount = @@rowcount\r\n   \t\tprint 'Is Processed AccountBillingCrisGas Update TransactionCount: '+str(@AccountBillingCrisGasIsProcessedTransactionCount)\r\n   \t\t--\r\nend\r\n\t\t\t\r\n--\r\nset @StatusCode = 0\r\n\r\nEnd"
        }
      ]
    }
  ]
}
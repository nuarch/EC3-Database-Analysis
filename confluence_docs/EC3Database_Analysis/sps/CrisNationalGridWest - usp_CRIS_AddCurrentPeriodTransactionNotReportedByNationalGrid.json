{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_AddCurrentPeriodTransactionNotReportedByNationalGrid",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_AddCurrentPeriodTransactionNotReportedByNationalGrid",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to handle billing records that have not been reported by National Grid for the current period. It identifies such records from the "
        },
        {
          "type": "text",
          "text": "UploadAccountBillingDetail",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table, processes them, and updates or inserts them into other tables for further handling. The procedure is intended to be executed after spanned records have been processed and moved to an adjustment gas table."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including temporary table creation, data selection, conditional logic, data insertion, and updates. It interacts with several tables and performs operations that require a good understanding of the database schema and business rules, making it moderately complex."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on the data available in the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest.UploadAccountBillingDetail",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table and other related tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure begins by checking if a temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#MissingCurrentPeriodAccount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " exists in "
                        },
                        {
                          "type": "text",
                          "text": "tempdb",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and drops it if it does."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It then creates this temporary table by selecting records from "
                        },
                        {
                          "type": "text",
                          "text": "UploadAccountBillingDetail",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where "
                        },
                        {
                          "type": "text",
                          "text": "ActivityDateTime",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is not null and "
                        },
                        {
                          "type": "text",
                          "text": "BillingPeriodRevision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is less than "
                        },
                        {
                          "type": "text",
                          "text": "BillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Count Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The number of records inserted into the temporary table is stored in the variable "
                        },
                        {
                          "type": "text",
                          "text": "@MissingCurrentPeriodAccountTransactions",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If there are records in the temporary table ("
                        },
                        {
                          "type": "text",
                          "text": "@MissingCurrentPeriodAccountTransactions > 0",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "), the procedure proceeds with further processing:"
                        }
                      ]
                    },
                    {
                      "type": "bulletList",
                      "content": [
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Truncate and Insert",
                                  "marks": [
                                    {
                                      "type": "strong"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ": It truncates the "
                                },
                                {
                                  "type": "text",
                                  "text": "EC3MissingCurrentPeriodAccountTransactions",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " table and inserts the records from the temporary table into it."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Update",
                                  "marks": [
                                    {
                                      "type": "strong"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ": It updates the "
                                },
                                {
                                  "type": "text",
                                  "text": "UploadAccountBillingDetail",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " table, setting several fields to default values (e.g., null or zero) for records that match those in the temporary table."
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "listItem",
                          "content": [
                            {
                              "type": "paragraph",
                              "content": [
                                {
                                  "type": "text",
                                  "text": "Insert",
                                  "marks": [
                                    {
                                      "type": "strong"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": ": It inserts new records into "
                                },
                                {
                                  "type": "text",
                                  "text": "UploadAccountBillingDetail",
                                  "marks": [
                                    {
                                      "type": "code"
                                    }
                                  ]
                                },
                                {
                                  "type": "text",
                                  "text": " with adjusted values, indicating that National Grid did not report these transactions."
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If no records are found in the temporary table, the procedure simply returns 'Okay!'."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Select",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure concludes by selecting and ordering records from "
                        },
                        {
                          "type": "text",
                          "text": "EC3MissingCurrentPeriodAccountTransactions",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " joined with "
                        },
                        {
                          "type": "text",
                          "text": "UploadAccountBillingDetail",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to provide a detailed view of the missing transactions."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table can impact performance, especially if the dataset is large. Indexing the temporary table could improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Truncate Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating the "
                },
                {
                  "type": "text",
                  "text": "EC3MissingCurrentPeriodAccountTransactions",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is efficient but assumes that all previous data is no longer needed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Join Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The join operations in the final select statement can be resource-intensive if the tables involved are large and not properly indexed."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates and inserts records based on the assumption that the logic correctly identifies missing transactions. Any errors in this logic could lead to incorrect data being recorded."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure run simultaneously, there could be contention issues, especially with the temporary table and the truncate operation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions if an error occurs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of this procedure may degrade, particularly due to the use of temporary tables and the lack of indexing on them."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Description:\tMerge Account Billing Ajustment records with the same account number and same billing period revision\r\n--\t\t\t\tThis procedure should be called after spanned records are processed and moved to adjustment gas table.\r\n-- Create date:\t\t06/09/2010 (DHO)\r\n-- Update History:\t08/31/2010\t(PAH)\r\n--\t\t\t\tUsed the maximum BillingToDate for the current period bill's BillingFromDate & BillingToDate\r\n--\t\t\t\tZero Billing Days for the current period.\r\n--\t\t\t\t\r\n--\t\t\t\t\r\n--\t\t\t\t\r\n-- =============================================\r\nCREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_AddCurrentPeriodTransactionNotReportedByNationalGrid]\r\nAS\r\nBEGIN\r\n--\r\n\tif (OBJECT_ID('tempdb..#MissingCurrentPeriodAccount') is not null) drop table #MissingCurrentPeriodAccount\r\n--\r\n\tdeclare @MissingCurrentPeriodAccountTransactions int\r\n\r\n\tSELECT *\r\n\tinto\t#MissingCurrentPeriodAccount\r\n\tFROM \r\n\t\t\tCrisNationalGridWest.UploadAccountBillingDetail\r\n\twhere \r\n\t\t\tActivityDateTime is not null and \r\n\t\t\tBillingPeriodRevision< BillingPeriod\r\n\tselect @MissingCurrentPeriodAccountTransactions = @@ROWCOUNT\t\r\n--\r\n--\r\n\tif (@MissingCurrentPeriodAccountTransactions > 0)\r\n\tbegin\r\n\t\t--\r\n\t\ttruncate table CrisNationalGridWest.EC3MissingCurrentPeriodAccountTransactions\r\n\t\t--\r\n\t\tinsert CrisNationalGridWest.EC3MissingCurrentPeriodAccountTransactions\r\n\t\t(\r\n\t\t\t\tBillingPeriod ,\r\n\t\t\t\tBillingPeriodRevision ,\r\n\t\t\t\tFirstBillingPeriodCanceled ,\r\n\t\t\t\tIsSpannedBilling ,\r\n\t\t\t\tAccountNumber ,\r\n\t\t\t\tFromDate,\r\n\t\t\t\tToDate,\r\n\t\t\t\tUtilityServiceAccountName ,\r\n\t\t\t\tUtilityServiceAddress ,\r\n\t\t\t\tSpecialLedgerAccountNUmber ,\r\n\t\t\t\tGasRateCode ,\r\n\t\t\t\tGasChargeAmount ,\r\n\t\t\t\tCurrentAccountBalance ,\r\n\t\t\t\tAccountArrears ,\r\n\t\t\t\tTerminationBalance ,\r\n\t\t\t\tMiscellaneousChargeAmount ,\r\n\t\t\t\tMiscellaneousChargeType ,\r\n\t\t\t\tAuthenticatedUserID ,\r\n\t\t\t\tDateAdded ,\r\n\t\t\t\tLastUpdate\r\n\t\t)\r\n\t\tselect  \r\n\t\t\t\tBillingPeriod ,\r\n\t\t\t\tBillingPeriodRevision ,\r\n\t\t\t\tFirstBillingPeriodCanceled ,\r\n\t\t\t\tIsSpannedBilling ,\r\n\t\t\t\tAccountNumber ,\r\n\t\t\t\tBillingFromDate,\r\n\t\t\t\tBillingToDate,\r\n\t\t\t\tUtilityServiceAccountName ,\r\n\t\t\t\tUtilityServiceAddress ,\r\n\t\t\t\tSpecialLedgerAccountNUmber ,\r\n\t\t\t\tGasRateCode ,\r\n\t\t\t\tGasChargeAmount ,\r\n\t\t\t\tCurrentAccountBalance ,\r\n\t\t\t\tAccountArrears ,\r\n\t\t\t\tTerminationBalance ,\r\n\t\t\t\tMiscellaneousChargeAmount ,\r\n\t\t\t\tMiscellaneousChargeType ,\r\n\t\t\t\tAuthenticatedUserID ,\r\n\t\t\t\tDateAdded ,\r\n\t\t\t\tLastUpdate\r\n\t\t from \r\n\t\t\t\t#MissingCurrentPeriodAccount\r\n\t\t--\t\r\n\t\t--\r\n\t\tUPDATE    CrisNationalGridWest.UploadAccountBillingDetail\r\n\t\tSET              \r\n\t\t\t\tActivityDateTime =null\t, CurrentAccountBalance =0, AccountArrears =0, TerminationBalance =0, \r\n\t\t\t\tTotalPaymentsPosted =0, DateLastPayment =null\t, MiscellaneousChargeAmount =0, MiscellaneousChargeType =null\t\r\n\t\tFROM    \r\n\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail INNER JOIN\r\n\t\t\t\t#MissingCurrentPeriodAccount ON \r\n\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail.UploadAccountBillingDetailSeqid = #MissingCurrentPeriodAccount.UploadAccountBillingDetailSeqid\r\n\t--\r\n\t--\t\r\n\t--\r\n\t\tINSERT INTO CrisNationalGridWest.UploadAccountBillingDetail\r\n\t\t\t\t  (UtilityCompanySeqid, AccountInvoiceBillingGroup, BillingPeriod, BillingPeriodRevision, CalculatedBillingPeriodRevision, FirstBillingPeriodCanceled, \r\n\t\t\t\t  FirstNewCRISBillingPeriodRevision, IsSpannedBilling, NumberOfBillingPeriod, IsCurrentPeriodExchange, AccountNumber, MeterReadWorkDay, \r\n\t\t\t\t  UtilityServiceAccountName, UtilityServiceAddress, Borough, Zipcode, State, ActivityCode, ActivityDate, ActivityTime, ActivityDateTime, \r\n\t\t\t\t  TransactionCode, SpecialLedgerAccountNUmber, SpecialLedgerWorkDay, GasRateCode, BillFrequency, EstimatedOrActualBillingCode, \r\n\t\t\t\t  GasChargeAmount, BillingFromDate, BillingToDate, BillRenderDate, BillingDays, BilledCCF, ThermFactor, BilledTherms, NumberOfMeters, BillType, \r\n\t\t\t\t  CommodityChargeAmount, DeliveryChargeAmount, MTACommodityTax, MTADeliveryTax, SalesTax, SystemBenefitsCharge, \r\n\t\t\t\t  RetailDecouplingMechanismCharge, DeliveryRateSurcharge, RealTimeNormalizationCharge, LatePaymentCharge, PaperBillCharge, \r\n\t\t\t\t  CommodityCostFactor, MTACommodityFactor, MTADeliveryFactor, SalesTaxFactor, SystemBenefitChargeFactor, RetailDecouplingMechanismFactor, \r\n\t\t\t\t  DeliveryRateSurchargeFactor, RealTimeNormalizationFactor, LatePaymentFactor, CurrentAccountBalance, AccountArrears, TerminationBalance, \r\n\t\t\t\t  TotalPaymentsPosted, DateLastPayment, MiscellaneousChargeAmount, MiscellaneousChargeType, ExcludeAndReview, FireAuditTrigger, Notes, \r\n\t\t\t\t  AuthenticatedUserID, DateAdded, LastUpdate)\r\n\t\tSELECT            \r\n\t\t\t\t\tUtilityCompanySeqid, AccountInvoiceBillingGroup, BillingPeriod, BillingPeriod as BillingPeriodRevision, BillingPeriod as CalculatedBillingPeriodRevision, \r\n\t\t\t\t\tBillingPeriod as FirstBillingPeriodCanceled, \r\n\t\t\t\t\tBillingPeriod as FirstNewCRISBillingPeriodRevision, 'N' as IsSpannedBilling, 1 as NumberOfBillingPeriod, \r\n\t\t\t\t\tIsCurrentPeriodExchange, AccountNumber, MeterReadWorkDay, \r\n\t\t\t\t\tUtilityServiceAccountName, UtilityServiceAddress, Borough, Zipcode, State, \r\n\t\t\t\t\tActivityCode, ActivityDate, ActivityTime, ActivityDateTime, \r\n\t\t\t\t\tTransactionCode, SpecialLedgerAccountNUmber, SpecialLedgerWorkDay, GasRateCode, BillFrequency, 'EST' as EstimatedOrActualBillingCode, \r\n\t\t\t\t\t0 as GasChargeAmount, \r\n\t\t\t\t\tBillingToDate AS BillingFromDate,  --CrisNationalGridWest.DetermineFromDateFromBillingPeriodAndWDNumber(MeterReadWorkDay,BillingPeriod) \r\n\t\t\t\t\tBillingToDate as BillingToDate, --CrisNationalGridWest.DetermineToDateFromBillingPeriodAndWDNumber(MeterReadWorkDay,BillingPeriod) \r\n\t\t\t\t\tBillRenderDate, \r\n\t\t\t\t\t--dbo.CalculateNumberOfBillingDays(CrisNationalGridWest.DetermineFromDateFromBillingPeriodAndWDNumber(MeterReadWorkDay,dbo.CalculatePreviousBillingPeriod (BillingPeriod,'M')) ,\r\n\t\t\t\t\t0 AS BillingDays, --CrisNationalGridWest.DetermineToDateFromBillingPeriodAndWDNumber(MeterReadWorkDay,BillingPeriod))\r\n\t\t\t\t\t0 as BilledCCF, \r\n\t\t\t\t\tThermFactor, \r\n\t\t\t\t\t0 as BilledTherms, NumberOfMeters, BillType, \r\n\t\t\t\t\t0 as CommodityChargeAmount, 0 as DeliveryChargeAmount, 0 as MTACommodityTax, 0 as MTADeliveryTax, 0 as SalesTax, 0 as SystemBenefitsCharge, \r\n\t\t\t\t\t0 as RetailDecouplingMechanismCharge, 0 as DeliveryRateSurcharge, 0 as RealTimeNormalizationCharge, 0 as LatePaymentCharge, 0 as PaperBillCharge, \r\n\t\t\t\t\tCommodityCostFactor, MTACommodityFactor, MTADeliveryFactor, SalesTaxFactor, SystemBenefitChargeFactor, RetailDecouplingMechanismFactor, \r\n\t\t\t\t\tDeliveryRateSurchargeFactor, RealTimeNormalizationFactor, LatePaymentFactor, \r\n\t\t\t\t\tCurrentAccountBalance, AccountArrears, TerminationBalance, \r\n\t\t\t\t\tTotalPaymentsPosted, DateLastPayment, MiscellaneousChargeAmount, MiscellaneousChargeType, \r\n\t\t\t\t\t'N' as ExcludeAndReview, FireAuditTrigger,'National Grid did not report a current period transaction, EC3 is inserting this' as Notes, \r\n\t\t\t\t\t1 as AuthenticatedUserID, DateAdded, LastUpdate\r\n\t\tfrom #MissingCurrentPeriodAccount\r\n\t\t--\r\n\t\t\t\tselect\tu.UploadAccountBillingDetailSeqid,\r\n\t\t\t\t\t\tu.notes,\r\n\t\t\t\t\t\ta.BillingPeriod ,\r\n\t\t\t\t        u.BillingPeriodRevision ,\r\n\t\t\t\t        u.FirstBillingPeriodCanceled ,\r\n\t\t\t\t        u.IsSpannedBilling ,\r\n\t\t\t\t        u.BillingFromDate,\r\n\t\t\t\t        u.BillingToDate,\r\n\t\t\t\t        a.AccountNumber ,\r\n\t\t\t\t        a.UtilityServiceAccountName ,\r\n\t\t\t\t        a.UtilityServiceAddress ,\r\n\t\t\t\t        a.SpecialLedgerAccountNUmber ,\r\n\t\t\t\t        a.GasRateCode ,\r\n\t\t\t\t        a.GasChargeAmount ,\r\n\t\t\t\t        a.CurrentAccountBalance ,\r\n\t\t\t\t        a.AccountArrears ,\r\n\t\t\t\t        a.TerminationBalance ,\r\n\t\t\t\t        a.MiscellaneousChargeAmount ,\r\n\t\t\t\t        a.MiscellaneousChargeType ,\r\n\t\t\t\t        a.AuthenticatedUserID ,\r\n\t\t\t\t        a.DateAdded ,\r\n\t\t\t\t        a.LastUpdate,'CrisNationalGridWest.EC3MissingCurrentPeriodAccountTransactions - Missing Current Period Transactions'\r\n\t\t        from\tCrisNationalGridWest.EC3MissingCurrentPeriodAccountTransactions as a inner join\r\n\t\t\t\t\t\tCrisNationalGridWest.UploadAccountBillingDetail as u on\r\n\t\t\t\t\t\ta.AccountNumber = u.AccountNumber and a.BillingPeriod = u.BillingPeriod\r\n\t\t\t\torder by a.AccountNumber,u.BillingToDate desc\r\n\t\tend\r\n\telse\r\n\t\tbegin\r\n\t\t\tselect 'Okay!'\r\n\t\tend\r\n\r\n\r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_NYPA_ActualAndMinimumDemandBilling",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_NYPA_ActualAndMinimumDemandBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report for actual and minimum demand billing for the New York Power Authority (NYPA). It logs the report usage, calculates fiscal years, and retrieves billing data for specified agencies and billing periods. The procedure processes data related to electricity demand and billing, including actual usage and minimum demand charges, and outputs a detailed report."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including logging, fiscal year calculation, data retrieval from multiple tables, and complex calculations for billing. The use of temporary tables and joins adds to its complexity, but it remains manageable due to its structured approach."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the report is published."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The specific billing period for which data is being queried."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress emailaddr",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report, used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The agency code for which the billing data is being retrieved."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by logging the report request using the "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " stored procedure. This includes details such as the report name, stored procedure name, requester email, and billing periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Fiscal Year Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the fiscal year based on the "
                },
                {
                  "type": "text",
                  "text": "@BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". If the month is between July and December, the start period is set to July of the current year; otherwise, it is set to January of the fiscal year."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A temporary table "
                },
                {
                  "type": "text",
                  "text": "@SelectedAgencies",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is populated with agency details by calling a function "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which retrieves agencies related to the provided "
                },
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval and Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Another temporary table "
                },
                {
                  "type": "text",
                  "text": "@result",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is used to store the final report data. The procedure retrieves data from several tables ("
                },
                {
                  "type": "text",
                  "text": "AccountBillingElectric",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "Facility",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") and performs calculations to determine actual and minimum demand billing amounts. It calculates incremental minimum demand billed by comparing actual usage against minimum billed demand and applying rates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure outputs the results ordered by "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved in joins and where clauses, such as "
                },
                {
                  "type": "text",
                  "text": "AccountBillingElectric",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "Facility",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", have appropriate indexes to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of temporary tables ("
                },
                {
                  "type": "text",
                  "text": "@SelectedAgencies",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@result",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can be efficient for handling intermediate data, but their performance depends on the volume of data processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The function "
                },
                {
                  "type": "text",
                  "text": "CalculateFiscalYear",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " should be optimized for performance, as they are called for each execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the data in the billing tables is accurate and up-to-date. Any discrepancies in the data could lead to incorrect billing calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple users run this procedure simultaneously, it could lead to performance bottlenecks, especially if the underlying tables are large and heavily accessed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions if any part of the process fails."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains hardcoded values, such as "
                },
                {
                  "type": "text",
                  "text": "UtilityAccountProvider = 7",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and specific account statuses, which may need to be updated if business rules change."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n\t\t--* Description:  Procedure for NYPA actual and minimum demand billing report\r\n\t\t--*\r\n\t\t--* AUTHOR:      dho      \r\n\t\t--* Created On :  \r\n\t\t--**************************************************************************************\r\n\t\t--* Date       Tech Description of Change\r\n\t\t--* ---------- ---\t-------------------------------------------------------------\r\n\t\t--* 2015-11-13  ZD  Added Report log SP block\r\n\t\t--**************************************************************************************\r\n\r\nCREATE PROCEDURE [Report].[usp_NYPA_ActualAndMinimumDemandBilling]\r\n\t@PublishedBillingPeriod BillingPeriod, \r\n\t@BillingPeriod BillingPeriod,\r\n    @EmailAddress emailaddr,\r\n\t@AgencyCodeOEC AgencyCodeOEC\r\nAS\r\nBEGIN\r\n\r\n--------------------------------------------------------------------------\r\n-- This block is added to track report log -------------------------------\r\n DECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID)\r\nEXEC [Audit].usp_AddReportUsageLog\r\n\t@ReportName\t\t\t\t\t= @spname,\r\n    @StoredProcName\t\t\t\t= @spname,\r\n    @RequestedBy\t\t\t\t= @EmailAddress,\r\n    \r\n    @prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n    @prmBillingPeriod\t\t\t= @BillingPeriod, -- BillingPeriod\r\n    @prmAgency_ies\t\t\t\t= @AgencyCodeOEC,\r\n    @prmFacilityNumber_s\t\t= NULL,\r\n    @prmStartingBillingPeriod\t= NULL,\r\n    @prmEndingBillingPeriod\t\t= NULL\r\n\r\n--------------------------------------------------------------------------\r\n\r\n\tDECLARE @StartPeriod BillingPeriod\r\n\tDECLARE @FiscalYear VARCHAR(4)\r\n\r\n\t-- test \r\n\t--SET @BillingPeriod = '201211'\r\n\t--SET @PublishedBillingPeriod = '201211'\r\n\t--SET @EmailAddress = 'dho@dcas.nyc.gov'\r\n\t--SET @AgencyCodeOEC = '040000'\r\n\t-- end test\r\n\r\n\tSELECT  @FiscalYear = dbo.CalculateFiscalYear(@BillingPeriod)\r\n\t\r\n\tIF ( CAST(SUBSTRING(@BillingPeriod, 5, 2) AS INT) BETWEEN 7\r\n                                                  AND     12 ) \r\n    SET @StartPeriod = SUBSTRING(@BillingPeriod, 1, 4) + '07'\r\n\tELSE \r\n    SET @StartPeriod = @FiscalYear + '01'\r\n\r\n\tDECLARE @SelectedAgencies TABLE\r\n    (\r\n      AgencyDivisionSeqID seqid ,\r\n      AgencyCodeOEC AgencyCodeOEC ,\r\n      AgencyName ldesc\r\n    )\r\n\t\r\n\tINSERT  INTO @SelectedAgencies\r\n        SELECT DISTINCT\r\n                agency.AgencyDivisionSeqID ,\r\n                agency.AgencyCodeOEC ,\r\n                agency.AgencyName\r\n        FROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress)\r\n               AS agency\r\n\r\n\tDECLARE @result TABLE\r\n    (\r\n      CurrentAccountNumber acctnum ,\r\n      ServiceAddress addr ,\r\n      FacilityName VARCHAR(100) ,\r\n      FacilityAddress LongAddress ,\r\n      OecFacilityNumber VARCHAR(7) ,\r\n      AccountDemandUsage NUMERIC(12, 2) ,\r\n      ProductionMinDemand NUMERIC(12, 2) ,\r\n      DeliveryMinDemand NUMERIC(12, 2) ,\r\n\t  ProductionMinDemandDollar MONEY,\r\n\t  DeliveryMinDemandDollar MONEY,\r\n      IncrementalMinDemanBilled MONEY,\r\n\t  AgencyCodeOEC VARCHAR(6),\r\n\t  AgencyName VARCHAR(75)\r\n    )\r\n\r\n\tINSERT INTO @result\r\n\t( CurrentAccountNumber ,\r\n\t    ServiceAddress ,\r\n\t    FacilityName ,\r\n\t    FacilityAddress ,\r\n\t    OecFacilityNumber ,\r\n\t    AccountDemandUsage ,\r\n\t    ProductionMinDemand ,\r\n\t    DeliveryMinDemand ,\r\n\t    ProductionMinDemandDollar ,\r\n\t    DeliveryMinDemandDollar ,\r\n\t    IncrementalMinDemanBilled ,\r\n\t    AgencyCodeOEC ,\r\n\t    AgencyName\r\n\t)\r\n\tSELECT \r\n\t\tCurrentAccountNumber ,\r\n        REPLACE(UtilityServiceAddress, '  ', ' ') AS ServiceAddress ,\r\n        FacilityName ,\r\n        Address1 AS FacilityAddress ,\r\n        OecFacilityNumber ,\r\n        AccountDemandUsage ,\r\n        ISNULL(MinimumBilledDemandUsage, 0) AS ProductionMinDemand ,\r\n        ISNULL(DeliveryMinimumBilledDemand, 0) AS DeliveryMinDemand,\r\n\t\tISNULL(abe.CommodityDemand, 0) + ISNULL(abe.CommodityDemandOffPeak, 0) + ISNULL(abe.CommodityDemandShoulder, 0) + ISNULL(MinimumBilledDemandDollars, 0) AS ProductionMinDemand,\r\n\t\tISNULL(abe.DeliveryConsumption, 0) + ISNULL(abe.DeliveryDemand, 0) + ISNULL(abe.DeliveryMinimumBilledAmount, 0) AS DeliveryMinDemand,\r\n\t\t-- (demand - demandWithoutMinDemand) * rate\r\n\t\t(ISNULL(MinimumBilledDemandUsage, 0) - ISNULL(abe.AccountDemandUsage, 0))\r\n\t\t\t* ISNULL(MinimumBilledDemandDollars / NULLIF(abe.MinimumBilledDemandUsage, 0), 0)\r\n\t\t\t+ ( ISNULL(DeliveryMinimumBilledDemand, 0) - ISNULL(abe.AccountDemandUsage, 0))\r\n\t\t\t* ISNULL( isnull(DeliveryMinimumBilledAmount, 0) / NULLIF(DeliveryMinimumBilledDemand, 0), 0) AS IncrementalMinDemanBilled,\r\n\t\tagency.AgencyCodeOEC,\r\n\t\tagency.AgencyName\t\t\t\t \r\n\tFROM \r\n\tbilling.AccountBillingElectric AS abe\r\n    INNER JOIN\r\n\tbilling.Account AS a\r\n\tON \r\n\ta.OriginalAccountNumber = abe.OriginalAccountNumber\r\n\tINNER JOIN Billing.Facility AS f\r\n\tON a.FacilityAccount = f.FacilitySeqid\r\n\tINNER JOIN \r\n\t@SelectedAgencies AS agency \r\n\tON a.AgencyAccount = agency.AgencyDivisionSeqID\r\n\tWHERE a.UtilityAccountProvider = 7\r\n\tAND abe.IsMinimumBilledCharged = 'Y'\r\n\tAND abe.BillingPeriodRevision = @BillingPeriod\r\n\tAND a.AccountStatus IN ('AC', '46', 'UA')\r\n\tORDER BY OecFacilityNumber\r\n\t\t\r\n\tSELECT * FROM @result\r\n\tORDER BY CurrentAccountNumber\r\n\t\t\r\nEND"
        }
      ]
    }
  ]
}
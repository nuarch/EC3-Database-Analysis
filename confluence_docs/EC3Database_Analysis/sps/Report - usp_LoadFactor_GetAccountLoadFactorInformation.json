{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_LoadFactor_GetAccountLoadFactorInformation",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_LoadFactor_GetAccountLoadFactorInformation",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve load factor information for accounts within a specified billing period. It logs the report usage, filters data based on agency and load factor criteria, and returns a paginated result set. The procedure is part of a reporting system, likely used to analyze energy usage and demand for electricity accounts."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including logging, data filtering, and pagination. It uses temporary tables and joins, which add to its complexity. The use of dynamic filtering based on input parameters and calculations for load factor also contribute to its medium complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SelecteBillingPeriod AS BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the billing period for which data is retrieved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsLoadFactorFilterApplied AS yesnoWithDefaultNo",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Determines if a load factor filter should be applied ('Y' for yes, otherwise no)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StartIndex AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The starting index for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EndIndex AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ending index for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Email AS emailaddr",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report, used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@NumberOfRecord AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that returns the total number of records retrieved."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs the report usage by calling "
                },
                {
                  "type": "text",
                  "text": "Audit.usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", capturing details like the report name, stored procedure name, and the requesting user's email."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to avoid locking issues and initializes variables for the procedure name and published billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It populates a temporary table "
                },
                {
                  "type": "text",
                  "text": "@Agency",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with agency division IDs based on the user's email, using a function "
                },
                {
                  "type": "text",
                  "text": "Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure inserts data into a temporary table "
                },
                {
                  "type": "text",
                  "text": "@PublishedData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " by selecting from "
                },
                {
                  "type": "text",
                  "text": "Published.TemporalAccountLevelRawDataForCurrentPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". It filters records based on the billing period, energy delivery type, and agency division. If the load factor filter is applied, it further filters records where the calculated load factor is greater than 1."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It counts the total number of records and selects a subset of records based on the provided start and end indices for pagination."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may result in reading uncommitted data (dirty reads)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of temporary tables can impact performance, especially if the data set is large. Indexing these tables could improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Load Factor Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculation of load factor involves division and NULL handling, which can be computationally expensive if the data set is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Filters",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The inner join and multiple filters can be optimized by ensuring that the underlying tables have appropriate indexes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " isolation level may lead to inconsistent data being read if there are concurrent transactions modifying the data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Division by Zero",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "NULLIF",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to prevent division by zero, but if not handled correctly, it could still lead to unexpected results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the data grows, the use of temporary tables and lack of indexes could lead to performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs user email addresses, which should be handled securely to prevent unauthorized access or exposure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and failures in execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_LoadFactor_GetAccountLoadFactorInformation]\n(\r\n\t@SelecteBillingPeriod AS BillingPeriod\r\n\t,@IsLoadFactorFilterApplied AS yesnoWithDefaultNo\r\n\t,@StartIndex AS INT\r\n\t,@EndIndex AS INT\r\n\t,@Email AS emailaddr\r\n\t,@NumberOfRecord AS INT OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n \r\n\tDECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID),@PublishedBillingPeriod AS VARCHAR(6), @ElectricityDeliveryTypeSeqId AS INT;\r\n\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t@ReportName\t\t\t\t\t= @spname,\r\n    @StoredProcName\t\t\t\t= @spname,\r\n    @RequestedBy\t\t\t\t= @Email,\r\n    @prmPublishedBillingPeriod\t= NULL,\r\n    @prmBillingPeriod\t\t\t= @SelecteBillingPeriod,\r\n    @prmAgency_ies\t\t\t\t= NULL,\r\n    @prmFacilityNumber_s\t\t= NULL,\r\n    @prmStartingBillingPeriod\t= NULL,\r\n    @prmEndingBillingPeriod\t\t= NULL;\r\n\r\n\tSELECT @ElectricityDeliveryTypeSeqId = 1, @PublishedBillingPeriod = MAX(PublishedBillingPeriod) FROM Published.MonthlyPublishedSummaryData;\r\n\t\t\r\n\tDECLARE @PublishedData AS TABLE\r\n\t\t(RecordID INT IDENTITY\r\n\t\t,UtilityCompany sdesc\r\n\t\t,CurrentAccountNumber acctnum\r\n\t\t,UtilityServiceAddress addr\r\n\t\t,FacilityName SeptsAddress\r\n\t\t,facilityAddress LongAddress\r\n\t\t,OecFacilityNumber OECBuildingNumber\r\n\t\t,AgencyCodeOEC AgencyCodeOEC\r\n\t\t,AgencyName ldesc\r\n\t\t,ActualOrEstimated VARCHAR(3)\r\n\t\t,EnergyUsage INT\r\n\t\t,DemandUsage NUMERIC(12, 2)\r\n\t\t,NumberOfDays INT\r\n\t\t,LoadFactor FLOAT\r\n\t\t,AgencyDivisionSeqID seqid\r\n\t\t,FacilitySeqID seqid)\r\n\r\n\tDECLARE @Agency AS TABLE\r\n\t\t(AgencyDivisionSeqID seqid);\r\n\r\n\tINSERT INTO @Agency (AgencyDivisionSeqID)\r\n\tSELECT AgencyDivisionSeqID FROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC('*', @Email);\r\n\r\n\tINSERT INTO @PublishedData\r\n\t\t(UtilityCompany\r\n\t\t,CurrentAccountNumber\r\n\t\t,UtilityServiceAddress\r\n\t\t,FacilityName\r\n\t\t,facilityAddress\r\n\t\t,OecFacilityNumber\r\n\t\t,AgencyCodeOEC\r\n\t\t,AgencyName\r\n\t\t,ActualOrEstimated\r\n\t\t,EnergyUsage\r\n\t\t,DemandUsage\r\n\t\t,NumberOfDays\r\n\t\t,LoadFactor\r\n\t\t,AgencyDivisionSeqID\r\n\t\t,FacilitySeqID)\r\n\tSELECT T.UtilityCompany\r\n\t\t,T.CurrentAccountNumber\r\n\t\t,T.UtilityServiceAddress\r\n\t\t,T.FacilityName\r\n\t\t,T.Address1 AS facilityAddress\r\n\t\t,T.OecFacilityNumber\r\n\t\t,T.AgencyCodeOEC\r\n\t\t,T.AgencyName\r\n\t\t,T.ActualOrEstimated\r\n\t\t,T.AccountEnergyUsage\r\n\t\t,T.AccountDemandUsage\r\n\t\t,T.BillingPeriodDays AS NumberOfDays\r\n\t\t,T.OriginalEnergyUsage / NULLIF((T.OriginalDemandUsage * T.BillingPeriodDays * 24), 0)\r\n\t\t,T.AgencyDivisionSeqid\r\n\t\t,T.FacilitySeqid\r\n\tFROM Published.TemporalAccountLevelRawDataForCurrentPeriod AS T\r\n\t\tINNER JOIN @Agency AS A ON T.AgencyDivisionSeqid = A.AgencyDivisionSeqID\r\n\tWHERE (T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND T.BillingPeriod = @SelecteBillingPeriod\r\n\t\tAND T.EnergyDeliveryType = @ElectricityDeliveryTypeSeqId\r\n\t\tAND 1 < CASE WHEN @IsLoadFactorFilterApplied = 'Y' THEN T.OriginalEnergyUsage/NULLIF((T.OriginalDemandUsage * dbo.CalculateNumberOfBillingDays(T.FromDate, T.ToDate) * 24), 0) ELSE 2 END\r\n\tORDER BY T.OecFacilityNumber, T.CurrentAccountNumber;\r\n\r\n\tSELECT @NumberOfRecord = COUNT(*) FROM @PublishedData;\r\n\r\n\tSELECT RecordID\r\n\t\t,UtilityCompany\r\n\t\t,CurrentAccountNumber\r\n\t\t,UtilityServiceAddress\r\n\t\t,FacilityName\r\n\t\t,facilityAddress\r\n\t\t,OecFacilityNumber\r\n\t\t,AgencyCodeOEC\r\n\t\t,AgencyName\r\n\t\t,ActualOrEstimated\r\n\t\t,EnergyUsage\r\n\t\t,DemandUsage\r\n\t\t,NumberOfDays\r\n\t\t,LoadFactor\r\n\t\t,AgencyDivisionSeqID\r\n\t\t,FacilitySeqID \r\n\tFROM @PublishedData\r\n\tWHERE RecordID >= @StartIndex AND RecordID <= @EndIndex;\r\nEND;"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Common",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_FindServiceClassificationMismatchesUsingAccountBilling",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_FindServiceClassificationMismatchesUsingAccountBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to identify and correct mismatches between billed service classifications and account service classifications for utility accounts. It processes data from various billing tables, identifies discrepancies, and optionally updates the account records to correct these mismatches. The procedure uses temporary tables to store intermediate results and applies corrections based on the identified mismatches."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple table joins and unions across different billing tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses temporary tables to manage intermediate data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic for updating records based on input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles multiple types of service classifications (gas, electric) and billing groups."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ApplyUpdates AS dbo.yesnoWithDefaultNo",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A parameter that determines whether the procedure should apply updates to the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. If set to 'Y', updates are applied; otherwise, they are not."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure sets the transaction isolation level to "
                        },
                        {
                          "type": "text",
                          "text": "READ UNCOMMITTED",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to avoid locking issues."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It retrieves the current billing period from the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.ApplicationTimeFrame",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Identify Mismatches",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure truncates the "
                        },
                        {
                          "type": "text",
                          "text": "Scratch.ServiceClassificationMismatches",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to clear previous data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It inserts mismatches into this table by comparing billed service classifications with account service classifications across different billing tables ("
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "AccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingElectric",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ")."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Prepare Corrections",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It truncates the "
                        },
                        {
                          "type": "text",
                          "text": "Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It inserts potential corrections into this table by joining mismatches with "
                        },
                        {
                          "type": "text",
                          "text": "UtilityTariffRateInformation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to find appropriate replacement rates."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Display Corrections",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure selects and displays potential corrections for review."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Apply Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If "
                        },
                        {
                          "type": "text",
                          "text": "@ApplyUpdates",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is 'Y', the procedure updates the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table with the corrections."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It updates fields such as "
                        },
                        {
                          "type": "text",
                          "text": "DeliveryTariffRate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "DeliveryTariffEffectiveDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and others based on the corrections."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It logs the update with a note and sets a trigger for further auditing."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Review Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It selects updated records for review, filtering by the notes added during the update process."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may lead to reading uncommitted data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Truncation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Frequent truncation of scratch tables can be efficient but may lead to data loss if not handled carefully."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Unions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves complex joins and unions, which can be resource-intensive and slow down execution, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The conditional logic for updates can add overhead, particularly if the procedure is executed frequently."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to dirty reads, which might affect the accuracy of the mismatch identification."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating tables and performing updates can lead to concurrency issues if the procedure is executed simultaneously by multiple processes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the complexity of joins and unions may impact performance, requiring optimization or indexing strategies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Audit and Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While updates are logged with notes, there is no comprehensive audit trail for changes made, which could be a compliance issue."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Name:\r\n--* Description:  Process the NYPA account billing adjustments bills using a set operation.\r\n--*\r\n--* Exec:        [Common].[usp_FindServiceClassificationMismatchesUsingAccountBilling]\r\n--*\r\n--* Parameter(s):\r\n--*\t\t\t\t@UtilityCompanySeqid int,\r\n--*\t\t\t\t@AccountBillingAjustmentSeqid int,\r\n--*\t\t\t\tStatusCode  int output  - Execution Return Status\r\n--*\r\n--* Return:\t    0 Success\r\n--*             1 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   10/26/2005\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 11/07/2006 PAH  First Version  f\r\n--* 12/12/2006 PAH  First Version  \r\n--***************************************************************************************\r\nCREATE PROCEDURE [Common].[usp_FindServiceClassificationMismatchesUsingAccountBilling]\r\n(\r\n\t@ApplyUpdates AS dbo.yesnoWithDefaultNo\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @CurrentBillingPeriod AS VARCHAR(6);\r\n\r\n\tSELECT @CurrentBillingPeriod = BillingPeriod FROM Billing.ApplicationTimeFrame where CurrentProcessingPeriod = 'Y';\r\n\r\n\t-- Find mismatches and insert into Scratch.ServiceClassificationMismatches\r\n\tTRUNCATE TABLE Scratch.ServiceClassificationMismatches;\r\n\r\n\tINSERT INTO Scratch.ServiceClassificationMismatches\r\n\t\t(accountseqid, CurrentAccountNumber, OriginalAccountNumber, BillingPeriodRevision, UtilityServiceAccountName, UtilityServiceAddress,\r\n\t\tCurrentInvoiceAccountBillingGroup, BilledServiceClassification, BilledServiceClassificationEffectiveDate, AccountServiceClassification,\r\n\t\tAccountServiceClassificationEffectiveDate, IsTimeOfDayAccount, UtilityCompanySeqid, UtilityTariffRateInformationSeqid)\r\n\tSELECT A.accountseqid, A.CurrentAccountNumber, A.OriginalAccountNumber, ABG.BillingPeriodRevision,\r\n\t\tA.UtilityServiceAccountName, A.UtilityServiceAddress, AB.CurrentInvoiceAccountBillingGroup,\r\n\t\tABG.CommodityTariffRate AS BilledServiceClassification,\r\n\t\tAB.FromDate as BilledServiceClassificationEffectiveDate,\r\n\t\tA.DeliveryTariffRate AS AccountServiceClassification,\r\n\t\tA.DeliveryTariffEffectiveDate AS AccountServiceClassificationEffectiveDate, A.IsTimeOfDayAccount,\r\n\t\tA.UtilityAccountProvider AS UtilityCompanySeqid, A.UtilityTariffRateInformationSeqid\r\n\tFROM Billing.AccountBillingGas AS ABG INNER JOIN Billing.AccountBilling AS AB\r\n\t\t\tON ABG.AccountBillingSeqid = AB.AccountBillingSeqid AND ABG.BillingPeriodRevision = AB.BillingPeriodRevision\r\n\t\tINNER JOIN Billing.Account AS A ON AB.AccountSeqid = A.AccountSeqid AND ABG.CommodityTariffRate <> A.DeliveryTariffRate\r\n\tWHERE AB.CurrentInvoiceAccountBillingGroup = 2 AND ABG.BillingPeriodRevision = @CurrentBillingPeriod\r\n\tUNION ALL\r\n\tSELECT A.accountseqid, A.CurrentAccountNumber, A.OriginalAccountNumber, ABCG.BillingPeriodRevision,A.UtilityServiceAccountName,\r\n\t\tA.UtilityServiceAddress, AB.CurrentInvoiceAccountBillingGroup,\r\n\t\tABCG.GasRateCode AS BilledServiceClassification,\r\n\t\tAB.FromDate as  BilledServiceClassificationEffectiveDate,\r\n\t\tA.DeliveryTariffRate AS AccountServiceClassification,\r\n\t\tA.DeliveryTariffEffectiveDate AS AccountServiceClassificationEffectiveDate, A.IsTimeOfDayAccount,\r\n\t\tA.UtilityAccountProvider AS UtilityCompanySeqid, A.UtilityTariffRateInformationSeqid\r\n\tFROM Billing.AccountBilling AS AB INNER JOIN Billing.Account AS A ON AB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.AccountBillingCrisGas AS ABCG ON AB.AccountBillingSeqid = ABCG.AccountBillingSeqid AND A.DeliveryTariffRate <> ABCG.GasRateCode\r\n\tWHERE AB.CurrentInvoiceAccountBillingGroup = 3 AND ABCG.BillingPeriodRevision = @CurrentBillingPeriod\r\n\tUNION ALL\r\n\tSELECT A.accountseqid, A.CurrentAccountNumber, A.OriginalAccountNumber, ABE.BillingPeriodRevision, A.UtilityServiceAccountName,\r\n\t\tA.UtilityServiceAddress, AB.CurrentInvoiceAccountBillingGroup,\r\n\t\tABE.DeliveryTariffRate AS BilledServiceClassification,\r\n\t\tABE.DeliveryTariffEffectiveDate AS BilledServiceClassificationEffectiveDate,\r\n\t\tA.DeliveryTariffRate AS AccountServiceClassification,\r\n\t\tA.DeliveryTariffEffectiveDate AS AccountServiceClassificationEffectiveDate, A.IsTimeOfDayAccount,\r\n\t\tA.UtilityAccountProvider AS UtilityCompanySeqid, A.UtilityTariffRateInformationSeqid\r\n\tFROM Billing.AccountBilling AS AB INNER JOIN Billing.Account AS A ON AB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.AccountBillingElectric AS ABE ON AB.AccountBillingSeqid = ABE.MonthlyAccountBillingChargesElectric AND A.DeliveryTariffRate <> ABE.DeliveryTariffRate\r\n\tWHERE AB.CurrentInvoiceAccountBillingGroup <> 1 AND ABE.BillingPeriodRevision = @CurrentBillingPeriod\r\n\tORDER BY A.CurrentAccountNumber;\r\n\r\n\t-- Find mismatches and insert into Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches\r\n\tTRUNCATE TABLE Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches;\r\n\r\n\tINSERT INTO Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches\r\n\t\t(accountseqid, CurrentAccountNumber, CurrentInvoiceAccountBillingGroup, minEffectiveDate, replaceUtilityTariffRateInformationSeqid,\r\n\t\treplaceDeliveryTariffRate, replaceIsTod, replaceUtilityCompanySeqid, AccountServiceClassification, AccountServiceClassificationEffectiveDate)\r\n\tSELECT gt200712.accountseqid, gt200712.CurrentAccountNumber, gt200712.CurrentInvoiceAccountBillingGroup, gt200712.minEffectiveDate,\r\n        bpr201010.replaceUtilityTariffRateInformationSeqid, bpr201010.replaceDeliveryTariffRate, bpr201010.replaceIsTod,\r\n        bpr201010.replaceUtilityCompanySeqid, bpr201010.AccountServiceClassification, bpr201010.AccountServiceClassificationEffectiveDate\r\n\tFROM (SELECT SCM.accountseqid, SCM.CurrentAccountNumber, SCM.CurrentInvoiceAccountBillingGroup,\r\n\t\t\t\tMIN(SCM.BilledServiceClassificationEffectiveDate) AS minEffectiveDate, MAX(SCM.BilledServiceClassificationEffectiveDate) AS maxEffectiveDate,\r\n\t\t\t\tMIN(SCM.BillingPeriodRevision) AS minBillingPeriodRevision, MAX(SCM.BillingPeriodRevision) AS maxBillingPeriodRevision\r\n            FROM Scratch.ServiceClassificationMismatches AS SCM INNER JOIN Billing.UtilityTariffRateInformation AS UTRI ON SCM.IsTimeOfDayAccount = UTRI.IsTod\r\n\t\t\t\tAND SCM.UtilityCompanySeqid = UTRI.UtilityCompanyTariff AND SCM.BilledServiceClassification = UTRI.DeliveryTariffRate\r\n            GROUP BY SCM.accountseqid, SCM.CurrentAccountNumber, SCM.CurrentInvoiceAccountBillingGroup\r\n            HAVING MIN(SCM.BillingPeriodRevision) > '200712') AS gt200712\r\n\t\tINNER JOIN\r\n        (SELECT SCM.accountseqid, SCM.CurrentAccountNumber,\r\n\t\t\t\tSCM.CurrentInvoiceAccountBillingGroup, SCM.BillingPeriodRevision,\r\n\t\t\t\tSCM.BilledServiceClassification,\r\n\t\t\t\tSCM.BilledServiceClassificationEffectiveDate,\r\n\t\t\t\tSCM.AccountServiceClassification,\r\n\t\t\t\tSCM.AccountServiceClassificationEffectiveDate, SCM.IsTimeOfDayAccount,\r\n\t\t\t\tSCM.UtilityCompanySeqid, SCM.UtilityTariffRateInformationSeqid,\r\n\t\t\t\tUTRI.UtilityTariffRateInformationSeqid AS replaceUtilityTariffRateInformationSeqid,\r\n\t\t\t\tUTRI.DeliveryTariffRate AS replaceDeliveryTariffRate, UTRI.IsTod AS replaceIsTod,\r\n\t\t\t\tUTRI.UtilityCompanyTariff AS replaceUtilityCompanySeqid\r\n            FROM Scratch.ServiceClassificationMismatches AS SCM INNER JOIN Billing.UtilityTariffRateInformation AS UTRI ON SCM.IsTimeOfDayAccount = UTRI.IsTod\r\n\t\t\t\tAND SCM.UtilityCompanySeqid = UTRI.UtilityCompanyTariff AND SCM.BilledServiceClassification = UTRI.DeliveryTariffRate\r\n            WHERE SCM.CurrentInvoiceAccountBillingGroup <> 1\r\n\t\t) AS bpr201010 ON gt200712.accountseqid = bpr201010.accountseqid AND gt200712.CurrentAccountNumber = bpr201010.CurrentAccountNumber\r\n\t\t\tAND gt200712.CurrentInvoiceAccountBillingGroup = bpr201010.CurrentInvoiceAccountBillingGroup\r\n\t\t\tAND gt200712.maxBillingPeriodRevision = bpr201010.BillingPeriodRevision\r\n\tORDER BY gt200712.maxBillingPeriodRevision;\r\n\r\n\tSELECT SCACTAM.CurrentInvoiceAccountBillingGroup, SCACTAM.accountseqid,\r\n\t\tSCACTAM.CurrentAccountNumber, A.UtilityServiceAccountName,\r\n\t\tUTRI.BudgetRateClassDescription, UTRI.[Description], UTRI.ShortDesc,\r\n\t\tA.UtilityServiceAddress, SCACTAM.minEffectiveDate, SCACTAM.replaceUtilityTariffRateInformationSeqid,\r\n\t\tSCACTAM.replaceDeliveryTariffRate, SCACTAM.replaceIsTod,\r\n\t\tSCACTAM.replaceUtilityCompanySeqid, SCACTAM.AccountServiceClassification, SCACTAM.AccountServiceClassificationEffectiveDate\r\n\tFROM Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches INNER JOIN Billing.Account AS A ON SCACTAM.accountseqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.UtilityTariffRateInformation AS UTRI ON A.UtilityTariffRateInformationSeqid = UTRI.UtilityTariffRateInformationSeqid;\r\n\r\n\t-- UPDATE Billing.Account based upon correction in Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches\r\n\tIF (@ApplyUpdates='Y')\r\n\tBEGIN\r\n\t\tDECLARE @Notes AS dbo.notes, @LikeNotes AS dbo.notes;\r\n\t\t\r\n\t\tSET @Notes = @CurrentBillingPeriod + ' Corrected Account service classification correction using account billed service classification';\r\n\t\tSET @LikeNotes = @CurrentBillingPeriod + ' Corrected Account service classification%';\r\n\r\n\t\tUPDATE A\r\n\t\tSET A.DeliveryTariffRate = SCACTAM.replaceDeliveryTariffRate,\r\n\t\t\tA.DeliveryTariffEffectiveDate = SCACTAM.minEffectiveDate,\r\n\t\t\tA.CommodityTariffRate = SCACTAM.replaceDeliveryTariffRate,\r\n\t\t\tA.CommodityTariffEffectiveDate = SCACTAM.minEffectiveDate,\r\n\t\t\tA.UtilityTariffRateInformationSeqid = SCACTAM.replaceUtilityTariffRateInformationSeqid,\r\n\t\t\tA.IsTimeOfDayAccount = SCACTAM.replaceIsTod,\r\n\t\t\tA.FireAuditTrigger = 'Y', A.Notes = @Notes, A.LastUpdate =  GETDATE()\r\n\t\tFROM Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches AS SCACTAM\r\n\t\t\tINNER JOIN Billing.Account AS A ON SCACTAM.accountseqid = A.AccountSeqid;\r\n\r\n\t\t-- Review updated Billing.Account based upon corrections used from Scratch.ServiceClassificationApplyCorrectionsToAccountMismatches\r\n\t\tSELECT A.Notes, A.UtilityAccountProvider, A.UtilityTariffRateInformationSeqid, A.CurrentAccountNumber,\r\n\t\t\tA.CurrentInvoiceAccountGroup, A.IsTimeOfDayAccount, A.DeliveryTariffRate,\r\n\t\t\tA.DeliveryTariffEffectiveDate, A.CommodityTariffRate, A.CommodityTariffEffectiveDate,\r\n\t\t\tUTRI.UtilityTariffRateInformationSeqid AS Expr1, UTRI.UtilityCompanyTariff,\r\n\t\t\tUTRI.EnergyDeliveryType, A.EnergySource, UTRI.DeliveryTariffRate AS Expr2, UTRI.IsTod\r\n\t\tFROM Billing.Account AS A INNER JOIN Billing.UtilityTariffRateInformation AS UTRI ON A.UtilityTariffRateInformationSeqid = UTRI.UtilityTariffRateInformationSeqid\r\n\t\tWHERE A.Notes LIKE @LikeNotes;\r\n\tEND;\r\nEND;"
        }
      ]
    }
  ]
}
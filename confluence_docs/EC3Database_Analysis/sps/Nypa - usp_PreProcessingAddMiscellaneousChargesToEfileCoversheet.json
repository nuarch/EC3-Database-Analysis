{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Nypa",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_PreProcessingAddMiscellaneousChargesToEfileCoversheet",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_PreProcessingAddMiscellaneousChargesToEfileCoversheet",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to manage miscellaneous charges in the "
        },
        {
          "type": "text",
          "text": "Nypa.UploadNYPACoverSheet",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. It either inserts or updates records based on the "
        },
        {
          "type": "text",
          "text": "CoverSheetRecordType",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and the "
        },
        {
          "type": "text",
          "text": "@IsDelete",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " parameter. If "
        },
        {
          "type": "text",
          "text": "@IsDelete",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is set to 0, it updates existing records or inserts new ones if no matching record is found. If "
        },
        {
          "type": "text",
          "text": "@IsDelete",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is set to 1, it deletes records with the specified "
        },
        {
          "type": "text",
          "text": "CoverSheetRecordType",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". Additionally, it calculates the total of all "
        },
        {
          "type": "text",
          "text": "TotalDollars",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " for records with "
        },
        {
          "type": "text",
          "text": "CoverSheetRecordType",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " between 18 and 98 and updates the record with "
        },
        {
          "type": "text",
          "text": "CoverSheetRecordType",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " '99' with this total."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves conditional logic for insert, update, and delete operations, as well as aggregation and updating of totals. The complexity arises from the conditional checks and the need to handle different scenarios based on input parameters."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsDelete int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Determines whether to delete ("
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") or insert/update ("
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") records."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MiscellaneousCharges varchar(1)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents miscellaneous charges to be added or updated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod varchar(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Specifies the billing period for the record."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CoverSheetRecordType varchar(2)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Identifies the type of cover sheet record to be processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CoverSheetRecordDesc varchar(35)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Description of the cover sheet record."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MicellaneousChargeAmount money",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Amount of miscellaneous charges to be added or updated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Notes varchar(300)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Additional notes for the record."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserId int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": ID of the user performing the operation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Status int OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Output parameter to indicate success ("
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") or failure ("
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ")."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Delete Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@IsDelete",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is "
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", the procedure deletes records from "
                },
                {
                  "type": "text",
                  "text": "Nypa.UploadNYPACoverSheet",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " where "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " matches the input."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert/Update Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@IsDelete",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", it first checks if a record with the specified "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " exists and is greater than 59. If found, it updates the record with new values. If not found, it calculates a new "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " between 60 and 79 and inserts a new record."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Total Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the sum of "
                },
                {
                  "type": "text",
                  "text": "TotalDollars",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for records with "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " between 18 and 98 and updates the record with "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " '99' with this total."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is indexed to optimize the search and update operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple users attempt to update the same records simultaneously."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider wrapping operations in a transaction to ensure atomicity, especially when performing multiple updates and inserts."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that "
                },
                {
                  "type": "text",
                  "text": "CoverSheetRecordType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " values are unique and properly managed, which may lead to issues if not enforced."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and inconsistent states."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no validation for input parameters, which could lead to invalid data being processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values (e.g., "
                },
                {
                  "type": "text",
                  "text": "CoverSheetUtilityCompany = 7",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") reduces flexibility and may require changes if business rules evolve."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Nypa].[usp_PreProcessingAddMiscellaneousChargesToEfileCoversheet] @IsDelete int , @MiscellaneousCharges varchar(1) , @BillingPeriod varchar(6) , @CoverSheetRecordType varchar(2) , @CoverSheetRecordDesc varchar(35) , @MicellaneousChargeAmount money , @Notes varchar(300) , @AuthenticatedUserId int , @Status int  OUTPUT\n   \r\n AS --**************************************************************************************\r\n--* Name:        [Nypa].[usp_PreProcessingAddMiscellaneousChargesToEfileCoversheet] \r\n--*\r\n--* Description:  Add new miscellaneous charges from the cover letter with @CoverSheetRecordType between 30 and 39\r\n--*               \r\n--*\r\n--* Database:     OEC\r\n--*\r\n--* Return:\t        0  Success\r\n--*                 1 Failures\r\n--*\r\n--* AUTHOR:      Peter Heller\r\n--* Created On:   10/2/2009\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 03/25/2009 PAH  Corrected Schema name  for store proc or table\r\n--***************************************************************************************\r\n--\r\n-- This proceedure will insert NYPA missing accounts and meters as a 46 exchange.\r\n--\r\ndeclare @NypaCoverSheetDescription  varchar(35)\r\ndeclare @ApplicationTimeFrameBillingPeriod  varchar(6)\r\ndeclare @CicLoanCount varchar(4)\r\ndeclare @SumMonthlyPaymentAmount money\r\ndeclare @RevisedCustomerTotal money\r\ndeclare @DcasMiscellaneuosCoverSheetRecordType int\r\n--\r\n--\r\nif (@IsDelete = 0)\r\nbegin\r\n\tSELECT * from Nypa.UploadNYPACoverSheet where CoverSheetRecordType = @CoverSheetRecordType AND @CoverSheetRecordType > 59 --29\r\n\tif (@@rowcount<>0)\r\n\tbegin\r\n\t\tUPDATE    Nypa.UploadNYPACoverSheet\r\n\t\tSET              \r\n\t\t\t\tMiscellaneousCharges = @MiscellaneousCharges, CoverSheetUtilityCompany = 7, CoverSheetAccountBillingGroup = 1, \r\n\t\t\t\tBillingPeriod = @BillingPeriod,\r\n\t\t\t\tCoverSheetRecordDesc = @CoverSheetRecordDesc, TotalDollars = @MicellaneousChargeAmount, Notes = @Notes, \r\n\t\t\t\tAuthenticatedUserID = @AuthenticatedUserId\r\n\t\twhere \r\n\t\t\t\tCoverSheetRecordType = @CoverSheetRecordType\r\n\tend\r\n\telse\r\n\tbegin\r\n\t\tSELECT    @DcasMiscellaneuosCoverSheetRecordType=IsNull(max(cast(CoverSheetRecordType as int)),59)+1 from Nypa.UploadNYPACoverSheet where 59 < cast(CoverSheetRecordType as int) and cast(CoverSheetRecordType as int) <80 \r\n\t\t--\r\n\t\tINSERT INTO Nypa.UploadNYPACoverSheet\r\n\t\t(MiscellaneousCharges,CoverSheetUtilityCompany, CoverSheetAccountBillingGroup, BillingPeriod, CoverSheetRecordType, CoverSheetRecordDesc, TotalDollars,Notes,AuthenticatedUserID)\r\n\t\tVALUES     (@MiscellaneousCharges,7,1,@BillingPeriod ,cast(@DcasMiscellaneuosCoverSheetRecordType as varchar(2)),@CoverSheetRecordDesc,@MicellaneousChargeAmount,@Notes,@AuthenticatedUserId)\r\n\tend\r\nend\r\nelse\r\nBegin\r\n\tdelete from Nypa.UploadNYPACoverSheet where CoverSheetRecordType = @CoverSheetRecordType\r\nend\r\n--\r\n\r\nSELECT @RevisedCustomerTotal = sum(TotalDollars)\r\nFROM Nypa.UploadNYPACoverSheet\r\nwhere 17 < cast(CoverSheetRecordType as int) and cast(CoverSheetRecordType as int) < 99\r\n\r\n\r\nUPDATE    Nypa.UploadNYPACoverSheet\r\nSET              TotalDollars =@RevisedCustomerTotal, AuthenticatedUserID =@AuthenticatedUserId\r\nWHERE (CoverSheetRecordType = '99')\r\n--\r\n--SELECT MiscellaneousCharges,CoverSheetUtilityCompany, CoverSheetAccountBillingGroup, BillingPeriod, CoverSheetRecordType, CoverSheetRecordDesc, TotalDollars,AuthenticatedUserID  FROM Nypa.UploadNYPACoverSheet\r\n--order by cast(CoverSheetRecordType as int)"
        }
      ]
    }
  ]
}
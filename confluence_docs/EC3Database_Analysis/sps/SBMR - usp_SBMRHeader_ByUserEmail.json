{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "SBMR",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_SBMRHeader_ByUserEmail",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_SBMRHeader_ByUserEmail",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve a paginated list of SBMR (Service Billing Management Request) headers based on a user's email address. It checks if the user has administrative privileges and filters the results accordingly. The procedure supports searching, sorting, and pagination, allowing users to query SBMR records with specific criteria."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the data. It is used to determine user permissions and filter results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SearchText AS VARCHAR(150) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional parameter for searching specific text within various fields of the SBMR records."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PageSize AS INT = 10",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The number of records to return per page, used for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CurrentPageNumber AS INT = 1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The current page number to retrieve, used in conjunction with "
                },
                {
                  "type": "text",
                  "text": "@PageSize",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SortColumn AS VARCHAR(100) = ''",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The column name by which to sort the results. Defaults to an empty string, which implies a default sorting mechanism."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SortOrder AS VARCHAR(100) = 'ASC'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The order of sorting, either 'ASC' for ascending or 'DESC' for descending."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to avoid locking issues and initializes variables for record count and admin status."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Admin Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if the user is an admin by querying the "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "aspnet_UsersInRoles",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables. If the user belongs to specific roles, they are marked as an admin."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Search Text Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "@SearchText",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is prepared by surrounding it with '%' wildcards for use in "
                },
                {
                  "type": "text",
                  "text": "LIKE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clauses."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A temporary table "
                        },
                        {
                          "type": "text",
                          "text": "@SBMRs",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is populated with distinct "
                        },
                        {
                          "type": "text",
                          "text": "SBMRHeaderSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " values that match the search criteria and user permissions."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The main query joins multiple tables to gather detailed information about each SBMR record, including agency, facility, utility company, and status details."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The query applies filters based on admin status, agency access, and search text."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination and Sorting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The final result set is sorted based on the specified "
                },
                {
                  "type": "text",
                  "text": "@SortColumn",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@SortOrder",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and paginated using the "
                },
                {
                  "type": "text",
                  "text": "OFFSET-FETCH",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clause."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This isolation level can improve performance by reducing locking but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins, which can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic Sorting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of dynamic sorting with multiple "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements can impact performance, particularly if the dataset is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Efficiently implemented using "
                },
                {
                  "type": "text",
                  "text": "OFFSET-FETCH",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", but performance can degrade with high page numbers due to the need to skip rows."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted data, which might not be suitable for all business scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that role-based access control is correctly implemented and that the "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyByEmailAddressAgencyAccessAction",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " function securely returns agency access permissions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SQL Injection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Although parameters are used, dynamic SQL or improper handling of input parameters could expose the system to SQL injection risks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the number of records grows, the performance of complex joins and sorting may degrade, necessitating indexing and query optimization."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Role Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Changes in role IDs or user-role mappings could affect the admin check logic, requiring updates to the procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [SBMR].[usp_SBMRHeader_ByUserEmail]\n(\r\n\t@EmailAddress AS VARCHAR(75),\r\n\t@SearchText AS VARCHAR(150) = NULL,\r\n\t@PageSize AS INT = 10,\r\n\t@CurrentPageNumber AS INT= 1,\r\n\t@SortColumn AS VARCHAR(100) = '',\r\n\t@SortOrder AS VARCHAR(100) = 'ASC'\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n \r\n\tDECLARE @RecordCount AS INT, @IsAdmin AS BIT = 0;\r\n\tDECLARE @SBMRs TABLE(SBMRHeaderSeqid INT NOT NULL);\r\n\tSET @SearchText = '%' + @SearchText + '%';\r\n \r\n\tIF EXISTS(SELECT U.UserId FROM dbo.aspnet_Users AS U INNER JOIN dbo.aspnet_UsersInRoles AS UR ON UR.UserId = U.UserId\r\n\t\tWHERE UR.RoleId IN ('BF217169-BA30-447D-A610-27681EF0DFB0', '7CD17121-5A3E-4766-82A8-92C2683272FC') AND U.UserName = @EmailAddress)\r\n\tBEGIN\r\n\t\tSET @IsAdmin = 1;\r\n\tEND;\r\n \r\n\tINSERT INTO @SBMRs(SBMRHeaderSeqid)\r\n\tSELECT DISTINCT SH.SBMRHeaderSeqid\r\n\tFROM SBMR.SBMRHeader AS SH\r\n\t\tLEFT JOIN SBMR.SbmrAction AS SA ON SA.SbmrActionSeqid = SH.SBMRAction\r\n\t\tLEFT JOIN SBMR.SBMRHeaderExtension AS SHE ON SHE.SBMRHeaderSeqid = SH.SBMRHeaderSeqid\r\n\t\tLEFT JOIN Billing.AgencyDivision AS AD ON AD.AgencyDivisionSeqid = SH.AgencyDivisionSeqid\r\n\t\tLEFT JOIN Billing.Facility AS F ON F.FacilitySeqid = SH.FacilitySeqid\r\n\t\tLEFT JOIN Billing.UtilityCompany AS UC ON UC.UtilityCompanySeqid = SH.CommodityUtilityCompanySeqid\r\n\t\tLEFT JOIN Contact.ContactAddress AS CA ON CA.ContactAddressSeqid = SH.ContactPersonRequestingServiceSeqid\r\n\t\tLEFT JOIN SBMR.SBMRStatus AS S ON S.SBMRStatusSeqid = SHE.SBMRStatusSeqid\r\n\t\tLEFT JOIN SBMR.SBMRAccount AS SAC ON SAC.SBMRHeaderSeqid = SH.SBMRHeaderSeqid\r\n\t\tLEFT JOIN SBMR.SBMRMeter AS SM ON SM.SBMRHeaderSeqid = SH.SBMRHeaderSeqid\r\n\t\tLEFT JOIN Billing.Account AS A ON SAC.OriginalAccountNumber = A.OriginalAccountNumber OR SAC.CurrentAccountNumber = A.CurrentAccountNumber\r\n\t\tLEFT JOIN Billing.AccountExchangeMeterTrack AS MT ON MT.OriginalAccountSeqid = A.AccountSeqid\r\n\t\tLEFT JOIN Billing.Meter AS M ON M.MeterSeqid = MT.OriginalMeterSeqid\r\n\tWHERE (@IsAdmin = 1 OR AD.AgencyCodeOEC IN (SELECT AgencyCodeOEC FROM dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress))) \r\n\t\tAND SHE.SBMRStatusSeqid <> 3\r\n\t\tAND (@SearchText IS NULL\r\n\t\t\tOR SH.SbmrReferenceNumber LIKE @SearchText\r\n\t\t\tOR SH.SBMRHeaderSeqid LIKE @SearchText\r\n\t\t\tOR AD.AgencyShortDesc LIKE @SearchText\r\n\t\t\tOR F.FacilityName LIKE @SearchText\r\n\t\t\tOR SA.ShortDesc LIKE @SearchText\r\n\t\t\tOR UC.ShortDesc LIKE @SearchText\r\n\t\t\tOR S.ShortDesc  LIKE @SearchText\r\n\t\t\tOR (F.Address1 + COALESCE(F.Address2, '') + ', ' + COALESCE(F.City, '') + ', ' + COALESCE(F.[State], '') + ' ' + COALESCE(F.Zipcode, '')) LIKE @SearchText\r\n\t\t\tOR SAC.CurrentAccountNumber LIKE @SearchText\r\n\t\t\tOR SM.CurrentMeterNumber LIKE @SearchText\r\n\t\t\tOR A.CurrentAccountNumber LIKE @SearchText\r\n\t\t\tOR M.CurrentMeterNumber LIKE @SearchText\r\n\t\t);\r\n \r\n\tSELECT @RecordCount = COUNT(SBMRHeaderSeqid) FROM @SBMRs;\r\n\r\n\tSELECT SH.SBMRHeaderSeqid AS SBMRNumber\r\n\t\t,SH.SbmrReferenceNumber AS URIFNumber\r\n\t\t,AD.AgencyShortDesc AS AgencyName\r\n\t\t,F.OecFacilityNumber + ' - ' + F.FacilityName + ' (' + F.Address1 + ')' AS FacilityName\r\n\t\t,UC.ShortDesc AS UtilityCompany\r\n\t\t,SHE.RequestedBy\r\n\t\t,SA.ShortDesc AS SBMRAction\r\n\t\t,SH.DateAdded AS RequestDate\r\n\t\t,SHE.SBMRStatusSeqid\r\n\t\t,S.ShortDesc AS SBMRStatus\r\n\t\t,@RecordCount AS RecordCount\r\n\t\t,SHE.CreatedBy\r\n\t\t,CAST(CASE WHEN EXISTS (SELECT TOP (1) SBMRHeaderSeqid FROM SBMR.ArchivedDocument WHERE SBMRHeaderSeqid = SH.SBMRHeaderSeqid)\r\n\t\t\tTHEN 1\r\n\t\t  ELSE 0 END AS BIT) AS IsSbmrLetterArchived\r\n\t\t,SHE.CancellationReason\r\n\tFROM SBMR.SBMRHeader AS SH\r\n\t\tINNER JOIN @SBMRs AS T ON T.SBMRHeaderSeqid = SH.SBMRHeaderSeqid\r\n\t\tLEFT JOIN SBMR.SbmrAction AS SA ON SA.SbmrActionSeqid = SH.SBMRAction\r\n\t\tLEFT JOIN SBMR.SBMRHeaderExtension AS SHE ON SHE.SBMRHeaderSeqid = SH.SBMRHeaderSeqid\r\n\t\tLEFT JOIN Billing.AgencyDivision AS AD ON AD.AgencyDivisionSeqid = SH.AgencyDivisionSeqid\r\n\t\tLEFT JOIN Billing.Facility AS F ON F.FacilitySeqid = SH.FacilitySeqid\r\n\t\tLEFT JOIN Billing.UtilityCompany AS UC ON UC.UtilityCompanySeqid = SH.DeliveryUtilityCompanySeqid\t\t\r\n\t\tLEFT JOIN SBMR.SBMRStatus AS S ON S.SBMRStatusSeqid = SHE.SBMRStatusSeqid\r\n\tORDER BY CASE WHEN(@SortColumn = '') THEN ISNULL(SHE.UpdatedDate, SHE.CreatedDate) END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'UrifNumber' AND @SortOrder = 'ASC') THEN SH.SbmrReferenceNumber END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'UrifNumber' AND @SortOrder = 'DESC') THEN SH.SbmrReferenceNumber END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'SbmrNumber' AND @SortOrder = 'ASC') THEN SH.SBMRHeaderSeqid END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'SbmrNumber' AND @SortOrder = 'DESC') THEN SH.SBMRHeaderSeqid END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'AgencyName' AND @SortOrder = 'ASC') THEN AD.AgencyShortDesc END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'AgencyName' AND @SortOrder = 'DESC') THEN AD.AgencyShortDesc END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'FacilityName' AND @SortOrder = 'ASC') THEN F.FacilityName END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'FacilityName' AND @SortOrder = 'DESC') THEN F.FacilityName END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'SbmrAction' AND @SortOrder = 'ASC') THEN SA.ShortDesc END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'SbmrAction' AND @SortOrder = 'DESC') THEN SA.ShortDesc END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'UtilityCompany' AND @SortOrder = 'ASC') THEN UC.ShortDesc END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'UtilityCompany' AND @SortOrder = 'DESC') THEN UC.ShortDesc END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'RequestedBy' AND @SortOrder = 'ASC') THEN SHE.RequestedBy END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'RequestedBy' AND @SortOrder = 'DESC') THEN SHE.RequestedBy END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'RequestDate' AND @SortOrder = 'ASC') THEN SH.DateAdded END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'RequestDate' AND @SortOrder = 'DESC') THEN SH.DateAdded END DESC,\r\n\t\tCASE WHEN(@SortColumn = 'SbmrStatus' AND @SortOrder = 'ASC') THEN S.ShortDesc END ASC,\r\n\t\tCASE WHEN(@SortColumn = 'SbmrStatus' AND @SortOrder = 'DESC') THEN S.ShortDesc END DESC\t\t\r\n\t\tOFFSET @PageSize * (@CurrentPageNumber -1) ROWS FETCH NEXT @PageSize ROWS ONLY;\r\nEND;"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Batch",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Process_Main_ExchangeInfo2",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Process_Main_ExchangeInfo2",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process exchange data related to billing and meter exchanges within a utility billing system. It orchestrates several operations, including processing exchange data, reconciling account and meter billing tables, handling shore power credits, updating interval data, and archiving interval meter data. The procedure interacts with multiple tables and stored procedures across different schemas, indicating a complex workflow that integrates various aspects of the billing process."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple operations that span different schemas and tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It calls other stored procedures and performs complex updates and inserts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic and aggregation operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It processes large datasets, as indicated by the use of interval data and billing information."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters directly. However, it interacts with other stored procedures that do require parameters, such as "
        },
        {
          "type": "text",
          "text": "usp_ProcessExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "text": "usp_ProcessAccountBillingSetup",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". These parameters are used to control the flow and output of the operations within those procedures."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Process Exchange Data",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calls "
                        },
                        {
                          "type": "text",
                          "text": "usp_ProcessExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to process exchange data with specific parameters."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Captures the status code and message output for error handling and logging."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Verification",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Executes several SELECT statements to verify the state of meter exchanges and ensure no unprocessed data remains."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account and Meter Reconciliation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calls "
                        },
                        {
                          "type": "text",
                          "text": "usp_ProcessAccountBillingSetup",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to reconcile account and meter billing tables, ensuring all accounts and meters are accounted for in the billing period."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Shore Power Credits",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Executes "
                        },
                        {
                          "type": "text",
                          "text": "usp_ProRateCustomerLevelShorePowerCredit",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to handle shore power credits, which are likely adjustments or rebates for specific customers."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Interval Data Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "UploadNYPAAccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with aggregated demand data from "
                        },
                        {
                          "type": "text",
                          "text": "UploadNypaIntervalMeterData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", adjusting for the current billing period."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Archiving",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts processed interval meter data into "
                        },
                        {
                          "type": "text",
                          "text": "UploadNypaIntervalMeterDataArchive",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for archival purposes, ensuring historical data is preserved."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure processes potentially large datasets, especially with interval data aggregation, which can impact performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that tables involved in joins and where clauses are properly indexed to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider the impact of concurrent executions, especially during updates and inserts, which may lead to locking or blocking issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure captures status codes and messages, but additional error handling mechanisms could improve robustness."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that all data is correctly formatted and available. Any missing or malformed data could lead to incomplete processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Propagation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While status codes and messages are captured, there is limited error handling within the procedure itself, which could lead to unhandled exceptions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the performance of the procedure may degrade, especially during aggregation and archival operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values, such as billing periods, can reduce flexibility and require manual updates for each new period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on External Procedures",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on other stored procedures, which means any changes to those could impact its functionality."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE   PROC [Batch].[usp_Process_Main_ExchangeInfo2]\nAS\r\nBEGIN\r\n\t\r\n\r\n-- ProcessExchangeInfo\r\n-- NEW\r\n-- process until you see no error messages, fix the record that causes error after analyzing\r\n\r\nDECLARE\t@return_value int,\r\n\t\t@StatusCode int,\r\n\t\t@Message varchar(1000)\r\n\r\nEXEC\t@return_value = [Common].[usp_ProcessExchangeData]\r\n\t\t@InvoiceBillingGroupdSeqidOrOption = N'1',\r\n\t\t@StatusCode = @StatusCode OUTPUT,\r\n\t\t@Message = @Message OUTPUT\r\n\r\nSELECT\t@StatusCode as N'@StatusCode',\r\n\t\t@Message as N'@Message'\r\n\r\nSELECT\t'Return Value' = @return_value\r\n\r\n\r\n--\r\n\r\n\r\n----------------------------------------------------------------------------------------------------------------------------\r\nSELECT * from Common.uvw_FindOrpanedMeterExchangesWithMeterBillingMostlyNPYA\r\nSELECT * FROM Common.uvw_FindOrpanedMeterExchanges\r\nSELECT * FROM Nypa.uvw_FindNypaMeterExchangesInTheCurrentBillingPeriodUploadPostProcessing\r\norder by CurrentAccountNumber,CurrentMeterNumber,MeterEffectiveOnDate\r\n\r\nSELECT * FROM Common.ExchangeData AS ed WHERE ed.IsProcessed = 'N' AND ed.BillingPeriod = '202305' AND ed.AccountBillingGroupSeqid = 1\r\n--\r\n\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------\r\n-- Check this! There should be no result here, all should have been processed\r\n\r\nSELECT IsProcessed,Exclude,ExchangeDataSeqid,BillingPeriod, CurrentAccountNumber, OriginalAccountNumber, CurrentMeterNumber, OriginalMeterNumber, ExchangeCode\r\nfrom Common.exchangeData\r\nwhere IsProcessed='N' AND AccountBillingGroupSeqid = 1 AND BillingPeriod = '202305'\r\n\r\n--SELECT IsProcessed,UploadNYPAExchangeDataSeqid,BillingPeriod, CurrentAccountNumber, OriginalAccountNumber, CurrentMeterNumber, OriginalMeterNumber, ExchangeCode\r\n--FROM Nypa.UploadNYPAExchangeData\r\n--where IsProcessed='N'\r\n\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n--19. At this point, the Upload Account and Meter Billing tables have been reconciled. \r\n-- EC3 knows about all of the accounts and meters\r\n--\t  that NYPA has billed for the period. \r\n--\r\n\r\n\r\ndeclare @RC int\r\ndeclare @AuthenticatedUserID int\r\nset @StatusCode = 0\r\n\r\nset  @AuthenticatedUserID = 1\r\nset  @StatusCode = 0\r\nexecute @RC = [Nypa].[usp_ProcessAccountBillingSetup] \r\n   @AuthenticatedUserID\r\n  ,@StatusCode output\r\n\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n-- this block handles the shorepower credits (execution order is important)\r\n\r\nset\t@return_value = 0\r\ndeclare @Status int\r\n\r\nEXEC\t@return_value = [Nypa].[usp_ProRateCustomerLevelShorePowerCredit]\r\n\t\t@Status = @Status OUTPUT\r\n\r\nSELECT\t@Status as N'@Status'\r\n\r\nSELECT\t'Return Value' = @return_value\r\n\r\n-------------------------------------------------------------------\r\n-- Handling interval data aggragating the 15 minute interval demand for month\r\n-- process update\r\n\r\nUPDATE       Nypa.UploadNYPAAccountBilling\r\nSET           StandbyContractDemand = groupedvalues.MAXDemand\r\n\t\t\t, CancelStandbyContractDemand = CASE WHEN groupedvalues.RevisedBillingPeriod = '202305' THEN 0 ELSE - groupedvalues.MAXDemand end\r\n\t\t\t, StandbyAsUsedDailyDemand = groupedvalues.MAXDemand\r\n\t\t\t, CancelStandbyAsUsedDailyDemand = CASE WHEN groupedvalues.RevisedBillingPeriod = '202305' THEN 0 ELSE - groupedvalues.MAXDemand end\r\n\t\t\t, AccountDemandUsage = groupedvalues.MAXDemand\r\n\t\t\t, CancelAccountDemandUsage = CASE WHEN groupedvalues.RevisedBillingPeriod = '202305' THEN 0 ELSE - groupedvalues.MAXDemand end\r\nFROM Nypa.UploadNYPAAccountBilling INNER JOIN\r\n                             (SELECT    CurrentAccountNumber, RevisedBillingPeriod, MAX(Demand) AS MAXDemand--, SUM(Demand) AS SumDemand\r\n                               FROM Nypa.UploadNypaIntervalMeterData AS unimd\r\n                               GROUP BY CurrentAccountNumber, RevisedBillingPeriod) AS groupedvalues ON \r\n                         groupedvalues.CurrentAccountNumber = Nypa.UploadNYPAAccountBilling.CurrentAccountNumber AND \r\n                         groupedvalues.RevisedBillingPeriod = Nypa.UploadNYPAAccountBilling.RevisedBillingPeriod\r\nWHERE    (Nypa.UploadNYPAAccountBilling.OriginalAccountNumber \r\nIN (SELECT DISTINCT unimd.CurrentAccountNumber FROM Nypa.UploadNypaIntervalMeterData AS unimd)\r\n)\r\n\r\n\r\n-----------------------------------------\r\n\r\n-----------------------------------------------------------------------------\r\n--DELETE FROM Nypa.UploadNypaIntervalMeterDataArchive WHERE DataLoadBillingPeriod ='202305'\r\n-- Daily Demand Values\r\n-- process insert\r\n\r\nINSERT INTO nypa.UploadNypaIntervalMeterDataArchive\r\n(\r\n    AccountBillingIntervalMeterDataElectricSeqid\r\n  , UtilityCompanySeqid\r\n  , AccountSeqid\r\n  , MeterSeqid\r\n  , AccountExchangeMeterTrackSeqid\r\n  , CurrentAccountNumber\r\n  , CurrentMeterNumber\r\n  , OriginalAccountNumber\r\n  , OriginalMeterNumber\r\n  , AccountBillingGroup\r\n  , BillingPeriod\r\n  , RevisedBillingPeriod\r\n  , AMRIndicator\r\n  , IntervalReadingDate\r\n  , IntervalReadingDateHourPeakInterval\r\n  , Demand\r\n  , CancelIntervalReadingDate\r\n  , CancelIntervalReadingDateHourPeakInterval\r\n  , CancelDemand\r\n  , ProductionAndDeliveryTariff\r\n  , ESTOrACT\r\n  , AccountName\r\n  , AccountAddress\r\n  , ContractNumber\r\n  , UniqueAccountSeqID\r\n  , UniqueMeterSeqid\r\n  , DataLoadBillingPeriod\r\n  , RecordCreatedOn\r\n)\r\n\r\nSELECT \r\nAccountBillingIntervalMeterDataElectricSeqid\r\n, UtilityCompanySeqid\r\n, AccountSeqid\r\n, MeterSeqid\r\n, AccountExchangeMeterTrackSeqid\r\n, CurrentAccountNumber\r\n, CurrentMeterNumber\r\n, OriginalAccountNumber\r\n, OriginalMeterNumber\r\n, AccountBillingGroup\r\n, BillingPeriod\r\n, RevisedBillingPeriod\r\n, AMRIndicator\r\n, IntervalReadingDate\r\n, IntervalReadingDateHourPeakInterval\r\n, Demand\r\n, CancelIntervalReadingDate\r\n, CancelIntervalReadingDateHourPeakInterval\r\n, CancelDemand\r\n, ProductionAndDeliveryTariff\r\n, ESTOrACT\r\n, AccountName\r\n, AccountAddress\r\n, ContractNumber\r\n, UniqueAccountSeqID\r\n, UniqueMeterSeqid\r\n, '202305'\r\n, GETDATE()\r\n FROM Nypa.UploadNypaIntervalMeterData \r\n\r\n\t \r\nEND"
        }
      ]
    }
  ]
}
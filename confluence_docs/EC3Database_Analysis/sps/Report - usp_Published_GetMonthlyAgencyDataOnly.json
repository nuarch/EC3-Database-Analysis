{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_GetMonthlyAgencyDataOnly",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_GetMonthlyAgencyDataOnly",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a summary report of energy usage and costs for a specified agency and billing period. It logs the report request, calculates various energy metrics (cost, demand, usage, and mmBTU), and aggregates these metrics at different organizational levels. The results are returned in a structured format, providing insights into energy consumption and costs for the specified agency and period."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including logging, data retrieval, calculations, and hierarchical data aggregation. It uses temporary tables and joins, which add to its complexity. However, the logic is straightforward and follows a clear sequence of operations."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report. Used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which the report is generated, formatted as YYYYMM."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC AS VARCHAR(MAX)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The agency code for which the report is generated. It identifies the agency within the database."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs the report request using "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", capturing details like the report name, requester, and billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It extracts the calendar year from the billing period and initializes conversion factors for energy types (electricity, gas, steam) from a conversion table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It retrieves agency hierarchy data using a user-defined function "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and stores it in a temporary table "
                },
                {
                  "type": "text",
                  "text": "@SelectedAgency",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Cost Summary",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Calculates and inserts cost data (electricity, gas, steam) into "
                        },
                        {
                          "type": "text",
                          "text": "@TableReturn",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Demand Summary",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Calculates electricity demand (kW) and inserts it into "
                        },
                        {
                          "type": "text",
                          "text": "@TableReturn",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Usage Summary",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Calculates energy usage (kWh, therms, MLbs) and inserts it into "
                        },
                        {
                          "type": "text",
                          "text": "@TableReturn",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "mmBTU Summary",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Converts energy usage to mmBTUs using conversion factors and inserts it into "
                        },
                        {
                          "type": "text",
                          "text": "@TableReturn",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Total Calculation",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Aggregates total costs for each agency and inserts them into "
                        },
                        {
                          "type": "text",
                          "text": "@TableReturn",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Hierarchical Summarization",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Iteratively aggregates data for parent and grandparent agencies, reducing the level index until all levels are processed."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Selects and returns the aggregated data, ordered by agency code, billing period, and cost type."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " minimizes locking but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of temporary tables ("
                },
                {
                  "type": "text",
                  "text": "@TableReturn",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "@SelectedAgency",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can impact memory usage, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Aggregations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple joins and aggregations can be resource-intensive, particularly if the underlying tables are large or lack proper indexing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conversion Factor Queries",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure queries conversion factors for each energy type, which could be optimized by caching or pre-calculating these values if they are static."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " isolation level can lead to reading uncommitted or inconsistent data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the number of agencies or the size of the dataset grows, the performance may degrade due to increased memory and processing requirements."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions or incomplete operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Parameter Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no validation for input parameters, which could lead to unexpected behavior if invalid data is provided."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": High concurrency could lead to contention on shared resources, especially if the underlying tables are heavily accessed by other processes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE  PROCEDURE [Report].[usp_Published_GetMonthlyAgencyDataOnly]\n(\r\n\t@EmailAddress AS VARCHAR(75), \r\n\t@PublishedBillingPeriod AS VARCHAR(6),\r\n\t@AgencyCodeOEC AS VARCHAR(MAX)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n    DECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n    EXEC [Audit].usp_AddReportUsageLog\r\n\t    @ReportName\t\t\t\t\t= @spname,\r\n        @StoredProcName\t\t\t\t= @spname,\r\n        @RequestedBy\t\t\t\t= @EmailAddress,\r\n        @prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n        @prmBillingPeriod\t\t\t= NULL,\r\n        @prmAgency_ies\t\t\t\t= @AgencyCodeOEC,\r\n        @prmFacilityNumber_s\t\t= NULL,\r\n        @prmStartingBillingPeriod\t= NULL,\r\n        @prmEndingBillingPeriod\t\t= NULL;\r\n\r\n    DECLARE @calendarYear VARCHAR(4)\r\n\r\n\tDECLARE @BillingPeriod VARCHAR(6)= @PublishedBillingPeriod\r\n\r\n\r\n    SET @calendarYear = SUBSTRING(@PublishedBillingPeriod, 1, 4)\r\n    \r\n    DECLARE @levelIndex AS INT = 3, @mmBTUEleMultiplier AS FLOAT, @mmBTUGasMultiplier AS FLOAT\r\n\t\t,@mmBTUSTMMultiplier AS FLOAT;\r\n\r\n    SELECT @mmBTUEleMultiplier = MAX(MMBtusFactor) FROM Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod WHERE EnergyDeliveryType = 1 AND BillingPeriod = @BillingPeriod;\r\n    SELECT @mmBTUGasMultiplier = MAX(MMBtusFactor) FROM Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod WHERE EnergyDeliveryType = 5 AND BillingPeriod = @BillingPeriod;\r\n    SELECT @mmBTUSTMMultiplier = MAX(MMBtusFactor) FROM Factors.ConversionEquivalentsForBtuAndCO2eByBillingPeriod WHERE EnergyDeliveryType = 6 AND BillingPeriod = @BillingPeriod;\r\n               \r\n    DECLARE @TableReturn TABLE\r\n        (publishedBillingPeriod BillingPeriod,\r\n          BillingPeriod BillingPeriod,\r\n          FiscalYear VARCHAR(4),\r\n          BillingMonth VARCHAR(20),\r\n          AgencyCodeOEC AgencyCodeOEC,\r\n          AgencyName ldesc,\r\n          Cost VARCHAR(30),\r\n          RevisedBilledAmount MONEY, -- general column for both billed amount and usage\r\n\t      LevelID INT,\r\n\t      ParentAgencyDivisionID int,\r\n\t      CostTypeID INT, -- 1=$, 2=KW, 3=KWH, 4=mmBTU\r\n\t      IsCostTotal CHAR(1) -- 'N'- not calculated total. Use 'N' to avoid summarize cost twice\r\n        )\r\n\r\n    DECLARE @SelectedAgency TABLE\r\n\t\t(agencyLevel INT,\r\n\t    agencyDivisionSeqId INT,\r\n\t    ParentAgencyDivisionSeqId INT,\r\n\t    AgencyDivisionHierarchy HIERARCHYID,\r\n\t    AgencyCodeOEC AgencyCodeOEC);\r\n\r\n    INSERT INTO @SelectedAgency\r\n        (agencyLevel,\r\n        agencyDivisionSeqId,\r\n        ParentAgencyDivisionSeqId,\r\n\t\tAgencyDivisionHierarchy,\r\n\t\tAgencyCodeOEC)\r\n    SELECT AgencyDivisionHierarchy.GetLevel()\r\n\t\t,AgencyDivisionSeqID\r\n\t\t,ParentAgencyDivisionSeqId\r\n\t\t,AgencyDivisionHierarchy\r\n\t\t,AgencyCodeOEC\r\n    FROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress);\r\n\r\n    /*\r\n    dollar amount summary Calculation\r\n    */\r\n    INSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n    SELECT @PublishedBillingPeriod,\r\n\t\tT.BillingPeriod,\r\n        MAX(T.FiscalYear),\r\n        MAX(T.MonthName),\r\n        T.AgencyCodeOEC,\r\n        MAX(T.AgencyName),\r\n        CASE WHEN Energytype = 'ELE' THEN 'Electricity Cost ($)'\r\n                WHEN Energytype = 'GAS' THEN 'Gas Cost ($)'\r\n                WHEN Energytype = 'STM' THEN 'Steam Cost ($)'\r\n        END Cost,\r\n        SUM(T.BilledAmount) AS RevisedBilledAmount,\r\n        MAX(A.AgencyLevel),\r\n        MAX(A.ParentAgencyDivisionSeqId),\r\n        1,\r\n        'N'\r\n    FROM Published.TemporalAccountLevelSummaryByAgency AS T\r\n        INNER JOIN @SelectedAgency AS A ON T.AgencyCodeOEC = A.AgencyCodeOEC\r\n    WHERE T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod\r\n    GROUP BY T.BillingPeriod,\r\n\t\tT.AgencyCodeOEC,      \r\n\t\tCASE WHEN T.EnergyType = 'ELE' THEN 'Electricity Cost ($)'\r\n\t\t\t\tWHEN T.EnergyType = 'GAS' THEN 'Gas Cost ($)'\r\n\t\t\t\tWHEN T.EnergyType = 'STM' THEN 'Steam Cost ($)'\r\n\t\tEND;\r\n\r\n    /*\r\n    KW (electricity deman) summary calculation\r\n    */\r\n    INSERT INTO @TableReturn (publishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingMonth,\r\n\t\tAgencyCodeOEC,\r\n\t\tAgencyName,\r\n\t\tCost,\r\n\t\tRevisedBilledAmount,\r\n\t\tLevelID,\r\n\t\tParentAgencyDivisionID,\r\n\t\tCostTypeID,\r\n\t\tIsCostTotal)\r\n    SELECT @PublishedBillingPeriod,\r\n\t\tT.BillingPeriod,\r\n\t\tMAX(T.FiscalYear),\r\n\t\tMAX(T.MonthName),\r\n\t\tT.AgencyCodeOEC,\r\n\t\tMAX(T.AgencyName),\r\n\t\tCASE WHEN T.EnergyType = 'ELE' THEN 'Electricity Demand (kW)'\r\n\t\t\tELSE '' END AS Demand,\r\n\t\tSUM(T.DemandUsage) AS AccountDemandUsage,\r\n\t\tMAX(A.AgencyLevel),\r\n\t\tMAX(A.ParentAgencyDivisionSeqId),\r\n\t\t2,\r\n\t\t'N'\r\n    FROM Published.TemporalAccountLevelSummaryByAgency AS T\r\n        INNER JOIN @SelectedAgency AS A ON T.AgencyCodeOEC = A.AgencyCodeOEC\r\n    WHERE T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\tAND EnergyType = 'ELE'\r\n    GROUP BY T.BillingPeriod,\r\n            T.AgencyCodeOEC,\r\n            CASE WHEN Energytype = 'ELE' THEN 'Electricity Demand (kW)'\r\n                ELSE '' END;\r\n\r\n    --/*\r\n    --Electricity Usage (kWh) summary calculation\r\n    --*/\r\n    INSERT INTO @TableReturn\r\n        (publishedBillingPeriod,\r\n        BillingPeriod,\r\n        FiscalYear,\r\n        BillingMonth,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        Cost,\r\n        RevisedBilledAmount,\r\n        LevelID,\r\n        ParentAgencyDivisionID,\r\n        CostTypeID,\r\n        IsCostTotal)\r\n    SELECT @PublishedBillingPeriod,\r\n        T.BillingPeriod,\r\n        MAX(T.FiscalYear),\r\n        MAX(T.MonthName),\r\n        T.AgencyCodeOEC,\r\n        MAX(T.AgencyName),\r\n        CASE WHEN T.EnergyType = 'ELE'\r\n            THEN 'Electricity Usage (kWh)'\r\n            WHEN T.EnergyType = 'GAS' THEN 'Gas (Therms)'\r\n            WHEN T.EnergyType = 'STM' THEN 'Steam (MLbs)'\r\n        END AS Usage,\r\n        SUM(T.EnergyUsage) AS AccountEnergyUsage,\r\n        MAX(A.AgencyLevel),\r\n        MAX(A.ParentAgencyDivisionSeqId),\r\n        3,\r\n        'N'\r\n    FROM Published.TemporalAccountLevelSummaryByAgency AS T\r\n        INNER JOIN @SelectedAgency AS A ON T.AgencyCodeOEC = A.AgencyCodeOEC\r\n    WHERE T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod\r\n    GROUP BY T.BillingPeriod,\r\n        T.AgencyCodeOEC,\r\n        CASE WHEN T.EnergyType = 'ELE' THEN 'Electricity Usage (kWh)'\r\n            WHEN T.EnergyType = 'GAS' THEN 'Gas (Therms)'\r\n            WHEN T.EnergyType = 'STM' THEN 'Steam (MLbs)' END;\r\n                    \r\n    /*\r\n    mmBTU summary calculation\r\n    */\r\n    INSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n        BillingPeriod,\r\n        FiscalYear,\r\n        BillingMonth,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        Cost,\r\n        RevisedBilledAmount,\r\n        LevelID,\r\n        ParentAgencyDivisionID,\r\n        CostTypeID,\r\n        IsCostTotal)\r\n    SELECT @PublishedBillingPeriod,\r\n        T.BillingPeriod,\r\n        MAX(T.FiscalYear),\r\n        MAX(T.MonthName),\r\n        T.AgencyCodeOEC,\r\n        MAX(T.AgencyName),\r\n        'Total Usage (mmBTUs)',\r\n        SUM(CASE WHEN T.EnergyType = 'ELE' THEN T.EnergyUsage * @mmBTUEleMultiplier\r\n            WHEN T.EnergyType = 'GAS' THEN T.EnergyUsage * @mmBTUGasMultiplier\r\n            WHEN T.EnergyType = 'STM' THEN T.EnergyUsage * @mmBTUSTMMultiplier END) AS AccountEnergyUsage,\r\n        MAX(A.AgencyLevel),\r\n        MAX(A.ParentAgencyDivisionSeqId),\r\n        4,\r\n        'N'\r\n    FROM Published.TemporalAccountLevelSummaryByAgency AS T\r\n        INNER JOIN @SelectedAgency AS A ON T.AgencyCodeOEC = A.AgencyCodeOEC\r\n    WHERE T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod\r\n    GROUP BY T.BillingPeriod, T.AgencyCodeOEC;\r\n\t\t\r\n    /*\r\n    Calculate Total\r\n    */\r\n    INSERT INTO @TableReturn\r\n\t\t(publishedBillingPeriod,\r\n        BillingPeriod,\r\n        FiscalYear,\r\n        BillingMonth,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        Cost,\r\n        RevisedBilledAmount,\r\n        LevelID,\r\n        ParentAgencyDivisionID,\r\n        CostTypeID,\r\n        IsCostTotal)\r\n    SELECT MAX(publishedBillingPeriod), \r\n\t\tBillingPeriod, \r\n\t\tMAX(FiscalYear),\r\n\t\tMAX(BillingMonth),\r\n\t\tAgencyCodeOEC,\r\n\t\tMAX(AgencyName),\r\n\t\tCASE WHEN CostTypeID = '1' THEN 'Total Cost ($)' END AS Cost, \r\n\t\tSUM(RevisedBilledAmount),\r\n\t\tMAX(LevelID),\r\n\t\tMAX(ParentAgencyDivisionID),\r\n\t\tCostTypeID,\r\n\t\t'Y'\r\n\tFROM @TableReturn\r\n\tWHERE IsCostTotal = 'N' AND CostTypeID  = '1'\r\n\tGROUP BY BillingPeriod,\r\n\t\tAgencyCodeOEC,\r\n\t\tCostTypeID;\r\n\t\t\r\n    /*\r\n    Summarize for parent/grandparent \r\n    */\t\r\n    WHILE(@levelIndex > 1)\r\n    BEGIN\r\n\t    INSERT INTO @TableReturn\r\n\t\t\t(publishedBillingPeriod,\r\n\t\t\tBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tBillingMonth,\r\n\t\t\tAgencyCodeOEC,\r\n\t\t\tAgencyName,\r\n\t\t\tCost,\r\n\t\t\tRevisedBilledAmount,\r\n\t\t\tLevelID,\r\n\t\t\tParentAgencyDivisionID,\r\n\t\t\tCostTypeID,\r\n\t\t\tIsCostTotal)\r\n\t    SELECT MAX(T.publishedBillingPeriod),\r\n\t\t    T.BillingPeriod,\r\n\t\t    MAX(T.FiscalYear),\r\n\t\t    MAX(T.BillingMonth),\r\n\t\t    MAX(A.AgencyCodeOEC),\r\n\t\t    MAX(A.AgencyName),\r\n\t\t    T.Cost,\r\n\t\t    SUM(T.RevisedBilledAmount),\r\n\t\t    @levelIndex-1,\r\n\t\t    MAX(A.ParentAgencyDivisionSeqId),\r\n\t\t    MAX(T.CostTypeID),\r\n\t\t    T.IsCostTotal\r\n\t    FROM @TableReturn AS T\r\n\t\t\tINNER JOIN Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS A ON T.ParentAgencyDivisionID = A.AgencyDivisionSeqid\r\n\t    WHERE T.LevelID = @levelIndex\r\n\t    GROUP BY T.BillingPeriod,\r\n\t\t    T.ParentAgencyDivisionID,\r\n\t\t    T.BillingPeriod,\r\n\t\t    T.Cost,\r\n\t\t    T.IsCostTotal;\r\n\t\r\n\t    SET @levelIndex = @levelIndex - 1;\r\n    END;\r\n\r\n    SELECT MAX(PublishedBillingPeriod) AS PublishedBillingPeriod,\r\n\t    BillingPeriod,\r\n\t    MAX(FiscalYear) AS FiscalYear,\r\n\t    MAX(BillingMonth) AS BillingMonth,\r\n\t    AgencyCodeOEC,\r\n\t    MAX(AgencyName) AS AgencyName,\r\n\t    Cost,\r\n\t    SUM(RevisedBilledAmount) AS RevisedBilledAmount\r\n    FROM @TableReturn\r\n    GROUP BY BillingPeriod, AgencyCodeOEC, Cost\r\n    ORDER BY AgencyCodeOEC, BillingPeriod, Cost;\r\nEND;"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Utils",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ReindexTablesAfterPublishing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ReindexTablesAfterPublishing",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to reindex a predefined set of tables within a SQL Server database. These tables are primarily related to account meter billing and history reports, as well as publishing tables. The procedure iterates over a list of table names, rebuilding all indexes and updating statistics for each table to optimize query performance and maintain database efficiency after data publishing operations."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this stored procedure is considered medium. While the logic itself is straightforward, involving cursor operations and dynamic SQL execution, it requires a good understanding of SQL Server indexing and statistics management. Additionally, the use of dynamic SQL and cursors introduces a level of complexity that requires careful handling to avoid potential performance issues."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on a hardcoded list of table names defined within the procedure itself."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting "
                },
                {
                  "type": "text",
                  "text": "NOCOUNT ON",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to prevent the sending of row count messages, which can improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table List Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A table variable "
                },
                {
                  "type": "text",
                  "text": "@TableNames",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is declared to store the names of tables that need reindexing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Population",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure populates "
                },
                {
                  "type": "text",
                  "text": "@TableNames",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with a list of specific tables from the "
                },
                {
                  "type": "text",
                  "text": "Published",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "Billing",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " schemas."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A cursor "
                },
                {
                  "type": "text",
                  "text": "REINDEX_CURSOR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is declared to iterate over the table names stored in "
                },
                {
                  "type": "text",
                  "text": "@TableNames",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Reindexing and Statistics Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure opens the cursor and fetches each table name into the variable "
                        },
                        {
                          "type": "text",
                          "text": "@TableName",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each table, it prints a message indicating the table is being reindexed."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It constructs a dynamic SQL statement to rebuild all indexes on the current table using "
                        },
                        {
                          "type": "text",
                          "text": "ALTER INDEX ALL ON [TableName] REBUILD",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It executes the dynamic SQL to perform the reindexing."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It constructs and executes another dynamic SQL statement to update statistics on the current table using "
                        },
                        {
                          "type": "text",
                          "text": "UPDATE STATISTICS [TableName]",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The cursor fetches the next table name and repeats the process until all tables are processed."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": After processing all tables, the cursor is closed and deallocated."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic SQL",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of dynamic SQL allows flexibility in executing SQL statements on different tables, but it can introduce overhead and potential security risks if not handled properly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Cursors can be resource-intensive, especially if the list of tables is large. However, in this context, the cursor is used efficiently to iterate over a manageable list of table names."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Rebuilding",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Rebuilding indexes can be resource-intensive and may lock tables, impacting database performance during execution. It is advisable to run this procedure during off-peak hours."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Statistics Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updating statistics is crucial for query optimization but can also be resource-intensive. It is beneficial for maintaining query performance after significant data changes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Locking and Blocking",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Rebuilding indexes can cause locking and blocking, potentially affecting other database operations. This risk is mitigated by scheduling the procedure during low-activity periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic SQL Risks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Although the procedure uses dynamic SQL safely by constructing statements internally, any changes to include user input should be handled with care to prevent SQL injection vulnerabilities."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance Overhead",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The hardcoded list of table names requires manual updates if new tables are added or existing tables are renamed or removed. This can lead to maintenance challenges."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Utilization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure can consume significant CPU and I/O resources, especially in large databases, impacting overall system performance during execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--******************************************************************************************************\n--* Description:\tThis stored procedure reindexes the tables that need to be after the publishing\r\n--*\t\t\t\t\tFor now, it has all the tables from the Account Meter Billing and History reports\r\n--*\r\n--* AUTHOR:       MOHAMMED BELARREM\r\n--* Created On:   04/10/2013\r\n--******************************************************************************************************\r\n--* Date       Tech Description of Change\r\n--* ---------- ---\t------------------------------------------------------------------------------------\r\n--* 04/10/2013 MOH  First Version  \r\n--* 06/07/2016 MOH  Added all the publishing tables \r\n--******************************************************************************************************\r\nCREATE PROCEDURE [Utils].[usp_ReindexTablesAfterPublishing]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDECLARE @TableNames TABLE(TableName VARCHAR(250));\r\n\r\n\t-- insert all the tables that need to be reindexed\r\n\tINSERT INTO\t@TableNames VALUES('Published.AccountLevelRawDataForCurrentPeriod');\r\n\tINSERT INTO\t@TableNames VALUES('Published.AccountLevelSummaryByAgency');\r\n\tINSERT INTO\t@TableNames VALUES('Published.AccountLevelSummaryByCityWide');\r\n\tINSERT INTO\t@TableNames VALUES('Published.AccountLevelSummaryByFacility');\r\n\tINSERT INTO\t@TableNames VALUES('Published.AccountLevelSummaryForDollarsBtusAndCo2');\r\n\tINSERT INTO\t@TableNames VALUES('Published.AccountMeterLevelRawDataForCurrentPeriod');\r\n\tINSERT INTO\t@TableNames VALUES('Published.EnergyUsageSummaryGroupByAgencyAndEnergyType');\r\n\tINSERT INTO\t@TableNames VALUES('Published.FiscalYearPivotByAgencyAndFacilityDollarsAndUsage');\r\n\tINSERT INTO\t@TableNames VALUES('Published.FiscalYearPivotByAgencyDollarsAndUsage');\r\n\tINSERT INTO\t@TableNames VALUES('Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage');\r\n\tINSERT INTO\t@TableNames VALUES('Published.FiscalYearPivotByEncoreMonthlyPayments');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.Account');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AccountExchangeMeterTrack');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.Meter');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.Facility');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.UtilityTariffRateInformation');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AgencyDivision');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.UtilityCompany');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AccountBilling');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AccountBillingAdjustmentElectric');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AccountBillingAdjustmentGas');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AccountBillingAdjustmentCrisGas ');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.AccountBillingAdjustmentPaperBill');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.MeterBilling');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.MeterBillingElectric');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.MeterBillingAdjustmentElectric');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.MeterBillingAdjustmentGas');\r\n\tINSERT INTO\t@TableNames VALUES('Billing.MeterBillingAdjustmentCrisGas');\r\n\r\n\t-- variables needed to do the individual indexing\r\n\tDECLARE @TableName VARCHAR(255), @sql NVARCHAR(500), @StartingTime datetime, @EndingTime DATETIME;\r\n\tDECLARE REINDEX_CURSOR CURSOR FOR SELECT TableName FROM @TableNames\r\n\r\n\tOpen REINDEX_CURSOR Fetch NEXT FROM REINDEX_CURSOR INTO @TableName\r\n\r\n\tWHILE @@FETCH_STATUS = 0\r\n\tBEGIN\r\n\t\tPRINT @TableName + ' is being reindexed' \r\n\r\n\t\t-- construct a sql statement to reindex and then run it\r\n\t\tSET @sql = 'ALTER INDEX ALL ON ' + @TableName + ' REBUILD'\r\n\t\tEXEC (@sql)\r\n\r\n\t\tSET @sql = 'UPDATE STATISTICS ' + @TableName \r\n\t\tEXEC (@sql)\r\n\r\n\t\tFETCH NEXT FROM REINDEX_CURSOR INTO @TableName\r\n\tEND;\r\n\r\n\tCLOSE REINDEX_CURSOR\r\n\tDEALLOCATE REINDEX_CURSOR\r\nEND;"
        }
      ]
    }
  ]
}
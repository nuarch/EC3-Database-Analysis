{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_SpaceUsedAnalyzer",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_SpaceUsedAnalyzer",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to analyze and report on the space usage of tables and indexes within a SQL Server database. It provides two modes of operation: a summary of space usage for tables and a detailed view of index space usage. The procedure allows sorting the results based on specified columns and order."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves dynamic SQL execution, cursor operations, and temporary table management, which adds a moderate level of complexity. It requires understanding of SQL Server system views and functions, such as "
        },
        {
          "type": "text",
          "text": "sys.objects",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", "
        },
        {
          "type": "text",
          "text": "sys.schemas",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", and "
        },
        {
          "type": "text",
          "text": "sp_spaceused",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@type",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (varchar(256), default 'summary'): Determines the mode of operation. Accepts 'summary' for table space usage or 'details' for index space usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@sort_order",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " (varchar(256), default '1 ASC'): Specifies the sorting order of the results. It allows sorting by different columns in ascending or descending order."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by declaring variables and checking the "
                },
                {
                  "type": "text",
                  "text": "@type",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter to decide the mode of operation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Summary Mode",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Temporary tables "
                        },
                        {
                          "type": "text",
                          "text": "#TableSizes",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "#TableSizesBuffer",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " are created to store space usage data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A cursor iterates over all user tables in the database, using "
                        },
                        {
                          "type": "text",
                          "text": "sys.objects",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "sys.schemas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to fetch table names and schemas."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each table, "
                        },
                        {
                          "type": "text",
                          "text": "sp_spaceused",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is executed to gather space usage statistics, which are inserted into "
                        },
                        {
                          "type": "text",
                          "text": "#TableSizesBuffer",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Data from "
                        },
                        {
                          "type": "text",
                          "text": "#TableSizesBuffer",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is then inserted into "
                        },
                        {
                          "type": "text",
                          "text": "#TableSizes",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A dynamic SQL command is constructed to select and sort the top 10 results from "
                        },
                        {
                          "type": "text",
                          "text": "#TableSizes",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " based on "
                        },
                        {
                          "type": "text",
                          "text": "@sort_order",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Temporary tables are dropped after execution."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Details Mode",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A dynamic SQL command is constructed to query detailed index space usage using "
                        },
                        {
                          "type": "text",
                          "text": "sys.dm_db_index_physical_stats",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and related system views."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The results are sorted based on "
                        },
                        {
                          "type": "text",
                          "text": "@sort_order",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If an invalid "
                },
                {
                  "type": "text",
                  "text": "@type",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is provided, an error message is printed."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor to iterate over tables can be resource-intensive, especially in databases with a large number of tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic SQL",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While flexible, dynamic SQL can introduce overhead and potential security risks if not handled properly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The creation and dropping of temporary tables can impact performance, particularly if the procedure is executed frequently."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Statistics",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "sys.dm_db_index_physical_stats",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can be resource-intensive, especially if run on large databases."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SQL Injection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of dynamic SQL with user-provided input ("
                },
                {
                  "type": "text",
                  "text": "@sort_order",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") can expose the procedure to SQL injection attacks if not properly sanitized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's reliance on temporary tables may lead to contention issues if executed concurrently by multiple sessions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks robust error handling, which could lead to unhandled exceptions or misleading error messages."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of cursors and temporary tables may not scale well in environments with a large number of tables or high transaction volumes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [dbo].[usp_SpaceUsedAnalyzer]\n@type\t\t\t\tvarchar(256)='summary',\t\t------------------------------------{Options 'summary' or 'Details'}\r\n@sort_order\t\tvarchar(256)='1 ASC'\t\t----------------------------------------{Options 'ASC' or 'DESC'}\r\n-- ==========================================================================================\r\n-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n-- ==========================================================================================\r\n-- \tScript Title :\r\n-- \t=====================================================================================\r\n-- \tDescription  :\t\t Apply the procedure to the local database \r\n--\t\r\n--\tSample:\t\t\t\t exec usp_SpaceUsedAnalyzer 'summary','6 desc'\t\t\t\t-- order by max spaceused by indexes \r\n--\t\t\t\t\t\t\t exec usp_SpaceUsedAnalyzer 'summary','5 desc'\t\t\t\t-- order by max spaceused by the Physical data \r\n--\t\t\t\t\t\t\t exec usp_SpaceUsedAnalyzer 'details','6 desc,8 desc'\t\t-- order by max space used by non clustred indexes \r\n--\t\t\t\t\t\t\t exec usp_SpaceUsedAnalyzer 'summary','4 desc'\t\t\t\t-- order by max number of rows\r\n-- \t=====================================================================================\r\n-- \tCoder  \t\t\t\t\t\t\t\t\t\t: \tShaunt Khaldtiance\r\n-- \tCreation Date\t\t\t\t\t\t\t\t:\t10/04/2008\r\n--  Last \tModification Date\t(by whom)\t:\r\n-- ==========================================================================================\r\n-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n-- ==========================================================================================\r\nAS\r\ndeclare\t@command varchar(1000),\r\n\t\t\t@schemaname varchar(256),\r\n\t\t\t@FullName varchar(256),\r\n\t\t\t@Name varchar(256),\r\n\t\t\t@schema varchar(256)\r\nif (@type='summary')\r\nbegin \r\n\t\t\t\t\t\t\t\t\tif object_id(N'tempdb..[#TableSizes]') is not null   drop table #TableSizes ;\r\n\t\t\t\t\t\t\t\t\tif object_id(N'tempdb..[#TableSizesBuffer]') is not null   drop table #TableSizesBuffer ;\r\n\t\t\t\t\t\t\t\t\tcreate table #TableSizes\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t[Schema]\t\t\t\tnvarchar(128),   \r\n\t\t\t\t\t\t\t\t\t\t[Table Name]\t\t\tnvarchar(128),   \r\n\t\t\t\t\t\t\t\t\t\t[Number of Rows]\tchar(11),    \r\n\t\t\t\t\t\t\t\t\t\t[Reserved Space]\tvarchar(18), \r\n\t\t\t\t\t\t\t\t\t\t[Data Space]\t\t\tvarchar(18),    \r\n\t\t\t\t\t\t\t\t\t\t[Index Size]\t\t\tvarchar(18),    \r\n\t\t\t\t\t\t\t\t\t\t[Unused Space]\t\tvarchar(18),   \r\n\t\t\t\t\t\t\t\t\t) ;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tselect *  into  #TableSizesBuffer from #TableSizes where 1=2\r\n\t\t\t\t\t\t\t\t\tdeclare curSchemaTable cursor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  for select '['+sys.schemas.[name] + '].[' + sys.objects.name+']',sys.objects.name,sys.schemas.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  FROM sys.objects\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, sys.schemas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  where   object_id > 100\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t --     and sys.schemas.[name] = @schemaname\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  and type_desc = 'USER_TABLE'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  and sys.objects.schema_id = sys.schemas.schema_id ; \r\n\t\t\t\t\t\t\t\t\topen curSchemaTable ;\r\n\t\t\t\t\t\t\t\t\tfetch curSchemaTable into @FullName,@Name,@schema ;\r\n\t\t\t\t\t\t\t\t\twhile ( @@FETCH_STATUS = 0 )\r\n\t\t\t\t\t\t\t\t\tbegin     \r\n\t\t\t\t\t\t\t\t\t\t\t\ttruncate table #TableSizesBuffer\r\n\t\t\t\t\t\t\t\t\t\t\t\tprint @FullName\r\n\t\t\t\t\t\t\t\t\t\t\t\tinsert into #TableSizesBuffer ([Table Name],[Number of Rows],[Reserved Space],[Data Space],[Index Size],[Unused Space] )\r\n\t\t\t\t\t\t\t\t\t\t\t\texec sp_spaceused @objname = @FullName ;      \r\n\t\t\t\t\t\t\t\t\t\t\t\tupdate  #TableSizesBuffer set [Schema]=@schema where [Table Name]=@Name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tinsert into #TableSizes select * from #TableSizesBuffer\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\tfetch curSchemaTable into @FullName,@Name,@schema ;\r\n\t\t\t\t\t\t\t\t\tend \r\n\t\t\t\t\t\t\t\t\tclose curSchemaTable ;      \r\n\t\t\t\t\t\t\t\t\tdeallocate curSchemaTable ;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tselect @command='select Top 10\t[Table Name],\r\n\t\t\t\t\t\t\t\t\t\t\t\t[Schema], \r\n\t\t\t\t\t\t\t\t\t\t\t\t[Number of Rows],\r\n\t\t\t\t\t\t\t\t\t\t\t\tconvert(decimal(15,2),convert(float,replace([Reserved Space],''KB'',''''))/1024.0) ''Reserved Space (MB)'',\r\n\t\t\t\t\t\t\t\t\t\t\t\tconvert(decimal(15,2),convert(float,replace([Data Space],''KB'',''''))/1024.0)\t\t''Data Space (MB)'',\r\n\t\t\t\t\t\t\t\t\t\t\t\tconvert(decimal(15,2),convert(float,replace([Index Size],''KB'',''''))/1024.0\t)\t''Index Size (MB)'',\r\n\t\t\t\t\t\t\t\t\t\t\t\tconvert(decimal(15,2),convert(float,replace([Unused Space],''KB'',''''))/1024.0) ''Unused Space(MB)''\r\n\t\t\t\t\t\t\t\t\tFROM [#TableSizes] order by '+@sort_order\r\n\t\t\t\t\t\t\t\t\texec (@command)\r\n\t\t\t\t\t\t\t\t\tdrop table #TableSizes ;\r\n\t\t\t\t\t\t\t\t\tdrop table #TableSizesBuffer ;\r\nend\r\nelse\r\nif (@type='details')\r\nbegin \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tselect @command='SELECT    Tab.Name ''Table Name'',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSch.Name ''Schema Name'',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInx.[name] ''Index Name'',\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInx.index_id ''Index ID'',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInxUSG.page_count ''No. Pages'',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInxUSG.index_type_desc,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInxUSG.alloc_unit_type_desc,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconvert(float,InxUSG.page_count*8.00/1024.00) ''Used Space (MB)''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\t\tsys.dm_db_index_physical_stats(db_id(), NULL, NULL, NULL , NULL)  InxUSG\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin\t\tsys.indexes Inx on InxUSG.object_id=Inx.object_id and InxUSG.index_id=Inx.index_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin\t\tsys.tables\tTab on Tab.object_id=InxUSG.object_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin\t\tsys.schemas Sch on Sch.schema_id=Tab.schema_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\torder by '+@sort_order\r\n\t\t\t\t\t\t\t\t\texec (@command)\r\nend\r\nelse \r\nbegin \r\n\t\t\t\t\t\tprint 'error in syntax:'+char(13)+space(10)+'exec usp_SpaceUsedAnalyzer {summary|details},{n1 [Desc|Asc][,n [Desc|Asc],...]}'\r\nend \r\n-- ==========================================================================================\r\n-- \tEnd  of the Script  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n-- =========================================================================================="
        }
      ]
    }
  ]
}
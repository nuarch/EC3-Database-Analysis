{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "dbo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "aspnet_Membership_GetPassword",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "aspnet_Membership_GetPassword",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve a user's password from the membership database in a Microsoft SQL Server environment. It handles password retrieval while considering security measures such as account lockout after a certain number of failed attempts. The procedure also manages transactions to ensure data consistency during the process."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to its handling of multiple security checks, transaction management, and conditional logic for updating user account status based on password retrieval attempts."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ApplicationName (nvarchar(256))",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The name of the application for which the user is registered."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UserName (nvarchar(256))",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The username of the account whose password is being retrieved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MaxInvalidPasswordAttempts (int)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The maximum number of failed password attempts allowed before the account is locked."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PasswordAttemptWindow (int)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The time window (in minutes) during which failed attempts are counted."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CurrentTimeUtc (datetime)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The current UTC time, used for timestamping and calculating lockout periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PasswordAnswer (nvarchar(128) = NULL)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The answer to the user's password recovery question, if applicable."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by checking if a transaction is already active. If not, it starts a new transaction to ensure atomicity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "User Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It retrieves user details from the "
                },
                {
                  "type": "text",
                  "text": "aspnet_Applications",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "aspnet_Membership",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables using the provided application name and username. It uses an "
                },
                {
                  "type": "text",
                  "text": "UPDLOCK",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " hint to prevent other transactions from modifying the data until the current transaction is complete."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If no user is found, it sets an error code and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Lockout Check",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the user account is locked, it sets an error code and exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Password Answer Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If a password answer is provided, it checks if it matches the stored answer. If not, it updates the failed attempt count and checks if the account should be locked."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account Lockout",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the failed attempts exceed the maximum allowed, the account is locked, and the lockout date is updated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates the membership table with the new lockout status and attempt counts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Completion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Commits the transaction if no errors occurred; otherwise, it rolls back the transaction."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Password Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If successful, it returns the password and its format."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the "
                },
                {
                  "type": "text",
                  "text": "LOWER(@ApplicationName)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "LOWER(@UserName)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " comparisons are supported by appropriate indexes to avoid full table scans."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "UPDLOCK",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " ensures data consistency but may lead to blocking in high-concurrency environments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The transaction scope is limited to necessary operations, minimizing the time locks are held."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Case Sensitivity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "LOWER()",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for case-insensitive comparisons assumes that the database collation is case-sensitive. If not, this may be redundant."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Storing and retrieving passwords in plain text (even temporarily) can be a security risk. Consider using hashed passwords."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "GOTO",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for error handling, which can make the flow harder to follow and maintain."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's logic for handling failed attempts and lockouts may need optimization for applications with a large user base to prevent performance bottlenecks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Dates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a hardcoded date ('17540101') for resetting the attempt window start date may not be intuitive and could lead to confusion."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [dbo].[aspnet_Membership_GetPassword]\n    @ApplicationName                nvarchar(256),\r\n    @UserName                       nvarchar(256),\r\n    @MaxInvalidPasswordAttempts     int,\r\n    @PasswordAttemptWindow          int,\r\n    @CurrentTimeUtc                 datetime,\r\n    @PasswordAnswer                 nvarchar(128) = NULL\r\nAS\r\nBEGIN\r\n    DECLARE @UserId                                 uniqueidentifier\r\n    DECLARE @PasswordFormat                         int\r\n    DECLARE @Password                               nvarchar(128)\r\n    DECLARE @passAns                                nvarchar(128)\r\n    DECLARE @IsLockedOut                            bit\r\n    DECLARE @LastLockoutDate                        datetime\r\n    DECLARE @FailedPasswordAttemptCount             int\r\n    DECLARE @FailedPasswordAttemptWindowStart       datetime\r\n    DECLARE @FailedPasswordAnswerAttemptCount       int\r\n    DECLARE @FailedPasswordAnswerAttemptWindowStart datetime\r\n\r\n    DECLARE @ErrorCode     int\r\n    SET @ErrorCode = 0\r\n\r\n    DECLARE @TranStarted   bit\r\n    SET @TranStarted = 0\r\n\r\n    IF( @@TRANCOUNT = 0 )\r\n    BEGIN\r\n\t    BEGIN TRANSACTION\r\n\t    SET @TranStarted = 1\r\n    END\r\n    ELSE\r\n    \tSET @TranStarted = 0\r\n\r\n    SELECT  @UserId = u.UserId,\r\n            @Password = m.Password,\r\n            @passAns = m.PasswordAnswer,\r\n            @PasswordFormat = m.PasswordFormat,\r\n            @IsLockedOut = m.IsLockedOut,\r\n            @LastLockoutDate = m.LastLockoutDate,\r\n            @FailedPasswordAttemptCount = m.FailedPasswordAttemptCount,\r\n            @FailedPasswordAttemptWindowStart = m.FailedPasswordAttemptWindowStart,\r\n            @FailedPasswordAnswerAttemptCount = m.FailedPasswordAnswerAttemptCount,\r\n            @FailedPasswordAnswerAttemptWindowStart = m.FailedPasswordAnswerAttemptWindowStart\r\n    FROM dbo.aspnet_Applications a, dbo.aspnet_Users u, dbo.aspnet_Membership m WITH ( UPDLOCK )\r\n    WHERE   LOWER(@ApplicationName) = a.LoweredApplicationName AND\r\n            u.ApplicationId = a.ApplicationId    AND\r\n            u.UserId = m.UserId AND\r\n            LOWER(@UserName) = u.LoweredUserName\r\n\r\n    IF ( @@rowcount = 0 )\r\n    BEGIN\r\n        SET @ErrorCode = 1\r\n        GOTO Cleanup\r\n    END\r\n\r\n    IF( @IsLockedOut = 1 )\r\n    BEGIN\r\n        SET @ErrorCode = 99\r\n        GOTO Cleanup\r\n    END\r\n\r\n    IF ( NOT( @PasswordAnswer IS NULL ) )\r\n    BEGIN\r\n        IF( ( @passAns IS NULL ) OR ( LOWER( @passAns ) <> LOWER( @PasswordAnswer ) ) )\r\n        BEGIN\r\n            IF( @CurrentTimeUtc > DATEADD( minute, @PasswordAttemptWindow, @FailedPasswordAnswerAttemptWindowStart ) )\r\n            BEGIN\r\n                SET @FailedPasswordAnswerAttemptWindowStart = @CurrentTimeUtc\r\n                SET @FailedPasswordAnswerAttemptCount = 1\r\n            END\r\n            ELSE\r\n            BEGIN\r\n                SET @FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount + 1\r\n                SET @FailedPasswordAnswerAttemptWindowStart = @CurrentTimeUtc\r\n            END\r\n\r\n            BEGIN\r\n                IF( @FailedPasswordAnswerAttemptCount >= @MaxInvalidPasswordAttempts )\r\n                BEGIN\r\n                    SET @IsLockedOut = 1\r\n                    SET @LastLockoutDate = @CurrentTimeUtc\r\n                END\r\n            END\r\n\r\n            SET @ErrorCode = 3\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF( @FailedPasswordAnswerAttemptCount > 0 )\r\n            BEGIN\r\n                SET @FailedPasswordAnswerAttemptCount = 0\r\n                SET @FailedPasswordAnswerAttemptWindowStart = CONVERT( datetime, '17540101', 112 )\r\n            END\r\n        END\r\n\r\n        UPDATE dbo.aspnet_Membership\r\n        SET IsLockedOut = @IsLockedOut, LastLockoutDate = @LastLockoutDate,\r\n            FailedPasswordAttemptCount = @FailedPasswordAttemptCount,\r\n            FailedPasswordAttemptWindowStart = @FailedPasswordAttemptWindowStart,\r\n            FailedPasswordAnswerAttemptCount = @FailedPasswordAnswerAttemptCount,\r\n            FailedPasswordAnswerAttemptWindowStart = @FailedPasswordAnswerAttemptWindowStart\r\n        WHERE @UserId = UserId\r\n\r\n        IF( @@ERROR <> 0 )\r\n        BEGIN\r\n            SET @ErrorCode = -1\r\n            GOTO Cleanup\r\n        END\r\n    END\r\n\r\n    IF( @TranStarted = 1 )\r\n    BEGIN\r\n\tSET @TranStarted = 0\r\n\tCOMMIT TRANSACTION\r\n    END\r\n\r\n    IF( @ErrorCode = 0 )\r\n        SELECT @Password, @PasswordFormat\r\n\r\n    RETURN @ErrorCode\r\n\r\nCleanup:\r\n\r\n    IF( @TranStarted = 1 )\r\n    BEGIN\r\n        SET @TranStarted = 0\r\n    \tROLLBACK TRANSACTION\r\n    END\r\n\r\n    RETURN @ErrorCode\r\n\r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_GetMeterExtentedBillingInformation",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_GetMeterExtentedBillingInformation",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve extended billing information for meters associated with a specific facility or agency. It logs the usage of the report, determines whether to fetch data by agency or facility, and retrieves current and previous meter numbers. The procedure then compiles billing data for electric, gas, and CRIS gas meters, returning a comprehensive dataset that includes meter information, billing details, and energy usage."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple conditional logic paths based on input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses Common Table Expressions (CTEs) and table variables to manage intermediate data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs multiple joins and unions to compile data from different sources."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes logging functionality and dynamic decision-making based on input parameters."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report. Used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which data is requested. Used to filter the billing data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCode AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The code representing the agency. Determines if data should be fetched by agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@OECFacilityNumber AS VARCHAR(7)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The facility number. Used to determine if data should be fetched by facility."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs the report usage by calling another stored procedure, "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", with relevant parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Facility and Agency Determination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Converts the facility number to a sequence ID."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Determines whether to fetch data by agency or facility based on the presence of a facility sequence ID."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Hierarchy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Populates a table variable with agency and its descendants using a user-defined function."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Meter Data Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Uses a CTE to rank meter records by version, identifying current and previous meter numbers."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts these into a temporary table for later use."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves billing data for electric, gas, and CRIS gas meters."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Joins with the temporary table to include previous meter numbers."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Filters data based on the billing period and agency/facility criteria."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Uses "
                        },
                        {
                          "type": "text",
                          "text": "UNION ALL",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to combine results from different meter types."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which can improve performance by avoiding locks but may result in reading uncommitted data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Variables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used for temporary storage, which can be efficient for small datasets but may not perform well with large data volumes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Unions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple joins and unions can be resource-intensive, especially if the underlying tables are large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that relevant columns, such as those used in joins and filters, are indexed to improve query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to dirty reads, where uncommitted changes are visible, potentially leading to inconsistent data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of table variables and multiple joins may not scale well with large datasets, potentially leading to performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains hardcoded values (e.g., "
                },
                {
                  "type": "text",
                  "text": "A.EnergySource IN (5)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "), which may limit flexibility and require updates if business rules change."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_GetMeterExtentedBillingInformation]\n(\r\n\t@EmailAddress AS VARCHAR(75),\r\n\t@PublishedBillingPeriod AS VARCHAR(6),\r\n\t@AgencyCode AS VARCHAR(6),\r\n\t@OECFacilityNumber AS VARCHAR(7)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName\t\t\t\t\t= @spname,\r\n\t\t@StoredProcName\t\t\t\t= @spname,\r\n\t\t@RequestedBy\t\t\t\t= @EmailAddress,\r\n\t\t@prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n\t\t@prmBillingPeriod\t\t\t= NULL,\r\n\t\t@prmAgency_ies\t\t\t\t= @AgencyCode,\r\n\t\t@prmFacilityNumber_s\t\t= @OECFacilityNumber,\r\n\t\t@prmStartingBillingPeriod\t= NULL,\r\n\t\t@prmEndingBillingPeriod\t\t= NULL;\r\n\r\n\tDECLARE @FacilitySeqid AS INT, @ResultByAgency AS CHAR(1);\r\n\r\n\t-- table variable to hold the previous meter numbers\r\n\tDECLARE @PreviousMeterNumbersTempTable TABLE (UniqueMeterSeqid INT, CurrentMeterNumber VARCHAR(9), PriorMeterNumber VARCHAR(9))\r\n\r\n\t-- convert the facility number to seqid\r\n\tSELECT @FacilitySeqid = FacilitySeqid FROM Billing.Facility WHERE OecFacilityNumber = @OECFacilityNumber;\r\n\r\n\t-- determine if we need to return data by agency or simply for the single facility\r\n\tIF (@FacilitySeqid IS NULL)\r\n\t\tSET @ResultByAgency = 'Y';\r\n\tELSE\r\n\t\tSET @ResultByAgency = 'N';\r\n\r\n\t-- collect the agencies into a table variable to save a bit\r\n\tDECLARE @AgencyAndItsDecendants TABLE (AgencyDivisionSeqID INT);\r\n\r\n\t-- populate the table\r\n\tINSERT INTO @AgencyAndItsDecendants(AgencyDivisionSeqID)\r\n\tSELECT AgencyDivisionSeqID\r\n\tFROM Billing.uftn_TableGetAllAgencyChildrenByAgencyCodeOEC(@AgencyCode, @EmailAddress);\r\n\r\n\r\n;WITH RankedData AS (\n    SELECT  M.UniqueMeterSeqid, M.OriginalMeterNumber,\r\n\tROW_NUMBER() OVER (PARTITION BY M.UniqueMeterSeqid ORDER BY M.RecordVersion DESC) AS rownum\r\n\tFROM Billing.Account AS A \r\n\tINNER JOIN Billing.Meter AS M ON M.UniqueAccountSeqID = A.UniqueAccountSeqid \r\n\tAND (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\n\t)\n\nINSERT INTO @PreviousMeterNumbersTempTable\r\n\t(\r\n\t    UniqueMeterSeqid,\r\n\t    CurrentMeterNumber,\r\n\t    PriorMeterNumber\r\n\t)\nSELECT \n\tR1.UniqueMeterSeqid, \n    R1.OriginalMeterNumber AS CurrentMeterNumber, \n    R2.OriginalMeterNumber  AS PreviousMEterNumber\nFROM RankedData R1\nINNER JOIN RankedData R2\nON R2.UniqueMeterSeqid = R1.UniqueMeterSeqid AND R1.rownum = 1 AND R2.rownum = 2;\r\n\r\n\r\n--SELECT * FROM @PreviousMeterNumbersTempTable AS PMNTT\r\n\r\n\t---- populate the table variable\r\n\t--INSERT INTO @PreviousMeterNumbersTempTable\r\n\t--SELECT CM.MeterSeqid AS CurrentMeterSeqid\r\n\t--\t,(SELECT TOP 1 OriginalMeterNumber FROM Billing.Meter\r\n\t--\t\tWHERE CurrentMeterNumber = CM.CurrentMeterNumber AND OriginalAccountNumber = A.OriginalAccountNumber\r\n\t--\t\t\tAND MeterSeqid <> CM.MeterSeqid) AS PriorMeterNumber\r\n\t--FROM Billing.Meter AS CM\r\n\t--\tINNER JOIN Billing.AccountExchangeMeterTrack AS AE ON CM.MeterSeqid = AE.OriginalMeterSeqid\r\n\t--\tINNER JOIN Billing.Account AS A ON AE.OriginalAccountSeqid = A.AccountSeqid\r\n\t--WHERE (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t--\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\r\n\t--\tAND CM.OriginalMeterNumber = CM.CurrentMeterNumber;\r\n\r\n\r\n\r\n\tSELECT A.AccountSeqid\r\n\t\t-- meter info\r\n\t\t,CM.UtilityServiceAddress\r\n\t\t,A.UtilityAccountProvider AS UtilityCompanySeqid\r\n\t\t,CM.MeterConstant\r\n\t\t,CM.MeterEffectiveOnDate\r\n\t\t,CM.MeterStatus\r\n\t\t,A.EnergySource\r\n\t\t-- billing Information\r\n\t\t,CM.MeterSeqid AS MeterSeqid\r\n\t\t,MBAE.OriginalAccountNumber\r\n\t\t,MBAE.OriginalMeterNumber\r\n\t\t,CM.CurrentMeterNumber\r\n\t\t,CM.MeterType\r\n\t\t,MBAE.RecordTypeConsumption\r\n\t\t,MBAE.RecordTypeDemand\r\n\t\t,MBAE.BillingPeriod\r\n\t\t,MBAE.BillingPeriodRevision\r\n\t\t,MBAE.FromDate\r\n\t\t,MBAE.ToDate\r\n\t\t,MBAE.ConsumptionFromReading\r\n\t\t,MBAE.ConsumptionToReading\r\n\t\t,MBAE.ESTOrACT\r\n\t\t,MBAE.Consumption AS RevisedEnergyUsage\r\n\t\t,MBAE.CancelConsumptionFromReading\r\n\t\t,MBAE.CancelConsumptionToReading\r\n\t\t,MBAE.CancelConsumption AS CancelEnergyUsage\r\n\t\t,NULL AS CancelESTOrACT -- TO REVISE, it is just a place holder for now\r\n\t\t-- demand data\r\n\t\t,MBAE.DemandFromReadingDate\r\n\t\t,MBAE.DemandToReadingDate\r\n\t\t,MBAE.DemandFromReading\r\n\t\t,MBAE.DemandToReading\r\n\t\t,MBAE.ESTOrACT AS DemandRevisedESTOrACT\r\n\t\t,MBAE.Demand AS RevisedDemand\r\n\t\t,MBAE.CancelDemandFromReading\r\n\t\t,MBAE.CancelDemandToReading\r\n\t\t,(-1) * MBAE.CancelDemand AS OriginalDemand\r\n\t\t,NULL AS CancelDemandESTOrACT -- TO REVISE, it is just a place holder for now\r\n\t\t-- get the prior meter number if applicable\r\n\t\t,T.PriorMeterNumber\r\n\t\t-- Unit\r\n\t\t,E.EnergyUnit\r\n\tFROM Billing.MeterBillingAdjustmentElectric AS MBAE\r\n\t\tINNER JOIN Billing.Meter AS CM ON CM.UniqueAccountSeqID = MBAE.UniqueAccountSeqId AND CM.IsCurrentRecord ='Y'\r\n\t\tINNER JOIN Billing.Account AS A ON A.UniqueAccountSeqid = CM.UniqueAccountSeqID AND A.IsCurrentRecord ='Y'\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS E ON E.EnergyDeliveryType = A.EnergySource\r\n\t\tINNER JOIN @PreviousMeterNumbersTempTable AS T ON CM.UniqueMeterSeqid = T.UniqueMeterSeqid AND CM.IsCurrentRecord ='Y'\r\n\tWHERE (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\r\n\t\tAND MBAE.BillingPeriod = @PublishedBillingPeriod -- electric stuff\r\n\r\n\tUNION ALL\r\n\r\n\t-- gas meters\r\n\tSELECT A.AccountSeqid\r\n\t\t-- meter info\r\n\t\t,CM.UtilityServiceAddress\r\n\t\t,A.UtilityAccountProvider AS UtilityCompanySeqid  \r\n\t\t,CM.MeterConstant\r\n\t\t,CM.MeterEffectiveOnDate\r\n\t\t,CM.MeterStatus\r\n\t\t,A.EnergySource\r\n\t\t-- billing Information\r\n\t\t,CM.MeterSeqid AS MeterSeqid\r\n\t\t,MBAG.OriginalAccountNumber\r\n\t\t,MBAG.OriginalMeterNumber\r\n\t\t,CM.CurrentMeterNumber\r\n\t\t,CM.MeterType\r\n\t\t,NULL AS RecordTypeConsumption\r\n\t\t,NULL AS RecordTypeDemand\r\n\t\t,MBAG.BillingPeriod\r\n\t\t,MBAG.BillingPeriodRevision\r\n\t\t,MBAG.FromDate\r\n\t\t,MBAG.ToDate\r\n\t\t,MBAG.MeterFromReading AS ConsumptionFromReading\r\n\t\t,MBAG.MeterToReading AS ConsumptionToReading\r\n\t\t,MBAG.EstimatedOrActualBilling AS ESTOrACT\r\n\t\t,MBAG.Therms AS RevisedEnergyUsage\r\n\t\t,MBAG.CancelMeterFromReading AS CancelConsumptionFromReading\r\n\t\t,MBAG.CancelMeterToReading AS CancelConsumptionToReading\r\n\t\t,MBAG.CancelTherms AS CancelEnergyUsage\r\n\t\t,NULL AS CancelESTOrACT\t-- TO REVISE, it is just a place holder for now\r\n\t\t-- demand data\r\n\t\t,NULL AS DemandFromReadingDate\r\n\t\t,NULL AS DemandToReadingDate\r\n\t\t,NULL AS DemandFromReading\r\n\t\t,NULL AS DemandToReading\r\n\t\t,NULL AS DemandRevisedESTOrACT\r\n\t\t,NULL AS RevisedDemand\r\n\t\t,NULL AS CancelDemandFromReading\r\n\t\t,NULL AS CancelDemandToReading\r\n\t\t,NULL AS CancelDemand\r\n\t\t,NULL AS CancelDemandESTOrACT -- TO REVISE, it is just a place holder for now\r\n\t\t-- get the prior meter number if applicable\r\n\t\t,T.PriorMeterNumber\r\n\t\t-- Unit\r\n\t\t,E.EnergyUnit\r\n\tFROM Billing.MeterBillingAdjustmentGas AS MBAG\r\n\t\tINNER JOIN Billing.Meter AS CM ON CM.UniqueMeterSeqid = MBAG.UniqueMeterSeqId  AND CM.IsCurrentRecord ='Y'\r\n\t\tINNER JOIN Billing.Account AS A ON A.UniqueAccountSeqid = CM.UniqueAccountSeqID AND a.IsCurrentRecord ='Y'\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS E ON E.EnergyDeliveryType = A.EnergySource\r\n\t\tINNER JOIN @PreviousMeterNumbersTempTable AS T ON CM.UniqueMeterSeqid = T.UniqueMeterSeqid AND CM.IsCurrentRecord ='Y'\r\n\tWHERE (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\r\n\t\tAND MBAG.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND A.EnergySource IN (5) -- coned gas stuff\r\n\r\n\tUNION ALL\r\n\r\n\t-- CRIS gas meters\r\n\tSELECT A.AccountSeqid\r\n\t\t-- meter info\r\n\t\t,CM.UtilityServiceAddress\r\n\t\t,A.UtilityAccountProvider AS UtilityCompanySeqid\r\n\t\t,CM.MeterConstant\r\n\t\t,CM.MeterEffectiveOnDate\r\n\t\t,CM.MeterStatus\r\n\t\t,A.EnergySource\r\n\t\t-- billing Information\r\n\t\t,CM.MeterSeqid AS MeterSeqid\r\n\t\t,MBACG.OriginalAccountNumber\r\n\t\t,MBACG.MeterNumber AS OriginalMeterNumber\r\n\t\t,CM.CurrentMeterNumber\r\n\t\t,CM.MeterType\r\n\t\t,NULL AS RecordTypeConsumption\r\n\t\t,NULL AS RecordTypeDemand\r\n\t\t,MBACG.BillingPeriod\r\n\t\t,MBACG.BillingPeriodRevision\r\n\t\t,MBACG.FromDate\r\n\t\t,MBACG.ToDate\r\n\t\t,MBACG.MeterFromReading AS ConsumptionFromReading\r\n\t\t,MBACG.MeterToReading AS ConsumptionToReading\r\n\t\t,MBACG.EstimatedOrActual AS ESTOrACT\r\n\t\t,MBACG.Therms AS RevisedEnergyUsage\r\n\t\t,MBACG.CancelMeterFromReading AS CancelConsumptionFromReading\r\n\t\t,MBACG.CancelMeterToReading AS CancelConsumptionToReading\r\n\t\t,MBACG.CancelTherms AS CancelEnergyUsage\r\n\t\t,MBACG.CancelEstimatedOrActual AS CancelESTOrACT\r\n\t\t-- demand data\r\n\t\t,NULL AS DemandFromReadingDate\r\n\t\t,NULL AS DemandToReadingDate\r\n\t\t,NULL AS DemandFromReading\r\n\t\t,NULL AS DemandToReading\r\n\t\t,NULL AS DemandRevisedESTOrACT\r\n\t\t,NULL AS RevisedDemand\r\n\t\t,NULL AS CancelDemandFromReading\r\n\t\t,NULL AS CancelDemandToReading\r\n\t\t,NULL AS CancelDemand\r\n\t\t,NULL AS CancelDemandESTOrACT -- TO REVISE, it is just a place holder for now\r\n\t\t-- get the prior meter number if applicable\r\n\t\t,T.PriorMeterNumber\r\n\t\t-- Unit\r\n\t\t,E.EnergyUnit\r\n\tFROM Billing.MeterBillingAdjustmentCrisGas MBACG\r\n\t\tINNER JOIN Billing.Meter AS CM ON CM.UniqueMeterSeqid = MBACG.UniqueMeterSeqId AND CM.IsCurrentRecord ='Y'\r\n\t\tINNER JOIN Billing.Account AS A ON A.UniqueAccountSeqid = CM.UniqueAccountSeqID AND a.IsCurrentRecord ='Y' \r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS E ON E.EnergyDeliveryType = A.EnergySource\r\n\t\tINNER JOIN @PreviousMeterNumbersTempTable AS T ON CM.UniqueMeterSeqid = T.UniqueMeterSeqid AND CM.IsCurrentRecord ='Y'\r\n\tWHERE (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\r\n\t\tAND MBACG.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND A.EnergySource IN (5);-- CRIS gas stuff\r\nEND;"
        }
      ]
    }
  ]
}
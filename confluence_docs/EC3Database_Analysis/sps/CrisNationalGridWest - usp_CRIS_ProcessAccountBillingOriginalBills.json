{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_ProcessAccountBillingOriginalBills",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_ProcessAccountBillingOriginalBills",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process account billing records for a specific utility company and billing period. It performs several operations, including inserting new billing records, updating sequence IDs, and marking records as processed. The procedure ensures that the current billing period has not been processed before proceeding with these operations. It interacts with multiple tables within the "
        },
        {
          "type": "text",
          "text": "Billing",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " schema, specifically focusing on gas billing adjustments."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps and interactions with several tables, including conditional logic and updates. It handles potential errors and ensures data integrity by checking for existing records before processing. The complexity arises from the need to coordinate these operations and maintain consistency across related tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the ID of the user executing the procedure. It is used to track who performed the operation for auditing purposes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by declaring several variables to store the current billing period, account billing group ID, utility company ID, and error messages."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Check for Existing Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if the current billing period has already been processed by querying the "
                },
                {
                  "type": "text",
                  "text": "Billing.accountBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "Billing.AccountBillingCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " tables. If records exist for the current period, it raises an error and aborts the process."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert Account Billing Record",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts new records into the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table for accounts that have not been processed ("
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingSeqid IS NULL",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ")."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It calculates various fields, such as previous and next billing periods, and sets default values for others."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update AccountBillingSeqID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " in the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table by joining with the newly inserted records in "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert Account Billing Cris Gas Record",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts records into the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table for accounts that have not been processed ("
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingCrisGasSeqid IS NULL",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ")."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It includes additional fields like "
                        },
                        {
                          "type": "text",
                          "text": "UniqueAccountSeqID",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and handles various billing details."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update AccountBillingCrisGasSeqID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingCrisGasSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " in the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table by joining with the newly inserted records in "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Mark Records as Processed",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "IsProcessed",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " status in the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to 'Y' for records that have been successfully processed."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved have appropriate indexes on columns used in joins and where clauses to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider wrapping the procedure in a transaction to ensure atomicity, especially since it involves multiple insert and update operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "RAISERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to handle errors, which is good for immediate feedback but could be enhanced with structured error logging."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure run simultaneously, there could be race conditions or deadlocks, especially when updating sequence IDs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the data in "
                },
                {
                  "type": "text",
                  "text": "Billing.AccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is consistent and accurate. Any discrepancies could lead to incorrect processing."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of the procedure may degrade if not optimized with proper indexing and query tuning."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While the procedure raises errors when the current period is already processed, it does not handle other potential errors, such as database connectivity issues or unexpected data states."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_ProcessAccountBillingOriginalBills]\n \t@AuthenticatedUserID int\r\nAS \r\nBegin \r\n\t\r\n\t/*\r\n\t0. if current period has been processd, throw error exception\r\n\t1. Insert Account Billing Record\r\n\t2. update AccountBillingSeqID in Billing.AccountBillingAdjustmentCrisGas\r\n\t3. Insert Account Billing Cris Gas record\r\n\t4. update AccountBillingCrisGasSeqid  in AccountBillingAdjustmentCrisGas\r\n\t5. Update IsProcess Status in adjustmentCrisGas\r\n\t\r\n\tChange Date\r\n\t20101103\t\tNetChanges set to zero for the current period\r\n\t20110826\t\tcase when CurrentAccountBalance < 0 then 'Y' else 'N' end AS ManualPaymentOverride and\r\n\t\t\t\t\tcase when CurrentAccountBalance < 0 then 0.00 else CurrentAccountBalance end  ManualPaymentOverrideAmount ,\r\n\t20181210        VY Modified for UniqueAccountSeqID \t\r\n        20190308        VY Modified for UniqueAccountSeqID - Added insert for uniqueAccountSeqID on table billing.AccountBillingCrisGas\t\t\t\r\n\t*/\r\n\t\t\r\n\tDECLARE @CurrentBillingPeriod varchar(8)\r\n\tDECLARE @CurrentAccountBillingGroupSeqID int\r\n\tDECLARE @UtilityCompanySeqID int\r\n\tDECLARE @errMessage varchar(1000)\r\n\tDECLARE @energySource INT \r\n\tSET @energySource = 5 -- gas\r\n\t--\r\n\tdeclare @AccountBillingRowcount int\r\n\tdeclare @AccountBillingSeqidRowcount int\r\n\tdeclare @AccountBillingCrisGasRowcount int\r\n\tdeclare @AccountBillingCrisGasSeqidRowcount int\r\n\tdeclare @AccountBillingAdjustmentCrisGasRowcount int\r\n\tdeclare @AccountBillingAdjustmentCrisGasIsProcessedRowcount int \r\n\t--\r\n\tselect TOP 1 @CurrentBillingPeriod =  BillingPeriod,\r\n\t\t\t\t @CurrentAccountBillingGroupSeqID = AccountInvoiceBillingGroup,\r\n\t\t\t\t @UtilityCompanySeqID = UtilityCompanySeqid\r\n\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas \r\n\t\r\n\t-- if current period has been processd, throw error exception\r\n\tIF(\r\n\t\tEXISTS(SELECT TOP 1 * FROM Billing.accountBilling \r\n\t\t\tWHERE billingPeriod = @CurrentBillingPeriod\r\n\t\t\t\tAND currentInvoiceAccountBillingGroup = @CurrentAccountBillingGroupSeqID\r\n\t\t\t\tAND UtilityCompanySeqid = @UtilityCompanySeqID)\r\n\t\tOR \r\n\t    EXISTS(SELECT TOP 1 * FROM Billing.AccountBillingCrisGas \r\n\t\t\tWHERE billingPeriod = @CurrentBillingPeriod\r\n\t\t\t\tAND AccountInvoiceBillingGroup = @CurrentAccountBillingGroupSeqID\r\n\t\t\t\tAND UtilityCompanySeqid = @UtilityCompanySeqID)\r\n\t)\r\n\tbegin\r\n\t\tSET @errMessage = 'Current period ' + @CurrentBillingPeriod + ' had been processed. Current process aborted.'\r\n\t\tRAISERROR(@errMessage, 12, 1)\r\n\tEND\r\n\t\r\n\t/****************************\r\n\t1. Insert Account Billing Record\r\n\t********************************/\r\n\tINSERT INTO Billing.AccountBilling\r\n        ( OriginalAccountNumber ,\r\n          AccountSeqid ,\r\n\t\t  UniqueAccountSeqId, /* Added on 12/10/2018 */ \r\n          CurrentInvoiceAccountBillingGroup ,\r\n          UtilityCompanySeqid ,\r\n          EnergySource ,\r\n          IsTimeOfDayAccount ,\r\n          LastPeriodModified ,\r\n          BillingCycle ,\r\n          SalesType ,\r\n          PreviousBillingPeriod ,\r\n          BillingPeriod ,\r\n          BillingPeriodRevision ,\r\n          NextMeterReading ,\r\n          NextBillingPeriod ,\r\n          FromDate ,\r\n          ToDate ,\r\n          AccountBillingStatus ,\r\n          PreviousAccountBillingStatus ,\r\n          AccountBillingStatusCodePeriod ,\r\n          ManualPaymentOverride ,\r\n          OriginalBilledAmount ,\r\n          RevisedBilledAmount ,\r\n          OriginalBilledAmountPaid ,\r\n          PaidAdjustmentAmount ,\r\n          TotalAmountDue ,\r\n          CreditedPaidAmount ,\r\n          CreditedPaidAmountDate ,\r\n          AccountEnergyUsage ,\r\n          OriginalEnergyUsage ,\r\n          NetEnergyUsageChange,\r\n          NetDollarChange,\r\n          AccountDemandUsage ,\r\n          AccountEnergyUsage1 ,\r\n          AccountDemandUsage1 ,\r\n          ManualDataEntry ,\r\n          ProductionAndDeliveryTariff ,\r\n          BillingPeriodDays ,\r\n          BillCreationDate ,\r\n          PostMarkDate ,\r\n          DatePaymentDue ,\r\n          DateAcceptanceIntoOEC ,\r\n          BillingAction ,\r\n          ProcessedInTheCurrentPeriod ,\r\n          ManualPaymentOverrideAmount ,\r\n          InitialPostingDate ,\r\n          UploadFileSeqid ,\r\n          SplitFiscalYear ,\r\n          ChargeToFiscalYear ,\r\n          ChargeToPriorFiscalYear ,\r\n          Notes ,\r\n          AuthenticatedUserID ,\r\n          DateAdded ,\r\n          LastUpdate,\r\n          NetDemandUsageChange\r\n        )\r\n        SELECT  OriginalAccountNumber ,\r\n                AccountSeqid ,\r\n\t\t\t\tUniqueAccountSeqId, /* added on 12/10/2018 */\r\n                AccountInvoiceBillingGroup ,\r\n                UtilityCompanySeqid ,\r\n                @EnergySource ,\r\n                'N' AS IsTimeOfDayAccount ,\r\n                @CurrentBillingPeriod AS LastPeriodModified ,\r\n                'M' AS BillingCycle ,\r\n                'BT' AS SalesType ,\r\n                dbo.CreatePreviousPeriod(BillingPeriod, 'M') , -- PreviousBillingPeriod\r\n                BillingPeriodRevision , -- BillingPeriod,\r\n                BillingPeriodRevision ,\r\n                ToDate ,\r\n                dbo.CreateNextPeriod(BillingPeriod, 'M') ,-- NextBillingPeriod\r\n                FromDate , \r\n                ToDate ,\r\n                AccountBillingStatus ,\r\n                PreviousAccountBillingStatus ,\r\n                AccountBillingStatusCodePeriod ,\r\n                case when CurrentAccountBalance < 0 then 'Y' else 'N' end AS ManualPaymentOverride ,\r\n                OriginalBilledAmount,\r\n                RevisedBilledAmount AS RevisedBilledAmount,\r\n                null AS OriginalBilledAmountPaid,  -- Will be adjusted in the next billing period by the payment detail\r\n                PaidAdjustmentAmount,\r\n                CurrentAccountBalance AS TotalAmountDue,\r\n                TotalPaymentsPosted as CreditedPaidAmount,\t\r\n                DateLastPayment as CreditedPaidAmountDate,\t\r\n                RevisedTherms , -- AccountEnergyUsage\r\n                OriginalTherms , -- OriginalEnergyUsage\r\n                0 AS NetEnergyUsageChange,  --NetChangeTherms\r\n\t\t\t\tNetChangeDollars,\r\n                NULL AS AccountDemandUsage,\r\n                NULL AS AccountEnergyUsage1,\r\n                NULL AS AccountDemandUsage1,\r\n                'N' AS ManualDataEntry ,\r\n                [Common].[CalculateProductionAndDeliveryTariff](UtilityCompanySeqid, GasRateCode) , -- ProductionAndDeliveryTariff,\r\n                BillingDays AS BillingPeriodDays ,\r\n\t\t\t\tBillRenderDate AS BillCreationDate ,\r\n\t\t\t\tPostMarkDate ,\r\n\t\t\t    DatePaymentDue ,\r\n\t\t\t    DateAcceptanceIntoOEC ,\r\n\t\t\t    CASE WHEN (BillingPeriod = BillingPeriodRevision) THEN 'O' ELSE 'A' END AS BillingAction ,\r\n\t\t\t\tCASE WHEN (BillingPeriod = BillingPeriodRevision) THEN 'Y' ELSE 'N' END AS ProcessedInTheCurrentPeriod ,\r\n\t\t\t\tcase when CurrentAccountBalance < 0 then 0.00 else CurrentAccountBalance end as  ManualPaymentOverrideAmount ,\r\n\t\t\t\tGETDATE() AS InitialPostingDate ,\r\n\t\t\t\tNULL AS UploadFileSeqid ,\r\n\t\t\t\t[dbo].[IsFiscalYearSplit](FromDate, ToDate) AS SplitFiscalYear,\r\n\t\t\t\t[dbo].[CalculateFiscalYearIfSplit](FromDate,  ToDate, 'T') as ChargeToFiscalYear,\r\n                [dbo].[CalculateFiscalYearIfSplit](FromDate, ToDate, 'F') as ChargeToPriorFiscalYear,\r\n\t\t\t\tNotes ,\r\n\t\t\t\tAuthenticatedUserID ,\r\n\t\t\t\tDateAdded ,\r\n\t\t\t\tLastUpdate,\r\n\t\t\t\t0.0 as NetDemandUsageChange\r\n        FROM Billing.AccountBillingAdjustmentCrisGas\r\n        WHERE   AccountBillingSeqid IS NULL\r\n                AND BillingPeriod = @CurrentBillingPeriod\r\n\t\r\n\t--\r\n\tset @AccountBillingRowcount = @@ROWCOUNT\r\n\tprint 'Original AccountBillingRowcount: '+str(@AccountBillingRowcount)\r\n    --\r\n    /******************************\r\n\t2. update AccountBillingSeqID in Billing.AccountBillingAdjustmentCrisGas\r\n\t********************************/\r\n    UPDATE abacg\r\n    SET abacg.AccountBillingSeqid = ab.AccountBillingSeqid\r\n    from \r\n    Billing.AccountBillingAdjustmentCrisGas AS abacg\r\n    INNER JOIN Billing.AccountBilling AS ab\r\n    ON abacg.OriginalAccountNumber = ab.OriginalAccountNumber\r\n\t\tAND abacg.UtilityCompanySeqid = ab.UtilityCompanySeqid\r\n\t\tAND abacg.AccountInvoiceBillingGroup = ab.CurrentInvoiceAccountBillingGroup\r\n\t\tAND ab.BillingPeriodRevision = abacg.BillingPeriodRevision\r\n    WHERE abacg.AccountBillingSeqid IS NULL\r\n\tAND abacg.BillingPeriod = @CurrentBillingPeriod \r\n\t--\r\n\tset @AccountBillingSeqidRowcount = @@ROWCOUNT\r\n\tprint 'AccountBillingAdjustmentCrisGas Updated AccountBillingSeqid Rowcount: '+str(@AccountBillingSeqidRowcount)\r\n    --\r\n\t/******************************\r\n\t3. Insert Account Billing Cris Gas\r\n\t********************************/\r\n\tINSERT INTO [Billing].[AccountBillingCrisGas]\r\n           (\r\n\t\t    [UniqueAccountSeqId] /* added on 3/8/2019 */\r\n\t\t   ,[AccountBillingSeqid]\r\n           ,[AccountBillingAdjustmentCrisGasSeqid]\r\n           ,[UtilityCompanySeqid]\r\n           ,[AccountInvoiceBillingGroup]\r\n           ,[BillingPeriod]\r\n           ,[BillingPeriodRevision]\r\n           ,[LastPeriodModified]\r\n           ,[OriginalAccountNumber]\r\n           ,[MeterReadWorkDay]\r\n           ,[SpecialLedgerAccountNUmber]\r\n           ,[GasRateCode]\r\n           ,[BillFrequency]\r\n           ,[EstimatedOrActualBillingCode]\r\n           ,[TotalNetPaidAdjustmentCalc]\r\n           ,[AccountArrears]\r\n           ,[TerminationBalance]\r\n           ,[TotalPaymentsPosted]\r\n           ,[DateLastPayment]\r\n           ,[MiscellaneousChargeAmount]\r\n           ,[MiscellaneousChargeType]\r\n           ,[BillRenderDate]\r\n           ,[BillingDays]\r\n           ,[BilledCCF]\r\n           ,[ThermFactor]\r\n           ,[BilledTherms]\r\n           ,[NumberOfMeters]\r\n           ,[CommodityChargeAmount]\r\n           ,[DeliveryChargeAmount]\r\n           ,[MTACommodityTax]\r\n           ,[MTADeliveryTax]\r\n           ,[SalesTax]\r\n           ,[SystemBenefitsCharge]\r\n           ,[RetailDecouplingMechanismCharge]\r\n           ,[DeliveryRateSurcharge]\r\n           ,[RealTimeNormalizationCharge]\r\n           ,[LatePaymentCharge]\r\n           ,[PaperBillCharge]\r\n           ,[FireAuditTrigger]\r\n           ,[Notes]\r\n           ,[AuthenticatedUserID]\r\n           ,[DateAdded]\r\n           ,[LastUpdate]\r\n           ,MiscellaneousCreditAmount\r\n           ,MiscellaneousCreditType\r\n           ,OriginalGasChargeAmount\r\n           ,RevisedGasChargeAmount\r\n           ,ExcludePriorGasChargeAmount\r\n           )\r\n     SELECT \r\n\t       UniqueAccountSeqID /* added on 3/8/2019 */\r\n           ,AccountBillingSeqid AS AccountBillingSeqid\r\n           ,AccountBillingAdjustmentCrisGasSeqid AS AccountBillingAdjustmentCrisGasSeqid\r\n           ,UtilityCompanySeqid AS UtilityCompanySeqid\r\n           ,AccountInvoiceBillingGroup AS AccountInvoiceBillingGroup\r\n           ,BillingPeriodRevision AS BillingPeriod\r\n           ,BillingPeriodRevision AS BillingPeriodRevision\r\n           ,@CurrentBillingPeriod AS LastPeriodModified\r\n           ,OriginalAccountNumber AS OriginalAccountNumber\r\n           ,MeterReadWorkDay AS MeterReadWorkDay\r\n           ,SpecialLedgerAccountNUmber AS SpecialLedgerAccountNUmber\r\n           ,GasRateCode\r\n           ,BillFrequency\r\n           ,EstimatedOrActualBillingCode\r\n           ,TotalNetPaidAdjustmentCalc AS TotalNetPaidAdjustmentCalc\r\n           ,AccountArrears\r\n           ,TerminationBalance\r\n           ,TotalPaymentsPosted\r\n           ,DateLastPayment\r\n           ,MiscellaneousChargeAmount\r\n           ,MiscellaneousChargeType\r\n           ,BillRenderDate\r\n           ,BillingDays\r\n           ,RevisedCCF\r\n           ,ThermFactor\r\n           ,RevisedTherms\r\n           ,NumberOfMeters\r\n           ,CommodityChargeAmount\r\n           ,DeliveryChargeAmount\r\n           ,MTACommodityTax\r\n           ,MTADeliveryTax\r\n           ,SalesTax\r\n           ,SystemBenefitsCharge\r\n           ,RetailDecouplingMechanismCharge\r\n           ,DeliveryRateSurcharge\r\n           ,RealTimeNormalizationCharge\r\n           ,LatePaymentCharge\r\n           ,PaperBillCharge\r\n           ,'N' AS [FireAuditTrigger]\r\n           ,Notes\r\n           ,@AuthenticatedUserID\r\n           ,GETDATE()\r\n           ,GETDATE()\r\n           ,MiscellaneousCreditAmount\r\n           ,MiscellaneousCreditType  \r\n           ,GasChargeAmount --  OriginalGasChargeAmount     \r\n           ,RevisedGasChargeAmount --  RevisedGasChargeAmount   \r\n           ,ExcludePriorGasChargeAmount    \r\n    from\r\n\tbilling.AccountBillingAdjustmentCrisGas\r\n\tWHERE \r\n\tAccountBillingCrisGasSeqid IS NULL\r\n\tAND BillingPeriod = @CurrentBillingPeriod\r\n    --\r\n\tset @AccountBillingCrisGasRowcount = @@ROWCOUNT\r\n\tprint 'Original AccountBillingRowcount: '+str(@AccountBillingCrisGasRowcount)\r\n\t--\r\n\t-- update total net paid ajustment for current period. \r\n\t--\r\n\tUPDATE abcg\r\n\tSET abcg.TotalNetPaidAdjustmentCalc = abacg.TotalNetPaidAdjustmentCalc\r\n\tfrom\r\n\t[Billing].[AccountBillingCrisGas] AS abcg\r\n\tINNER JOIN\r\n\tbilling.AccountBillingAdjustmentCrisGas AS abacg\r\n\tON abcg.AccountBillingCrisGasSeqid = abacg.AccountBillingCrisGasSeqid\r\n\tAND abcg.BillingPeriodRevision = @CurrentBillingPeriod -- current period only\r\n\t--\r\n\tset @AccountBillingCrisGasSeqidRowcount = @@ROWCOUNT\r\n\tprint 'AccountBillingAdjustmentCrisGas Updated AAccountBillingCrisGasSeqid Rowcount: '+str(@AccountBillingCrisGasSeqidRowcount)\r\n\t--\r\n\t/******************************\r\n\t4. update AccountBillingCrisGasSeqid in AccountBillingAdjustmentCrisGas\r\n\t********************************/\r\n\tUPDATE abacg\r\n    SET \r\n\t\tabacg.AccountBillingCrisGasSeqid = abcg.AccountBillingCrisGasSeqid\r\n    from \r\n    Billing.AccountBillingAdjustmentCrisGas AS abacg\r\n    INNER JOIN Billing.AccountBillingCrisGas AS abcg\r\n    ON abacg.OriginalAccountNumber = abcg.OriginalAccountNumber\r\n\t\tAND abacg.UtilityCompanySeqid = abcg.UtilityCompanySeqid\r\n\t\tAND abacg.AccountInvoiceBillingGroup = abcg.AccountInvoiceBillingGroup\r\n\t\tAND abacg.BillingPeriodRevision = abcg.BillingPeriodRevision\r\n    WHERE abacg.AccountBillingCrisGasSeqid IS NULL\r\n\tAND abacg.BillingPeriod = @CurrentBillingPeriod \r\n\t\r\n\t/******************************\r\n\t5. Update IsProcess Status in adjustmentCrisGas\r\n\t******************************/\r\n\tUPDATE Billing.AccountBillingAdjustmentCrisGas\r\n\tSET IsProcessed = 'Y'\r\n\tWHERE IsProcessed = 'N' and AccountBillingSeqid is NOT NULL AND AccountBillingCrisGasSeqid IS NOT null\r\n\t--\r\n\tset @AccountBillingAdjustmentCrisGasIsProcessedRowcount = @@ROWCOUNT\r\n\tprint 'AccountBillingAdjustmentCrisGas Updated IsProcessed Rowcount: '+str(@AccountBillingAdjustmentCrisGasIsProcessedRowcount)\r\n\t--\r\nEnd"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Common",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ProcessExchange_Code27_Revert",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ProcessExchange_Code27_Revert",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to revert a meter turn-off operation in a utility billing system. It checks if a specific exchange record, identified by "
        },
        {
          "type": "text",
          "text": "ExchangeSeqid",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", can be reverted based on several conditions. If the conditions are met, it updates the meter's status and associated records to reflect the reversal of the turn-off process. The procedure uses transaction management to ensure data integrity and provides feedback through output parameters."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple validation checks, conditional logic, and transactional updates across different tables. It uses Common Table Expressions (CTEs) for handling historical data and includes error handling with a TRY-CATCH block. The complexity is moderate due to the need for precise data manipulation and the use of transactional control."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ExchangeSeqid AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Identifies the specific exchange record to be processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the ID of the user performing the operation, used for auditing purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that indicates the success (1) or failure (0) of the procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Message AS VARCHAR(1000) OUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that provides a message detailing the result of the procedure execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validation Checks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure first checks if the exchange record is marked as excluded. If so, it exits with a message."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It verifies the existence of the exchange record in the "
                        },
                        {
                          "type": "text",
                          "text": "Common.ExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It checks if the exchange record has been processed. If not, it cannot be reverted."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Meter Information Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves the "
                        },
                        {
                          "type": "text",
                          "text": "MeterSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "CurrentMeterNumber",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for the specified exchange."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Validates that the meter is currently turned off (status '27') and is the current record."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transactional Reversion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Begins a transaction named "
                        },
                        {
                          "type": "text",
                          "text": "RevertMeterTurnOff",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves historical data for the meter and account exchange from audit tables using CTEs."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Meter",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to revert the meter status to its previous state."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountExchangeMeterTrack",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to revert associated account exchange data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Finalization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Commits the transaction if all updates are successful."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "Common.ExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table to mark the exchange as reverted ('R')."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Sets the output parameters to indicate success."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "In case of an error, the transaction is rolled back, and an error message is set in the output parameters."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the "
                },
                {
                  "type": "text",
                  "text": "ExchangeDataSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "MeterSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and other key columns are indexed to optimize SELECT and UPDATE operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The transaction scope is limited to the necessary updates, which helps in reducing lock contention and improving performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "CTE Efficiency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of CTEs for retrieving the latest audit records is efficient but should be monitored for performance, especially with large datasets."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple processes attempt to revert the same exchange simultaneously. Proper locking mechanisms should be in place."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the audit tables do not have the expected historical data, the reversion may fail or result in incorrect data states."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The error message in the CATCH block is incomplete as it does not capture the actual error message. Consider using "
                },
                {
                  "type": "text",
                  "text": "ERROR_MESSAGE()",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to provide more detailed error information."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the performance of CTEs and transaction handling should be monitored to ensure scalability."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Description:\t\"27\" revert an meter turn off\r\n--*\r\n--* AUTHOR:       Zafer Durmaz\r\n--* Created On:   07/27/2016\r\n--**************************************************************************************\r\n--* Change Log\r\n--* \r\n--* 07/27/2016 zd  First Version \r\n--**************************************************************************************\r\nCREATE PROCEDURE [Common].[usp_ProcessExchange_Code27_Revert]\r\n(\r\n\t@ExchangeSeqid AS INT,\r\n\t@AuthenticatedUserID AS INT,\r\n\t@StatusCode AS INT OUTPUT,\r\n\t@Message AS VARCHAR(1000) OUT\r\n)\r\nAS \r\nBEGIN\r\n\tDECLARE @RecordExchangeCode VARCHAR(2)\r\n\r\n\t-- if the record is flagged as exclude, return and exit\r\n\tIF ('Y' = (SELECT Exclude FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid))\r\n\tBEGIN\r\n\t\tSELECT @Message = 'This exchange is excluded from processing. ExchangeSeqid: ' + CAST(@ExchangeSeqid AS VARCHAR), @StatusCode = 1;\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\t-- do some validation \r\n\t-- CHECK IF the record exists\r\n\tIF (NOT EXISTS (SELECT ExchangeDataSeqid FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid))\r\n\tBEGIN\r\n\t\tSELECT @Message = 'The ExchangeSeqid ' + CAST(@ExchangeSeqid AS VARCHAR) + ' does not exist. Please verify', @StatusCode = 0;\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\t-- check if the record was not processed\r\n\tIF ('N' = (SELECT IsProcessed FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid))\r\n\tBEGIN\r\n\t\tSELECT @Message = 'This exchange code was not processed. It cannot be reverted ExchangeSeqid: ' + CAST(@ExchangeSeqid AS VARCHAR), @StatusCode = 0;\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\t-- the process to add a MeterSeqid\r\n\tDECLARE @AccountSeqid INT, @MeterSeqid INT, @UniqueAccountSeqid INT, @UniqueMeterSeqid INT, @AccountNumber VARCHAR(15), @MeterNumber VARCHAR(7);\r\n\r\n\tSELECT @MeterSeqid=MeterSeqid, @MeterNumber = CurrentMeterNumber FROM Common.ExchangeData WHERE ExchangeDataSeqid = @ExchangeSeqid;\r\n\r\n\tIF (@MeterSeqid IS NULL)\r\n\tBEGIN\r\n\t\tSELECT @Message = 'The Exchange ' + CAST(@ExchangeSeqid AS VARCHAR) + ' is missing a MeterSeqid that are required for a reversal. Please verify ', @StatusCode = 0;\r\n\t\tRETURN\r\n\tEND;\r\n\r\n\t-- check if the Meter number is turned off and ready for revert\r\n\tIF (NOT EXISTS (SELECT * FROM Billing.Meter WHERE MeterSeqid = @MeterSeqid AND MEterStatus = '27' AND IsCurrentRecord = 'Y'))\r\n\tBEGIN\r\n\t\tSELECT @Message = 'The MEter number: ' + @MeterNumber + ' is not in the system under 27 status. The exchange cannot be reverted. Please verify ', @StatusCode = 0;\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\tBEGIN TRY\t\r\n\t\tBEGIN TRANSACTION RevertMeterTurnOff\r\n\r\n\t\t-- get some info for the insert\r\n\t\tSELECT @UniqueAccountSeqid = UniqueAccountSeqid FROM Billing.Account WHERE AccountSeqid = @AccountSeqid\r\n\t\tSELECT @UniqueMeterSeqid = UniqueMeterSeqid FROM Billing.Meter WHERE MeterSeqid = @MeterSeqid\r\n\r\n\t\t-- construct the dataset for meter revert\r\n\t\t;WITH cte_PreviouMeterVersion AS\r\n\t\t(SELECT *, ROW_NUMBER() OVER (PARTITION BY MeterSeqid ORDER BY AuditDateTime DESC) AS rn2\r\n\t\t\tFROM Audit.AuditMeter\r\n\t\t\t-- unique meternumbers are not available for most meters in audit table\r\n\t\t\tWHERE UniqueMeterSeqid = @UniqueMeterSeqid)\t\r\n\r\n\t\t-- update / revert associated meters\r\n\t\tUPDATE Billing.Meter\t\r\n\t\t\tSet \t\t\t\t\t\r\n\t\t\t\tMeterStatus\t\t\t\t\t= cte_PreviouMeterVersion.MeterStatus ,\r\n\t\t\t\tMeterPreviousStatus\t\t\t= cte_PreviouMeterVersion.MeterPreviousStatus ,\r\n\t\t\t\tMeterStatusCodePeriod\t\t= cte_PreviouMeterVersion.MeterStatusCodePeriod ,\r\n\t\t\t\tMeterEffectiveOffDate\t\t= cte_PreviouMeterVersion.MeterEffectiveOffDate ,\r\n\t\t\t\tTurnOffDate\t\t\t\t\t= cte_PreviouMeterVersion.TurnOffDate ,\r\n\t\t\t\tFireAuditTrigger\t\t\t= 'N' ,\r\n\t\t\t\tAuthenticatedUserID\t\t\t= cte_PreviouMeterVersion.AuthenticatedUserID ,\r\n\t\t\t\tDateAdded\t\t\t\t\t= cte_PreviouMeterVersion.DateAdded ,\r\n\t\t\t\tLastUpdate\t\t\t\t\t= cte_PreviouMeterVersion.LastUpdate \r\n\t\tFROM cte_PreviouMeterVersion  INNER JOIN  Billing.Meter ON Meter.MeterSeqid = cte_PreviouMeterVersion.MeterSeqid\r\n\t\tWHERE rn2 = 1\r\n\r\n\t\t-- revert exch trac\r\n\t\t;WITH cte_PreviousAcctExchVersion AS\r\n\t\t(\r\n\t\t\tSELECT *, ROW_NUMBER() OVER (PARTITION BY OriginalMeterSeqid ORDER BY AuditDateTime DESC) AS rn3\r\n\t\t\tFROM Audit.AuditAccountExchangeMeterTrack\r\n\t\t\tWHERE OriginalMeterSeqid = @MeterSeqid\r\n\t\t)\t\r\n\t\t-- update / revert associated meters\r\n\t\tUPDATE Billing.AccountExchangeMeterTrack\t\r\n\t\t\tSet \t\t\t\t\t\r\n\t\t\t\tMeterEffectiveBillingEndDate\t= cte_PreviousAcctExchVersion.MeterEffectiveBillingEndDate,\r\n\t\t\t\tFireAuditTrigger\t\t\t= 'N',\r\n\t\t\t\tAuthenticatedUserID\t\t\t= cte_PreviousAcctExchVersion.AuthenticatedUserID ,\r\n\t\t\t\tDateAdded\t\t\t\t\t= cte_PreviousAcctExchVersion.DateAdded ,\r\n\t\t\t\tLastUpdate\t\t\t\t\t= cte_PreviousAcctExchVersion.LastUpdate \r\n\t\tFROM cte_PreviousAcctExchVersion INNER JOIN  Billing.AccountExchangeMeterTrack \r\n\t\tON AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid = cte_PreviousAcctExchVersion.AccountExchangeMeterTrackSeqid\r\n\t\tWHERE rn3 = 1\r\n\r\n\t\tCOMMIT TRAN RevertMeterTurnOff\r\n\r\n\t\t-- if we make it here and all is well, come back and update the record as processes\r\n\t\tUPDATE Common.ExchangeData\r\n\t\tSET IsProcessed = 'R'\r\n\t\tWHERE ExchangeDataSeqid = @ExchangeSeqid;\r\n\r\n\t\tSELECT @Message = '', @StatusCode = 1;\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\tROLLBACK TRAN RevertMeterTurnOff\r\n\t\tSELECT @Message = 'Error processing exchange  ' + CAST(@ExchangeSeqid AS VARCHAR(10)) + ' error message: ', @StatusCode = 0;\r\n\tEND CATCH;\r\nEND;"
        }
      ]
    }
  ]
}
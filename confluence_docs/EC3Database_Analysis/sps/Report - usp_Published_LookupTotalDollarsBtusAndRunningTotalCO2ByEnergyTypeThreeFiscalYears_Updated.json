{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_LookupTotalDollarsBtusAndRunningTotalCO2ByEnergyTypeThreeFiscalYears_Updated",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_LookupTotalDollarsBtusAndRunningTotalCO2ByEnergyTypeThreeFiscalYears_Updated",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report that aggregates energy usage data, including total billed amounts, BTUs, and CO2 emissions, by energy type over three fiscal years. It processes data for different categories such as streetlight, electricity excluding streetlight, non-electricity, and citywide energy usage. The procedure logs its execution for auditing purposes and handles data retrieval and aggregation from a specified function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including conditional logic, dynamic data retrieval, and aggregation operations. It interacts with a user-defined function and performs several groupings and calculations, which adds to its complexity. However, it does not involve complex dynamic SQL or recursive operations, keeping it at a medium complexity level."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to identify the user requesting the report. It is also passed to the function that retrieves data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter specifies the billing period for which the report is generated. If not provided, the procedure defaults to the latest billing period available."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to avoid locking issues and sets "
                },
                {
                  "type": "text",
                  "text": "NOCOUNT ON",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to prevent extra result sets from interfering with the output."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Default Billing Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is not provided, it defaults to the latest billing period from the "
                },
                {
                  "type": "text",
                  "text": "Published.AccountLevelRawDataForCurrentPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Audit Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs its execution details using the "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " stored procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Fiscal Year Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the previous and prior fiscal years using the "
                },
                {
                  "type": "text",
                  "text": "CreateFiscalYear",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " function."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Aggregation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Streetlight Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Aggregates data for streetlight energy usage."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Electricity Excluding Streetlight",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Aggregates electricity data excluding streetlight usage by subtracting streetlight data from total electricity data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Non-Electricity Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Aggregates data for non-electricity energy types."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Citywide Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Aggregates citywide energy usage data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Result Compilation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The results are compiled into a temporary table "
                },
                {
                  "type": "text",
                  "text": "@QueryResult",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and then selected for output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may lead to reading uncommitted data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs multiple aggregation operations, which can be resource-intensive, especially if the underlying data is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a user-defined function for data retrieval may impact performance depending on its complexity and execution time."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensuring that the tables involved in the function and the procedure have appropriate indexes can improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " may lead to dirty reads, which can affect the accuracy of the report."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": High concurrency could lead to performance bottlenecks due to the aggregation operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and unclear error messages."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the performance of the aggregation operations may degrade, requiring optimization or refactoring."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on External Function",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on the "
                },
                {
                  "type": "text",
                  "text": "uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " function, which is a potential single point of failure or performance bottleneck."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_LookupTotalDollarsBtusAndRunningTotalCO2ByEnergyTypeThreeFiscalYears_Updated]\n(\r\n\t@EmailAddress AS VARCHAR(75),\r\n\t@PublishedBillingPeriod AS VARCHAR(6)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tIF (@PublishedBillingPeriod IS NULL OR @PublishedBillingPeriod = '')\r\n\tBEGIN\r\n\t\tSELECT @PublishedBillingPeriod = MAX(BillingPeriod) FROM Published.AccountLevelRawDataForCurrentPeriod;\r\n    END;\r\n\r\n\tDECLARE @spname VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName\t\t\t\t\t= @spname,\r\n\t\t@StoredProcName\t\t\t\t= @spname,\r\n\t\t@RequestedBy\t\t\t\t= @EmailAddress,    \r\n\t\t@prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n\t\t@prmBillingPeriod\t\t\t= NULL,\r\n\t\t@prmAgency_ies\t\t\t\t= NULL,\r\n\t\t@prmFacilityNumber_s\t\t= NULL,\r\n\t\t@prmStartingBillingPeriod\t= NULL,\r\n\t\t@prmEndingBillingPeriod\t\t= NULL;\r\n\r\n\tDECLARE @PreviousYr AS VARCHAR(4), @PriorFY AS VARCHAR(4);\r\n\r\n\tSELECT @PreviousYr = dbo.CreateFiscalYear(@PublishedBillingPeriod, 'P');\r\n\tSELECT @PriorFY = dbo.CreateFiscalYear(@PreviousYr, 'P');\r\n\r\n\tDECLARE @QueryResult TABLE\r\n\t\t(CitywideAgencyOrFacility [VARCHAR](2) NOT NULL,\r\n\t\tPublishedBillingPeriod [dbo].[yyyymm] NOT NULL,\r\n\t\tFiscalYear [dbo].[yyyy] NOT NULL,\r\n\t\tBillingPeriod [dbo].[yyyymm] NOT NULL,\r\n\t\tEnergyType VARCHAR(3),\r\n\t\tTotalBilledAmount MONEY NULL,\r\n\t\tTotalCO2 NUMERIC(38, 6) NULL,\r\n\t\tTotalBTU NUMERIC(38, 6) NULL,\r\n\t\tPublishedBillingPeriodRunningTotalCO2 NUMERIC(38, 6) NULL,\r\n\t\tYtdRunningTotalCO2 NUMERIC(38, 6) NULL,\r\n\t\t[month] VARCHAR(20) NOT NULL,\r\n\t\tCurrentFiscalYear [dbo].[yyyymm] NOT NULL,\r\n\t\tPriorFiscalYear[dbo].[yyyymm] NOT NULL,\r\n\t\tEnergyUsage dbo.EnergyUnitBigInt NULL,\r\n\t\tDemandUsage NUMERIC(38,2) NULL,\r\n\t\tPublishedPeriodCurrentFiscalYear  [dbo].[yyyymm] NOT NULL,\r\n\t\tPublishedPeriodPriorFiscalYear [dbo].[yyyymm] NOT NULL);\r\n\r\n\t/*Streetlight*/\r\n\tINSERT INTO @QueryResult\r\n\t\t(CitywideAgencyOrFacility,\r\n        PublishedBillingPeriod,\r\n        FiscalYear,\r\n        BillingPeriod,\r\n        EnergyType,\r\n        TotalBilledAmount,\r\n        TotalCO2,\r\n        TotalBTU,\r\n        PublishedBillingPeriodRunningTotalCO2,\r\n        YtdRunningTotalCO2,\r\n        [month],\r\n        CurrentFiscalYear,\r\n        PriorFiscalYear,\r\n        EnergyUsage,\r\n        DemandUsage,\r\n        PublishedPeriodCurrentFiscalYear,\r\n        PublishedPeriodPriorFiscalYear)\r\n\tSELECT  CitywideAgencyOrFacility,\r\n        PublishedBillingPeriod,\r\n        FiscalYear,\r\n        BillingPeriod,\r\n        MIN('STL') AS EnergyType,\r\n        SUM(TotalBilledAmount) AS TotalBilledAmount,\r\n        SUM(TotalCO2) AS TotalCO2,\r\n        SUM(TotalBTU) AS TotalBTU,\r\n        SUM(PublishedBillingPeriodRunningTotalCO2) AS PublishedBillingPeriodRunningTotalCO2,\r\n        SUM(YtdRunningTotalCO2) AS YtdRunningTotalCO2,\r\n        MIN(month) AS month,\r\n        MIN(CurrentFiscalYear) AS CurrentFiscalYear,\r\n        MIN(PriorFiscalYear) AS PriorFiscalYear,\r\n        SUM(EnergyUsage) AS EnergyUsage,\r\n        SUM(DemandUsage) AS DemandUsage,\r\n        MIN(PublishedPeriodCurrentFiscalYear) AS PublishedPeriodCurrentFiscalYear,\r\n        MIN(PublishedPeriodPriorFiscalYear) AS PublishedPeriodPriorFiscalYear\r\n\tFROM Factors.uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy(@EmailAddress, 'FE', @PublishedBillingPeriod, '841003', '0600303,0600304', '*') AS AH\r\n\tWHERE FiscalYear >= @PriorFY AND EnergyType = 'ELE'\r\n\tGROUP BY CitywideAgencyOrFacility,\r\n        PublishedBillingPeriod,\r\n        FiscalYear,\r\n        BillingPeriod;\r\n\r\n\t/*ele exclude streetlight*/\r\n\tINSERT INTO @QueryResult\r\n\t\t(CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType,\r\n\t\tTotalBilledAmount,\r\n\t\tTotalCO2,\r\n\t\tTotalBTU,\r\n\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\tYtdRunningTotalCO2,\r\n\t\t[month],\r\n\t\tCurrentFiscalYear,\r\n\t\tPriorFiscalYear,\r\n\t\tEnergyUsage,\r\n\t\tDemandUsage,\r\n\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\tPublishedPeriodPriorFiscalYear)\r\n\tSELECT \r\n\t\tTE.CitywideAgencyOrFacility,\r\n\t\tTE.PublishedBillingPeriod,\r\n\t\tTE.FiscalYear,\r\n\t\tTE.BillingPeriod,\r\n\t\tTE.EnergyType,\r\n\t\tTE.TotalBilledAmount - QR.TotalBilledAmount,\r\n\t\tTE.TotalCO2 - QR.TotalCO2,\r\n\t\tTE.TotalBTU - QR.TotalBTU,\r\n\t\tTE.PublishedBillingPeriodRunningTotalCO2 - QR.PublishedBillingPeriodRunningTotalCO2,\r\n\t\tTE.YtdRunningTotalCO2 - QR.YtdRunningTotalCO2,\r\n\t\tTE.[month],\r\n\t\tTE.CurrentFiscalYear,\r\n\t\tTE.PriorFiscalYear,\r\n\t\tTE.EnergyUsage - QR.EnergyUsage,\r\n\t\tTE.DemandUsage - QR.DemandUsage,\r\n\t\tTE.PublishedPeriodCurrentFiscalYear,\r\n\t\tTE.PublishedPeriodPriorFiscalYear\r\n\tFROM (SELECT CitywideAgencyOrFacility,\r\n\t\t\tPublishedBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tBillingPeriod,\r\n\t\t\tEnergyType,\r\n\t\t\tSUM(TotalBilledAmount) AS TotalBilledAmount,\r\n\t\t\tSUM(TotalCO2) AS TotalCO2,\r\n\t\t\tSUM(TotalBTU) AS TotalBTU,\r\n\t\t\tSUM(PublishedBillingPeriodRunningTotalCO2) AS PublishedBillingPeriodRunningTotalCO2,\r\n\t\t\tSUM(YtdRunningTotalCO2) AS YtdRunningTotalCO2,\r\n\t\t\tMIN(month) AS month,\r\n\t\t\tMIN(CurrentFiscalYear) AS CurrentFiscalYear,\r\n\t\t\tMIN(PriorFiscalYear) AS PriorFiscalYear,\r\n\t\t\tSUM(EnergyUsage) AS EnergyUsage,\r\n\t\t\tSUM(DemandUsage) AS DemandUsage,\r\n\t\t\tMIN(PublishedPeriodCurrentFiscalYear) AS PublishedPeriodCurrentFiscalYear,\r\n\t\t\tMIN(PublishedPeriodPriorFiscalYear) AS PublishedPeriodPriorFiscalYear\r\n\t\tFROM Factors.uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy(@EmailAddress, 'CE', @PublishedBillingPeriod, NULL, NULL, '') AS AH\r\n\t\tWHERE FiscalYear >= @PriorFY AND EnergyType = 'ELE'\r\n\t\tGROUP BY CitywideAgencyOrFacility,\r\n\t\t\tPublishedBillingPeriod,\r\n\t\t\tFiscalYear,\r\n\t\t\tBillingPeriod,\r\n\t\t\tEnergyType) AS TE\r\n\t\tINNER JOIN @QueryResult AS QR ON TE.BillingPeriod = QR.BillingPeriod;\r\n\r\n\t/*non-ele*/\r\n\tINSERT INTO @QueryResult\r\n\t\t(CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType,\r\n\t\tTotalBilledAmount,\r\n\t\tTotalCO2,\r\n\t\tTotalBTU,\r\n\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\tYtdRunningTotalCO2,\r\n\t\t[month],\r\n\t\tCurrentFiscalYear,\r\n\t\tPriorFiscalYear,\r\n\t\tEnergyUsage,\r\n\t\tDemandUsage,\r\n\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\tPublishedPeriodPriorFiscalYear)\r\n\tSELECT CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType,\r\n\t\tSUM(TotalBilledAmount) AS TotalBilledAmount,\r\n\t\tSUM(TotalCO2) AS TotalCO2,\r\n\t\tSUM(TotalBTU) AS TotalBTU,\r\n\t\tSUM(PublishedBillingPeriodRunningTotalCO2) AS PublishedBillingPeriodRunningTotalCO2,\r\n\t\tSUM(YtdRunningTotalCO2) AS YtdRunningTotalCO2,\r\n\t\tMIN(month) AS month,\r\n\t\tMIN(CurrentFiscalYear) AS CurrentFiscalYear,\r\n\t\tMIN(PriorFiscalYear) AS PriorFiscalYear,\r\n\t\tSUM(EnergyUsage) AS EnergyUsage,\r\n\t\tSUM(DemandUsage) AS DemandUsage,\r\n\t\tMIN(PublishedPeriodCurrentFiscalYear) AS PublishedPeriodCurrentFiscalYear,\r\n\t\tMIN(PublishedPeriodPriorFiscalYear) AS PublishedPeriodPriorFiscalYear\r\n\tFROM Factors.uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy (@EmailAddress, 'CE', @PublishedBillingPeriod, NULL, NULL, '') AS AH\r\n\tWHERE FiscalYear >= @PriorFY AND EnergyType <> 'ELE'\r\n\tGROUP BY CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType;\r\n\r\n\t/* BTU - CitywideAgencyOrFacility: CW*/\t\r\n\tINSERT INTO @QueryResult\r\n\t\t(CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType,\r\n\t\tTotalBilledAmount,\r\n\t\tTotalCO2,\r\n\t\tTotalBTU,\r\n\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\tYtdRunningTotalCO2,\r\n\t\t[month],\r\n\t\tCurrentFiscalYear,\r\n\t\tPriorFiscalYear,\r\n\t\tEnergyUsage,\r\n\t\tDemandUsage,\r\n\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\tPublishedPeriodPriorFiscalYear)\r\n\tSELECT  CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType,\r\n\t\tSUM(TotalBilledAmount) AS TotalBilledAmount,\r\n\t\tSUM(TotalCO2) AS TotalCO2,\r\n\t\tSUM(TotalBTU) AS TotalBTU,\r\n\t\tSUM(PublishedBillingPeriodRunningTotalCO2) AS PublishedBillingPeriodRunningTotalCO2,\r\n\t\tSUM(YtdRunningTotalCO2) AS YtdRunningTotalCO2,\r\n\t\tMIN(month) AS month,\r\n\t\tMIN(CurrentFiscalYear) AS CurrentFiscalYear,\r\n\t\tMIN(PriorFiscalYear) AS PriorFiscalYear,\r\n\t\tSUM(EnergyUsage) AS EnergyUsage,\r\n\t\tSUM(DemandUsage) AS DemandUsage,\r\n\t\tMIN(PublishedPeriodCurrentFiscalYear) AS PublishedPeriodCurrentFiscalYear,\r\n\t\tMIN(PublishedPeriodPriorFiscalYear) AS PublishedPeriodPriorFiscalYear\r\n\tFROM Factors.uftn_TableTotalDollarsBtusAndRunningTotalCO2ByAgencyHierarchy(@EmailAddress, 'CW', @PublishedBillingPeriod, '*', '*', '*') AS AH\r\n\tWHERE FiscalYear >= @PriorFY\r\n\tGROUP BY CitywideAgencyOrFacility,\r\n\t\tPublishedBillingPeriod,\r\n\t\tFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tEnergyType;\t\t\t\r\n\t\r\n\tSELECT CitywideAgencyOrFacility,\r\n        PublishedBillingPeriod,\r\n        FiscalYear,\r\n        BillingPeriod,\r\n        EnergyType,\r\n        TotalBilledAmount,\r\n        TotalCO2,\r\n        TotalBTU,\r\n        PublishedBillingPeriodRunningTotalCO2,\r\n        YtdRunningTotalCO2,\r\n        [month],\r\n        CurrentFiscalYear,\r\n        PriorFiscalYear,\r\n        EnergyUsage,\r\n        DemandUsage,\r\n        PublishedPeriodCurrentFiscalYear,\r\n        PublishedPeriodPriorFiscalYear\r\n\tFROM @QueryResult;\r\nEND;"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_GetMonthlyExchangeData",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_GetMonthlyExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve monthly exchange data from a billing system. It queries the "
        },
        {
          "type": "text",
          "text": "Common.ExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table and joins it with several other tables to gather detailed information about billing exchanges for a specified billing period. The procedure handles different types of exchanges, such as account turn-ons, turn-offs, meter exchanges, and others, by using a series of "
        },
        {
          "type": "text",
          "text": "UNION",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " queries. Each query targets specific exchange codes and retrieves relevant data, including facility details, utility company information, energy type, meter numbers, and account details."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple "
                },
                {
                  "type": "text",
                  "text": "UNION",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " queries, each with several "
                },
                {
                  "type": "text",
                  "text": "INNER JOIN",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles various exchange scenarios based on different exchange codes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes data type conversions and conditional logic within the SQL queries."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod AS BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter specifies the billing period for which the exchange data is to be retrieved. It is used in the "
                },
                {
                  "type": "text",
                  "text": "WHERE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clause to filter records in the "
                },
                {
                  "type": "text",
                  "text": "Common.ExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure begins by setting the "
                },
                {
                  "type": "text",
                  "text": "NOCOUNT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " option to ON to prevent the message indicating the number of rows affected by a SQL statement from being returned."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to allow dirty reads, which can improve performance by reducing locking overhead."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure executes a series of "
                },
                {
                  "type": "text",
                  "text": "SELECT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements combined with "
                },
                {
                  "type": "text",
                  "text": "UNION",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to gather data for different exchange scenarios:"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Exchange Code '27'",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Retrieves data for a specific type of exchange, including meter and account details."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Exchange Code '28'",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Similar to '27', but with a focus on account turn-offs."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Exchange Code '47'",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Handles account turn-ons."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Exchange Code '46'",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Focuses on meter turn-ons."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Exchange Code 'AX'",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Deals with exchange accounts, including historical account data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Exchange Code '45'",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Manages meter exchanges, including previous meter details."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Other Exchange Codes",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Captures all other exchange types not explicitly handled by the previous queries."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Each query retrieves a consistent set of columns, ensuring that the "
                },
                {
                  "type": "text",
                  "text": "UNION",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " operation can be performed without errors."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may lead to reading uncommitted or dirty data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The multiple "
                },
                {
                  "type": "text",
                  "text": "INNER JOIN",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " operations can be resource-intensive, especially if the tables involved are large. Indexing on join columns can help mitigate this."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The "
                },
                {
                  "type": "text",
                  "text": "UNION",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " operation requires all result sets to have the same structure, which can add overhead. If duplicate rows are not a concern, using "
                },
                {
                  "type": "text",
                  "text": "UNION ALL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " instead of "
                },
                {
                  "type": "text",
                  "text": "UNION",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could improve performance by avoiding the duplicate elimination step."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading inconsistent data, which might not be suitable for all business scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity of the joins and the use of "
                },
                {
                  "type": "text",
                  "text": "UNION",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to slow performance if the underlying tables are large and not properly indexed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintainability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure's complexity and the number of queries can make it challenging to maintain and debug."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of this procedure may degrade, necessitating optimization or refactoring."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions or failures in certain scenarios."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Billing].[usp_GetMonthlyExchangeData]\n(\r\n    @BillingPeriod AS BillingPeriod\r\n)\r\nAS \r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,m.NgridCorrectorMeterId\t\t'PressureCorrectorNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.Meter AS m ON  m.MeterSeqid = ed.MeterSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\tWHERE ed.ExchangeCode = '27'\r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod\r\n\tUNION\r\n\t------ 28 Account Turn off\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,NULL\t\t\t\t\t\t\t'PressureCorrectorNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\t\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\tWHERE ed.ExchangeCode = '28'\r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod\r\n\tUNION\r\n\t-- 47 Account Turn On\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,NULL\t\t\t\t\t\t\t'PressureCorrectorNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\t\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\tWHERE ed.ExchangeCode = '47'\r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod\r\n\tUNION\r\n\t------ 46 Meter Turn on\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,m.NgridCorrectorMeterId\t\t'PressureCorrectorNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\t\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.Meter AS m ON m.MeterSeqid = ed.MeterSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\tWHERE ed.ExchangeCode = '46' \r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod\r\n\tUNION\r\n\t-- AX Exchange Account\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,NULL\t\t'PressureCorrectorNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(aOLD.AccountEffectiveTurnOn)\t\t'PreviousAccountTurnOnDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(aold.AccountEffectiveTurnOff)\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,aOLD.DeliveryTariffRate\t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\t\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\t\tINNER JOIN Billing.Account AS aOLD ON aOLD.UniqueAccountSeqid = a.UniqueAccountSeqid AND aOLD.RecordVersion = (a.RecordVersion-1)\r\n\tWHERE ed.ExchangeCode = 'AX'\r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod\r\n\tUNION\r\n\t-- 45 Exchange Meter\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,mOLD.AssociatedDemandMeter\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(mOLD.MeterEffectiveOnDate) 'PreviousMeterTurnOnDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(mOLD.MeterEffectiveOffDate) 'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,mOLD.MeterConstant\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,m.NgridCorrectorMeterId\t\t'PressureCorrectorNumber'\r\n\t\t,mOLD.NgridCorrectorMeterId\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,NULL \t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\t\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.Meter AS m ON m.MeterSeqid = ed.MeterSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\t\tINNER JOIN Billing.Meter AS mOLD ON mOLD.UniqueMeterSeqid = m.UniqueMeterSeqid AND mOLD.RecordVersion = (m.RecordVersion-1)\r\n\tWHERE ed.ExchangeCode = '45'\r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod\r\n\tUNION\r\n\t-- All others\r\n\tSELECT ams.ShortDesc\t\t\t\t\t'ExchangeType'\r\n\t\t,ed.BillingPeriod\t\t\t\t'BillingPeriod'\r\n\t\t,f.OecFacilityNumber\t\t\t'FacilityOECID'\r\n\t\t,f.FacilityName\t\t\t\t\t'FacilityName'\r\n\t\t,f.Address1\t\t\t\t\t\t'FacilityAddress'\r\n\t\t,uc.ShortDesc\t\t\t\t\t'UtilityCompany'\r\n\t\t,edt.EnergyType\t\t\t\t\t'EnergyType'\r\n\t\t,ed.CurrentAccountNumber\t\t'CurrentAccountNumber'\r\n\t\t,ed.OriginalMeterNumber\t\t\t'PreviousMeterNumber'\r\n\t\t,ed.CurrentMeterNumber\t\t\t'MeterNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAssociatedDemandMeter'\r\n\t\t,ed.AssociatedDemandMeter\t\t'AssociatedDemandMeter'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(ed.MeterEffectiveTurnOnDate)\t'MeterTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousMeterConstant'\r\n\t\t,ed.MeterConstant\t\t\t\t'MeterConstant'\r\n\t\t,NULL\t\t\t\t\t\t\t'PressureCorrectorNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousPressureCorrectorNumber'\r\n\t\t,a.OriginalAccountNumber\t\t'PreviousAccountNumber'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOnDate'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousAccountTurnOffDate'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.AccountEffectiveTurnOn) 'AccountTurnOnDate'\r\n\t\t,ad.AgencyShortDesc\t\t\t\t'AgencyName'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyAbr'\r\n\t\t,ad.AgencyCodeOEC\t\t\t\t'AgencyCode'\r\n\t\t,NULL\t\t\t\t\t\t\t'PreviousTariffRateGroup'\r\n\t\t,a.DeliveryTariffRate\t\t\t'TariffRateGroup'\r\n\t\t,dbo.ConvertYYYYMMDDToDatetime(a.DeliveryTariffEffectiveDate) 'TariffRateChangeDate'\r\n\t\t,ed.IsProcessed\r\n\t\t,ed.Exclude\t\r\n\tFROM Common.ExchangeData AS ed\r\n\t\tINNER JOIN Billing.Account AS a ON a.AccountSeqid = ed.AccountSeqid\r\n\t\tINNER JOIN Billing.AgencyDivision AS ad ON ad.AgencyDivisionSeqid = a.AgencyAccount\r\n\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = a.FacilityAccount\r\n\t\tINNER JOIN Billing.UtilityCompany AS uc ON uc.UtilityCompanySeqid = a.UtilityAccountProvider\r\n\t\tINNER JOIN Billing.EnergyDeliveryType AS edt ON edt.EnergyDeliveryType = a.EnergyAccountDescription\r\n\t\tINNER JOIN Billing.AccountMeterStatus AS ams ON ams.AccountMeterStatus = ed.ExchangeCode\r\n\tWHERE ed.ExchangeCode NOT IN ('27','28','45','46','47','AX') \r\n\t\tAND ed.IsProcessed <> 'N'\r\n\t\tAND ed.BillingPeriod = @BillingPeriod;\r\nEND;"
        }
      ]
    }
  ]
}
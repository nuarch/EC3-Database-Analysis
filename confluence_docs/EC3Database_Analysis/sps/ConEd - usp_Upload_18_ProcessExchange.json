{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ConEd",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Upload_18_ProcessExchange",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "[ConEd].[usp_Upload_18_ProcessExchange]",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process electronic gas exchange data. It manages the exchange of account and meter information between different tables, updating records based on certain conditions. The procedure involves several steps, including checking the current billing period, deleting outdated records, processing records through a cursor, and updating related tables with new sequence IDs."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including conditional logic, cursor operations, and updates across several tables. While it does not involve highly complex algorithms, the use of cursors and multiple table joins increases its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure does not take any input parameters directly. However, it uses several internal variables to manage its operations:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Stores the current active billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UploadCommonElectronicGasExchangeDataSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used to iterate through records in a cursor."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used to capture the status code from a helper procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Set to a constant value of 1, likely representing a system user for auditing or logging purposes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialize Variables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure initializes several variables, including setting "
                },
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to 1."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determine Current Billing Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It retrieves the current billing period from the "
                },
                {
                  "type": "text",
                  "text": "Gas.UploadCommonElectronicGasExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. If no valid billing period is found, it returns an error code "
                },
                {
                  "type": "text",
                  "text": "-100",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Delete Outdated Records",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Deletes records from "
                },
                {
                  "type": "text",
                  "text": "Gas.UploadCommonElectronicGasExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " that are associated with accounts and meters having a status code period less than the current billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Count Approved Exchanges",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Counts the number of records marked as approved for creation. If none are found, the procedure exits."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Declares and opens a cursor to iterate over records in "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadCommonElectronicGasExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each record, it calls a helper procedure "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.usp_Upload_18_Helper_ProcessCommonElectronicGasUnknownExchangeCode",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "ApprovedForCreation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " flag to 'N' for processed records to prevent reprocessing."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Sequence IDs",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadMeterBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " tables with new sequence IDs based on the processed exchange data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Outputs the number of rows affected by the updates to the adjustment tables."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can lead to performance issues, especially with large datasets, as it processes records row-by-row rather than in bulk."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple joins in the DELETE and UPDATE statements can be resource-intensive, particularly if the tables involved are large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the columns used in joins and WHERE clauses can significantly improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded User ID",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a hardcoded "
                },
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " may not be suitable for environments requiring detailed auditing or user-specific actions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks comprehensive error handling, which could lead to unhandled exceptions or incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not account for concurrent modifications, which could lead to race conditions or data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the performance of the cursor and complex joins may degrade, necessitating optimization or redesign."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [ConEd].[usp_Upload_18_ProcessExchange]\nAS\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\n--\r\n--\r\ndeclare @BillingPeriod varchar(6)\r\nDeclare @UploadCommonElectronicGasExchangeDataSeqid int\r\ndeclare @StatusCode INT\r\nDECLARE @AuthenticatedUserID INT\r\n\r\nSET @AuthenticatedUserID = 1\r\n--\r\n--  Find the current active billing period\r\n--\r\nSELECT top 1 @BillingPeriod = IsNull(BillingPeriod,'187601') FROM\tGas.UploadCommonElectronicGasExchangeData\r\n--\r\nif ( @BillingPeriod = '187601' )    return -100\r\n\r\n\r\nDELETE FROM Gas.UploadCommonElectronicGasExchangeData\r\nFROM Billing.AccountExchangeMeterTrack INNER JOIN\r\n                      Billing.Account ON Billing.AccountExchangeMeterTrack.OriginalAccountSeqid = Billing.Account.AccountSeqid INNER JOIN\r\n                      Billing.Meter ON Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid INNER JOIN\r\n                      Gas.UploadCommonElectronicGasExchangeData ON \r\n                      Billing.Meter.OriginalAccountNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber AND \r\n                      Billing.Meter.OriginalMeterNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentMeterNumber AND \r\n                      Billing.Account.UtilityAccountProvider = Gas.UploadCommonElectronicGasExchangeData.UtilityCompanyId AND \r\n                      Billing.Account.OriginalAccountNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber\r\nWHERE (Billing.Account.AccountStatusCodePeriod < @BillingPeriod) AND (Billing.Meter.MeterStatusCodePeriod < @BillingPeriod)\t\t\r\n--\r\n--************************************************************************************** \r\n--\tDeclare Cursor\r\n--**************************************************************************************\r\n----\r\ndeclare @NumberExchangesApprovedForCreation int\r\n--\r\nSELECT\t@NumberExchangesApprovedForCreation = count(*) FROM Gas.UploadCommonElectronicGasExchangeData WHERE (ApprovedForCreation = 'Y')\r\n--\r\n--\r\n--\r\nif (@NumberExchangesApprovedForCreation = 0)  return \r\n--\r\nDeclare read_exchange_record cursor for \r\nSELECT\tUploadCommonElectronicGasExchangeDataSeqid\r\nFROM\tGas.UploadCommonElectronicGasExchangeData\r\n--WHERE \r\n--\t\t(ApprovedForCreation = 'Y')\r\nORDER BY \r\n\t\tCurrentAccountNumber, AccountEffectiveTurnOn\r\n--************************************************************************************** \r\n--\tMain Processing\r\n--**************************************************************************************\r\n--\r\nselect * from Gas.uvw_XcheckAccountMeterAndTrackTablesSeqid\r\n--\r\n--  Save the max sequence ids of the tables prior to the exchange process.\r\ntruncate table Gas.AccountMeterAndTrackTablesSeqidPriorToGasExchange\r\n--\r\ninsert into Gas.AccountMeterAndTrackTablesSeqidPriorToGasExchange\r\n(\r\n\t\t [BillingPeriod]\r\n\t\t,[TableName]\r\n\t\t,[MaxTableSeqid]\r\n\t\t,[TableRowCount]\r\n\t\t,[MaxDateAdded]\r\n)\r\nSELECT   @BillingPeriod\r\n\t\t,[TableName]\r\n\t\t,[MaxTableSeqid]\r\n\t\t,[TableRowCount]\r\n\t\t,[MaxDateAdded]\r\nFROM [Gas].[uvw_XcheckAccountMeterAndTrackTablesSeqid]\r\n\r\n--\r\nopen read_exchange_record\r\n\r\n-- Read first row\r\nfetch read_exchange_record into @UploadCommonElectronicGasExchangeDataSeqid\r\n\r\nwhile @@fetch_status =0\r\n  begin\r\n\t--\r\n\texecute ConEd.usp_Upload_18_Helper_ProcessCommonElectronicGasUnknownExchangeCode @AuthenticatedUserID,@UploadCommonElectronicGasExchangeDataSeqid,@StatusCode\r\n\t--\r\n\t-- Assumes that the exchange was completed and sets the ApprovedForCreation to 'N' so in the event that the exchange is reprocessed.  The\r\n\t-- rows that have ApprovedForCreation = 'N' will be ignored\r\n\t--\r\n\tUPDATE\tGas.UploadCommonElectronicGasExchangeData\r\n\tSET\t\tApprovedForCreation = 'N'\r\n\tWHERE \r\n\t\t\t(UploadCommonElectronicGasExchangeDataSeqid = @UploadCommonElectronicGasExchangeDataSeqid)\r\n\r\n\tfetch read_exchange_record into    @UploadCommonElectronicGasExchangeDataSeqid\r\n end \r\n--\r\nclose read_exchange_record\r\n\r\nDeallocate read_exchange_record\r\n--\r\nselect * from Gas.uvw_XcheckAccountMeterAndTrackTablesSeqid\r\n--\r\n--\tUpdate the Gas.UploadAccountBillingAdjustmentGas.AccountSeqid = Billing.Account.AccountSeqid with the seqid from the newly created account\r\n--\tfrom the Common Gas exchange data(ProcessCommonElectronicGasUnknownExchange) \r\n--\r\nupdate\tGas.UploadAccountBillingAdjustmentGas\r\nSET \r\n\t\tAccountSeqid = Billing.Account.AccountSeqid\r\nFROM \r\n\t\tGas.UploadCommonElectronicGasExchangeData INNER JOIN\r\n\t\tBilling.Account ON Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber = Billing.Account.OriginalAccountNumber AND \r\n\t\tGas.UploadCommonElectronicGasExchangeData.UtilityCompanyId = Billing.Account.UtilityAccountProvider INNER JOIN\r\n\t\tGas.UploadAccountBillingAdjustmentGas ON \r\n\t\tGas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber = Gas.UploadAccountBillingAdjustmentGas.OriginalAccountNumber\r\nwhere\t(Gas.UploadAccountBillingAdjustmentGas.AccountSeqid IS NULL)\r\nselect 'Updated Gas.UploadAccountBillingAdjustmentGas transaction Sequence ids:',@@rowcount\r\n--\r\n--update\tGas.UploadMeterBillingAdjustmentGas\r\n--\r\nupdate\tGas.UploadMeterBillingAdjustmentGas\r\nSET              \r\n\t\tAccountSeqid = Billing.AccountExchangeMeterTrack.OriginalAccountSeqid, \r\n\t\tMeterSeqid = Billing.AccountExchangeMeterTrack.OriginalMeterSeqid, \r\n\t\tAccountExchangeMeterTrackSeqid = Billing.AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid, \r\n\t\tUtilityCompanySeqid =Billing.AccountExchangeMeterTrack.UtilityCompanySeqid\r\nFROM \r\n\t\tGas.UploadCommonElectronicGasExchangeData INNER JOIN\r\n\t\tBilling.Account ON Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber = Billing.Account.OriginalAccountNumber AND \r\n\t\tGas.UploadCommonElectronicGasExchangeData.UtilityCompanyId = Billing.Account.UtilityAccountProvider INNER JOIN\r\n\t\tBilling.AccountExchangeMeterTrack ON Billing.Account.AccountSeqid = Billing.AccountExchangeMeterTrack.OriginalAccountSeqid AND \r\n\t\tBilling.Account.OriginalAccountNumber = Billing.AccountExchangeMeterTrack.OriginalAccountNumber INNER JOIN\r\n\t\tBilling.Meter ON Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalAccountNumber = Billing.Meter.OriginalAccountNumber AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalMeterNumber = Billing.Meter.OriginalMeterNumber INNER JOIN\r\n\t\tGas.UploadMeterBillingAdjustmentGas ON Billing.Meter.OriginalAccountNumber = Gas.UploadMeterBillingAdjustmentGas.OriginalAccountNumber AND \r\n\t\tBilling.Meter.CurrentMeterNumber = Gas.UploadMeterBillingAdjustmentGas.OriginalMeterNumber AND \r\n\t\tBilling.Account.UtilityAccountProvider = Gas.UploadMeterBillingAdjustmentGas.UtilityCompanySeqid AND \r\n\t\tBilling.Account.OriginalAccountNumber = Gas.UploadMeterBillingAdjustmentGas.OriginalAccountNumber\r\nWHERE (Billing.Meter.MeterStatus LIKE 'U%')\r\n--\r\nselect 'Updated Gas.UploadMeterBillingAdjustmentGas transaction Sequence ids:',@@rowcount\r\n--\r\n--\r\nend"
        }
      ]
    }
  ]
}
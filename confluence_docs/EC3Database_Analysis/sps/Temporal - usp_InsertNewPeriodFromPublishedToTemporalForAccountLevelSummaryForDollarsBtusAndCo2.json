{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Temporal",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_InsertNewPeriodFromPublishedToTemporalForAccountLevelSummaryForDollarsBtusAndCo2",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_InsertNewPeriodFromPublishedToTemporalForAccountLevelSummaryForDollarsBtusAndCo2",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to manage the transition of data from a published table to a temporal table for account-level summaries involving dollars, BTUs, and CO2 emissions. It ensures that only the next valid billing period is inserted into the temporal table, updates existing records to close their effective periods, and handles cases where records may drop off from the source."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including validation, data insertion, and updates, which require a good understanding of temporal data management and SQL operations. The complexity arises from the need to handle temporal data correctly and ensure data integrity across different periods."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the billing period that is intended to be inserted into the temporal table. It is expected to be in a format like 'YYYYMM'."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization and Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure begins by determining the maximum effective start period from the temporal table and calculates the next period using a helper function "
                        },
                        {
                          "type": "text",
                          "text": "CreateNextPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It checks if the provided "
                        },
                        {
                          "type": "text",
                          "text": "@PublishedBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " matches the calculated next period. If not, it raises an error and exits."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hash Code Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It ensures that all records in both the source and destination tables have non-null hash values. If any hash values are missing, it raises an error and exits."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts new records from the source table ("
                        },
                        {
                          "type": "text",
                          "text": "Published.AccountLevelSummaryForDollarsBtusAndCo2",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ") into the temporal table ("
                        },
                        {
                          "type": "text",
                          "text": "Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ") for the specified billing period, provided they do not already exist in the temporal table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Closing Previous Versions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "EffectiveEndPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " of existing records in the temporal table to the current billing period to close them, ensuring that only the latest version of each record remains open."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Handling Dropped Records",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Closes records in the temporal table that do not have a corresponding entry in the source table for the current billing period, indicating they have been dropped."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved have appropriate indexes, especially on columns used in joins and where clauses, such as "
                },
                {
                  "type": "text",
                  "text": "HashValue",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "EffectiveStartPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "EffectiveEndPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may lock rows in the temporal table during updates, potentially impacting concurrent operations. Consider transaction isolation levels and locking strategies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the tables are large, consider processing data in batches to reduce transaction size and improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Incorrect handling of hash values or periods could lead to data integrity issues. Ensure that hash values are consistently generated and validated."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "RAISERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for error handling, which stops execution. Ensure that calling applications handle these errors gracefully."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the performance of the procedure may degrade. Regularly review and optimize indexes and query plans."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporal Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Mismanagement of effective periods could lead to incorrect historical data representation. Ensure that period calculations and updates are thoroughly tested."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Temporal].[usp_InsertNewPeriodFromPublishedToTemporalForAccountLevelSummaryForDollarsBtusAndCo2]\n(\r\n\t@PublishedBillingPeriod AS VARCHAR(6)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDECLARE @MaxPeriod AS VARCHAR(6) = (SELECT MAX(EffectiveStartPeriod) FROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2);\r\n\tDECLARE @NextPeriod AS VARCHAR(6) = [dbo].[CreateNextPeriod](@MaxPeriod, 'M');\r\n        \r\n\t----\tCodes for the breakdown inserted into the table below\r\n\t----    CW - by Citywide\r\n\t----    CE - by Citywide by Energy type\r\n\t----    AE - by Agency by Energy type\r\n\t----    FE - by Agency by facility by Energy type\r\n\t----    FA - by Agency by facility \r\n\t----    AG - by agency\r\n\t\t\r\n\t-- Make sure only next period after the max is being inserted\r\n\tIF (@NextPeriod <> @PublishedBillingPeriod)\r\n\tBEGIN\r\n\t\tRAISERROR ('ERROR: You can only insert this period: %s', 12, 1, @NextPeriod);\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\t-- make sure the hashcode is populated before starting\r\n\tDECLARE @CountNullHashCodeSource AS INT = (SELECT COUNT(*) FROM [Published].[AccountLevelSummaryForDollarsBtusAndCo2] WHERE HashValue IS NULL);\r\n\tDECLARE @CountNullHashCodeDestination INT = (SELECT COUNT(*) FROM [Published].[TemporalAccountLevelSummaryForDollarsBtusAndCo2] WHERE HashValue IS NULL);\r\n\t\t\r\n\tIF (@CountNullHashCodeSource > 0 OR @CountNullHashCodeDestination > 0)\r\n\tBEGIN\r\n\t\tRAISERROR ('ERROR: HashCode is missing from either [Published].[TemporalAccountLevelSummaryForDollarsBtusAndCo2] or [Published].[AccountLevelSummaryForDollarsBtusAndCo2].', 12, 1);\r\n\t\tRETURN;\r\n\tEND;\r\n\r\n\t--(1) - First insert all the new versions of the records\r\n\tINSERT INTO Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2\r\n\t\t(CitywideAgencyOrFacility,\r\n\t\t[Month],\r\n\t\tFiscalYear,\r\n\t\tPublishedPeriodCurrentFiscalYear,\r\n\t\tPublishedPeriodPriorFiscalYear,\r\n\t\tCurrentFiscalYear,\r\n\t\tPriorFiscalYear,\r\n\t\tBillingPeriod,\r\n\t\tSummaryORDetail,\r\n\t\tAgencyCodeOEC,\r\n\t\tFacilityName,\r\n\t\tFacilityNumber,\r\n\t\tEnergyType,\r\n\t\tEnergyUsage,\r\n\t\tDemandUsage,\r\n\t\tTotalBilledAmount,\r\n\t\tTotalCO2,\r\n\t\tTotalBTU,\r\n\t\tPublishedBillingPeriodRunningTotalCO2,\r\n\t\tYtdRunningTotalCO2,\r\n\t\tAgencyName,\r\n\t\tAddress1,\r\n\t\tBorough,\r\n\t\t[Block],\r\n\t\tLotNumber,\r\n\t\tCityPlanningBIN,\r\n\t\tNotes,\r\n\t\tAuthenticatedUserID,\r\n\t\tDateAdded,\r\n\t\tLastUpdate,\r\n\t\tHold,\r\n\t\tHashValue,\r\n\t\tEffectiveStartPeriod,\r\n\t\tEffectiveEndPeriod)\r\n\tSELECT AC.CitywideAgencyOrFacility,\r\n\t\tAC.[Month],\r\n\t\tAC.FiscalYear,\r\n\t\tAC.PublishedPeriodCurrentFiscalYear,\r\n\t\tAC.PublishedPeriodPriorFiscalYear,\r\n\t\tAC.CurrentFiscalYear,\r\n\t\tAC.PriorFiscalYear,\r\n\t\tAC.BillingPeriod,\r\n\t\tAC.SummaryORDetail,\r\n\t\tAC.AgencyCodeOEC,\r\n\t\tAC.FacilityName,\r\n\t\tAC.FacilityNumber,\r\n\t\tAC.EnergyType,\r\n\t\tAC.EnergyUsage,\r\n\t\tAC.DemandUsage,\r\n\t\tAC.TotalBilledAmount,\r\n\t\tAC.TotalCO2,\r\n\t\tAC.TotalBTU,\r\n\t\tAC.PublishedBillingPeriodRunningTotalCO2,\r\n\t\tAC.YtdRunningTotalCO2,\r\n\t\tAC.AgencyName,\r\n\t\tAC.Address1,\r\n\t\tAC.Borough,\r\n\t\tAC.[Block],\r\n\t\tAC.LotNumber,\r\n\t\tAC.CityPlanningBIN,\r\n\t\tAC.Notes,\r\n\t\tAC.AuthenticatedUserID,\r\n\t\tAC.DateAdded,\r\n\t\tAC.LastUpdate,\r\n\t\tAC.Hold,\r\n\t\tAC.HashValue,\r\n\t\tAC.PublishedBillingPeriod,\r\n\t\t'999912'\r\n\tFROM Published.AccountLevelSummaryForDollarsBtusAndCo2 AS AC\r\n\t\tLEFT JOIN (SELECT * FROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 WHERE EffectiveEndPeriod = '999912') AS TAC ON TAC.HashValue = AC.HashValue\r\n\tWHERE AC.PublishedBillingPeriod = @PublishedBillingPeriod AND TAC.EffectiveStartPeriod IS NULL;\r\n\t-- we are joining with active data only\r\n\r\n\t--(2) - Then close all the previous versions by setting their\r\n\t-- this is data change, just set EffectiveEndPeriod to publishedbillingperiod\r\n\tUPDATE Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2\r\n\tSET EffectiveEndPeriod = @PublishedBillingPeriod\r\n\tWHERE Seqid IN (SELECT previousPeriods.Seqid\r\n\t\tFROM (SELECT * FROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 WHERE EffectiveStartPeriod = @PublishedBillingPeriod) AS processingPeriod\r\n\t\t\tINNER JOIN (SELECT * FROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 WHERE EffectiveStartPeriod < @PublishedBillingPeriod) AS previousPeriods\r\n\t\t\t\tON previousPeriods.BillingPeriod = processingPeriod.BillingPeriod AND  previousPeriods.CitywideAgencyOrFacility = processingPeriod.CitywideAgencyOrFacility\r\n\t\t\t\t\tAND previousPeriods.AgencyCodeOEC = processingPeriod.AgencyCodeOEC AND previousPeriods.FacilityNumber = processingPeriod.FacilityNumber\r\n\t\t\t\t\tAND previousPeriods.EnergyType = processingPeriod.EnergyType AND previousPeriods.SummaryORDetail = processingPeriod.SummaryORDetail\r\n\t\t\tWHERE previousPeriods.EffectiveEndPeriod = '999912');\r\n\r\n\t--(3) - In case some records drop off from the source, we need to close the latest version. at a later time if the record shows again, it will be inserted\r\n\t-- this is setting datato to publishedbillingperiod for data that exists in destination but not exist in source\r\n\tUPDATE Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2\r\n\tSET EffectiveEndPeriod = @PublishedBillingPeriod\r\n\tWHERE Seqid IN (SELECT t.Seqid\r\n\t\tFROM (SELECT * FROM Published.TemporalAccountLevelSummaryForDollarsBtusAndCo2 WHERE EffectiveStartPeriod <= @PublishedBillingPeriod AND EffectiveEndPeriod > @PublishedBillingPeriod) AS t\r\n\t\t\tLEFT JOIN (SELECT * FROM Published.AccountLevelSummaryForDollarsBtusAndCo2 WHERE PublishedBillingPeriod = @PublishedBillingPeriod) AS p\r\n\t\t\t\tON p.hashValue = t.hashValue\r\n\t\tWHERE p.PublishedBillingPeriod IS NULL);\r\nEND;"
        }
      ]
    }
  ]
}
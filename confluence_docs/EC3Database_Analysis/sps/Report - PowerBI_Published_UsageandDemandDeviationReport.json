{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "PowerBI_Published_UsageandDemandDeviationReport",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "PowerBI_Published_UsageandDemandDeviationReport",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report on energy usage and demand deviations for a specified billing period. It retrieves and calculates various metrics related to energy consumption and demand, comparing current period data with historical data from one to three years ago. The results are sorted and filtered based on deviation thresholds and are intended for use in Power BI reports."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple nested queries and joins across different tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs calculations for deviations and averages over multiple years."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses dynamic date calculations and custom functions for determining billing periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic for handling different energy types and demand calculations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is dynamically set within the procedure to the latest billing period from the "
                },
                {
                  "type": "text",
                  "text": "Published.AccountLevelRawDataForCurrentPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default value is '*'. It is used to filter data based on agency codes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default value is 'mbelarrem@dcas.nyc.gov'. It is used in the function "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyChildrenByAgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to retrieve agency data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MinDeviation",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default value is 0.0. It sets the minimum threshold for usage deviation filtering."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MinDemandDeviation",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default value is 0.0. It sets the minimum threshold for demand deviation filtering."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to avoid locking issues and initializes several variables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determine Billing Periods",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the current billing period and the corresponding periods from one, two, and three years ago using the "
                },
                {
                  "type": "text",
                  "text": "CalcBillingPeriodYearPrior",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " function."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval and Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The main query retrieves data from multiple tables, including "
                        },
                        {
                          "type": "text",
                          "text": "Published.TemporalAccountLevelRawDataForCurrentPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Facility",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "Factors.DegreeDayBase",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It calculates current and prior year metrics such as actual usage, adjusted 30-day usage, demand, and degree days."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It computes deviations in usage and demand between the current and prior periods, as well as against a three-year average."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Filtering and Sorting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The results are filtered based on the minimum deviation thresholds and sorted by a custom order and actual usage."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Read Uncommitted Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While this reduces locking, it may lead to dirty reads, which could affect data accuracy."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins and calculations, which can be resource-intensive and slow down execution, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use of Functions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Functions like "
                },
                {
                  "type": "text",
                  "text": "CalcBillingPeriodYearPrior",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "CreatePreviousPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could add overhead if not optimized."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Accuracy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted data, potentially resulting in inaccurate reports."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity and number of joins may not scale well with increasing data volumes, leading to performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Email Address",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The default email address is hardcoded, which may not be suitable for all environments or users."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions or failures during execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Assumptions on Data Availability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that data for all required billing periods is available, which may not always be the case."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[PowerBI_Published_UsageandDemandDeviationReport]\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @PublishedBillingPeriod AS VARCHAR(6), @AgencyCodeOEC AS VARCHAR(2) = '*'\r\n\t\t,@EmailAddress AS VARCHAR(50) = 'mbelarrem@dcas.nyc.gov', @MinDeviation AS DECIMAL(16, 2) = 0.0\r\n\t\t,@MinDemandDeviation AS DECIMAL(16, 2) = 0.0;\r\n\t\r\n\tSELECT @PublishedBillingPeriod = MAX(BillingPeriod) FROM Published.AccountLevelRawDataForCurrentPeriod;\r\n\r\n\tDECLARE @CurrentBillingPeriod AS VARCHAR(6), @BillingPeriodOneYearAgo AS VARCHAR(6)\r\n\t\t,@BillingPeriodTwoYearsAgo AS VARCHAR(6), @BillingPeriodThreeYearsAgo AS VARCHAR(6), @MonthName AS NVARCHAR(30);\r\n\t\r\n\tSELECT @MonthName = DATENAME(MM, @PublishedBillingPeriod + '01')\r\n\tSET @CurrentBillingPeriod = @PublishedBillingPeriod\r\n\tSELECT @BillingPeriodOneYearAgo = dbo.CalcBillingPeriodYearPrior(@PublishedBillingPeriod)\r\n\tSELECT @BillingPeriodTwoYearsAgo = dbo.CalcBillingPeriodYearPrior(@BillingPeriodOneYearAgo)\r\n\tSELECT @BillingPeriodThreeYearsAgo = dbo.CalcBillingPeriodYearPrior(@BillingPeriodTwoYearsAgo)\r\n\t\t\r\n\tSELECT \r\n\t\tPublishedBillingPeriod\r\n\t\t,FiscalYear\r\n\t\t,EnergyType\r\n\t\t,EnergyUnit\r\n\t\t,Utility\r\n\t\t,OECID\r\n\t\t,Account#\r\n\t\t,TariffClass\r\n\t\t,Facility_Name\r\n\t\t,Facility_Address\r\n\t\t,Borough\r\n\t\t,Zipcode\r\n\t\t,CY_ActualUsage AS CY_Act_Usage\r\n\t\t,CY_BDs\r\n\t\t,ROUND(CY_Adj_30Day_Usage,0) CY_Adj_30Day_Usage\r\n\t\t,CY_DMD\r\n\t\t,CY_AE\r\n\t\t,CY_HDD\r\n\t\t,CY_CDD\r\n\t\t,CASE ISNULL(CY_ActualUsage, 0) WHEN 0 THEN NULL ELSE '$ ' + CAST(CONVERT(DECIMAL(10, 2), RevisedBilledAmount/CY_ActualUsage) AS VARCHAR(10)) END AS [CY_$/Unit_Usage]\r\n\t\t,PY_ActualUsage AS PY_Act_Usage\r\n\t\t,PY_BDs\r\n\t\t,ROUND(PY_Adj_30Day_Usage,0) AS PY_Adj_30Day_Usage\r\n\t\t,PY_DMD\r\n\t\t,PY_AE\r\n\t\t,PY_HDD\r\n\t\t,PY_CDD\r\n\t\t,CAST(ROUND(usageDeviation1,0) AS VARCHAR(20)) + '%' AS [CY_Usage_Deviation_%]\r\n\t\t,SUBSTRING(CAST(ROUND(demandDeviation1,0) AS VARCHAR(22)),0,CHARINDEX('.',demandDeviation1)) + '%' AS [CY_DMD_Deviation_%]\r\n\t\t,ROUND(Y_AVG_ActualUsage,0) AS [3Y_AVG_Act_Usage]\r\n\t\t,ROUND(Y_AVG_BDs,0) AS [3Y_AVG_BDs]\r\n\t\t,ROUND(Y_AVG_AdjustedUsage,0) AS [3Y_AVG_Adj_30Day_Usage]\r\n\t\t,ROUND(Y_AVG_DemandUsage,0) AS [3Y_AVG_DMD]\r\n\t\t,Y_AE AS [3Y_AE]\r\n\t\t,ROUND(Y_AVG_HDD,0) AS [3Y_AVG_HDD]\r\n\t\t,ROUND(Y_AVG_CDD,0) AS [3Y_AVG_CDD]\r\n\t\t,CAST(ROUND(usageDeviation2 ,0) AS VARCHAR(30))+ ' %'\tAS [3Y_AVG_Usage_Deviation_%]\r\n\t\t,CAST(ROUND(demandDeviation2 ,0) AS VARCHAR(10))+ ' %'\tAS [3Y_AVG_DMD_Deviation_%]\r\n\tFROM (SELECT DISTINCT\r\n\t\t\tC.PublishedBillingPeriod\r\n\t\t\t,C.FiscalYear\r\n\t\t\t,C.EnergyType\r\n\t\t\t,C.EnergyUnit\r\n\t\t\t,C.UtilityCompany AS Utility\r\n\t\t\t,C.OecFacilityNumber AS OECID\r\n\t\t\t,C.CurrentAccountNumber AS Account#\r\n\t\t\t,C.DeliveryTariffRate AS TariffClass\r\n\t\t\t,C.FacilityName AS Facility_Name\r\n\t\t\t,C.Address1 AS Facility_Address\r\n\t\t\t,C.Borough\r\n\t\t\t,C.Zipcode\r\n\t\t\t,CASE C.EnergyType WHEN 'GAS' THEN NULL ELSE C.AccountDemandUsage END AS CY_DMD\r\n\t\t\t,C.AccountEnergyUsage AS CY_ActualUsage\r\n\t\t\t,C.RevisedBilledAmount\r\n\t\t\t,C.BillingPeriodDays AS CY_BDs\r\n\t\t\t,CAST(C.AccountEnergyUsage AS FLOAT)*30/CAST(C.BillingPeriodDays AS FLOAT) AS CY_Adj_30Day_Usage\r\n\t\t\t,C.ActualOrEstimated AS CY_AE\r\n\t\t\t,C.BaseHeatingDegreeDays AS CY_HDD\r\n\t\t\t,C.BaseCoolingDegreeDays AS CY_CDD\r\n\t\t\t,CASE C.EnergyType WHEN 'GAS' THEN NULL ELSE proir.AccountDemandUsage END AS PY_DMD\r\n\t\t\t,proir.AccountEnergyUsage AS PY_ActualUsage\r\n\t\t\t,proir.BillingPeriodDays AS PY_BDs\r\n\t\t\t,CAST(proir.AccountEnergyUsage AS FLOAT) * 30/CAST(proir.BillingPeriodDays AS FLOAT) AS PY_Adj_30Day_Usage\r\n\t\t\t,proir.ActualOrEstimated AS PY_AE\r\n\t\t\t,proir.BaseHeatingDegreeDays AS PY_HDD\r\n\t\t\t,proir.BaseCoolingDegreeDays AS PY_CDD\r\n\t\t\t,CASE WHEN proir.AccountEnergyUsage = 0 AND C.AccountEnergyUsage = 0 THEN 0 \r\n\t\t\t\tWHEN proir.AccountEnergyUsage = 0 AND C.AccountEnergyUsage <> 0 THEN 100 \r\n\t\t\t\tELSE (((CAST(C.AccountEnergyUsage AS FLOAT)*30/CAST(C.BillingPeriodDays AS FLOAT)) - (CAST(proir.AccountEnergyUsage AS FLOAT) * 30/CAST(proir.BillingPeriodDays AS FLOAT)))*100/(CAST(proir.AccountEnergyUsage AS FLOAT) * 30/CAST(proir.BillingPeriodDays AS FLOAT))) END AS usageDeviation1\r\n\t\t\t,CASE WHEN proir.AccountDemandUsage = 0 AND  C.AccountDemandUsage = 0 THEN 0 \r\n\t\t\t\tWHEN proir.AccountDemandUsage = 0 AND  C.AccountDemandUsage <> 0 THEN 100 \r\n\t\t\t\tWHEN proir.AccountDemandUsage IS NULL THEN NULL \r\n\t\t\t\tELSE ((CONVERT(DECIMAL(18, 2), C.AccountDemandUsage) - CONVERT(DECIMAL(18, 2), proir.AccountDemandUsage))*100/CONVERT(DECIMAL(18, 2), proir.AccountDemandUsage))  END AS demandDeviation1\r\n\t\t\t,(avgrg.avgAccountDemandUsage) AS Y_AVG_DemandUsage\r\n\t\t\t,(avgrg.avgAccountEnergyUsage) AS Y_AVG_ActualUsage\r\n\t\t\t,avgrg.avgBillingPeriodDays AS Y_AVG_BDs\r\n\t\t\t,avgrg.avgAdjusted AS Y_AVG_AdjustedUsage\r\n\t\t\t,avgrg.AorE AS Y_AE\r\n\t\t\t,avgrg.avgHDD AS Y_AVG_HDD\r\n\t\t\t,avgrg.avgCDD AS Y_AVG_CDD\r\n\t\t\t,CASE avgrg.avgAdjusted WHEN 0 THEN 0 ELSE (((CAST(C.AccountEnergyUsage AS FLOAT)*30/CAST(C.BillingPeriodDays AS FLOAT)) - avgrg.avgAdjusted)*100/avgrg.avgAdjusted) END AS usageDeviation2\r\n\t\t\t,CASE ISNULL(avgrg.avgAccountDemandUsage, 0) WHEN 0 THEN 0 ELSE ((CAST(C.AccountDemandUsage AS FLOAT) - avgrg.avgAccountDemandUsage)*100/avgrg.avgAccountDemandUsage) END AS demandDeviation2\r\n\t\t\t,CASE C.UtilityCompany+C.EnergyType WHEN 'NYPAELE' THEN '1' WHEN 'NGrid WestGAS' THEN '2'  WHEN 'Con EdisonGAS' THEN '3' WHEN 'Con EdisonSTM' THEN '4' ELSE '5' END AS sortorder\r\n\t\tFROM (SELECT DISTINCT\r\n\t\t\t\tutri.Description AS DeliveryTariffRate\r\n\t\t\t\t,AR.BillingPeriodDays\r\n\t\t\t\t,@PublishedBillingPeriod AS PublishedBillingPeriod\r\n\t\t\t\t,AR.FiscalYear\r\n\t\t\t\t,AR.FiscalYear AS CurrentFiscalYear\r\n\t\t\t\t,SUBSTRING(dbo.CreatePreviousPeriod(AR.FiscalYear + '01', 'Y'), 1, 4) AS PriorFiscalYear\r\n\t\t\t\t,AR.CurrentAccountNumber\r\n\t\t\t\t,AR.OriginalAccountNumber\r\n\t\t\t\t,AR.EnergyType\r\n\t\t\t\t,AR.UtilityCompany\r\n\t\t\t\t,f.OecFacilityNumber\r\n\t\t\t\t,f.FacilityName\r\n\t\t\t\t,f.Address1\r\n\t\t\t\t,f.Borough\r\n\t\t\t\t,f.Zipcode\r\n\t\t\t\t,AR.RevisedBilledAmount\r\n\t\t\t\t,AR.AccountDemandUsage\r\n\t\t\t\t,AR.AccountEnergyUsage\r\n\t\t\t\t,AR.ActualOrEstimated\r\n\t\t\t\t,ddb.BaseCoolingDegreeDays\r\n\t\t\t\t,ddb.BaseHeatingDegreeDays\r\n\t\t\t\t,utri.EnergyUnit\r\n\t\t\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS AC\r\n\t\t\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS AR ON AR.AgencyCodeOEC = AC.AgencyCodeOEC\r\n\t\t\t\tINNER JOIN Factors.DegreeDayBase AS ddb ON ddb.BillingPeriod = AR.BillingPeriod\r\n\t\t\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = AR.FacilitySeqid\r\n\t\t\t\tINNER JOIN Billing.UtilityTariffRateInformation AS utri ON utri.UtilityTariffRateInformationSeqid = AR.UtilityTariffRateInformationSeqid\r\n\t\t\tWHERE AR.EffectiveStartPeriod <= @PublishedBillingPeriod AND AR.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\tAND AR.BillingPeriod IN (@CurrentBillingPeriod)\tAND AR.BillingMonth = @MonthName AND AR.BillingPeriodDays<>0\r\n\t\t\t\t) AS C\r\n\t\t\tINNER JOIN (SELECT DISTINCT\r\n\t\t\t\tAR.DeliveryTariffRate\r\n\t\t\t\t,AR.BillingPeriodDays\r\n\t\t\t\t,@PublishedBillingPeriod AS PublishedBillingPeriod\r\n\t\t\t\t,AR.FiscalYear\r\n\t\t\t\t,AR.FiscalYear AS CurrentFiscalYear\r\n\t\t\t\t,SUBSTRING(dbo.CreatePreviousPeriod(AR.FiscalYear + '01', 'Y'), 1, 4) AS PriorFiscalYear\r\n\t\t\t\t,AR.CurrentAccountNumber\r\n\t\t\t\t,AR.OriginalAccountNumber\r\n\t\t\t\t,AR.EnergyType\r\n\t\t\t\t,AR.UtilityCompany\r\n\t\t\t\t,f.OecFacilityNumber\r\n\t\t\t\t,f.FacilityName\r\n\t\t\t\t,f.Address1\r\n\t\t\t\t,f.Borough\r\n\t\t\t\t,f.Zipcode\r\n\t\t\t\t,AR.AccountEnergyUsage\r\n\t\t\t\t,AR.AccountDemandUsage\r\n\t\t\t\t,AR.ActualOrEstimated\r\n\t\t\t\t,ddb.BaseCoolingDegreeDays\r\n\t\t\t\t,ddb.BaseHeatingDegreeDays\r\n\t\t\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS AC\r\n\t\t\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS AR ON AR.AgencyCodeOEC = AC.AgencyCodeOEC\r\n\t\t\t\tINNER JOIN Factors.DegreeDayBase AS ddb ON ddb.BillingPeriod = AR.BillingPeriod\r\n\t\t\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = AR.FacilitySeqid\r\n\t\t\tWHERE AR.EffectiveStartPeriod <= @PublishedBillingPeriod AND AR.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\tAND AR.BillingPeriod IN (@BillingPeriodOneYearAgo) AND AR.BillingMonth = @MonthName\r\n\t\t\t\tAND AR.BillingPeriodDays <> 0) AS proir ON C.CurrentAccountNumber = proir.CurrentAccountNumber\r\n\t\t\tINNER JOIN (SELECT AR.CurrentAccountNumber\r\n\t\t\t\t\t,AVG(CAST(AR.AccountDemandUsage AS FLOAT)) AS avgAccountDemandUsage\r\n\t\t\t\t\t,AVG(CAST(AR.AccountEnergyUsage AS FLOAT)) AS avgAccountEnergyUsage\r\n\t\t\t\t\t,AVG(CAST(AR.BillingPeriodDays AS FLOAT)) AS avgBillingPeriodDays\r\n\t\t\t\t\t,AVG(CAST(AR.AccountEnergyUsage AS FLOAT)*CAST(30 AS FLOAT)/CAST(AR.BillingPeriodDays AS FLOAT)) AS avgAdjusted\r\n\t\t\t\t\t,AVG(CAST(ddb.BaseCoolingDegreeDays AS FLOAT)) AS avgCDD\r\n\t\t\t\t\t,AVG(CAST(ddb.BaseHeatingDegreeDays AS FLOAT)) AS avgHDD\t\r\n\t\t\t\t\t,CASE (SUM(CASE AR.ActualOrEstimated WHEN 'ACT' THEN 0 ELSE 1 END)) WHEN '0' THEN 'ACT' ELSE 'EST' END AS AorE\t\r\n\t\t\t\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS AC\r\n\t\t\t\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS AR ON AR.AgencyCodeOEC = AC.AgencyCodeOEC\r\n\t\t\t\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = AR.FacilitySeqid\r\n\t\t\t\t\tINNER JOIN Factors.DegreeDayBase AS ddb ON ddb.BillingPeriod = AR.BillingPeriod\r\n\t\t\t\tWHERE AR.EffectiveStartPeriod <= @PublishedBillingPeriod AND AR.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\t\tAND AR.BillingPeriod IN (@BillingPeriodOneYearAgo ,@BillingPeriodTwoYearsAgo, @BillingPeriodThreeYearsAgo)\r\n\t\t\t\t\tAND AR.BillingMonth = @MonthName AND AR.BillingPeriodDays <> 0 AND CAST(AR.BillingPeriodDays AS FLOAT) <> 0\r\n\t\t\t\tGROUP BY  AR.CurrentAccountNumber) AS avgrg  ON C.CurrentAccountNumber = avgrg.CurrentAccountNumber\r\n\t\t\t\tWHERE C.BillingPeriodDays <> 0 AND proir.BillingPeriodDays <> 0\r\n\t\t\t) AS finalresultunsorted\r\n\t\tWHERE finalresultunsorted.usageDeviation1 >= @MinDeviation OR finalresultunsorted.demandDeviation1 >= @MinDemandDeviation\r\n\t\tORDER BY finalresultunsorted.sortorder, finalresultunsorted.CY_ActualUsage DESC;\r\nEND;"
        }
      ]
    }
  ]
}
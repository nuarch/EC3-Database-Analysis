{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_CorrectPartialCancelattionFromPriorPeriodMergedBill",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_CorrectPartialCancelattionFromPriorPeriodMergedBill",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to correct partial cancellations from prior period merged bills within a billing system. It identifies bills that were merged in previous billing periods and subsequently partially canceled in later periods. The procedure then processes these records to adjust the billing details accordingly."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including joining tables, handling temporary tables, and performing insert and delete operations. The complexity arises from the need to accurately identify and process specific billing records based on multiple conditions."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@UploadAccountBillingDetailSeqid dbo.seqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to identify the specific billing detail record that needs correction."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ExcludeReason varchar(300)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter provides a reason for excluding certain records from processing, which is logged in the database."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@authenticatedID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the ID of the authenticated user performing the operation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode int OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is an output parameter intended to return the status of the procedure execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization and Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by declaring a variable "
                },
                {
                  "type": "text",
                  "text": "@IsPartialCancelattionFromPriorPeriodMergedBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and checks for the existence of temporary tables "
                },
                {
                  "type": "text",
                  "text": "#abacg",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "#rebill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", dropping them if they exist."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Selection and Temporary Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It selects records from "
                        },
                        {
                          "type": "text",
                          "text": "CrisNationalGridWest.UploadAccountBillingDetail",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where the transaction code is 'BC' and matches the provided "
                        },
                        {
                          "type": "text",
                          "text": "@UploadAccountBillingDetailSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The selected data is inserted into a temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#abacg",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determine Current Billing Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The current billing period is extracted from the "
                },
                {
                  "type": "text",
                  "text": "#abacg",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Archive Data Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure joins "
                        },
                        {
                          "type": "text",
                          "text": "#abacg",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with "
                        },
                        {
                          "type": "text",
                          "text": "CrisNationalGridWest.ARCHIVEUploadAccountBillingDetail",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to select relevant archived billing details where the transaction code is 'BI'."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The results are stored in another temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#rebill",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Deletion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It deletes records from "
                        },
                        {
                          "type": "text",
                          "text": "#rebill",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " that match the account number and billing dates in "
                        },
                        {
                          "type": "text",
                          "text": "#abacg",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure inserts corrected billing details back into "
                        },
                        {
                          "type": "text",
                          "text": "CrisNationalGridWest.UploadAccountBillingDetail",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", marking them as partial rebills from prior period merged billing and using the current billing period."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Finally, the procedure drops the temporary tables "
                },
                {
                  "type": "text",
                  "text": "#abacg",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "#rebill",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of temporary tables can impact performance, especially if the data volume is large. Indexing these tables could improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Conditions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins and conditions, which could be optimized for better performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not include explicit transaction handling, which might lead to concurrency issues if multiple instances run simultaneously."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the data relationships and conditions are correct. Any discrepancies in the data could lead to incorrect billing adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no explicit error handling or transaction management, which could result in partial updates or data inconsistencies if an error occurs during execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the data grows, the performance of the procedure might degrade due to the lack of indexing on temporary tables and complex joins."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Typographical Error",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure name and variable "
                },
                {
                  "type": "text",
                  "text": "@IsPartialCancelattionFromPriorPeriodMergedBilling",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " contain a typographical error (\"Cancelattion\" instead of \"Cancellation\"), which could lead to confusion or errors in future maintenance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_CorrectPartialCancelattionFromPriorPeriodMergedBill]\n\t\t@UploadAccountBillingDetailSeqid dbo.seqid,\r\n\t\t@ExcludeReason varchar(300),\r\n\t\t@authenticatedID int,\r\n\t\t@StatusCode int  OUTPUT      \r\n AS \r\n BEGIN\r\n\t\t--********************************************************************************\r\n\t\t--\tAuthor: Peter Heller\r\n\t\t--\tDescription: Correct Partial Cancelattion From Prior Period Merged Bills\r\n\t\t--\t\t\t\t [CrisNationalGridWest].[usp_CRIS_CorrectPartialCancelattionFromPriorPeriodMergedBill]\r\n\t\t--\r\n\t\t--\t\t--  Validation rules\r\n\t\t--\t\t\t\t1. search and identify bills that were merged in prior billing periods and susequently were partially canceled in a later period.\r\n\t\t--\t\t\t\t2. The idea is to determine the period that the merged bill was done and get all of the bills that were merged.\r\n\t\t--\t\t\t\t3. Remove all of the bills that are being canceled, which leaves that remaining billing for the period after the removal\r\n\t\t--\t\t\t\r\n\t\t--\t\t\tThis is work in progress you can build on it if you would like\r\n\t\t--\r\n\t\t--\tLog: \r\n\t\t--\t\t07/25/2011\tPAH\tCreate\r\n\t\t--********************************************************************************\r\n --- temp table exists\r\n declare @IsPartialCancelattionFromPriorPeriodMergedBilling varchar(1) = 'Y'\r\nif (OBJECT_ID('tempdb..#abacg') is not null) drop table #abacg\r\nif (OBJECT_ID('tempdb..#rebill') is not null) drop table #rebill\r\n\r\nSELECT \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.UploadAccountBillingDetailSeqid, \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.TransactionCode, \r\n\t\tBilling.AccountBillingAdjustmentCrisGas.BillingPeriod AS abacgLastPeriodModified, CrisNationalGridWest.UploadAccountBillingDetail.BillingPeriod, \r\n\t\tBilling.AccountBillingAdjustmentCrisGas.IsSpannedBilling AS abacgIsSpannedBilling,Billing.AccountBillingAdjustmentCrisGas.BillRenderDate AS abacgBillRenderDate,\r\n\t\tBilling.AccountBillingAdjustmentCrisGas.SpannedFromDate,Billing.AccountBillingAdjustmentCrisGas.SpannedToDate,\r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingPeriodRevision, CrisNationalGridWest.UploadAccountBillingDetail.FirstBillingPeriodCanceled, \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.IsSpannedBilling, CrisNationalGridWest.UploadAccountBillingDetail.AccountNumber, \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingFromDate, CrisNationalGridWest.UploadAccountBillingDetail.BillingToDate, \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillRenderDate, Billing.AccountBillingAdjustmentCrisGas.OriginalAccountNumber, \r\n\t\tBilling.AccountBillingAdjustmentCrisGas.FromDate, Billing.AccountBillingAdjustmentCrisGas.ToDate \r\ninto\t#abacg                      \r\nFROM     \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail INNER JOIN\r\n\t\tBilling.AccountBillingAdjustmentCrisGas ON \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.AccountNumber = Billing.AccountBillingAdjustmentCrisGas.OriginalAccountNumber AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingPeriodRevision = Billing.AccountBillingAdjustmentCrisGas.BillingPeriodRevision AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingToDate = Billing.AccountBillingAdjustmentCrisGas.ToDate AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.BillingFromDate > Billing.AccountBillingAdjustmentCrisGas.FromDate\r\nWHERE \r\n\t\t(CrisNationalGridWest.UploadAccountBillingDetail.TransactionCode = N'BC') and \r\n\t\tCrisNationalGridWest.UploadAccountBillingDetail.UploadAccountBillingDetailSeqid = @UploadAccountBillingDetailSeqid\r\n--\t\t\r\nselect @@ROWCOUNT\r\n--\r\ndeclare @CurrentBillingPeriod varchar(6)\r\nselect @CurrentBillingPeriod = BillingPeriod from #abacg\r\n--\r\n                                        \r\nselect\tCrisNationalGridWest.ARCHIVEUploadAccountBillingDetail.*\r\ninto\t#rebill\r\nfrom \r\n\t\t#abacg inner join CrisNationalGridWest.ARCHIVEUploadAccountBillingDetail on\r\n\t\t#abacg.AccountNumber = CrisNationalGridWest.ARCHIVEUploadAccountBillingDetail.AccountNumber and\r\n\t\t#abacg.abacgLastPeriodModified = CrisNationalGridWest.ARCHIVEUploadAccountBillingDetail.BillingPeriod and\r\n\t\tCrisNationalGridWest.ARCHIVEUploadAccountBillingDetail.TransactionCode = 'BI'\r\n\r\nDELETE \r\nfrom\t\t[#rebill]\r\nFROM \r\n\t\t\t[#rebill] INNER JOIN\r\n\t\t\t[#abacg] ON [#rebill].AccountNumber = [#abacg].AccountNumber AND [#rebill].BillingFromDate = [#abacg].BillingFromDate AND \r\n\t\t\t[#rebill].BillingToDate = [#abacg].BillingToDate\r\n--\r\nINSERT INTO CrisNationalGridWest.UploadAccountBillingDetail\r\n\t\t\t(IsPartialRebillFromPriorPeriodMergedBilling,UtilityCompanySeqid, AccountInvoiceBillingGroup, BillingPeriod, BillingPeriodRevision, CalculatedBillingPeriodRevision, FirstBillingPeriodCanceled, \r\n\t\t\tFirstNewCRISBillingPeriodRevision, IsSpannedBilling, NumberOfBillingPeriod, IsCurrentPeriodExchange, AccountNumber, MeterReadWorkDay, \r\n\t\t\tUtilityServiceAccountName, UtilityServiceAddress, Borough, Zipcode, State, ActivityCode, ActivityDate, ActivityTime, ActivityDateTime, \r\n\t\t\tTransactionCode, SpecialLedgerAccountNUmber, SpecialLedgerWorkDay, GasRateCode, BillFrequency, EstimatedOrActualBillingCode, \r\n\t\t\tGasChargeAmount, BillingFromDate, BillingToDate, BillRenderDate, BillingDays, BilledCCF, ThermFactor, BilledTherms, NumberOfMeters, BillType, \r\n\t\t\tCommodityChargeAmount, DeliveryChargeAmount, MTACommodityTax, MTADeliveryTax, SalesTax, SystemBenefitsCharge, \r\n\t\t\tRetailDecouplingMechanismCharge, DeliveryRateSurcharge, RealTimeNormalizationCharge, LatePaymentCharge, PaperBillCharge, \r\n\t\t\tCommodityCostFactor, MTACommodityFactor, MTADeliveryFactor, SalesTaxFactor, SystemBenefitChargeFactor, RetailDecouplingMechanismFactor, \r\n\t\t\tDeliveryRateSurchargeFactor, RealTimeNormalizationFactor, LatePaymentFactor, CurrentAccountBalance, AccountArrears, TerminationBalance, \r\n\t\t\tTotalPaymentsPosted, DateLastPayment, MiscellaneousChargeAmount, MiscellaneousChargeType, ExcludeAndReview, \r\n\t\t\tIsCancelForCurrentTransaction, IsCancelForPreviousTransaction, IsTransactionCancelFound,  \r\n\t\t\tExcludeReason, FireAuditTrigger, Notes, AuthenticatedUserID, DateAdded, LastUpdate)\r\nSELECT \r\n\t\t\t'Y',UtilityCompanySeqid, AccountInvoiceBillingGroup, @CurrentBillingPeriod, --BillingPeriod, \r\n\t\t\tBillingPeriodRevision, CalculatedBillingPeriodRevision, FirstBillingPeriodCanceled, \r\n\t\t\tFirstNewCRISBillingPeriodRevision, IsSpannedBilling, NumberOfBillingPeriod, IsCurrentPeriodExchange, AccountNumber, MeterReadWorkDay, \r\n\t\t\tUtilityServiceAccountName, UtilityServiceAddress, Borough, Zipcode, State, ActivityCode, ActivityDate, ActivityTime, null, --ActivityDateTime, \r\n\t\t\tTransactionCode, SpecialLedgerAccountNUmber, SpecialLedgerWorkDay, GasRateCode, BillFrequency, EstimatedOrActualBillingCode, \r\n\t\t\tGasChargeAmount, BillingFromDate, BillingToDate, BillRenderDate, BillingDays, BilledCCF, ThermFactor, BilledTherms, NumberOfMeters, BillType, \r\n\t\t\tCommodityChargeAmount, DeliveryChargeAmount, MTACommodityTax, MTADeliveryTax, SalesTax, SystemBenefitsCharge, \r\n\t\t\tRetailDecouplingMechanismCharge, DeliveryRateSurcharge, RealTimeNormalizationCharge, LatePaymentCharge, PaperBillCharge, \r\n\t\t\tCommodityCostFactor, MTACommodityFactor, MTADeliveryFactor, SalesTaxFactor, SystemBenefitChargeFactor, RetailDecouplingMechanismFactor, \r\n\t\t\tDeliveryRateSurchargeFactor, RealTimeNormalizationFactor, LatePaymentFactor, CurrentAccountBalance, AccountArrears, TerminationBalance, \r\n\t\t\tTotalPaymentsPosted, DateLastPayment, MiscellaneousChargeAmount, MiscellaneousChargeType, ExcludeAndReview, \r\n\t\t\tIsCancelForCurrentTransaction, IsCancelForPreviousTransaction, IsTransactionCancelFound, \r\n\t\t\t@ExcludeReason, FireAuditTrigger, @ExcludeReason, --Notes, \r\n\t\t\tAuthenticatedUserID, getdate(), getdate()\r\nFROM [#rebill]\r\n--\r\n --- temp table exists\r\nif (OBJECT_ID('tempdb..#abacg') is not null) drop table #abacg\r\nif (OBJECT_ID('tempdb..#rebill') is not null) drop table #rebill\r\n\r\nEND"
        }
      ]
    }
  ]
}
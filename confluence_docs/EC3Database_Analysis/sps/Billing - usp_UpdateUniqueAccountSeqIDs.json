{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_UpdateUniqueAccountSeqIDs",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_UpdateUniqueAccountSeqIDs",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to update unique sequence identifiers ("
        },
        {
          "type": "text",
          "text": "UniqueSeqId",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ") for accounts in the "
        },
        {
          "type": "text",
          "text": "Billing.Account",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. It processes accounts that currently lack a "
        },
        {
          "type": "text",
          "text": "UniqueSeqId",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and assigns them based on certain conditions. The procedure uses a temporary table to manage and update account information, ensuring that each account is processed according to its status and the number of records associated with it. The procedure also handles cases where manual intervention is required if certain conditions are not met."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including data insertion into a temporary table, several conditional updates, and error handling. The complexity arises from the need to handle different scenarios based on account statuses and record counts, as well as the potential for manual intervention if issues are detected."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to return the status of the procedure execution. It is set to "
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " if there are accounts that could not be processed automatically, indicating that manual review is necessary."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A temporary table "
                },
                {
                  "type": "text",
                  "text": "@UniqueAccountTEMP",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is created to store account data that needs processing. This table includes fields for sequence IDs, account numbers, processing status, and other relevant account details."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Accounts without a "
                },
                {
                  "type": "text",
                  "text": "UniqueSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " are inserted into the temporary table. These accounts are identified by checking if their "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " exists in the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table without a corresponding "
                },
                {
                  "type": "text",
                  "text": "UniqueAccountSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Record Count Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates the "
                },
                {
                  "type": "text",
                  "text": "recordCountINaccount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " field in the temporary table to reflect the number of records associated with each "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Unique ID Assignment",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure attempts to assign "
                },
                {
                  "type": "text",
                  "text": "UniqueSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " values from the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table to the temporary table based on matching "
                },
                {
                  "type": "text",
                  "text": "AccountSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and certain conditions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Processing Status Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Accounts that successfully receive a "
                },
                {
                  "type": "text",
                  "text": "UniqueSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " are marked as processed ("
                },
                {
                  "type": "text",
                  "text": "isPorcessed = 'Y'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ")."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Direct Assignment for Single Status Accounts",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Accounts with a single status (where "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " equals "
                },
                {
                  "type": "text",
                  "text": "OriginalAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "recordCountINaccount = 1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") are directly assigned their "
                },
                {
                  "type": "text",
                  "text": "AccountSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " as "
                },
                {
                  "type": "text",
                  "text": "UniqueSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Handling Two Status Accounts",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Accounts with two statuses are processed based on whether their status is 'AX'. Different notes are added to indicate the processing logic applied."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Manual Review Requirement",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Accounts with more than two records or unresolved issues are flagged for manual review, and a message is raised to indicate which accounts need attention."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If all accounts are processed successfully, the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is updated with the new "
                },
                {
                  "type": "text",
                  "text": "UniqueSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "isCurrentAccount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " values from the temporary table."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table can be efficient for managing intermediate data, but it may consume memory and resources, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Conditional Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Multiple conditional updates and checks can increase execution time, particularly if the dataset is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensuring that the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is properly indexed on fields like "
                },
                {
                  "type": "text",
                  "text": "AccountSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Manual Intervention",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure requires manual intervention for accounts that cannot be processed automatically, which can be time-consuming and error-prone."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure raises an error if unprocessed accounts are detected, but it does not provide a mechanism for resolving these issues programmatically."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure run simultaneously, there could be race conditions or data integrity issues unless proper locking mechanisms are in place."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the logic for assigning "
                },
                {
                  "type": "text",
                  "text": "UniqueSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is correct. Any errors in this logic could lead to incorrect data updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the number of accounts grows, the procedure may need optimization to handle larger datasets efficiently."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Billing].[usp_UpdateUniqueAccountSeqIDs] @StatusCode INT  OUTPUT\n AS \r\n \r\n BEGIN\r\n\t\t--**************************************************************************************\r\n\t\t--* Description:\tUpdates UniqueIDs\r\n\t\t--*\r\n\t\t--* AUTHOR:       Zafer Durmaz\t\r\n\t\t--* Created On:   2015-12-01\r\n\t\t--**************************************************************************************\r\n\t\t--* Date       Tech Description of Change\r\n\t\t--* ---------- ---\t-------------------------------------------------------------\r\n\t\t--* 04/22/2010 zd  First Version \r\n\t\t--* 09/20/2016 zd\tupdating to remove mapping table\r\n\t\t--***************************************************************************************\r\n\r\n\r\n-- Create temp table to process initial unique ids\r\nDECLARE @UniqueAccountTEMP TABLE\r\n(\r\n\t[UniqueSeqId] [INT] NULL,\r\n\t[AccountSeqid] [dbo].[seqid] NOT NULL,\r\n\t[CurrentAccountNumber] [dbo].[acctnum] NOT NULL,\r\n\t[OriginalAccountNumber] [dbo].[acctnum] NOT NULL,\r\n\t[isPorcessed] [VARCHAR](1) NULL,\r\n\t[isCurrentAccount] [VARCHAR](1) NULL,\r\n\t[NumofRecords] [INT] NULL,\r\n\t[AccountEffectiveTurnOn] [dbo].[yyyymmdd] NULL,\r\n\t[AccountEffectiveTurnOff] [dbo].[yyyymmdd] NULL,\r\n\t[FacilityAccount] [dbo].[seqid] NULL,\r\n\t[AccountStatus] [dbo].[AccountPreviousStatus] NULL,\r\n\t[UtilityServiceAccountName] [dbo].[UtilityServiceAccountName] NULL,\r\n\t[UtilityServiceAddress] [dbo].[addr] NULL,\r\n\t--[minBillingPeriod] BillingPeriod NULL,\r\n\t--[maxBillingPeriod] BillingPeriod NULL,\r\n\t[recordCountINaccount] [INT] NULL,\r\n\t--[recordCountINaccountBilling] [INT] NULL,\r\n\tnote VARCHAR(250) NULL  \r\n) \r\n\r\n-- all accounts with no uniqueseqid and related account (with currentaccountnumber)\r\nINSERT  INTO @UniqueAccountTEMP\r\n        ( UniqueSeqId\r\n        , AccountSeqid\r\n        , CurrentAccountNumber\r\n        , OriginalAccountNumber\r\n        , isPorcessed\r\n        , isCurrentAccount\r\n        --, NumofRecords\r\n        , AccountEffectiveTurnOn\r\n        , AccountEffectiveTurnOff\r\n        , FacilityAccount\r\n        , AccountStatus\r\n        , UtilityServiceAccountName\r\n        , UtilityServiceAddress\r\n        )\r\n        SELECT  0 AS UniqueSeqId\r\n        ,       a.AccountSeqid\r\n        ,       a.CurrentAccountNumber\r\n        ,       a.OriginalAccountNumber\r\n        ,       'N' AS isPorcessed\r\n        ,       'N' AS isCurrentAccount\r\n        --,       0 AS NumofRecords\r\n        ,       a.AccountEffectiveTurnOn\r\n        ,       a.AccountEffectiveTurnOff\r\n        ,       a.FacilityAccount\r\n        ,       a.AccountStatus\r\n        ,       a.UtilityServiceAccountName\r\n        ,       a.UtilityServiceAddress\r\n        FROM Billing.Account AS a\r\n\t\tWHERE a.CurrentAccountNumber \r\n\t\t\tIN (SELECT aa.CurrentAccountNumber FROM Billing.Account AS aa WHERE aa.UniqueAccountSeqid IS NULL )\r\n\r\n----------------------------------------------------------------------------------------------\r\n-- update recordsCountINaccount\r\n\r\nUPDATE uat \r\nSET recordCountINaccount = cnt.accountcount\r\nFROM\r\n(\r\n\tSELECT CurrentAccountNumber , COUNT(*) accountcount\r\n\tFROM @UniqueAccountTEMP AS a\r\n\tGROUP BY CurrentAccountNumber\r\n) cnt , @UniqueAccountTEMP uat\r\nWHERE cnt.CurrentAccountNumber = uat.CurrentAccountNumber\r\n\r\n----------------------------------------------------------------------------------------------\r\n-- update uniq id from map table\r\n\r\nUPDATE uat \r\nSET UniqueSeqId = uam.UniqueAccountSeqid\r\nFROM Billing.Account AS uam , @UniqueAccountTEMP uat\r\nWHERE uat.AccountSeqid=uam.AccountSeqid\r\nAND uat.CurrentAccountNumber IN ( SELECT aa.CurrentAccountNumber FROM Billing.Account AS aa WHERE aa.UniqueAccountSeqid IS NULL )\r\nAND recordCountINaccount > 1\r\n\r\n----------------------------------------------------------------------------------------------\r\n-- update isprocessed ='Y' for all accounts with uniqseqid\r\nUPDATE uat\r\nSET \r\nisPorcessed = 'Y'\r\nFROM @UniqueAccountTEMP uat, Billing.Account AS uam\r\nWHERE uat.UniqueSeqId = uam.UniqueAccountSeqid\r\n\r\n--SELECT * FROM @UniqueAccountTEMP AS uat\r\n----------------------------------------------------------------------------------------------\r\n\r\n-- UPDATE the accountseqID to the uniqueseqid straight\r\n-- these are the accounts with single status \r\n-- all accounts with single line of records ( CurrentAccountNumber=OriginalAccountNumber )\r\n\r\nUPDATE uat\r\nSET \r\nUniqueSeqId = AccountSeqid , \r\nisCurrentAccount = 'Y', \r\nisPorcessed = 'Y',\r\nNOTe = '#1# Accounts with single status / Direct insert / CurrentAccountNumber = OriginalAccountNumber'\r\nFROM @UniqueAccountTEMP uat\r\nWHERE CurrentAccountNumber = OriginalAccountNumber \r\nAND recordCountINaccount = 1\r\nAND isPorcessed = 'N'\r\n\r\n----------------------------------------------------------------------------------------------\r\n\r\n-- UPDATE the accountseqID to the uniqueseqid straight\r\n-- these are the accounts with 2 statuses but the status of record without uniqueseqid is not AX\r\n\r\nUPDATE uat\r\nSET \r\nUniqueSeqId = AccountSeqid , \r\nisCurrentAccount = 'Y', \r\nisPorcessed = 'Y',\r\nNOTe = '#2# Accounts with 2 statuses - status of new data is not AX'\r\nFROM @UniqueAccountTEMP AS uat\r\nWHERE CurrentAccountNumber = OriginalAccountNumber \r\nAND recordCountINaccount = 2\r\nAND AccountStatus <> 'AX'\r\nAND isPorcessed = 'N'\r\n----------------------------------------------------------------------------------------------\r\n-- UPDATE the accountseqID to the uniqueseqid straight\r\n-- these are the accounts with 2 statuses but the status of record without uniqueseqid is not AX\r\n\r\nUPDATE uat\r\nSET \r\n--we do not need to update this here because we already made an update for this before, when we do the update for uniqqseqid , \r\nisCurrentAccount = 'Y', \r\nisPorcessed = 'Y',\r\nNOTe = '#3# Accounts with 2 statuses / status of new data is AX / update uniqid with relatives id'\r\nFROM @UniqueAccountTEMP AS uat\r\nWHERE CurrentAccountNumber = OriginalAccountNumber \r\nAND recordCountINaccount = 2\r\nAND AccountStatus = 'AX'\r\nAND isPorcessed = 'N'\r\n----------------------------------------------------------------------------------------------\r\n-- this is the data to be processed manually, \r\n\r\nUPDATE uat\r\nSET \r\n--UniqueSeqId = AccountSeqid , \r\nisCurrentAccount = NULL , \r\nisPorcessed = 'N',\r\nNOTe = '#4# This account has to be reviewd and inserted manually'\r\nFROM @UniqueAccountTEMP uat\r\nWHERE CurrentAccountNumber = OriginalAccountNumber \r\nAND recordCountINaccount > 2\r\nAND isPorcessed = 'N'\r\n\r\n-------------------------------------------------------------------------------------------------------\r\n\t\r\nDECLARE @StringAccountList VARCHAR(500)\r\n\r\nSELECT @StringAccountList = STUFF( (SELECT ' , ' + CurrentAccountNumber FROM @UniqueAccountTEMP AS uat WHERE uat.isPorcessed='N' FOR XML PATH('') ), 1, 1, '')\r\n\r\n\r\n-- Final step, inserting the data to map table if there is no issues\r\n-- if there are issues and need to add mapping data manually, use can use below code\r\n--\tINSERT INTO dbo.UniqueAccountMAP(UniqueSeqId, AccountSeqid, isCurrentAccount)\r\n--\tVALUES (@AccountSeqID,@UniqueSeqID,@isCurrentAccount)\r\n\r\nDECLARE @msg VARCHAR(600) = 'we can not process some account(s), please inspect these accounts manually: '+@StringAccountList\r\nIF ( EXISTS ( SELECT * FROM @UniqueAccountTEMP AS uat WHERE uat.isPorcessed='N' ))\r\n\tBEGIN\r\n\t\tRAISERROR (@msg, 12, 1 ) \r\n\t\tSET @StatusCode = 1\r\n\t\tRETURN\r\n\tEND\r\nELSE\r\n\tBEGIN \r\n\t\tUPDATE Billing.account SET UniqueAccountSeqid = \tt.UniqueSeqId\t\t, IsCurrentRecord = isCurrentAccount\r\n\t\tFROM @UniqueAccountTEMP t WHERE t.AccountSeqid = Billing.Account.AccountSeqid\r\n\tEND \r\n\r\n\r\n\r\nEND"
        }
      ]
    }
  ]
}
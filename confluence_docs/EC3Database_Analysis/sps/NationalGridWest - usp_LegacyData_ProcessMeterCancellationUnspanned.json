{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "NationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_LegacyData_ProcessMeterCancellationUnspanned",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_LegacyData_ProcessMeterCancellationUnspanned",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process meter cancellation data for a utility company. It handles legacy data by inserting it into a temporary table, performing calculations and updates on the data, and then inserting the processed data into permanent tables for further use. The procedure also includes steps to handle multi-meter accounts and summarize the cancellation data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this stored procedure is medium. It involves multiple steps, including data transformation, conditional logic, and interaction with several database objects. The use of temporary tables, multiple updates, and inserts, along with the invocation of other stored procedures and functions, contributes to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod varchar(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the data is being processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@authenticatedID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ID of the authenticated user executing the procedure, used for auditing purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingCycle varchar(1)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing cycle, although it is not directly used in the procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A utility ID is set to '2', which seems to be a constant for this procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion into Temporary Table",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Data is selected from "
                        },
                        {
                          "type": "text",
                          "text": "UploadLegacyNationalGridWestDataPreload",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and inserted into a temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#preloadData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The selection includes various transformations using custom functions like "
                        },
                        {
                          "type": "text",
                          "text": "KeyspanConvertLegacyAccountToEC3Number",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "MMDDYKeyspanToYYYYMMDD",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "ConvertOverpunch",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "CCF Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates are made to calculate billing period revisions and the first period canceled using the "
                        },
                        {
                          "type": "text",
                          "text": "DetermineBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " function."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The number of billing periods ("
                        },
                        {
                          "type": "text",
                          "text": "DeltaNumberOfPeriods",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ") is calculated using "
                        },
                        {
                          "type": "text",
                          "text": "CalculateDeltaBillingPeriods",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Records with CCF = 0 and non-positive amounts are deleted unless they are part of a multi-meter account."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "CCF Adjustment",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Adjustments are made to the CCF based on meter readings, considering scenarios where the meter reading might have reset."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion into Permanent Table",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Processed data is inserted into "
                        },
                        {
                          "type": "text",
                          "text": "UploadLegacyKeyspanWestMeterCancellation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Multi-Meter Account Proration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure "
                        },
                        {
                          "type": "text",
                          "text": "usp_LegacyData_ProrateAccountBillingUsageToMeterBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is executed to handle multi-meter accounts."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Summary Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A summary of the processed data is inserted into "
                        },
                        {
                          "type": "text",
                          "text": "UploadLegacyKeyspanWestMeterCancellationSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#preloadData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is dropped."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table can be efficient for intermediate data processing but may lead to increased I/O if the data volume is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies heavily on user-defined functions, which can impact performance if not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure processes data in batches, which is generally good for performance, but the complexity of the logic may still lead to longer execution times."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs multiple updates and deletes, which could lead to data integrity issues if not carefully managed, especially with complex conditions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is no explicit error handling within the procedure, which could lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the performance of the procedure may degrade, particularly due to the use of temporary tables and multiple updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Dependencies",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on several user-defined functions, which need to be thoroughly tested and optimized to ensure they do not become bottlenecks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not include any locking mechanisms, which could lead to concurrency issues if multiple instances are run simultaneously."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE PROCEDURE [NationalGridWest].[usp_LegacyData_ProcessMeterCancellationUnspanned]\r\n\t@BillingPeriod varchar(6),\r\n\t@authenticatedID int,\r\n\t@BillingCycle varchar(1)\r\nAS\r\nBEGIN\r\n\r\ndeclare @UtilityID varchar(1)\r\nset @UtilityID = '2'\r\n\r\n/*************************************\r\n1. Insert data into the temp table\t\r\n*******************************/\r\n\r\n-- store data into temp table. If record's ccf is 0, it is possible that the record is part of original record or rebill with account level ccf > 0\r\nselect \r\n\t[BillingPeriod] AS [BillingPeriod]\r\n\t,'            ' as [BillingPeriodRevision]\r\n\t,'            ' as [FirstPeriodCanceled]\r\n\t,null as [DeltaNumberOfPeriods]\r\n\t,dbo.KeyspanConvertLegacyAccountToEC3Number(dbo.KeyspanConvertCancellationAccountNumber([KeyspanOldAccountNumber],BilledAmount)) as EC3AccountNumber \r\n\t,MeterNumber AS [MeterNumber]\r\n\t,dbo.MMDDYKeyspanToYYYYMMDD(FromDateMMDDY) as FromDate\r\n\t,dbo.MMDDYKeyspanToYYYYMMDD(ToDateMMDDY) as ToDate\r\n\t,null as [RecordType]\r\n\t,cast(dbo.ConvertOverpunch(FromMeterReading) as int) as FromMeterReading\r\n\t,cast(dbo.ConvertOverpunch(ToMeterReading) as int) as ToMeterReading\r\n\t,'1' as 'MeterConstant' \r\n\t,cast(NumberOfDials as int) as [Dials]\r\n\t,[UtilityServiceAccountName] as FacilityName\r\n\t,null ReadingCode \r\n\t,cast(dbo.ConvertOverpunch(CCF) as int) as CCF\r\n\t,null as CycleBillingDays\r\n\t,cast(dbo.ConvertOverpunch5ToDecimal(ThermsFactor) as numeric(6,4)) as ThermFactor\r\n\t,[UtilityServiceAddress] as ServiceAddress\r\n\t,null as FiscalYear\r\n\t,null as BillCreationDate\r\n\t,(case when EstimatedOrActualBillingCode = 'ES' then 'EST' else 'ACT' end) AS EstimatedOrActual\r\n\t,cast(dbo.ConvertOverpunch(Therms) as int) AS Therms\r\n\t,dbo.ConvertOverpunch9ToMoney(BilledAmount) AS BilledAmount\r\n\t,@authenticatedID AS [AuthenticatedUserID]\r\n\t,getdate() AS DateAdded\r\n\t,getdate() AS lastUpdate\r\nINTO #preloadData\r\nFROM [NationalGridWest].[UploadLegacyNationalGridWestDataPreload]\r\nwhere FromMeterReading IS NOT NULL AND ToMeterReading IS NOT NULL AND cast(dbo.ConvertOverpunch(CCF) as int) <= 0\r\n\r\n\r\n/******************************\r\n2. Calculate CCF \r\n*******************************/\r\n\r\nupdate #preloadData\r\nset \r\n\tBillingPeriodRevision = NationalGridWest.DetermineBillingPeriod('b', ToDate, 'T', substring(EC3AccountNumber , 12, 2)),\r\n\tFirstPeriodCanceled = NationalGridWest.DetermineBillingPeriod('b', FromDate, 'F', substring(EC3AccountNumber , 12, 2))\r\n\r\n\r\nUPDATE #preloadData\r\n\tSET\r\n\t\tBillingPeriodRevision = CASE WHEN BillingPeriodRevision>@BillingPeriod THEN @BillingPeriod ELSE BillingPeriodRevision end,\r\n\t\tFirstPeriodCanceled = CASE WHEN FirstPeriodCanceled>@BillingPeriod THEN @BillingPeriod ELSE FirstPeriodCanceled\t\tEND\r\n\r\n-- update number of period. ignore account with invalid billing period\r\nupdate #preloadData\r\nset DeltaNumberOfPeriods = [dbo].[CalculateDeltaBillingPeriods](FirstPeriodCanceled, BillingPeriodRevision, 'b')\r\nwhere not(BillingPeriodRevision like 'X%' or FirstPeriodCanceled like 'X%')\r\n\r\n-- remove record with CCF = 0 and amount <= 0 and not in multimeter account. We don't want multimeter regular (ccf = 0, amount = 0) in the preloadData for cancelation\r\nDELETE t1\r\nFROM #preloadData AS t1\r\nINNER join \r\n(\r\n\tSELECT SUM(ccf) AS sumCCf, SUM(BilledAmount) AS BilledAmount, EC3AccountNumber AS EC3AccountNumber, BillingPeriodRevision AS BillingPeriodRevision\r\n\tFROM #preloadData\r\n\tGROUP BY EC3AccountNumber, BillingPeriodRevision\r\n) AS a\r\nON t1.EC3AccountNumber = a.EC3AccountNumber \r\nAND t1.BillingPeriodRevision = a.BillingPeriodRevision\r\nWHERE a.sumCCf = 0 AND a.BilledAmount >= 0\r\n\r\n\r\n\r\n-- update UploadLegacyKeyspanWestMeter CCF where fromReading >= toReading (ignore reset)\r\nupdate #preloadData\r\nSET CCF = (ToMeterReading - FromMeterReading) * -1 \r\nWHERE (ToMeterReading-FromMeterReading)>=0\r\n\r\n-- using dial number provided\r\nupdate #preloadData\r\nSET CCF = (POWER(10, dials) - fromMeterReading + toMeterReading) * -1 \r\nWHERE ToMeterReading < FromMeterReading\r\nAND dials > LEN(FromMeterReading)\r\n\r\n-- dial information is not correct\r\nupdate #preloadData\r\nSET CCF = (POWER(10, LEN(fromMeterReading)) - fromMeterReading + toMeterReading) * -1 \r\nWHERE ToMeterReading < FromMeterReading\r\nAND dials <= LEN(FromMeterReading)\r\n\r\n\r\n\r\n/******************************\r\n3. insert data into preload data table\r\n*******************************/\r\n\r\n\r\nINSERT INTO NationalGridWest.UploadLegacyKeyspanWestMeterCancellation\r\n   ([BillingPeriod]\r\n   ,[BillingPeriodRevision]\r\n   ,[FirstPeriodCanceled]\r\n   ,[DeltaNumberOfPeriods]\r\n   ,[AccountNumber]\r\n   ,[MeterNumber]\r\n   ,[FromDate]\r\n   ,[ToDate]\r\n   ,[RecordType]\r\n   ,[FromReading]\r\n   ,[ToReading]\r\n   ,[MeterConstant]\r\n   ,[Dials]\r\n   ,[FacilityName]\r\n   ,[ReadingCode]\r\n   ,[CCF]\r\n   ,[CycleBillingDays]\r\n   ,[ThermFactor]\r\n   ,[ServiceAddress]\r\n   ,[FiscalYear]\r\n   ,[PostingDate]\r\n   ,[EstimatedOrActual]\r\n   ,[Therms]\t\r\n   ,[AuthenticatedUserID]\r\n   ,[DateAdded]\r\n   ,[LastUpdate])\r\n(\t\r\n\tSELECT\r\n\t[BillingPeriod]\r\n   ,[BillingPeriodRevision]\r\n   ,[FirstPeriodCanceled]\r\n   ,[DeltaNumberOfPeriods]\r\n   ,EC3AccountNumber\r\n   ,[MeterNumber]\r\n   ,[FromDate]\r\n   ,[ToDate]\r\n   ,[RecordType]\r\n   ,[FromMeterReading]\r\n   ,[ToMeterReading]\r\n   ,[MeterConstant]\r\n   ,[Dials]\r\n   ,[FacilityName]\r\n   ,[ReadingCode]\r\n   ,[CCF]\r\n   ,[CycleBillingDays]\r\n   ,[ThermFactor]\r\n   ,[ServiceAddress]\r\n   ,[FiscalYear]\r\n   ,[BillCreationDate]\r\n   ,[EstimatedOrActual]\r\n   ,[Therms]\t\r\n   ,[AuthenticatedUserID]\r\n   ,[DateAdded]\r\n   ,[LastUpdate]\r\n\tFROM #preloadData\r\n)\r\n\r\n\r\n\r\nDROP TABLE #preloadData\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************\r\n5. prorate usage for multi meter account\r\n*******************************/\r\nEXEC NationalGridWest.usp_LegacyData_ProrateAccountBillingUsageToMeterBilling @isCancelRecord='1'\r\n\r\n/*************************************\r\n6. Process KeyspanWest meter cancellation Summary\t\r\n*******************************/\r\n\r\nINSERT INTO NationalGridWest.UploadLegacyKeyspanWestMeterCancellationSummary\r\n\t(AccountUtilityCompanySeqid,\r\n\tOriginalAccountNumber,\r\n\tOriginalMeterNumber,\r\n\tBillingPeriod,\r\n\tBillingPeriodRevision,\r\n\tFirstCancelPeriod,\r\n\tNumberOfTransactions,\r\n\tNumberOfRebillTransactions,\r\n\tNumberOfCancelTransactions,\r\n\tBillingAction,\r\n\tGasRateCode,\r\n\tInitialCancelFromDate,\r\n\tCurrentBillingToDate,\r\n\tCancelFromDate,\r\n\tCancelToDate,\r\n\tCancelMeterFromReading,\r\n\tCancelMeterToReading,\r\n\tCancelCcf,\r\n\tCancelTherms,\r\n\tCancelThermsFactor,\r\n\tCancelMeterConstant,\r\n\tTotalBillingDaysRebilled,\r\n\tNumberOfBillingPeriods,\r\n\tBillingDays,\r\n\tBillingDate,\r\n\tCancelReadingCode,\r\n\tNumberOfDials,\r\n\tMeterType,\r\n\tProcessEffectiveDate,\r\n\tSpannedBillingPeriodRevision,\r\n\tSpannedFirstCanceledBillingPeriod,\r\n\tSpannedCCF,\r\n\tSpannedThermFactor,\r\n\tSpannedTherm,\r\n\tSpannedMonthlyPercentage,\r\n\tSpannedTotalPercentage,\r\n\tAuthenticatedUserID,\r\n\tNotes,\r\n\tDateAdded,\r\n\tLastUpdate,\r\n\tInitialPostingDate,\r\n\tEstimatedOrActualBilling,\r\n\tAverageRebillThermsFactor,\r\n\tPriorRevisedBilledCCF,\r\n\tRevisedBilledCCF,\r\n\tCanceledBilledCCF,\r\n\tPriorRevisedBilledTherms,\r\n\tRevisedBilledTherms,\r\n\tCanceledBilledTherms,\r\n\tServiceAddress,\r\n\tFacilityName\r\n)\r\nSELECT    \r\n\t@UtilityID as AccountUtilityCompanySeqid,\r\n\tAccountNumber,\r\n\tMeterNumber, \r\n\tBillingPeriod, \r\n\tcase when BillingPeriod < BillingPeriodRevision then BillingPeriod else BillingPeriodRevision end as BillingPeriodRevision, \r\n\tcase when BillingPeriod < BillingPeriodRevision then BillingPeriod else BillingPeriodRevision end as FirstPeriodCanceled, \r\n\t1 as NumberOfTransactions, \r\n\t0 as NumberOfRebillTransactions,\r\n\t1 as NumberOfCancelTransactions,\r\n\tcase when BillingPeriod = BillingPeriodRevision then 'O' else 'A' end as BillingAction,\r\n\tnull as GasRateCode,\r\n\tFromDate, \r\n\tToDate,\r\n\tFromDate, \r\n\tToDate, \r\n\tFromReading as FromMeterReading, \r\n\tToReading AS ToMeterReading,\r\n\tCCF,\r\n\tTherms,\r\n\tThermFactor as ThermFactor, \r\n\tMeterConstant,\r\n\t[dbo].[CalculateNumberOfBillingDays]  (FromDate, ToDate) as TotalBillingDaysRebilled,\r\n\tDeltaNumberOfPeriods as NumberOfBillingPeriods,\r\n\t[dbo].[CalculateNumberOfBillingDays]  (FromDate, ToDate) as BillingDays, \r\n\t[dbo].[ConvertDatetimeToYYYYMMDD] (PostingDate) as BillingDate, \r\n\tReadingCode,\r\n\tDials as NumberOfDials, \r\n\t'G' as MeterType, \r\n\tnull as ProcessEffectiveDate,\r\n\tcase when BillingPeriod < BillingPeriodRevision then BillingPeriod else BillingPeriodRevision end as SpannedBillingPeriodRevision,\r\n\tcase when BillingPeriod < BillingPeriodRevision then BillingPeriod else BillingPeriodRevision end as SpannedFirstCanceledBillingPeriod,\r\n\tCCF as SpannedCCF,\r\n\tThermFactor as SpannedThermFactor,\r\n\tcast(ccf*ThermFactor+.501 as int) as SpannedTherm,\r\n\t1.0 as SpannedMonthlyPercentage,\r\n\t1.0 as SpannedTotalPercentage,\r\n\t@authenticatedID as AuthenticatedUserID,\r\n\tnull as Notes,\r\n\tgetDate() as DateAdded,\r\n\tgetDate() as LastUpdate,\r\n\tgetDate() as InitialPostingDate,\r\n\t(case when EstimatedOrActual = 'ES' then 'EST' else 'ACT' end),\r\n\t1.00 as AverageRebillThermsFactor,\r\n\t0 AS PriorRevisedBilledCCF,\r\n\t0 AS RevisedBilledCCF,\r\n\t0 AS CanceledBilledCCF,\r\n\t0 AS PriorRevisedBilledTherms,\r\n\t0 AS RevisedBilledTherms,\r\n\t0 AS CanceledBilledTherms,\r\n\tServiceAddress,\r\n\tFacilityName\r\nFROM NationalGridWest.UploadLegacyKeyspanWestMeterCancellation\r\nwhere   DeltaNumberOfPeriods<=1 \r\n\r\nEND"
        }
      ]
    }
  ]
}
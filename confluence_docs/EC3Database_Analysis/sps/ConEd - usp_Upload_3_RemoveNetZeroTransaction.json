{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ConEd",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Upload_3_RemoveNetZeroTransaction",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Upload_3_RemoveNetZeroTransaction",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to identify and remove \"net zero\" transactions from a set of tables related to billing data. A \"net zero\" transaction is defined as a transaction where the sum of billed amounts, therms, and CCF (hundred cubic feet) from both the account and its corresponding cancellation records equals zero. The procedure first identifies these transactions, stores them in a temporary table, and then deletes them from the main tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple table operations, including joins and deletions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a cursor to iterate over a result set, which can be complex and resource-intensive."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It requires careful handling of transactional data to ensure data integrity."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on the current processing period, which it retrieves from the "
        },
        {
          "type": "text",
          "text": "Billing.ApplicationTimeFrame",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure begins by declaring several variables to hold data retrieved from the database."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It retrieves the current billing period from the "
                        },
                        {
                          "type": "text",
                          "text": "Billing.ApplicationTimeFrame",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonNetZeroTransactions",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table is truncated to remove any existing data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A cursor named "
                        },
                        {
                          "type": "text",
                          "text": "UniqueConEdisonNetZeroTransactions_record",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is declared to select records from "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonAccount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonCancellation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where the sum of billed amounts, therms, and CCF is zero."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The cursor iterates over these records, checking if they already exist in the "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonNetZeroTransactions",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If not, the records are inserted into the "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonNetZeroTransactions",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Deletion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "After processing all records, the procedure deletes matching records from "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonCancellation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonAccount",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonCancellationPreload",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", and "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonAccountPreload",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " based on the data stored in "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonNetZeroTransactions",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The cursor is closed and deallocated to free up resources."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can be inefficient, especially with large datasets, as it processes rows one at a time. Consider replacing the cursor with set-based operations if possible."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Truncation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating the "
                },
                {
                  "type": "text",
                  "text": "ConEd.UploadConEdisonNetZeroTransactions",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is efficient for clearing data but should be used cautiously if the table is large or if there are dependencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved in joins and deletions are properly indexed to improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure deletes records from multiple tables. Ensure that the logic correctly identifies and deletes only the intended records to prevent data loss."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If this procedure is executed concurrently, there could be race conditions or locking issues, especially with the cursor and deletion operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling. Consider adding try-catch blocks to manage exceptions and ensure that resources are properly released in case of errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the cursor-based approach may become a bottleneck. Evaluate the procedure's performance periodically and refactor if necessary."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\tRemove records if cancellation amount = current amount ($, therms and CCF)\r\n-- =============================================\r\nCREATE PROCEDURE [ConEd].[usp_Upload_3_RemoveNetZeroTransaction]\r\nAS \r\n    BEGIN\r\n\t\r\n        DECLARE @BillingPeriod VARCHAR(6)\r\n--\r\n\r\n        SELECT  @BillingPeriod = BillingPeriod\r\n        FROM Billing.ApplicationTimeFrame\r\n        WHERE   CurrentProcessingPeriod = 'Y'\r\n--\r\n--  Find and delete the duplicate net zero transactions where the ConEd.UploadConEdisonAccount.BilledAmount + ConEd.UploadConEdisonCancellation.BilledAmount is 0\r\n--\r\n        TRUNCATE TABLE ConEd.UploadConEdisonNetZeroTransactions\r\n--\r\n        DECLARE @HoldUploadConEdisonCancellationSeqid INT\r\n--\r\n        DECLARE @CancellationBillingPeriodRevision VARCHAR(6)\r\n        DECLARE @CancellationAccountNumber VARCHAR(15)\r\n        DECLARE @AccountUploadConEdisonAccountSeqid INT\r\n        DECLARE @CancellationUploadConEdisonCancellationSeqid INT\r\n        DECLARE @AccountTherms INT\r\n        DECLARE @CancellationTherms INT\r\n        DECLARE @AccountCCF INT\r\n        DECLARE @CancellationCCF INT\r\n        DECLARE @AccountBilledAmount MONEY\r\n        DECLARE @CancellationBilledAmount MONEY\r\n--\r\n        DECLARE UniqueConEdisonNetZeroTransactions_record CURSOR\r\n        FOR\r\n            SELECT  ConEd.UploadConEdisonCancellation.BillingPeriodRevision ,\r\n                    ConEd.UploadConEdisonCancellation.AccountNumber ,\r\n                    ConEd.UploadConEdisonAccount.UploadConEdisonAccountSeqid ,\r\n                    ConEd.UploadConEdisonCancellation.UploadConEdisonCancellationSeqid ,\r\n                    ConEd.UploadConEdisonAccount.Therms ,\r\n                    ConEd.UploadConEdisonCancellation.Therms AS CancellationTherms ,\r\n                    ConEd.UploadConEdisonAccount.CCF ,\r\n                    ConEd.UploadConEdisonCancellation.CCF AS CancellationCCF ,\r\n                    ConEd.UploadConEdisonAccount.BilledAmount ,\r\n                    ConEd.UploadConEdisonCancellation.BilledAmount AS CancellationBilledAmount\r\n            FROM ConEd.UploadConEdisonAccount\r\n                    INNER JOIN ConEd.UploadConEdisonCancellation ON ConEd.UploadConEdisonAccount.DeltaNumberOfPeriods = ConEd.UploadConEdisonCancellation.DeltaNumberOfPeriods\r\n                                                              AND ConEd.UploadConEdisonAccount.BillingPeriodRevision = ConEd.UploadConEdisonCancellation.BillingPeriodRevision\r\n                                                              AND ConEd.UploadConEdisonAccount.BillingPeriod = ConEd.UploadConEdisonCancellation.BillingPeriod\r\n                                                              AND ConEd.UploadConEdisonAccount.AccountNumber = ConEd.UploadConEdisonCancellation.AccountNumber\r\n            WHERE   ( ConEd.UploadConEdisonAccount.BilledAmount\r\n                      + ConEd.UploadConEdisonCancellation.BilledAmount = 0 )\r\n                    AND ( ConEd.UploadConEdisonAccount.Therms\r\n                          + ConEd.UploadConEdisonCancellation.Therms = 0 )\r\n                    AND ( ConEd.UploadConEdisonAccount.CCF\r\n                          + ConEd.UploadConEdisonCancellation.CCF = 0 )\r\n            ORDER BY ConEd.UploadConEdisonCancellation.UploadConEdisonCancellationSeqid\r\n--\r\n        OPEN UniqueConEdisonNetZeroTransactions_record\r\n--\r\n        SET @HoldUploadConEdisonCancellationSeqid = 0\r\n--\r\n-- Read first row\r\n        FETCH UniqueConEdisonNetZeroTransactions_record INTO @CancellationBillingPeriodRevision,\r\n            @CancellationAccountNumber, @AccountUploadConEdisonAccountSeqid,\r\n            @CancellationUploadConEdisonCancellationSeqid, @AccountTherms,\r\n            @CancellationTherms, @AccountCCF, @CancellationCCF,\r\n            @AccountBilledAmount, @CancellationBilledAmount\r\n\r\n\r\n        WHILE @@fetch_status = 0 \r\n            BEGIN\r\n  \r\n\t-- if @AccountUploadConEdisonAccountSeqid and @CancellationUploadConEdisonCancellationSeqid are not currently in the UploadConEdisonNetZeroTransactions\r\n                IF ( NOT EXISTS ( SELECT    *\r\n                                  FROM   ConEd.UploadConEdisonNetZeroTransactions\r\n                                  WHERE UploadConEdisonAccountSeqid = @AccountUploadConEdisonAccountSeqid\r\n                                            OR UploadConEdisonCancellationSeqid = @CancellationUploadConEdisonCancellationSeqid )\r\n                   ) \r\n                    BEGIN\r\n\t\t\r\n                        INSERT  INTO ConEd.UploadConEdisonNetZeroTransactions\r\n                                ( BillingPeriod ,\r\n                                  BillingPeriodRevision ,\r\n                                  AccountNumber ,\r\n                                  UploadConEdisonAccountSeqid ,\r\n                                  UploadConEdisonCancellationSeqid ,\r\n                                  Therms ,\r\n                                  CancellationTherms ,\r\n                                  CCF ,\r\n                                  CancellationCCF ,\r\n                                  BilledAmount ,\r\n                                  CancellationBilledAmount\r\n                                )\r\n                        VALUES  ( @BillingPeriod ,\r\n                                  @CancellationBillingPeriodRevision ,\r\n                                  @CancellationAccountNumber ,\r\n                                  @AccountUploadConEdisonAccountSeqid ,\r\n                                  @CancellationUploadConEdisonCancellationSeqid ,\r\n                                  @AccountTherms ,\r\n                                  @CancellationTherms ,\r\n                                  @AccountCCF ,\r\n                                  @CancellationCCF ,\r\n                                  @AccountBilledAmount ,\r\n                                  @CancellationBilledAmount\r\n\t\t                        )\r\n\t\t\r\n                    END\r\n\t\t\r\n\t\r\n                FETCH UniqueConEdisonNetZeroTransactions_record INTO @CancellationBillingPeriodRevision,\r\n                    @CancellationAccountNumber,\r\n                    @AccountUploadConEdisonAccountSeqid,\r\n                    @CancellationUploadConEdisonCancellationSeqid,\r\n                    @AccountTherms, @CancellationTherms, @AccountCCF,\r\n                    @CancellationCCF, @AccountBilledAmount,\r\n                    @CancellationBilledAmount\r\n            END \r\n--\r\n        CLOSE UniqueConEdisonNetZeroTransactions_record\r\n\r\n        DEALLOCATE UniqueConEdisonNetZeroTransactions_record\r\n\r\n \r\n\r\n\t\t--\r\n\t\t-- Delete Net zero transactions from UploadConEdisonAccount & UploadConEdisonCancellation\r\n\t\t--\r\n        DELETE  ConEd.UploadConEdisonCancellation\r\n        FROM ConEd.UploadConEdisonCancellation\r\n                INNER JOIN ( SELECT *\r\n                             FROM ConEd.UploadConEdisonNetZeroTransactions\r\n                           ) AS NetZeroTransactions ON ConEd.UploadConEdisonCancellation.UploadConEdisonCancellationSeqid = NetZeroTransactions.UploadConEdisonCancellationSeqid\r\n--\r\n        DELETE  ConEd.UploadConEdisonAccount\r\n        FROM ConEd.UploadConEdisonAccount\r\n                INNER JOIN ( SELECT *\r\n                             FROM ConEd.UploadConEdisonNetZeroTransactions\r\n                           ) AS NetZeroTransactions ON ConEd.UploadConEdisonAccount.UploadConEdisonAccountSeqid = NetZeroTransactions.UploadConEdisonAccountSeqid\r\n\r\n\t\t\r\n        DELETE  ConEd.UploadConEdisonCancellationPreload\r\n        FROM ConEd.UploadConEdisonCancellationPreload\r\n                INNER JOIN ( SELECT *\r\n                             FROM ConEd.UploadConEdisonNetZeroTransactions\r\n                           ) AS NetZeroTransactions ON ConEd.UploadConEdisonCancellationPreload.UploadConEdisonCancellationPreloadSeqid = NetZeroTransactions.UploadConEdisonCancellationSeqid\r\n--\r\n        DELETE  ConEd.UploadConEdisonAccountPreload\r\n        FROM ConEd.UploadConEdisonAccountPreload\r\n                INNER JOIN ( SELECT *\r\n                             FROM ConEd.UploadConEdisonNetZeroTransactions\r\n                           ) AS NetZeroTransactions ON ConEd.UploadConEdisonAccountPreload.UploadConEdisonAccountPreloadSeqid = NetZeroTransactions.UploadConEdisonAccountSeqid\r\n\r\n\r\n    END"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "NationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_LegacyData_ParseSpannedAccountCancellationInfo",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_LegacyData_ParseSpannedAccountCancellationInfo",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process and parse spanned account cancellation information for a utility company, specifically handling cases where billing periods span multiple months. It retrieves records from a temporary summary table, calculates various billing metrics, and inserts the processed data into a summary table. The procedure uses a cursor to iterate over records that have more than one billing period, performs calculations to distribute billing amounts and energy usage across these periods, and logs the results."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple calculations and transformations of billing data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a cursor to iterate over potentially large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It calls several user-defined functions for calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles intricate business logic related to billing periods and energy usage."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod varchar(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period in "
                },
                {
                  "type": "text",
                  "text": "yyyymm",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " format."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@authenticatedID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The ID of the authenticated user executing the procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingCycle varchar(1)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing cycle, which influences date calculations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure declares numerous variables to store intermediate results and calculated values related to billing and energy usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Setup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A cursor named "
                },
                {
                  "type": "text",
                  "text": "SpannedGasBillCursor",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is declared and opened to iterate over records in the "
                },
                {
                  "type": "text",
                  "text": "UploadLegacyKeyspanWestCancellationTempSummarySpanned",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table where "
                },
                {
                  "type": "text",
                  "text": "DeltaNumberOfPeriods",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is greater than 1."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval and Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each record, it retrieves relevant fields and calculates the total gas spanned billed percentage using a user-defined function."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It calculates averages and remainders for billing days, therms, and CCF (hundred cubic feet of gas)."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Iterative Parsing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure enters a loop to parse each billing period, applying a monthly percentage to calculate monthly billed amounts and energy usage."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It updates calculated dates using user-defined functions to determine actual or projected dates."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each parsed period, it inserts a record into the "
                        },
                        {
                          "type": "text",
                          "text": "UploadLegacyKeyspanWestCancellationSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table with calculated values."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "After parsing all but the last period, it finalizes calculations for the last period to account for rounding errors."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The cursor is closed and deallocated after processing all records."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can lead to performance issues, especially with large datasets, as it processes rows one at a time."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Frequent calls to user-defined functions can add overhead, particularly if these functions are complex or inefficient."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Arithmetic Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs numerous arithmetic operations, which could be optimized or batched to improve performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of cursors and potential locking issues could affect concurrent access to the tables involved."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the cursor-based approach may not scale well, leading to longer execution times."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The reliance on user-defined functions for critical calculations means any errors or changes in these functions could impact the accuracy of the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Errors",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure attempts to handle rounding errors, but any miscalculations could lead to discrepancies in financial data."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE PROCEDURE [NationalGridWest].[usp_LegacyData_ParseSpannedAccountCancellationInfo] \r\n\t@BillingPeriod varchar(6),\r\n\t@authenticatedID int,\r\n\t@BillingCycle varchar(1)\r\nAS\r\nBEGIN\r\n\tdeclare @UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid dbo.seqid\r\n--\r\ndeclare @Notes dbo.notes\r\ndeclare @AccountNumber dbo.acctnum\r\ndeclare @FacilityName dbo.UtilityServiceAccountName\r\ndeclare @ServiceAddress dbo.addr\r\ndeclare @CancelTariffCode dbo.tariff\r\ndeclare @PostingDate dbo.PostingDate\r\n--\r\ndeclare @NumberOfPeriodsMinusOne dbo.Accumulator\r\ndeclare @DeltaNumberOfPeriods dbo.Accumulator\r\n\r\ndeclare @FirstPeriodCanceled dbo.yyyymm \r\ndeclare @CancelThermFactor dbo.ThermsFactor \r\ndeclare @FudgedThermFactor dbo.ThermsFactor \r\ndeclare @BillingPeriodRevision dbo.yyyymm \r\ndeclare @CancelFromDate dbo.yyyymmdd \r\ndeclare @CancelToDate dbo.yyyymmdd \r\ndeclare @CalculatedBillingPeriodRevision dbo.yyyymm \r\ndeclare @CalculatedFromDate dbo.yyyymmdd \r\ndeclare @CalculatedToDate dbo.yyyymmdd \r\ndeclare @CancelBilledAmount dbo.BillingAmt \r\ndeclare @CancelBilledAmountMonthly dbo.BillingAmt \r\ndeclare @CancelBilledAmountMonthlySum dbo.BillingAmt \r\ndeclare @CancelBilledAmountAverage dbo.BillingAmt \r\ndeclare @CancelBilledAmountRemainder dbo.BillingAmt \r\ndeclare @CancelBillingPeriodDays dbo.Accumulator \r\ndeclare @CancelBillingPeriodDaysAverage dbo.Accumulator \r\ndeclare @CancelBillingPeriodDaysRemainder dbo.Accumulator \r\ndeclare @CancelTherms dbo.EnergyUnit \r\ndeclare @CancelLastPeriodTherms dbo.EnergyUnit \r\ndeclare @CancelThermsAverage dbo.EnergyUnit \r\ndeclare @CancelThermsRemainder dbo.EnergyUnit \r\ndeclare @CancelCCF dbo.EnergyUnit \r\ndeclare @CancelCCFAverage dbo.EnergyUnit \r\ndeclare @CancelCCFRemainder dbo.EnergyUnit \r\ndeclare @CancelSumAverageCCF dbo.EnergyUnit \r\ndeclare @idx int\r\ndeclare @StartingBillingPeriodDaysIncrement int\r\ndeclare @StartingBillingPeriodCCFIncrement int\r\ndeclare @StartingBillingPeriodThermsIncrement int\r\ndeclare @IncrementBillingPeriodDays int\r\ndeclare @IncrementBillingPeriodCCF int\r\ndeclare @IncrementBillingPeriodTherms int\r\n-- \r\ndeclare @CancelBilledAmountMonthlyLastPeriod dbo.BillingAmt\r\ndeclare @CancelThermsMonthlyLastPeriod dbo.EnergyUnit \r\ndeclare @CancelCCFMonthlyLastPeriod dbo.EnergyUnit \r\n\r\ndeclare @ApplyMonthlyPercentage  dbo.DiscountPercentage\r\ndeclare @CancelThermsMonthlySum  dbo.EnergyUnit \r\ndeclare @CancelThermsMonthly  dbo.EnergyUnit \r\ndeclare @CancelCCFMonthly  dbo.EnergyUnit \r\ndeclare @CancelCCFMonthlySum  dbo.EnergyUnit \r\ndeclare @TotalGasSpannedBilledPercentage dbo.DiscountPercentage\r\n\r\ndeclare @UtilityCode dbo.Seqid\r\n\r\n\r\nset @UtilityCode = 2\r\n\r\n\r\n--\r\nDECLARE SpannedGasBillCursor CURSOR FOR\r\nSELECT UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid FROM NationalGridWest.UploadLegacyKeyspanWestCancellationTempSummarySpanned\r\nwhere (DeltaNumberOfPeriods > 1) \r\n--\r\n\r\n--\r\nOPEN SpannedGasBillCursor;\r\n--\r\nFETCH NEXT FROM SpannedGasBillCursor INTO @UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid\r\n--\r\n-- Check @@FETCH_STATUS to see if there are any more rows to fetch.  UploadConEdisonCancellationTempSummarySpannedSeqid\r\n--\r\nWHILE @@FETCH_STATUS = 0\r\nBEGIN -- begining cursor loop\r\n\r\n--\r\n\tSELECT  \r\n\t\t@DeltaNumberOfPeriods=DeltaNumberOfPeriods,  \r\n\t\t@BillingPeriodRevision=BillingPeriodRevision, \r\n\t\t@FirstPeriodCanceled=FirstPeriodCanceled, \r\n\t\t@CancelFromDate=CancelFromDate,\r\n\t\t@CancelToDate=CancelToDate,\r\n\t\t@CancelBilledAmount=CancelBilledAmount, \r\n\t\t@CancelCCF=CancelCCF, \r\n\t\t@CancelTherms=CancelTherms, \r\n\t\t@CancelThermFactor=CancelThermFactor,\r\n\t\t@CancelBillingPeriodDays=CancelBillingPeriodDays,\r\n\t\t@BillingPeriod = BillingPeriod,\r\n\t\t@AccountNumber=AccountNumber,\r\n\t\t@FacilityName=FacilityName,\r\n\t\t@ServiceAddress =ServiceAddress,\r\n\t\t@CancelTariffCode=CancelTariffCode,\r\n\t\t@PostingDate=PostingDate\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestCancellationTempSummarySpanned\r\n\tWHERE (UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid = @UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid) \r\n\r\n\r\n\tselect \r\n\t\t@TotalGasSpannedBilledPercentage= dbo.[CalculateTotalGasSpannedBilledPercentage] (@BillingCycle,@DeltaNumberOfPeriods,@FirstPeriodCanceled,@BillingPeriodRevision)\r\n\r\n\tbegin -- parse spaned\r\n\t\t--\r\n\t\tset @NumberOfPeriodsMinusOne = @DeltaNumberOfPeriods-1\r\n\t\t--\r\n\t\tset @CancelBillingPeriodDaysAverage = (@CancelBillingPeriodDays / @DeltaNumberOfPeriods)\r\n\t\tset @CancelBillingPeriodDaysRemainder = @CancelBillingPeriodDays - (@CancelBillingPeriodDaysAverage * @DeltaNumberOfPeriods)\r\n\t\tset @StartingBillingPeriodDaysIncrement = @DeltaNumberOfPeriods - @CancelBillingPeriodDaysRemainder\r\n\t\t--\r\n\t\t--\tInitialize the counters for the n-1 parses\r\n\t\t--\r\n\t\tset @CalculatedBillingPeriodRevision = @FirstPeriodCanceled\r\n\t\tset @CalculatedFromDate = @CancelFromDate\r\n\t\tset @CalculatedToDate = @CancelToDate\r\n\t\tset @idx = 0\r\n\t\tset @CancelBilledAmountMonthlySum = 0.00\r\n\t\tset @CancelThermsMonthlySum = 0\r\n\t\tset @CancelCCFMonthlySum = 0\r\n\t\t--\r\n\r\n\t\twhile (@NumberOfPeriodsMinusOne > @idx)\r\n\t\t\tBegin -- begin parsing previous n-1 period\r\n\t\t\t\t--\r\n\t\t\t\tselect @ApplyMonthlyPercentage = [dbo].[CalculateApplyMonthlyPercentageGasSpannedBilled] (@CalculatedBillingPeriodRevision,@TotalGasSpannedBilledPercentage)\r\n\t\t\t\t\r\n\t\t\t\t--\r\n\t\t\t\t-- Apply the Monthly Percentage to the CCF,Therms and Billed Amount and accumulate the weigthed average units.\r\n\t\t\t\t--\r\n\t\t\t\tset @CancelBilledAmountMonthly = ROUND(@CancelBilledAmount * @ApplyMonthlyPercentage,2)\r\n\t\t\t\tset @CancelBilledAmountMonthlySum = @CancelBilledAmountMonthlySum + @CancelBilledAmountMonthly\r\n\t\t\t\tset @CancelThermsMonthly = ROUND(@CancelTherms * @ApplyMonthlyPercentage,0)\r\n\t\t\t\tset @CancelThermsMonthlySum = @CancelThermsMonthlySum + @CancelThermsMonthly\r\n\t\t\t\tset @CancelCCFMonthly = ROUND(@CancelCCF * @ApplyMonthlyPercentage,0)\r\n\t\t\t\tset @CancelCCFMonthlySum = @CancelCCFMonthlySum + @CancelCCFMonthly\r\n\r\n\t\t\t\tselect @CalculatedToDate=\r\n\t\t\t\t\tNationalGridWest.DeterminActualDate(@AccountNumber, 'T', @CalculatedBillingPeriodRevision, @BillingCycle)\r\n\r\n\t\t\t\tif(@CalculatedToDate is null)\r\n\t\t\t\t\tselect @CalculatedToDate = NationalGridWest.DetermineProjectedDate(@BillingCycle, @CalculatedBillingPeriodRevision, 'T', substring(@AccountNumber,12,2)) \r\n\t\t\t\t\r\n\t\t\t\t--\r\n\t\t\t\tselect @Notes = SUBSTRING('Therm factor '+cast(@CancelThermFactor as varchar(6))+\r\n\t\t\t\t' for '+cast(@DeltaNumberOfPeriods as varchar(6))+' First: '+@FirstPeriodCanceled +' ( '+@CancelFromDate+') Last: '+ \r\n\t\t\t\t@BillingPeriodRevision +' ( '+@CancelFromDate+'). '+' period: '+@CalculatedBillingPeriodRevision+ ' Month %: '+cast(@ApplyMonthlyPercentage as varchar(10))+\r\n\t\t\t\t' - Total %: '+cast(@TotalGasSpannedBilledPercentage as varchar(10)), 1, 300)\r\n\r\n\r\n\t\t\t\tINSERT INTO NationalGridWest.UploadLegacyKeyspanWestCancellationSummary\r\n\t\t\t\t(\r\n\t\t\t\t\tAccountUtilityCompanySeqid, \r\n\t\t\t\t\tOriginalAccountNumber, \r\n\t\t\t\t\tNumberOfCancelTransactions, \r\n\t\t\t\t\tNumberOfTransactions, \r\n\t\t\t\t\tDerivedFromSpannedBill,\r\n\t\t\t\t\tBillingPeriod, \r\n\t\t\t\t\tBillingPeriodRevision, \r\n\t\t\t\t\tFirstCanceledBillingPeriod, \t\t\t\t\r\n\t\t\t\t\tEstimatedOrActualBilling, \r\n\t\t\t\t\tInitialCancelFromDate, \r\n\t\t\t\t\tCurrentBillingToDate, \r\n\t\t\t\t\tNumberOfBillingPeriods, \r\n\t\t\t\t\tTotalBillingDaysRebilled, \t\t\t\r\n\t\t\t\t\tTotalRebilledAmount, \r\n\t\t\t\t\tTotalCanceledAmount, \r\n\t\t\t\t\tPriorRevisedBilledAmount, \r\n\t\t\t\t\tRevisedBilledAmount, \t\t\t\t\r\n\t\t\t\t\tCanceledBilledAmount, \r\n\t\t\t\t\tAverageRebillCostOfGasCharge, \r\n\t\t\t\t\tAverageRebillThermsFactor, \r\n\t\t\t\t\tBillingDays, \r\n\t\t\t\t\tFromDate, \r\n\t\t\t\t\tToDate, \r\n\t\t\t\t\tBilledAmount, \r\n\t\t\t\t\tBillingAction, \r\n\t\t\t\t\tProcessedInTheCurrentPeriod, \t\t\t\t\r\n\t\t\t\t\tGasRateCode, \r\n\t\t\t\t\tDeliveryChargeAmount,\r\n\t\t\t\t\tTotalCCF, \r\n\t\t\t\t\tTotalTherms, \r\n\t\t\t\t\tThermsFactor, \t\t\t\t\r\n\t\t\t\t\tCancelFromDate, \r\n\t\t\t\t\tCancelToDate, \r\n\t\t\t\t\tCancelDeliveryChargeAmount,\r\n\t\t\t\t\tCancelTotalCCF,\r\n\t\t\t\t\tCancelTotalTherms, \r\n\t\t\t\t\tCancelThermsFactor,\r\n\t\t\t\t\tCancelBillingDays,\r\n\t\t\t\t\tNotes,\t\t\t\t\r\n\t\t\t\t\tSpannedBillingPeriodRevision,\r\n\t\t\t\t\tSpannedFirstCanceledBillingPeriod,\r\n\t\t\t\t\tSpannedBilledAmount,\r\n\t\t\t\t\tSpannedCCF,\r\n\t\t\t\t\tSpannedThermFactor,\r\n\t\t\t\t\tSpannedTherm,\r\n\t\t\t\t\tSpannedMonthlyPercentage,\r\n\t\t\t\t\tSpannedTotalPercentage,\t\t\t\t\r\n\t\t\t\t\tBillingDate,\r\n\t\t\t\t\tProcessEffectiveDate,\r\n\t\t\t\t\tAuthenticatedUserID,\r\n\t\t\t\t\tDateAdded,\r\n\t\t\t\t\tLastUpdate,\r\n\r\n\t\t\t\t\tFacilityName,\r\n\t\t\t\t\tServiceAddress\r\n\t\t\t\t)\r\n\t\t\t\tSELECT \r\n\t\t\t\t\t'2',\r\n\t\t\t\t\t@AccountNumber,  --  UploadConEdisonAccountTempSummarySPanned.AccountNumber,  \r\n\t\t\t\t\t1, --  NumberOfCancelTransactions\r\n\t\t\t\t\t1, --  NumberOfTransactions\r\n\t\t\t\t\t'Y',  -- DerivedFromSpannedBill = 'Y'\r\n\t\t\t\t\tBillingPeriod, \r\n\t\t\t\t\t@CalculatedBillingPeriodRevision, -- UploadConEdisonAccountTempSummarySPanned.BillingPeriodRevision, \r\n\t\t\t\t\t@CalculatedBillingPeriodRevision, -- UploadConEdisonAccountTempSummarySPanned.FirstPeriodCanceled, \r\n\t\t\t\t\t'ACT',  -- EstimatedOrActualBilling needs to be upodated\r\n\t\t\t\t\t@CancelFromDate,  -- UploadConEdisonAccountTempSummarySPanned.FromDate AS InitialCancelFromDate, \r\n\t\t\t\t\t@CancelToDate, --  UploadConEdisonAccountTempSummarySPanned.ToDate AS CurrentBillingToDate,\r\n\t\t\t\t\t[dbo].[CalculateDeltaBillingPeriods] (\r\n\t\t\t\t\t\tNationalGridWest.DetermineBillingPeriod(@BillingCycle, @CalculatedFromDate, 'F', substring(@AccountNumber,12,2)),\r\n\t\t\t\t\t\tNationalGridWest.DetermineBillingPeriod(@BillingCycle, @CalculatedToDate, 'T', substring(@AccountNumber,12,2)),\r\n\t\t\t\t\t\t@BillingCycle\r\n\t\t\t\t\t), --UploadConEdisonAccountTempSummarySPanned.DeltaNumberOfPeriods, \r\n\t\t\t\t\t[dbo].[CalculateNumberOfBillingDays]  (@CalculatedFromDate,@CalculatedToDate),-- UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays AS TotalBillingDaysRebilled, \r\n\t\t\t\t\t0, --  UploadConEdisonAccountTempSummarySPanned.BilledAmount AS TotalRebilledAmount, \r\n\t\t\t\t\t@CancelBilledAmountMonthly, -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS TotalCanceledAmount,\r\n\t\t\t\t\t0 AS PriorRevisedBilledAmount,\r\n\t\t\t\t\t0, --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount, 0), \r\n\t\t\t\t\t0, -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0), \r\n\t\t\t\t\t0 AS AverageRebillCostOfGasCharge, \r\n\t\t\t\t\t1.00 AS AverageRebillThermsFactor, \r\n\t\t\t\t\t0,-- IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n\t\t\t\t\tnull,  -- UploadConEdisonAccountTempSummarySPanned.FromDate ,\r\n\t\t\t\t\tnull, -- UploadConEdisonAccountTempSummarySPanned.ToDate, \r\n\t\t\t\t\t@CancelBilledAmountMonthly, --  (IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) as  - IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0)) as BilledAmount,\r\n\t\t\t\t\tCASE WHEN @BillingPeriod = @CalculatedBillingPeriodRevision THEN 'O' ELSE 'A' END, -- as BillingAction, \r\n\t\t\t\t\t'N' AS ProcessedInTheCurrentPeriod, \r\n\t\t\t\t\t@CancelTariffCode, \r\n\t\t\t\t\t@CancelBilledAmountMonthly, --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) AS DeliveryChargeAmount, \r\n\t\t\t\t\t0, --  IsNull(UploadConEdisonAccountTempSummarySPanned.CCF,0) AS TotalCCF, \r\n\t\t\t\t\t0, --  IsNull(UploadConEdisonAccountTempSummarySPanned.Therms,0) AS TotalTherms, \r\n\t\t\t\t\t1.000, --  IsNull(UploadConEdisonAccountTempSummarySPanned.ThermFactor,1.0) AS ThermsFactor,\r\n\t\t\t\t\t@CalculatedFromDate, --  UploadConEdisonCancellationTempSummary.CancelFromDate, \r\n\t\t\t\t\t@CalculatedToDate, --  UploadConEdisonCancellationTempSummary.CancelToDate, \r\n\t\t\t\t\t@CancelBilledAmountMonthly, --  IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS CancelDeliveryChargeAmount, \r\n\t\t\t\t\t@CancelCCFMonthly, --  IsNull(UploadConEdisonCancellationTempSummary.CancelCCF,0) AS CancelTotalCCF, \r\n\t\t\t\t\t@CancelThermsMonthly, --  IsNull(UploadConEdisonCancellationTempSummary.CancelTherms,0) AS CancelTotalTherms, \r\n\t\t\t\t\tCASE @CancelCCFMonthly WHEN 0 THEN 1.0000 ELSE round(@CancelThermsMonthly*1.0 / @CancelCCFMonthly,4) END, --  IsNull(UploadConEdisonCancellationTempSummary.CancelThermFactor,1.0) AS CancelThermsFactor\r\n\t\t\t\t\t[dbo].[CalculateNumberOfBillingDays]  (@CalculatedFromDate,@CalculatedToDate), -- IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n\t\t\t\t\t@Notes,\r\n\t\t\t\t\t@BillingPeriodRevision,\r\n\t\t\t\t\t@FirstPeriodCanceled,\r\n\t\t\t\t\t@CancelBilledAmount,\r\n\t\t\t\t\t@CancelCCF,\r\n\t\t\t\t\t@CancelThermFactor,\r\n\t\t\t\t\t@CancelTherms,\r\n\t\t\t\t\t@ApplyMonthlyPercentage,\r\n\t\t\t\t\t@TotalGasSpannedBilledPercentage,\r\n\t\t\t\t\t[dbo].ConvertDateToYYYYMMDD (@PostingDate),[dbo].ConvertDateToYYYYMMDD (Getdate()),\r\n\t\t\t\t\t\r\n\t\t\t\t\t@authenticatedID,\r\n\t\t\t\t\tGETDATE(),\r\n\t\t\t\t\tGETDATE(),\r\n\t\t\t\t\tFacilityName,\r\n\t\t\t\t\tServiceAddress\r\n\t\t\t\tFROM NationalGridWest.UploadLegacyKeyspanWestCancellationTempSummarySpanned\r\n\t\t\t\tWHERE (UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid = @UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid) \r\n\r\n\t\t\t\tset @CancelSumAverageCCF = @CancelSumAverageCCF + @CancelCCFAverage \t  \r\n\t\t\t\t\r\n\t\t\t\t--\tCalculate the next the Revised Billing Period row.\r\n\t\t\t\tselect @CalculatedBillingPeriodRevision = [dbo].[CalculateNextBillingPeriod]  (@CalculatedBillingPeriodRevision,@BillingCycle)\r\n\t\t\t\t--\tThis will derive the new Revised Billing Period row's \"FromDate\"\r\n\t\t\t\t-- select @CalculatedFromDate = [dbo].[DetermineConEdisonBillingPeriodProjectedFromDate](@CalculatedBillingPeriodRevision,@TariffCode,@UtilityCode)\r\n\t\t\t\t\t\r\n\t\t\t\tselect @CalculatedFromDate=\r\n\t\t\t\tNationalGridWest.DeterminActualDate(@AccountNumber, 'F', @CalculatedBillingPeriodRevision, @BillingCycle)\r\n\r\n\t\t\t\tif(@CalculatedFromDate is null)\r\n\t\t\t\t\tselect @CalculatedFromDate = NationalGridWest.DetermineProjectedDate(@BillingCycle, @CalculatedBillingPeriodRevision, 'F', substring(@AccountNumber,12,2)) \r\n\r\n\r\n\t\t\t\tset @idx = @idx + 1\r\n\r\n\t\t\t\t\r\n\t\t\tend\t-- end parsing previous n-1 period\r\n\r\n\t\t/*\r\n\t\t--\r\n\t\t--\tFinish up the last period's processing\r\n\t\t--\r\n\t\t*/\r\n\r\n\t\t--\tUse the (Nth -1) periods @CalculatedToDate as the \"FromDate\" and the acutal \"ToDate\" from the spanned record as the \"ToDate\"\r\n\t\t--\r\n\t\tselect @CalculatedFromDate = @CalculatedToDate\r\n\t\tselect @CalculatedToDate = @CancelToDate\r\n\t\t--\r\n\t\t--\t@ApplyMonthlyPercentage is used for the notes purposes only\r\n\t\t--\r\n\t\tselect @ApplyMonthlyPercentage = [dbo].[CalculateApplyMonthlyPercentageGasSpannedBilled] (@CalculatedBillingPeriodRevision,@TotalGasSpannedBilledPercentage)\r\n\t\t--\r\n\t\t--\tDerive the net changes to avoid rounding errors\r\n\t\t--\r\n\t\tset @CancelBilledAmountMonthlyLastPeriod = @CancelBilledAmount - @CancelBilledAmountMonthlySum\r\n\t\tset @CancelThermsMonthlyLastPeriod = @CancelTherms - @CancelThermsMonthlySum\r\n\t\tset @CancelCCFMonthlyLastPeriod = @CancelCCF  - @CancelCCFMonthlySum\r\n\r\n\t\t--\r\n\t\tselect @Notes = SUBSTRING('Therm factor '+cast(@CancelThermFactor as varchar(6))+\r\n\t\t' for '+cast(@DeltaNumberOfPeriods as varchar(6))+' First: '+@FirstPeriodCanceled +' ( '+@CancelFromDate+') Last: '+ \r\n\t\t@BillingPeriodRevision +' ( '+@CancelFromDate+'). '+' period: '+@CalculatedBillingPeriodRevision+ ' Month %: '+cast(@ApplyMonthlyPercentage as varchar(10))+\r\n\t\t' - Total %: '+cast(@TotalGasSpannedBilledPercentage as varchar(10)), 0, 300)\r\n\r\n\t\t--\r\n\r\n\t\tINSERT INTO NationalGridWest.UploadLegacyKeyspanWestCancellationSummary\r\n\t\t(\r\n\t\t\tAccountUtilityCompanySeqid, \r\n\t\t\tOriginalAccountNumber, \r\n\t\t\tNumberOfCancelTransactions, \r\n\t\t\tNumberOfTransactions, \r\n\t\t\tDerivedFromSpannedBill,\r\n\t\t\tBillingPeriod, \r\n\t\t\tBillingPeriodRevision, \r\n\t\t\tFirstCanceledBillingPeriod, \t\t\r\n\t\t\tEstimatedOrActualBilling, \r\n\t\t\tInitialCancelFromDate, \r\n\t\t\tCurrentBillingToDate, \r\n\t\t\tNumberOfBillingPeriods, \r\n\t\t\tTotalBillingDaysRebilled, \t\t\r\n\t\t\tTotalRebilledAmount, \r\n\t\t\tTotalCanceledAmount, \r\n\t\t\tPriorRevisedBilledAmount, \r\n\t\t\tRevisedBilledAmount, \t\t\t\t\t\t\r\n\t\t\tCanceledBilledAmount, \r\n\t\t\tAverageRebillCostOfGasCharge,\r\n\t\t\tAverageRebillThermsFactor, \r\n\t\t\tBillingDays,  \r\n\t\t\tFromDate,\r\n\t\t\tToDate, \r\n\t\t\tBilledAmount, \r\n\t\t\tBillingAction, \r\n\t\t\tProcessedInTheCurrentPeriod, \t\t\r\n\t\t\tGasRateCode, \r\n\t\t\tDeliveryChargeAmount,\r\n\t\t\tTotalCCF, \r\n\t\t\tTotalTherms, \r\n\t\t\tThermsFactor, \t\t\t\r\n\t\t\tCancelFromDate, \r\n\t\t\tCancelToDate, \r\n\t\t\tCancelDeliveryChargeAmount,\r\n\t\t\tCancelTotalCCF, \r\n\t\t\tCancelTotalTherms, \r\n\t\t\tCancelThermsFactor,\r\n\t\t\tCancelBillingDays,\r\n\t\t\tNotes,    \r\n\t\t\tSpannedBillingPeriodRevision,\r\n\t\t\tSpannedFirstCanceledBillingPeriod,\r\n\t\t\tSpannedBilledAmount,\r\n\t\t\tSpannedCCF,\r\n\t\t\tSpannedThermFactor,\r\n\t\t\tSpannedTherm,\r\n\t\t\tSpannedMonthlyPercentage,\r\n\t\t\tSpannedTotalPercentage,\t\t\r\n\t\t\tBillingDate,\r\n\t\t\tProcessEffectiveDate,\r\n\t\t\tAuthenticatedUserID,\r\n\t\t\tDateAdded,\r\n\t\t\tLastUpdate\r\n\t\t\t,\r\n\t\t\tFacilityName,\r\n\t\t\tServiceAddress\r\n\t\t\t)\r\n\t\tSELECT \r\n\t\t\t'9',\r\n\t\t\t@AccountNumber,  --  UploadConEdisonAccountTempSummarySPanned.AccountNumber,\r\n\t\t\t1, --  NumberOfCancelTransactions\r\n\t\t\t1, --  NumberOfTransactions\r\n\t\t\t'Y',  -- DerivedFromSpannedBill = 'Y'\r\n\t\t\tBillingPeriod, \r\n\t\t\t@CalculatedBillingPeriodRevision, -- UploadConEdisonAccountTempSummarySPanned.BillingPeriodRevision, \r\n\t\t\t@CalculatedBillingPeriodRevision, -- UploadConEdisonAccountTempSummarySPanned.FirstPeriodCanceled, \r\n\t\t\t'ACT',  -- EstimatedOrActualBilling needs to be upodated\r\n\t\t\t@CancelFromDate,  -- UploadConEdisonAccountTempSummarySPanned.FromDate AS InitialCancelFromDate, \r\n\t\t\t@CancelToDate, --  UploadConEdisonAccountTempSummarySPanned.ToDate AS CurrentBillingToDate,\r\n\t\t\t[dbo].[CalculateDeltaBillingPeriods] (\r\n\t\t\t\tNationalGridWest.DetermineBillingPeriod(@BillingCycle, @CalculatedFromDate, 'F', substring(@AccountNumber,12,2)),\r\n\t\t\t\tNationalGridWest.DetermineBillingPeriod(@BillingCycle, @CalculatedToDate, 'T', substring(@AccountNumber,12,2)),\r\n\t\t\t\t@BillingCycle\r\n\t\t\t), --UploadConEdisonAccountTempSummarySPanned.DeltaNumberOfPeriods,  \r\n\t\t\t[dbo].[CalculateNumberOfBillingDays]  (@CalculatedFromDate,@CalculatedToDate), -- UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays AS TotalBillingDaysRebilled, \r\n\t\t\t0, --  UploadConEdisonAccountTempSummarySPanned.BilledAmount AS TotalRebilledAmount, \r\n\t\t\t@CancelBilledAmountMonthlyLastPeriod, -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS TotalCanceledAmount,\r\n\t\t\t0 AS PriorRevisedBilledAmount,\r\n\t\t\t0, --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount, 0), \r\n\t\t\t0, -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0), \r\n\t\t\t0 AS AverageRebillCostOfGasCharge, \r\n\t\t\t1.00 AS AverageRebillThermsFactor, \r\n\t\t\t0, --IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n\t\t\tnull,  -- UploadConEdisonAccountTempSummarySPanned.FromDate ,\r\n\t\t\tnull, -- UploadConEdisonAccountTempSummarySPanned.ToDate, \r\n\t\t\t@CancelBilledAmountMonthlyLastPeriod, --  (IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) as  - IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0)) as BilledAmount,\r\n\t\t\tCASE WHEN @BillingPeriod = @CalculatedBillingPeriodRevision THEN 'O' ELSE 'A' END, -- 'O' as BillingAction, \r\n\t\t\t'N' AS ProcessedInTheCurrentPeriod, \r\n\t\t\t@CancelTariffCode, \r\n\t\t\t@CancelBilledAmountMonthlyLastPeriod, --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) AS DeliveryChargeAmount, \r\n\t\t\t0, --  IsNull(UploadConEdisonAccountTempSummarySPanned.CCF,0) AS TotalCCF, \r\n\t\t\t0, --  IsNull(UploadConEdisonAccountTempSummarySPanned.Therms,0) AS TotalTherms, \r\n\t\t\t1.0,\r\n\t\t\t@CalculatedFromDate, --  UploadConEdisonCancellationTempSummary.CancelFromDate, \r\n\t\t\t@CalculatedToDate, --  UploadConEdisonCancellationTempSummary.CancelToDate, \r\n\t\t\t0, --  IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS CancelDeliveryChargeAmount, \r\n\t\t\t@CancelCCFMonthlyLastPeriod, --  IsNull(UploadConEdisonCancellationTempSummary.CancelCCF,0) AS CancelTotalCCF, \r\n\t\t\t@CancelThermsMonthlyLastPeriod, --  IsNull(UploadConEdisonCancellationTempSummary.CancelTherms,0) AS CancelTotalTherms, \r\n\t\t\tCASE @CancelCCFMonthlyLastPeriod WHEN 0 THEN 1.0000 ELSE round(@CancelThermsMonthlyLastPeriod*1.0 / @CancelCCFMonthlyLastPeriod,4) END,--  IsNull(UploadConEdisonCancellationTempSummary.CancelThermFactor,1.0) AS CancelThermsFactor\r\n\t\t\t[dbo].[CalculateNumberOfBillingDays]  (@CalculatedFromDate,@CalculatedToDate),-- IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n\t\t\t@Notes,\r\n\t\t\t@BillingPeriodRevision,\r\n\t\t\t@FirstPeriodCanceled,\r\n\t\t\t@CancelBilledAmount,\r\n\t\t\t@CancelCCF,\r\n\t\t\t@CancelThermFactor,\r\n\t\t\t@CancelTherms,\r\n\t\t\t@ApplyMonthlyPercentage,\r\n\t\t\t@TotalGasSpannedBilledPercentage,\r\n\t\t\t[dbo].ConvertDateToYYYYMMDD (@PostingDate),[dbo].ConvertDateToYYYYMMDD (Getdate()),\r\n\t\t\t@authenticatedID,\r\n\t\t    GETDATE(),\r\n\t\t    GETDATE(),\r\n\t\t\tFacilityName,\r\n\t\t\tServiceAddress\r\n\t\tFROM NationalGridWest.UploadLegacyKeyspanWestCancellationTempSummarySpanned\r\n\t\tWHERE   (UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid = @UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid)\r\n\t\t\t\r\n\r\n\r\n\r\n\tend -- end parsing spanned\r\n\r\nFETCH NEXT FROM SpannedGasBillCursor INTO @UploadLegacyKeyspanWestCancellationTempSummarySpannedSeqid\r\nEND -- end cursor loop\r\n\r\n\r\nCLOSE SpannedGasBillCursor;\r\nDEALLOCATE SpannedGasBillCursor\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nend"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_PreProcessAccountBillingSetup",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_PreProcessAccountBillingSetup",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to preprocess account billing setups for the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " system. It primarily updates and processes billing adjustments, focusing on handling miscellaneous credits and ensuring that account sequences and statuses are correctly set. The procedure involves several update operations on the "
        },
        {
          "type": "text",
          "text": "UploadAccountBillingAdjustmentCrisGas",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table, with data sourced from related tables like "
        },
        {
          "type": "text",
          "text": "UploadPaymentDetail",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", "
        },
        {
          "type": "text",
          "text": "Account",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", "
        },
        {
          "type": "text",
          "text": "AccountBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", and "
        },
        {
          "type": "text",
          "text": "AccountBillingCrisGas",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". It also manages potential back billing scenarios by inserting relevant data into the "
        },
        {
          "type": "text",
          "text": "PossibleBackBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple complex SQL operations, including joins, conditional updates, and aggregations. It manipulates data across several related tables and handles various business rules, making it moderately complex. The complexity is further increased by the need to manage historical billing data and ensure data integrity across different billing periods."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the ID of the authenticated user executing the procedure. It is likely used for auditing or logging purposes, although it is not directly utilized within the procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This output parameter is used to indicate the execution status of the procedure. It returns "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for success and "
                },
                {
                  "type": "text",
                  "text": "9",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for failure, although only a success status is explicitly set in the procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by creating a temporary table "
                },
                {
                  "type": "text",
                  "text": "#MiscellaneousCredit",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to aggregate miscellaneous credit amounts from the "
                },
                {
                  "type": "text",
                  "text": "UploadPaymentDetail",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table, grouped by billing period and account number."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Miscellaneous Credit Update",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Updates the "
                        },
                        {
                          "type": "text",
                          "text": "UploadAccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table with aggregated miscellaneous credit data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Account Sequence ID Update",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Ensures that accounts with a missing "
                        },
                        {
                          "type": "text",
                          "text": "AccountSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " are updated using the latest account sequence ID from the "
                        },
                        {
                          "type": "text",
                          "text": "Account",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table, filtered by "
                        },
                        {
                          "type": "text",
                          "text": "CurrentInvoiceAccountGroup = 3",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Billing Information Update",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Updates various billing-related fields in "
                        },
                        {
                          "type": "text",
                          "text": "UploadAccountBillingAdjustmentCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " using data from "
                        },
                        {
                          "type": "text",
                          "text": "AccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "AccountBillingCrisGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " tables."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Old CRIS Adjustments",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Marks old CRIS adjustments and updates related fields, including cancellation and net change in CCF (hundred cubic feet)."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Back Billing Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Count and Review",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Counts and potentially reviews old CRIS adjustments that require attention."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Status Update",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Updates account billing statuses for records with discrepancies between billing periods."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Possible Back Billing",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Inserts records with potential back billing issues into the "
                        },
                        {
                          "type": "text",
                          "text": "PossibleBackBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table for further analysis."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure concludes by setting the "
                },
                {
                  "type": "text",
                  "text": "@StatusCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to indicate successful execution."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved in joins and updates, especially "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", have appropriate indexes to optimize performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table for aggregating miscellaneous credits is efficient for handling intermediate data but should be monitored for performance impact on large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider breaking down updates into smaller batches if the dataset is large to avoid locking and performance degradation."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple updates across related tables, which could lead to data integrity issues if not managed correctly, especially with historical data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances are executed simultaneously, particularly with updates and temporary table usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling mechanisms, which could lead to unhandled exceptions and inconsistent data states."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the performance of the procedure may degrade, necessitating optimization or refactoring to handle larger volumes of data efficiently."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Description:  Process the CrisNationalGridWest account billing setup.  The sequential processing steps needed to\r\n--* Exec:    [CrisNationalGridWest].[usp_CRIS_PreProcessAccountBillingSetup]\r\n--* Parameter(s):     \r\n--*\t\t\t\t\tAuthenticatedUserID int,\r\n--*\t\t\t\t\tStatusCode  int output   -  Execution Return Status \r\n--*\r\n--* Database: OEC\r\n--* Return:\t    0 Success\r\n--*       9 Failure\r\n--* AUTHOR:   Peter Heller (PAH)\r\n--* Created On:   10/26/2005\r\n--**************************************************************************************\r\n--* Date     Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 10/05/2011 PAH  Added qualifier CurrentInvoiceAccountGroup = 3 to avoid finding manual \r\n--*\tbilling accounts from National grid CurrentInvoiceAccountGroup = 45\r\n--*\tVerify that all accounts that have a Billing.Account.AccountSeqid and \r\n--*\tthe CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountSeqid IS NULL update the AccountSeqid\r\n--*\tand the CurrentInvoiceAccountGroup = 3\r\n--* 10/26/2005 PAH  First Version  \r\n--\t2018-11-21\tzd\tupdate I added a filter to target only latest current account when stting the AccountSeqID\r\n--\t\t\t\t\t\t\tThis modification will help process to choose the rigt accountSeqID\r\n--***************************************************************************************\r\nCREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_PreProcessAccountBillingSetup]\r\n(\r\n\t@AuthenticatedUserID AS INT,\r\n\t@StatusCode AS INT OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n\tDECLARE @OldCrisBackBillsPriorToMay2010 AS INT, @OldCrisBackBillsPriorToMay2010NeedsReview AS INT;\r\n\r\n\tIF(OBJECT_ID(N'tempdb..#MiscellaneousCredit') IS NOT NULL)\r\n\t\tDROP TABLE #MiscellaneousCredit;\r\n\r\n\tSELECT BillingPeriod, AccountNumber, PaymentBillingPeriod, SUM(MiscellaneousCreditAmount) AS MiscellaneousCreditAmount, \r\n\t\tMAX(MiscellaneousCreditType) AS MiscellaneousCreditType\r\n\t\tINTO [#MiscellaneousCredit]\r\n\tFROM CrisNationalGridWest.UploadPaymentDetail\r\n\tWHERE (BillingPeriod = BillingPeriodRevision) AND (MiscellaneousCreditType IS NOT NULL)\r\n\tGROUP BY BillingPeriod, AccountNumber, PaymentBillingPeriod\r\n\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET\r\n\t\tMiscellaneousCreditAmount = [#MiscellaneousCredit].MiscellaneousCreditAmount, \r\n\t\tMiscellaneousCreditType =[#MiscellaneousCredit].MiscellaneousCreditType,\r\n\t\tMiscellaneousCreditPaymentBillingPeriod = [#MiscellaneousCredit].PaymentBillingPeriod\r\n\tFROM\r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\t[#MiscellaneousCredit] ON \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber = [#MiscellaneousCredit].AccountNumber AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod = [#MiscellaneousCredit].BillingPeriod\r\n\tWHERE\r\n\t\t([#MiscellaneousCredit].MiscellaneousCreditAmount is not null) AND \r\n\t\t([#MiscellaneousCredit].MiscellaneousCreditAmount <> 0 ) AND \r\n\t\t(CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod)\r\n\t\r\n\tSELECT AccountNumber, OriginalAccountNumber,UploadAccountBillingAdjustmentCrisGasSeqid, BillingPeriod, BillingPeriodRevision, MiscellaneousCreditAmount, MiscellaneousCreditType, \r\n\t\tMiscellaneousCreditPaymentBillingPeriod,  Notes\r\n\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tWHERE (MiscellaneousCreditAmount <> 0)\r\n\tORDER BY AccountNumber, BillingPeriodRevision DESC;\r\n\r\n\t--\tVerify that all accounts that have a Billing.Account.AccountSeqid and \r\n\t--\tthe CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountSeqid IS NULL update the AccountSeqid\r\n\t--\tand the CurrentInvoiceAccountGroup = 3\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET AccountSeqid = Billing.Account.AccountSeqid\r\n\tFROM \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\tBilling.Account ON CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber = Billing.Account.CurrentAccountNumber\r\n\tWHERE \r\n\t\t(CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountSeqid IS NULL) AND \r\n\t\t(Billing.Account.AccountSeqid IS NOT NULL) AND\r\n\t\t(Billing.Account.CurrentInvoiceAccountGroup = 3)\r\n\t\tAND Account.AccountSeqid IN (\r\n\t\t\tSELECT MAX(aa.AccountSeqid) AccountSeqid\r\n\t\t\tFROM Billing.Account AS aa \r\n\t\t\tWHERE aa.IsCurrentRecord = 'Y'\r\n\t\t\tGROUP BY aa.CurrentAccountNumber)\r\n\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET\r\n\t\tOriginalAccountNumber =Billing.AccountBilling.OriginalAccountNumber,\r\n\t\tAccountSeqid = Billing.AccountBilling.AccountSeqid,\r\n\t\tAccountBillingSeqid =Billing.AccountBilling.AccountBillingSeqid, \r\n\t\tAccountBillingStatus=Billing.Account.AccountStatus, \r\n\t\tPreviousAccountBillingStatus = Billing.Account.AccountPreviousStatus,\r\n\t\tAccountBillingStatusCodePeriod = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod\r\n\tFROM\r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\tBilling.Account ON CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber = Billing.Account.CurrentAccountNumber INNER JOIN\r\n\t\tBilling.AccountBilling ON Billing.Account.OriginalAccountNumber = Billing.AccountBilling.OriginalAccountNumber AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision\r\n\tWHERE\r\n\t\t(CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod <> CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision)\r\n\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET\r\n\t\tAccountBillingCrisGasSeqid =Billing.AccountBillingCrisGas.AccountBillingCrisGasSeqid,\r\n\t\tAccountBillingGasSeqid = null \r\n\tFROM  \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\tBilling.Account ON CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber = Billing.Account.CurrentAccountNumber INNER JOIN\r\n\t\tBilling.AccountBilling ON Billing.Account.OriginalAccountNumber = Billing.AccountBilling.OriginalAccountNumber AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision INNER JOIN\r\n\t\tBilling.AccountBillingCrisGas ON Billing.AccountBilling.AccountBillingSeqid = Billing.AccountBillingCrisGas.AccountBillingSeqid AND \r\n\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingCrisGas.BillingPeriodRevision\r\n\tWHERE \r\n\t\t(CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod <> CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision)\r\n\r\n\t--\tCancelllations from the AccountBillingGas for Canceled CCF for old CRIS adjustments\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET     \r\n\t\tIsOldCrisGasAdjustment = 'Y',\r\n\t\tAccountBillingGasSeqid = Billing.AccountBillingGas.AccountBillingGasSeqid,\r\n\t\tCancelCCF = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.CancelCCF, \r\n\t\tNetChangeCCF = RevisedCCF - CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.CancelCCF, \r\n\t\tNotes = 'Adjustment Old CRIS  - '+ CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.Notes\r\n\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas INNER JOIN\r\n\t\tBilling.Account ON CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber = Billing.Account.CurrentAccountNumber INNER JOIN\r\n\t\tBilling.AccountBilling ON Billing.Account.OriginalAccountNumber = Billing.AccountBilling.OriginalAccountNumber AND \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision = Billing.AccountBilling.BillingPeriodRevision INNER JOIN\r\n\t\tBilling.AccountBillingGas ON Billing.AccountBilling.AccountBillingSeqid = Billing.AccountBillingGas.AccountBillingSeqid AND \r\n\t\tBilling.AccountBilling.BillingPeriodRevision = Billing.AccountBillingGas.BillingPeriodRevision\r\n\tWHERE (CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod <> CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision);\r\n\r\n\tSET @OldCrisBackBillsPriorToMay2010 = @@ROWCOUNT\r\n\tPRINT  'Count of Back Billed Old CRIS Adjustments' +str(@OldCrisBackBillsPriorToMay2010)\r\n\r\n\tIF( @OldCrisBackBillsPriorToMay2010 <> 0)\r\n\tBEGIN\r\n\t\tSELECT 'Back Billed Old CRIS Adjustments' AS Review, BillingPeriod, BillingPeriodRevision, AccountNumber, OriginalAccountNumber, AccountSeqid, AccountBillingSeqid, AccountBillingCrisGasSeqid, \r\n\t\t\tAccountBillingGasSeqid\r\n\t\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\t\tWHERE (BillingPeriod <> BillingPeriodRevision) AND (AccountNumber <> OriginalAccountNumber)\r\n\tEND;\r\n\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET      \r\n\t\tAccountBillingStatus ='BA',\r\n\t\tPreviousAccountBillingStatus ='NB'\r\n\tWHERE \r\n\t\t(BillingPeriod <> BillingPeriodRevision) AND (AccountBillingSeqid IS NULL) OR\r\n\t\t(BillingPeriod <> BillingPeriodRevision) AND (AccountBillingCrisGasSeqid IS NULL)\r\n\r\n\tTRUNCATE TABLE CrisNationalGridWest.PossibleBackBilling\r\n\t\r\n\tINSERT INTO CrisNationalGridWest.PossibleBackBilling\r\n\t\t(Review, BillingPeriod, BillingPeriodRevision, AccountBillingSeqid, AccountBillingCrisGasSeqid, AccountNumber, OriginalAccountNumber, \r\n\t\tAccountBillingStatus, PreviousAccountBillingStatus, AccountBillingStatusCodePeriod)\r\n\tSELECT    \r\n\t\t'Possible Back billing' AS Review, BillingPeriod, BillingPeriodRevision, AccountBillingSeqid, AccountBillingCrisGasSeqid, AccountNumber, OriginalAccountNumber, AccountBillingStatus, \r\n\t\tPreviousAccountBillingStatus, AccountBillingStatusCodePeriod\r\n\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tWHERE  (BillingPeriod <> BillingPeriodRevision) AND \r\n\t\t(AccountBillingSeqid IS NULL) OR\r\n\t\t(BillingPeriod <> BillingPeriodRevision) AND \r\n\t\t(AccountBillingCrisGasSeqid IS NULL)\r\n\tSET @StatusCode = 0\r\nEND;\r\n\r\nSELECT BillingPeriod, BillingPeriodRevision, AccountBillingSeqid, AccountBillingCrisGasSeqid, AccountNumber,\r\n\tOriginalAccountNumber, AccountBillingStatus, PreviousAccountBillingStatus, AccountBillingStatusCodePeriod\r\nFROM CrisNationalGridWest.PossibleBackBilling"
        }
      ]
    }
  ]
}
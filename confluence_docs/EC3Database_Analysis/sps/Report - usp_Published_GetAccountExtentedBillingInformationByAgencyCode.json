{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_GetAccountExtentedBillingInformationByAgencyCode",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_GetAccountExtentedBillingInformationByAgencyCode",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve extended billing information for accounts associated with a specific agency code. It processes billing data for different energy sources (electric, gas, steam) and returns detailed billing adjustments and consumption data. The procedure logs its usage, determines whether to fetch data by agency or facility, and uses multiple UNION ALL queries to compile results from various billing adjustment tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this stored procedure is high due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple conditional logic paths based on input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses Common Table Expressions (CTEs) and table variables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs multiple UNION ALL operations to combine results from different billing adjustment sources."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves complex joins and filtering logic across several tables."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report, used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which the data is being requested."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCode AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The code representing the agency for which billing information is required."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@OECFacilityNumber AS VARCHAR(7)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The facility number used to determine if data should be fetched by agency or facility."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure logs its execution details using the "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " stored procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determine Data Scope",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It checks if the facility number corresponds to a valid sequence ID. If not, it sets a flag to fetch data by agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Hierarchy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It populates a table variable with agency division sequence IDs, including descendants, using a user-defined function."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Electric Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Uses a CTE to aggregate electric billing adjustments and consumption data, then selects detailed billing information."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Gas Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Retrieves gas billing adjustments and consumption data, filtering by energy source."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "CRIS Gas Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Similar to gas data but from a different adjustment table."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Steam Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Retrieves steam billing adjustments."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Manual Billing Data",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Retrieves manual billing adjustments for electric and gas, using different logic for each energy source."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Result Compilation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Combines results from all data retrieval blocks using UNION ALL."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which can improve performance by avoiding locks but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Aggregations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of multiple joins and aggregations can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "UNION ALL Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Combining multiple result sets can increase execution time and memory usage."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Variables and CTEs",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While useful for organizing logic, they can impact performance if not optimized, especially with large intermediate result sets."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted or inconsistent data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity and number of joins may not scale well with large datasets or high concurrency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions or incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on External Functions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on a user-defined function for agency hierarchy, which could introduce dependencies or performance bottlenecks if not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains hardcoded logic for energy sources, which may require updates if business rules change."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_GetAccountExtentedBillingInformationByAgencyCode]\n(\r\n\t@EmailAddress AS VARCHAR(75),\r\n\t@PublishedBillingPeriod AS VARCHAR(6),\r\n\t@AgencyCode AS VARCHAR(6),\r\n\t@OECFacilityNumber AS VARCHAR(7)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @spname VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName\t\t\t\t\t= @spname,\r\n\t\t@StoredProcName\t\t\t\t= @spname,\r\n\t\t@RequestedBy\t\t\t\t= @EmailAddress,\r\n\t\t@prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n\t\t@prmBillingPeriod\t\t\t= NULL,\r\n\t\t@prmAgency_ies\t\t\t\t= @AgencyCode,\r\n\t\t@prmFacilityNumber_s\t\t= @OECFacilityNumber,\r\n\t\t@prmStartingBillingPeriod\t= NULL,\r\n\t\t@prmEndingBillingPeriod\t\t= NULL;\r\n\t\r\n\tDECLARE @FacilitySeqid AS INT, @ResultByAgency AS CHAR(1);\r\n\t\t\r\n\t-- convert the facility number to seqid\r\n\tSELECT @FacilitySeqid = FacilitySeqid FROM Billing.Facility WHERE OecFacilityNumber = @OECFacilityNumber;\t\r\n\t\r\n\t-- determine if we need to return data by agency or simply for the single facility\r\n\tIF (@FacilitySeqid IS NULL)\r\n\tBEGIN\r\n\t\tSET @ResultByAgency = 'Y';\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\tSET @ResultByAgency = 'N';\r\n\tEND;\r\n\t\t\t\r\n\t-- collect the agencies into a table variable to save a bit\r\n\tDECLARE @AgencyAndItsDecendants TABLE(AgencyDivisionSeqID INT);\r\n\r\n\t-- populate the table\r\n\tINSERT INTO @AgencyAndItsDecendants (AgencyDivisionSeqID)\r\n\tSELECT AgencyDivisionSeqID \r\n\tFROM Billing.uftn_TableGetAllAgencyChildrenByAgencyCodeOEC(@AgencyCode, @EmailAddress);\r\n\r\n\t-- return a view of the AccountBillingAdjutmentElectric data\r\n\t\r\n\t-- the Electric Block\t\r\n\t\t\r\n\t-- Define the CTE expression name and column list.\r\n\tWITH ABAE_TOD_Usage_CTE (ABAESeqid, BillingPeriod, BillingPeriodRevision,ConsumtionOnPeak ,ConsumtionOffPeak, CancelConsumtionOnPeak, CancelConsumtionOffPeak)\r\n\tAS(SELECT ABAE.AccountBillingAdjustmentElectricSeqid AS ABAESeqid\r\n\t\t\t,ABAE.BillingPeriod\r\n\t\t\t,ABAE.BillingPeriodRevision\r\n\t\t\t,SUM(MBAE.Consumption) AS ConsumtionOnPeak\r\n\t\t\t,SUM(MBAE.ConsumptionHoursOffPeak) AS ConsumtionOffPeak\r\n\t\t\t,SUM(MBAE.CancelConsumption) AS CancelConsumtionOnPeak\r\n\t\t\t,SUM(MBAE.CancelConsumptionHoursOffPeak) AS CancelConsumtionOffPeak\r\n\t\tFROM Billing.AccountBillingAdjustmentElectric ABAE \r\n\t\t\tINNER JOIN Billing.Account AS A ON ABAE.AdjustedAccount = A.AccountSeqid \r\n\t\t\tINNER JOIN Billing.AccountExchangeMeterTrack AS AEMT ON A.AccountSeqid = AEMT.OriginalAccountSeqid \r\n\t\t\tINNER JOIN Billing.Meter AS M ON AEMT.OriginalMeterSeqid = M.MeterSeqid \r\n\t\t\tINNER JOIN Billing.MeterBillingAdjustmentElectric AS MBAE ON M.MeterSeqid = MBAE.MeterBilled\r\n\t\t\t\tAND ABAE.BillingPeriod = MBAE.BillingPeriod AND ABAE.BillingPeriodRevision = MBAE.BillingPeriodRevision\r\n\t\tWHERE ABAE.IsTimeOfDayAccount = 'Y' AND MBAE.BillingPeriod = @PublishedBillingPeriod\r\n\t\t\tAND (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\t\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\r\n\t\tGROUP BY ABAE.AccountBillingAdjustmentElectricSeqid, ABAE.BillingPeriod, ABAE.BillingPeriodRevision)\r\n\t\t\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAE.BillingPeriod\r\n\t\t,ABAE.BillingPeriodRevision\r\n\t\t,alrdfcp.OriginalBilledAmount\r\n\t\t,alrdfcp.PaidAdjustmentAmount\r\n\t\t,alrdfcp.TotalAmountDue\r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN ABAE.AccountEnergyUsage ELSE CTE.ConsumtionOnPeak END AS AccountOnPeakKWH \r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN 0 ELSE CTE.ConsumtionOffPeak END AS AccountOffPeakKWH\r\n\t\t,ABAE.AccountDemandUsage AS AccountDemandKW\r\n\t\t,ABAE.AccountReactivePowerEnergy AS AccountReactivePowerEnergy\r\n\t\t,ABAE.CommodityConsumption + ABAE.CommodityConsumptionOffPeak + ABAE.CommodityConsumptionShoulder AS ProductionEnergyCharge\r\n\t\t,ABAE.CommodityDemand + ABAE.CommodityDemandOffPeak + ABAE.CommodityDemandShoulder + ABAE.MinimumBilledDemandDollars AS ProductionDemandCharge\r\n\t\t,ABAE.EnergyCostAdjustment AS ProductionECACharges\r\n\t\t,ABAE.DeliveryChargeAmount \r\n\t\t,ABAE.DeliveryConsumption\r\n\t\t,ABAE.DeliveryDemand + ABAE.DeliveryMinimumBilledAmount AS DeliveryDemandCharge\r\n\t\t,ABAE.CustomerLevelAdjustmentAmount AS AllocatedCityWideElectricCharge\r\n\t\t,ABAE.CommodityAllocationCharge + ABAE.DeliveryAllocationCharge AS FixedCharges\r\n\t\t,ABAE.GrossReceiptTax\r\n\t\t,ABAE.RevisedReactivePowerDollars \r\n\t\t,ABAE.MinimumBilledDemandUsage\r\n\t\t,ABAE.DeliveryMinimumBilledDemand\r\n\t\t,ABAE.ProductionMisc1 AS ZECsCharge\r\n\t\t--Cancel Block\r\n\t\t,ABAE.ProductionMisc1 AS OriginalZECsCharge\r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN (-1) * ABAE.CancelAccountEnergyUsage ELSE (-1) * CTE.CancelConsumtionOnPeak END AS OriginalAccountOnPeakKHW \r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN 0 ELSE (-1) * CTE.CancelConsumtionOffPeak END AS OriginalAccountOffPeakKWH\r\n\t\t,(-1) * ABAE.CancelAccountDemandUsage AS OriginalAccountDemandKW\r\n\t\t,(-1) * ABAE.CanceledAccountReactivePowerEnergy AS OriginalAccountReactivePowerEnergy  \r\n\t\t,(-1) * ABAE.CancelCommodityConsumption + (-1) * ABAE.CancelCommodityConsumptionOffPeak + (-1) * ABAE.CancelCommodityConsumptionShoulder AS OriginalProductionEnergyCharge\r\n\t\t,(-1) * ABAE.CancelCommodityDemand + (-1) * ABAE.CancelCommodityDemandOffPeak + (-1) * ABAE.cancelCommodityDemandShoulder + (-1) * ABAE.CancelMinimumBilledDemandDollars AS OriginalProductionDemandCharge\r\n\t\t,(-1) * ABAE.CancelEnergyCostAdjustment AS OriginalProductionECACharges\r\n\t\t,(-1) * ABAE.CancelDeliveryChargeAmount AS OriginalDeliveryChargeAmount\r\n\t\t,(-1) * ABAE.CancelDeliveryConsumption AS OriginalDeliveryConsumption\r\n\t\t,(-1) * ABAE.CancelDeliveryDemand + (1) * ABAE.CancelDeliveryMinimumBilledAmount AS OriginalDeliveryDemandCharge\r\n\t\t,ABAE.CustomerLevelAdjustmentAmount AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,ABAE.CommodityAllocationCharge + ABAE.DeliveryAllocationCharge AS OriginalFixedCharges\r\n\t\t,(-1) * ABAE.CancelGrossReceiptTax AS OriginalGrossReceiptTax\r\n\t\t,(-1) * ABAE.OriginalReactivePowerDollars AS OriginalReactivePowerDollars \r\n\t\t-- steam block here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,NULL AS RevisedCCF\r\n\t\t,NULL AS OriginalCCF\r\n\t\t,NULL AS RevisedTherms\r\n\t\t,NULL AS OriginalTherms\t\t\t\t\t\t\r\n\tFROM Billing.AccountBillingAdjustmentElectric AS ABAE\r\n\t\tINNER JOIN Billing.Account AS A ON ABAE.AdjustedAccount = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\t\tLEFT JOIN ABAE_TOD_Usage_CTE AS CTE ON ABAE.AccountBillingAdjustmentElectricSeqid = CTE.ABAESeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAE.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND  (alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAE.BillingPeriodRevision = alrdfcp.BillingPeriod\r\n\tUNION ALL\r\n\t-- the GAS block\r\n\tSELECT  \r\n\t\tCurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAG.BillingPeriod\r\n\t\t,ABAG.BillingPeriodRevision\r\n\t\t,alrdfcp.OriginalBilledAmount\r\n\t\t,alrdfcp.PaidAdjustmentAmount\r\n\t\t,alrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,alrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand \r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy  \r\n\t\t,alrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars \r\n\t\t-- steam block here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,RevisedCCF AS RevisedCCF\r\n\t\t,ABAG.CanceledCCF AS OriginalCCF\r\n\t\t,RevisedTherms AS RevisedTherms\r\n\t\t,ABAG.CanceledTherms AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentGas AS ABAG\r\n\t\tINNER JOIN Billing.Account AS A ON ABAG.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAG.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND (alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAG.BillingPeriodRevision = alrdfcp.BillingPeriod\r\n\t\tAND A.EnergySource = 5\r\n\tUNION ALL\r\n\t-- the CRIS GAS block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABACG.BillingPeriod\r\n\t\t,ABACG.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand \r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\t\t\t\t\t\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy  \r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OrignalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars \r\n\t\t-- steam block here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,RevisedCCF AS RevisedCCF\r\n\t\t,ABACG.CancelCCF AS OriginalCCF\r\n\t\t,RevisedTherms AS RevisedTherms\r\n\t\t,ABACG.CancelTherms AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentCrisGas AS ABACG\r\n\t\tINNER JOIN Billing.Account AS A ON ABACG.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABACG.BillingPeriod = @PublishedBillingPeriod   \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABACG.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\tUNION ALL\r\n\t-- the manual billing STEAM block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAPB.BillingPeriod\r\n\t\t,ABAPB.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars \r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand\r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy  \r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars \r\n\t\t-- steam starts here\r\n\t\t,ABAPB.RevisedEnergy AS RevisedMLBS\r\n\t\t,ABAPB.CanceledEnergy AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,NULL AS RevisedCCF\r\n\t\t,NULL AS OriginalCCF\r\n\t\t,NULL AS RevisedTherms\r\n\t\t,NULL AS OriginalTherms\t\t\t\t\t\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill AS ABAPB\r\n\t\tINNER JOIN Billing.Account AS A ON ABAPB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAPB.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAPB.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\t\tAND CurrentAccount.EnergySource = 6\r\n\tUNION ALL\t\r\n\t-- the manual billing ELECTRIC block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,1 AS EnergySource\r\n\t\t,ABAPB.BillingPeriod\r\n\t\t,ABAPB.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,ABAPB.RevisedEnergy AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,ABAPB.RevisedDemand AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars \r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand\r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,ISNULL(ABAPB.CanceledEnergy, 0) AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,ISNULL(ABAPB.CanceledDemand, 0) AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy  \r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars \r\n\t\t-- steam starts here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,NULL AS RevisedCCF\r\n\t\t,NULL AS OriginalCCF\r\n\t\t,NULL AS RevisedTherms\r\n\t\t,NULL AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill AS ABAPB\r\n\t\tINNER JOIN Billing.Account AS A ON ABAPB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAPB.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAPB.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\t\tAND CurrentAccount.EnergySource IN (1,2,3,4) -- all electric\r\n\tUNION ALL\r\n\t-- the manual billing GAS block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAPB.BillingPeriod\r\n\t\t,ABAPB.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars \r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand\r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy  \r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars \r\n\t\t-- steam starts here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,ABAPB.RevisedCCF AS RevisedCCF\r\n\t\t,ABAPB.CanceledCCF AS OriginalCCF\r\n\t\t,ABAPB.RevisedEnergy AS RevisedTherms\r\n\t\t,ABAPB.CanceledEnergy AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill AS ABAPB\r\n\t\tINNER JOIN Billing.Account AS A ON ABAPB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAPB.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAPB.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\t\tAND CurrentAccount.EnergySource = 5; -- gas only\r\nEND;"
        }
      ]
    }
  ]
}
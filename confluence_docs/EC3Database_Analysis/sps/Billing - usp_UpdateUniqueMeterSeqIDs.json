{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_UpdateUniqueMeterSeqIDs",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_UpdateUniqueMeterSeqIDs",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to update unique sequence IDs for meters in a billing system. It processes meter records to assign or update unique identifiers based on certain conditions, ensuring that each meter has a unique sequence ID. The procedure uses a temporary table to manage and process meter data before updating the main "
        },
        {
          "type": "text",
          "text": "Billing.Meter",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. It handles different scenarios based on the number of records and the status of the meters, and it raises an error if there are unresolved issues that require manual intervention."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple conditional updates and checks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a temporary table to manage intermediate data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes error handling and conditional logic to manage different scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It processes data in batches and updates the main table based on the processed results."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is an output parameter used to indicate the status of the procedure execution. It is set to "
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " if there are issues that require manual intervention, otherwise, it remains unchanged."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Creation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A temporary table "
                },
                {
                  "type": "text",
                  "text": "@UniqueMeterTEMP",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is created to store and process meter data. It includes fields for unique meter sequence IDs, meter numbers, processing status, and other relevant information."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure inserts records into the temporary table for meters that do not have a unique sequence ID. It selects meters with a "
                },
                {
                  "type": "text",
                  "text": "CurrentMeterNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " that matches those without a "
                },
                {
                  "type": "text",
                  "text": "UniqueMeterSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Record Count Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates the "
                },
                {
                  "type": "text",
                  "text": "recordCountINMeter",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " field in the temporary table to reflect the number of records for each "
                },
                {
                  "type": "text",
                  "text": "CurrentMeterNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Unique ID Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It updates the "
                },
                {
                  "type": "text",
                  "text": "UniqueMeterSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for records with more than one entry and no existing unique sequence ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Processing Status Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure marks records as processed ("
                },
                {
                  "type": "text",
                  "text": "isPorcessed = 'Y'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") if they have a unique sequence ID."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Direct Updates for Specific Conditions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Meters with a single status and matching "
                        },
                        {
                          "type": "text",
                          "text": "CurrentMeterNumber",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "OriginalMeterNumber",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " are directly assigned their "
                        },
                        {
                          "type": "text",
                          "text": "MeterSeqid",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " as "
                        },
                        {
                          "type": "text",
                          "text": "UniqueMeterSeqId",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Meters with two statuses and specific conditions (e.g., status not '45') are also directly updated."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Manual Review Flagging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Records that require manual review (e.g., more than two statuses) are flagged with a note indicating the need for manual intervention."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Update and Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If there are unprocessed records, an error is raised, and "
                        },
                        {
                          "type": "text",
                          "text": "@StatusCode",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is set to "
                        },
                        {
                          "type": "text",
                          "text": "1",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If all records are processed, the main "
                        },
                        {
                          "type": "text",
                          "text": "Billing.Meter",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table is updated with the new unique sequence IDs and current record status."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table can be efficient for managing intermediate data, but it may consume memory and resources, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure processes data in batches, which can be efficient but may need optimization for very large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the "
                },
                {
                  "type": "text",
                  "text": "Billing.Meter",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is properly indexed on fields like "
                },
                {
                  "type": "text",
                  "text": "MeterSeqid",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "CurrentMeterNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to optimize query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Incorrect updates to "
                },
                {
                  "type": "text",
                  "text": "UniqueMeterSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could lead to data integrity issues if the logic does not correctly handle all scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure raises an error if there are unprocessed records, but it does not provide a mechanism to automatically resolve these issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the "
                },
                {
                  "type": "text",
                  "text": "Billing.Meter",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table is being updated by other processes simultaneously, there could be concurrency issues leading to data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Typographical Errors",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": There is a typo in the column name "
                },
                {
                  "type": "text",
                  "text": "isPorcessed",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which should be "
                },
                {
                  "type": "text",
                  "text": "isProcessed",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". This could lead to confusion or errors in future maintenance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- Stored Procedure\n\r\nCREATE PROCEDURE [Billing].[usp_UpdateUniqueMeterSeqIDs] @StatusCode INT  OUTPUT   \r\n AS \r\n\r\n BEGIN\r\n\t\t--**************************************************************************************\r\n\t\t--* Description:\tUpdates Meter UniqueIDs\r\n\t\t--*\r\n\t\t--* AUTHOR:       Zafer Durmaz\t\r\n\t\t--* Created On:   2016-09-10\r\n\t\t--**************************************************************************************\r\n\t\t--* Date       Tech Description of Change\r\n\t\t--* ---------- ---\t-------------------------------------------------------------\r\n\t\t--* 2016-09-10  zd  First Version \r\n\t\t--***************************************************************************************\r\n\r\n\r\n-- Create temp table to process initial unique ids\r\nDECLARE @UniqueMeterTEMP TABLE\r\n(\r\n\t[UniqueMeterSeqId] [INT] NULL,\r\n\t[MeterSeqid] [dbo].[seqid] NOT NULL,\r\n\t[CurrentMeterNumber] [dbo].[acctnum] NOT NULL,\r\n\t[OriginalMeterNumber] [dbo].[acctnum] NOT NULL,\r\n\t[isPorcessed] [VARCHAR](1) NULL,\r\n\t[isCurrentMeter] [VARCHAR](1) NULL,\r\n\t[NumofRecords] [INT] NULL,\r\n\t[MeterEffectiveTurnOn] [dbo].[yyyymmdd] NULL,\r\n\t[MeterEffectiveTurnOff] [dbo].[yyyymmdd] NULL,\r\n\t[MeterStatus] [dbo].AccountStatus NULL,\r\n\t[recordCountINMeter] [INT] NULL,\r\n\tnote VARCHAR(250) NULL  \r\n) \r\n\r\n-- all accounts with no uniqueseqid and related account (with currentaccountnumber)\r\nINSERT  INTO @UniqueMeterTEMP\r\n        ( UniqueMeterSeqId\r\n        , MeterSeqid\r\n        , CurrentMeterNumber\r\n        , OriginalMeterNumber\r\n        , isPorcessed\r\n        , isCurrentMeter\r\n        , MeterEffectiveTurnOn\r\n        , MeterEffectiveTurnOff\r\n        , MeterStatus\r\n\r\n        )\r\n\r\n\r\n        SELECT  \r\n\t\t0 AS UniqueMeterSeqId\r\n        ,       m.MeterSeqid\r\n        ,       m.CurrentMeterNumber\r\n        ,       m.OriginalMeterNumber\r\n        ,       'N' AS isPorcessed\r\n        ,       'N' AS isCurrentMeter\r\n        ,       m.MeterEffectiveOnDate\r\n        ,       m.MeterEffectiveOffDate\r\n        ,       m.MeterStatus\r\n        FROM Billing.Meter AS m\r\n\t\tWHERE m.CurrentMeterNumber\r\n\t\tIN (SELECT mm.CurrentMeterNumber FROM Billing.meter AS mm  WHERE mm.UniqueMeterSeqid IS NULL )\r\n\r\n\r\n--SELECT * FROM @UniqueMeterTEMP \r\n\r\n----------------------------------------------------------------------------------------------\r\n-- update recordsCountINmeter\r\n\r\nUPDATE umt \r\nSET recordCountINMeter = cnt.Metercount\r\nFROM\r\n(\r\n\tSELECT CurrentMeterNumber , COUNT(*) Metercount\r\n\tFROM @UniqueMeterTEMP AS m\r\n\tGROUP BY CurrentMeterNumber\r\n) cnt , @UniqueMeterTEMP umt\r\nWHERE cnt.CurrentMeterNumber = umt.CurrentMeterNumber\r\n\r\n--SELECT * FROM @UniqueAccountTEMP AS uat\r\n\r\n----------------------------------------------------------------------------------------------\r\n-- update uniq id \r\nUPDATE umt \r\nSET UniqueMeterSeqId = umm.UniqueMeterSeqId\r\nFROM Billing.Meter AS umm , @UniqueMeterTEMP umt\r\nWHERE umt.MeterSeqid=umm.MeterSeqid\r\nAND umt.CurrentMeterNumber IN (SELECT mm.CurrentMEterNumber FROM Billing.Meter AS mm WHERE umm.UniqueMeterSeqid IS NULL )\r\nAND umt.recordCountINMeter > 1\r\n\r\n----------------------------------------------------------------------------------------------\r\n-- update isprocessed ='Y' for all accounts with uniqseqid\r\nUPDATE umt\r\nSET \r\nisPorcessed = 'Y'\r\nFROM @UniqueMeterTEMP umt, Billing.meter AS umm\r\nWHERE umt.UniqueMeterSeqId = umm.UniqueMeterSeqId\r\n\r\n--SELECT * FROM @UniqueAccountTEMP AS uat\r\n----------------------------------------------------------------------------------------------\r\n\r\n-- UPDATE the accountseqID to the uniqueseqid straight\r\n-- these are the accounts with single status \r\n-- all accounts with single line of records ( CurrentAccountNumber=OriginalAccountNumber )\r\n\r\nUPDATE umt\r\nSET \r\nUniqueMeterSeqId = MeterSeqid , \r\numt.isCurrentMeter = 'Y', \r\nisPorcessed = 'Y',\r\nNOTe = '#1# Meters with single status / Direct insert / CurrentmeterNumber = OriginalmeterNumber'\r\nFROM @UniqueMeterTEMP umt\r\nWHERE REPLACE(CurrentMeterNumber,'0','') = REPLACE(OriginalMeterNumber,'0','')\r\nAND recordCountINMeter = 1\r\nAND isPorcessed = 'N'\r\n\r\n----------------------------------------------------------------------------------------------\r\n\r\n-- UPDATE the accountseqID to the uniqueseqid straight\r\n-- these are the accounts with 2 statuses but the status of record without uniqueseqid is not 45\r\n\r\nUPDATE umt\r\nSET \r\nUniqueMeterSeqId = MeterSeqid , \r\nisCurrentMeter = 'Y', \r\nisPorcessed = 'Y',\r\nNOTe = '#2# Accounts with 2 statuses - status of new data is not 45'\r\nFROM @UniqueMeterTEMP AS umt\r\nWHERE REPLACE(CurrentMeterNumber,'0','') = REPLACE(OriginalMeterNumber,'0','')\r\nAND recordCountINMeter = 2\r\nAND MeterStatus <> '45'\r\nAND isPorcessed = 'N'\r\n----------------------------------------------------------------------------------------------\r\n-- UPDATE the accountseqID to the uniqueseqid straight\r\n-- these are the accounts with 2 statuses but the status of record without uniqueseqid is not AX\r\n\r\nUPDATE umt\r\nSET \r\n--we do not need to update this here because we already made an update for this before, when we do the update for uniqqseqid , \r\nisCurrentMeter = 'Y', \r\nisPorcessed = 'Y',\r\nNOTe = '#3# Accounts with 2 statuses / status of new data is AX / update uniqid with relatives id'\r\nFROM @UniqueMeterTEMP AS umt\r\nWHERE REPLACE(CurrentMeterNumber,'0','') = REPLACE(OriginalMeterNumber,'0','')\r\nAND recordCountINMeter = 2\r\nAND MeterStatus = '45'\r\nAND isPorcessed = 'N'\r\n----------------------------------------------------------------------------------------------\r\n-- this is the data to be processed manually, \r\n\r\nUPDATE umt\r\nSET \r\n--UniqueSeqId = AccountSeqid , \r\nisCurrentMeter = NULL , \r\nisPorcessed = 'N',\r\nNOTe = '#4# This account has to be reviewd and inserted to map table manually'\r\nFROM @UniqueMeterTEMP umt\r\nWHERE REPLACE(CurrentMeterNumber,'0','') = REPLACE(OriginalMeterNumber,'0','')\r\nAND recordCountINMeter > 2\r\nAND isPorcessed = 'N'\r\n\r\n\r\nSELECT * FROM @UniqueMeterTEMP AS uat WHERE uat.isPorcessed= 'N'\r\n-------------------------------------------------------------------------------------------------------\r\n\r\nDECLARE @StringMeterList VARCHAR(500)\r\n\r\nSELECT @StringMeterList = STUFF( (SELECT ' , ' + CurrentMeterNumber FROM @UniqueMeterTEMP AS umt WHERE umt.isPorcessed='N' FOR XML PATH('') ), 1, 1, '')\r\n\r\n\r\n-- Final step, inserting the data to map table if there is no issues\r\n-- if there are issues and need to add mapping data manually, use can use below code\r\n--\tINSERT INTO dbo.UniqueAccountMAP(UniqueSeqId, AccountSeqid, isCurrentAccount)\r\n--\tVALUES (@AccountSeqID,@UniqueSeqID,@isCurrentAccount)\r\n\r\nDECLARE @msg VARCHAR(MAX) = 'we can not process some meter(s), please inspect these currentmeter numbers manually: '+@StringMeterList\r\nIF ( EXISTS ( SELECT * FROM @UniqueMeterTEMP AS uat WHERE uat.isPorcessed='N' ))\r\n\tBEGIN\r\n\t\tRAISERROR (@msg, 12, 1 ) \r\n\t\tSET @StatusCode = 1\r\n\t\tRETURN\r\n\tEND\r\nELSE\r\n\tBEGIN \r\n\t\tUPDATE Billing.Meter SET UniqueMeterSeqid = \tt.UniqueMeterSeqId\t\t, IsCurrentRecord = isCurrentMeter\r\n\t\tFROM @UniqueMeterTEMP t WHERE t.MeterSeqid = Meter.MeterSeqid\r\n\tEND \r\n\r\n\r\nEND"
        }
      ]
    }
  ]
}
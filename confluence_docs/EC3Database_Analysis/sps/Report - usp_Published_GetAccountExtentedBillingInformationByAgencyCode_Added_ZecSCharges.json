{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_GetAccountExtentedBillingInformationByAgencyCode_Added_ZecSCharges",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_GetAccountExtentedBillingInformationByAgencyCode_Added_ZecSCharges",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to retrieve extended billing information for accounts based on agency code, billing period, and facility number. It logs the usage of the report, determines whether to fetch data by agency or facility, and then compiles billing data from various sources, including electric, gas, and steam billing adjustments. The procedure uses a combination of table joins, common table expressions (CTEs), and conditional logic to aggregate and return detailed billing information."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple UNION ALL operations to combine results from different billing sources."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a CTE to handle specific calculations for electric billing adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure includes conditional logic to determine the scope of data retrieval (by agency or facility)."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It interacts with multiple tables and views, requiring a deep understanding of the database schema."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report, used for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which the data is requested, formatted as YYYYMM."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCode AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The code representing the agency for which billing information is needed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@OECFacilityNumber AS VARCHAR(7)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The facility number used to determine if data should be fetched by facility or agency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by logging the report usage with the "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " stored procedure, capturing details like the report name, requested by, and parameters used."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Facility Sequence ID Determination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It attempts to convert the facility number to a sequence ID. If the facility sequence ID is null, it sets a flag to fetch data by agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Hierarchy",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A table variable is populated with agency division sequence IDs, including descendants, using a user-defined function."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Electric Billing Adjustments",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": A CTE is used to calculate on-peak and off-peak consumption, which is then joined with account and meter data to retrieve detailed billing information."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Gas and Steam Billing Adjustments",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Multiple UNION ALL queries are used to fetch and combine data from gas, CRIS gas, steam, and manual billing adjustments."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Conditional Filtering",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": The queries apply filters based on whether data is retrieved by agency or facility, ensuring only relevant records are included."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure returns a comprehensive dataset containing billing details, including energy consumption, charges, and adjustments for the specified billing period."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which can improve performance by allowing dirty reads but may lead to inconsistent data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Unions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The extensive use of joins and UNION ALL operations can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the tables involved, especially on columns used in joins and filters, is crucial to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Variable",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a table variable for agency hierarchy may impact performance if the dataset is large, as table variables do not have statistics."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Consistency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted changes, resulting in potential data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity and number of joins may affect scalability, particularly as the volume of data grows."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and incomplete data retrieval."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not include any security checks or validations on input parameters, which could expose it to SQL injection if inputs are not properly sanitized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The high complexity and dependency on multiple tables and views make the procedure challenging to maintain and update."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_GetAccountExtentedBillingInformationByAgencyCode_Added_ZecSCharges]\n(\r\n\t@EmailAddress AS VARCHAR(75),\r\n\t@PublishedBillingPeriod AS VARCHAR(6),\r\n\t@AgencyCode AS VARCHAR(6),\r\n\t@OECFacilityNumber AS VARCHAR(7)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\t\r\n\tDECLARE @spname VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName= @spname,\r\n\t\t@StoredProcName\t\t\t\t= @spname,\r\n\t\t@RequestedBy\t\t\t\t= @EmailAddress,\r\n\t\t@prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n\t\t@prmBillingPeriod\t\t\t= NULL,\r\n\t\t@prmAgency_ies\t\t\t\t= @AgencyCode,\r\n\t\t@prmFacilityNumber_s\t\t= @OECFacilityNumber,\r\n\t\t@prmStartingBillingPeriod\t= NULL,\r\n\t\t@prmEndingBillingPeriod\t\t= NULL;\r\n\r\n\tDECLARE @FacilitySeqid AS INT, @ResultByAgency AS VARCHAR(1);\r\n\r\n\t-- convert the facility number to seqid\r\n\tSELECT @FacilitySeqid = FacilitySeqid FROM Billing.Facility WHERE OecFacilityNumber = @OECFacilityNumber;\r\n\t\r\n\t-- determine if we need to return data by agency or simply for the single facility\r\n\tIF (@FacilitySeqid IS NULL)\r\n\tBEGIN\r\n\t\tSET @ResultByAgency = 'Y';\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\tSET @ResultByAgency = 'N';\r\n\tEND;\r\n\r\n\t-- collect the agencies into a table variable to save a bit\r\n\tDECLARE @AgencyAndItsDecendants TABLE(AgencyDivisionSeqID INT);\r\n\r\n\t-- populate the table\r\n\tINSERT INTO @AgencyAndItsDecendants (AgencyDivisionSeqID)\r\n\tSELECT AgencyDivisionSeqID \r\n\tFROM Billing.uftn_TableGetAllAgencyChildrenByAgencyCodeOEC(@AgencyCode, @EmailAddress);\r\n\r\n\t-- return a view of the AccountBillingAdjutmentElectric data\r\n\t\r\n\t-- the Electric Block\t\r\n\tWITH ABAE_TOD_Usage_CTE (ABAESeqid, BillingPeriod, BillingPeriodRevision, ConsumtionOnPeak, ConsumtionOffPeak, CancelConsumtionOnPeak, CancelConsumtionOffPeak)\r\n\tAS(SELECT ABAE.AccountBillingAdjustmentElectricSeqid AS ABAESeqid\r\n\t\t,ABAE.BillingPeriod\r\n\t\t,ABAE.BillingPeriodRevision\r\n\t\t,SUM(MBAE.Consumption) AS ConsumtionOnPeak\r\n\t\t,SUM(MBAE.ConsumptionHoursOffPeak) AS ConsumtionOffPeak\r\n\t\t,SUM(MBAE.CancelConsumption) AS CancelConsumtionOnPeak\r\n\t\t,SUM(MBAE.CancelConsumptionHoursOffPeak) AS CancelConsumtionOffPeak\r\n\tFROM Billing.AccountBillingAdjustmentElectric AS ABAE\r\n\t\tINNER JOIN Billing.Account AS A ON ABAE.AdjustedAccount = A.AccountSeqid\r\n\t\tINNER JOIN Billing.AccountExchangeMeterTrack AS AEMT ON A.AccountSeqid = AEMT.OriginalAccountSeqid\r\n\t\tINNER JOIN Billing.Meter AS M ON AEMT.OriginalMeterSeqid = M.MeterSeqid\r\n\t\tINNER JOIN Billing.MeterBillingAdjustmentElectric AS MBAE ON M.MeterSeqid = MBAE.MeterBilled\r\n\t\t\tAND ABAE.BillingPeriod = MBAE.BillingPeriod AND ABAE.BillingPeriodRevision = MBAE.BillingPeriodRevision\r\n\tWHERE ABAE.IsTimeOfDayAccount = 'Y' AND MBAE.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND (@ResultByAgency <> 'Y' OR A.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR A.FacilityAccount = @FacilitySeqid)\r\n\tGROUP BY ABAE.AccountBillingAdjustmentElectricSeqid, ABAE.BillingPeriod, ABAE.BillingPeriodRevision)\r\n\t\t\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAE.BillingPeriod\r\n\t\t,ABAE.BillingPeriodRevision\r\n\t\t,alrdfcp.OriginalBilledAmount\r\n\t\t,alrdfcp.PaidAdjustmentAmount\r\n\t\t,alrdfcp.TotalAmountDue\r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN ABAE.AccountEnergyUsage ELSE CTE.ConsumtionOnPeak END AS AccountOnPeakKWH \r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN 0 ELSE CTE.ConsumtionOffPeak END AS AccountOffPeakKWH\r\n\t\t,ABAE.AccountDemandUsage AS AccountDemandKW\r\n\t\t,ABAE.AccountReactivePowerEnergy AS AccountReactivePowerEnergy\r\n\t\t,ABAE.CommodityConsumption + ABAE.CommodityConsumptionOffPeak + ABAE.CommodityConsumptionShoulder AS ProductionEnergyCharge\r\n\t\t,ABAE.CommodityDemand + ABAE.CommodityDemandOffPeak + ABAE.CommodityDemandShoulder + ABAE.MinimumBilledDemandDollars AS ProductionDemandCharge\r\n\t\t,ABAE.EnergyCostAdjustment AS ProductionECACharges\r\n\t\t,ABAE.DeliveryChargeAmount \r\n\t\t,ABAE.DeliveryConsumption\r\n\t\t,ABAE.DeliveryDemand + ABAE.DeliveryMinimumBilledAmount AS DeliveryDemandCharge\r\n\t\t,ABAE.CustomerLevelAdjustmentAmount AS AllocatedCityWideElectricCharge\r\n\t\t,ABAE.CommodityAllocationCharge + ABAE.DeliveryAllocationCharge AS FixedCharges\r\n\t\t,ABAE.GrossReceiptTax\r\n\t\t,ABAE.RevisedReactivePowerDollars \r\n\t\t,ABAE.MinimumBilledDemandUsage\r\n\t\t,ABAE.DeliveryMinimumBilledDemand\r\n\t\t,ABAE.ProductionMisc1 AS ZECsCharge\r\n\t\t--Cancel Block\r\n\t\t,ABAE.ProductionMisc1 AS OriginalZECsCharge\r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN -1 * ABAE.CancelAccountEnergyUsage ELSE -1 * CTE.CancelConsumtionOnPeak END AS OriginalAccountOnPeakKHW \r\n\t\t,CASE WHEN CTE.ABAESeqid IS NULL THEN 0 ELSE -1 * CTE.CancelConsumtionOffPeak END AS OriginalAccountOffPeakKWH\r\n\t\t,-1 * ABAE.CancelAccountDemandUsage AS OriginalAccountDemandKW\r\n\t\t,-1 * ABAE.CanceledAccountReactivePowerEnergy AS OriginalAccountReactivePowerEnergy  \r\n\t\t,-1 * ABAE.CancelCommodityConsumption + -1 * ABAE.CancelCommodityConsumptionOffPeak + -1 * ABAE.CancelCommodityConsumptionShoulder AS OriginalProductionEnergyCharge\r\n\t\t,-1 * ABAE.CancelCommodityDemand + -1 * ABAE.CancelCommodityDemandOffPeak + -1 * ABAE.cancelCommodityDemandShoulder + -1 * ABAE.CancelMinimumBilledDemandDollars AS OriginalProductionDemandCharge\r\n\t\t,-1 * ABAE.CancelEnergyCostAdjustment AS OriginalProductionECACharges\r\n\t\t,-1 * ABAE.CancelDeliveryChargeAmount AS OriginalDeliveryChargeAmount\r\n\t\t,-1 * ABAE.CancelDeliveryConsumption AS OriginalDeliveryConsumption\r\n\t\t,-1 * ABAE.CancelDeliveryDemand + 1 * ABAE.CancelDeliveryMinimumBilledAmount AS OriginalDeliveryDemandCharge\r\n\t\t,ABAE.CustomerLevelAdjustmentAmount AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,ABAE.CommodityAllocationCharge + ABAE.DeliveryAllocationCharge AS OriginalFixedCharges\r\n\t\t,-1 * ABAE.CancelGrossReceiptTax AS OriginalGrossReceiptTax\r\n\t\t,-1 * ABAE.OriginalReactivePowerDollars AS OriginalReactivePowerDollars\r\n\t\t-- steam block here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,NULL AS RevisedCCF\r\n\t\t,NULL AS OriginalCCF\r\n\t\t,NULL AS RevisedTherms\r\n\t\t,NULL AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentElectric AS ABAE\r\n\t\tINNER JOIN Billing.Account AS A ON ABAE.AdjustedAccount = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\t\tLEFT JOIN ABAE_TOD_Usage_CTE AS CTE ON ABAE.AccountBillingAdjustmentElectricSeqid = CTE.ABAESeqid\t\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAE.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND  (alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAE.BillingPeriodRevision = alrdfcp.BillingPeriod\r\n\tUNION ALL\r\n\t-- the GAS block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAG.BillingPeriod\r\n\t\t,ABAG.BillingPeriodRevision\r\n\t\t,alrdfcp.OriginalBilledAmount\r\n\t\t,alrdfcp.PaidAdjustmentAmount\r\n\t\t,alrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,alrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand \r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy  \r\n\t\t,alrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars \r\n\t\t-- steam block here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,ABAG.RevisedCCF AS RevisedCCF\r\n\t\t,ABAG.CanceledCCF AS OriginalCCF\r\n\t\t,RevisedTherms AS RevisedTherms\r\n\t\t,ABAG.CanceledTherms AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentGas AS ABAG\r\n\t\tINNER JOIN Billing.Account AS A ON ABAG.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber \r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAG.BillingPeriod = @PublishedBillingPeriod  \r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts \r\n\t\tAND (alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAG.BillingPeriodRevision = alrdfcp.BillingPeriod\r\n\t\tAND A.EnergySource = 5\r\n\tUNION ALL\r\n\t-- the CRIS GAS block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABACG.BillingPeriod\r\n\t\t,ABACG.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH \r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount \r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand \r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy\r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OrignalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars\r\n\t\t-- steam block here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,ABACG.RevisedCCF AS RevisedCCF\r\n\t\t,ABACG.CancelCCF AS OriginalCCF\r\n\t\t,ABACG.RevisedTherms AS RevisedTherms\r\n\t\t,ABACG.CancelTherms AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentCrisGas AS ABACG\r\n\t\tINNER JOIN Billing.Account AS A ON  ABACG.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber\r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABACG.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts\r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABACG.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\tUNION ALL\r\n\t-- the manual billing STEAM block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAPB.BillingPeriod\r\n\t\t,ABAPB.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH\r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount\r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand\r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy\r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars\r\n\t\t-- steam starts here\r\n\t\t,ABAPB.RevisedEnergy AS RevisedMLBS\r\n\t\t,ABAPB.CanceledEnergy AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,NULL AS RevisedCCF\r\n\t\t,NULL AS OriginalCCF\r\n\t\t,NULL AS RevisedTherms\r\n\t\t,NULL AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill AS ABAPB\r\n\t\tINNER JOIN Billing.Account AS A ON ABAPB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber\r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAPB.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts\r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAPB.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\t\tAND CurrentAccount.EnergySource = 6\r\n\tUNION ALL\r\n\t-- the manual billing ELECTRIC block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,1 AS EnergySource\r\n\t\t,ABAPB.BillingPeriod\r\n\t\t,ABAPB.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,ABAPB.RevisedEnergy AS AccountOnPeakKWH\r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,ABAPB.RevisedDemand AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount\r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand\r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,ISNULL(ABAPB.CanceledEnergy, 0) AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,ISNULL(ABAPB.CanceledDemand, 0) AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy\r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars\r\n\t\t-- steam starts here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,NULL AS RevisedCCF\r\n\t\t,NULL AS OriginalCCF\r\n\t\t,NULL AS RevisedTherms\r\n\t\t,NULL AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill AS ABAPB\r\n\t\tINNER JOIN Billing.Account AS A ON ABAPB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber\r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAPB.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber -- filters just the current accounts\r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAPB.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\t\tAND CurrentAccount.EnergySource IN (SELECT EnergyDeliveryType FROM Billing.EnergyDeliveryType WHERE EnergyType = 'ELE') -- all electric\r\n\tUNION ALL\r\n\t-- the manual billing GAS block\r\n\tSELECT CurrentAccount.AccountSeqid\r\n\t\t,CurrentAccount.CurrentAccountNumber\r\n\t\t,A.EnergySource\r\n\t\t,ABAPB.BillingPeriod\r\n\t\t,ABAPB.BillingPeriodRevision\r\n\t\t,talrdfcp.OriginalBilledAmount\r\n\t\t,talrdfcp.PaidAdjustmentAmount\r\n\t\t,talrdfcp.TotalAmountDue\r\n\t\t--electric Block\r\n\t\t,NULL AS AccountOnPeakKWH\r\n\t\t,NULL AS AccountOffPeakKWH\r\n\t\t,NULL AS AccountDemandKW\r\n\t\t,NULL AS AccountReactivePowerEnergy\r\n\t\t,talrdfcp.RevisedBilledAmount AS ProductionEnergyCharge\r\n\t\t,NULL AS ProductionDemandCharge\r\n\t\t,NULL AS ProductionECACharges\r\n\t\t,NULL AS DeliveryChargeAmount\r\n\t\t,NULL AS DeliveryConsumption\r\n\t\t,NULL AS DeliveryDemandCharge\r\n\t\t,NULL AS AllocatedCityWideElectricCharge\r\n\t\t,NULL AS FixedCharges\r\n\t\t,NULL AS GrossReceiptTax\r\n\t\t,NULL AS RevisedReactivePowerDollars\r\n\t\t,NULL AS MinimumBilledDemandUsage\r\n\t\t,NULL AS DeliveryMinimumBilledDemand\r\n\t\t,NULL AS ZECsCharge\r\n\t\t,NULL AS OriginalZECsCharge\r\n\t\t,NULL AS OriginalAccountOnPeakKHW\r\n\t\t,NULL AS OriginalAccountOffPeakKWH\r\n\t\t,NULL AS OriginalAccountDemandKW\r\n\t\t,NULL AS OriginalAccountReactivePowerEnergy\r\n\t\t,talrdfcp.OriginalBilledAmount AS OriginalProductionEnergyCharge\r\n\t\t,NULL AS OriginalProductionDemandCharge\r\n\t\t,NULL AS OriginalProductionECACharges\r\n\t\t,NULL AS OriginalDeliveryChargeAmount\r\n\t\t,NULL AS OriginalDeliveryConsumption\r\n\t\t,NULL AS OriginalDeliveryDemandCharge\r\n\t\t,NULL AS OriginalAllocatedCityWideElectricCharge\r\n\t\t,NULL AS OriginalFixedCharges\r\n\t\t,NULL AS OriginalGrossReceiptTax\r\n\t\t,NULL AS OriginalReactivePowerDollars\r\n\t\t-- steam starts here\r\n\t\t,NULL AS RevisedMLBS\r\n\t\t,NULL AS OriginalMLBS\r\n\t\t-- gas starts here\r\n\t\t,ABAPB.RevisedCCF AS RevisedCCF\r\n\t\t,ABAPB.CanceledCCF AS OriginalCCF\r\n\t\t,ABAPB.RevisedEnergy AS RevisedTherms\r\n\t\t,ABAPB.CanceledEnergy AS OriginalTherms\r\n\tFROM Billing.AccountBillingAdjustmentPaperBill AS ABAPB\r\n\t\tINNER JOIN Billing.Account AS A ON ABAPB.AccountSeqid = A.AccountSeqid\r\n\t\tINNER JOIN Billing.Account AS CurrentAccount ON A.CurrentAccountNumber = CurrentAccount.CurrentAccountNumber\r\n\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS talrdfcp ON talrdfcp.AccountSeqid = CurrentAccount.AccountSeqid\r\n\tWHERE (@ResultByAgency <> 'Y' OR CurrentAccount.AgencyAccount IN (SELECT AgencyDivisionSeqID FROM @AgencyAndItsDecendants))\r\n\t\tAND (@ResultByAgency <> 'N' OR CurrentAccount.FacilityAccount = @FacilitySeqid)\r\n\t\tAND ABAPB.BillingPeriod = @PublishedBillingPeriod\r\n\t\tAND CurrentAccount.CurrentAccountNumber = CurrentAccount.OriginalAccountNumber\t-- filters just the current accounts\r\n\t\tAND (talrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND talrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod)\r\n\t\tAND ABAPB.BillingPeriodRevision = talrdfcp.BillingPeriod\r\n\t\tAND CurrentAccount.EnergySource = 5; -- gas only\r\nEND;"
        }
      ]
    }
  ]
}
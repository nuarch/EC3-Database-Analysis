{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "USP_AgencyDashboard_MonthlyEnergyChangesComparedToSameMonth",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "USP_AgencyDashboard_MonthlyEnergyChangesComparedToSameMonth",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to calculate and report the percentage change in energy consumption for a specific agency and the city as a whole. It compares the current year's energy usage to the previous year's usage for the same month. The data is sourced from a table containing temporal account-level raw data, and the results are formatted to show the agency code, month, and percentage changes for both the agency and the city."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyOEC AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the agency code for which the energy consumption changes are to be calculated. It is used to filter the data to only include records relevant to the specified agency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Isolation Level and NOCOUNT",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to allow dirty reads, which can improve performance by avoiding locks. "
                },
                {
                  "type": "text",
                  "text": "SET NOCOUNT ON",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is used to prevent the sending of row count messages, which can reduce network traffic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determine Current Billing Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure retrieves the maximum billing period from the "
                },
                {
                  "type": "text",
                  "text": "Published.TemporalAccountLevelRawDataForCurrentPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table to determine the current billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Current Year Data for Agency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the total energy consumption (in BTU) for the current year for the specified agency by summing the BTU values for billing periods within the last 100 periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Previous Year Data for Agency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the total energy consumption for the same months in the previous year for the specified agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Current Year Data for City",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the total energy consumption for the city for the current year by summing the BTU values for billing periods within the last 100 periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Previous Year Data for City",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the total energy consumption for the city for the same months in the previous year."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Percentage Change Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure calculates the percentage change in energy consumption for both the agency and the city by comparing the current year's totals to the previous year's totals. If the previous year's total is zero, the change is set to zero to avoid division by zero errors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The results are formatted to display the agency code, month, and percentage changes for both the agency and the city, ordered by the billing period."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This isolation level can improve performance by reducing locking overhead but may result in reading uncommitted or dirty data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "NOLOCK Hint",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Used extensively to avoid locking, which can improve performance but at the risk of reading inconsistent data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Subqueries and Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses multiple subqueries and joins, which can be resource-intensive, especially if the underlying tables are large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the "
                },
                {
                  "type": "text",
                  "text": "BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "AgencyDivisionSeqID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and other relevant columns can significantly improve query performance."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "NOLOCK",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted or inconsistent data, which may not be suitable for all business scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Division by Zero",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure handles division by zero by setting the change to zero, but this may not always be the desired business logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the data grows, the performance of the subqueries and joins may degrade if not properly indexed or optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Email",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email 'zdurmaz@dcas.nyc.gov' is hardcoded in the join condition, which may not be flexible or maintainable if the email needs to change."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[USP_AgencyDashboard_MonthlyEnergyChangesComparedToSameMonth]\n(\r\n\t@AgencyOEC AS VARCHAR(6)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @CurrentBillingPeriod VARCHAR(6) = (SELECT MAX(BillingPeriod) FROM Published.TemporalAccountLevelRawDataForCurrentPeriod WITH (NOLOCK));\r\n\r\n\tSELECT @AgencyOEC AS Agency\r\n\t\t,FORMAT(CAST(currAG.BillingPeriod+'01' AS DATE),'MMM') AS [Month]\r\n\t\t,CASE WHEN lastyearAG.CastYearAGTotal = 0 THEN 0 ELSE  (ROUND((CAST((currAG.CurAGTotal-lastyearAG.CastYearAGTotal) AS FLOAT) / CAST(lastyearAG.CastYearAGTotal AS float)),2)*100) END  AgencyChange\r\n\t\t,CASE WHEN lastyearCW.lastyearCWTotal = 0 THEN 0 ELSE  (ROUND((CAST((currCW.currCWTotal-lastyearCW.lastyearCWTotal) AS FLOAT) /CAST(lastyearCW.lastyearCWTotal AS FLOAT)),2)*100) END  CityChange \r\n\tFROM (SELECT a.BillingPeriod,SUM(CAST(a.BTU AS BIGINT)) AS CurAGTotal\r\n\t\t\tFROM Published.TemporalAccountLevelRawDataForCurrentPeriod AS a WITH (NOLOCK)\r\n\t\t\t\tINNER JOIN [Billing].[uftn_TableGetAllAgencyChildrenByAgencyCodeOEC](@AgencyOEC, 'zdurmaz@dcas.nyc.gov') AS ad ON ad.AgencyDivisionSeqID = a.AgencyDivisionSeqid\r\n\t\t\tWHERE CAST(a.BillingPeriod AS INT) > CAST(@CurrentBillingPeriod AS INT) - 100\r\n\t\t\tAND (a.EffectiveStartPeriod <= @CurrentBillingPeriod AND a.EffectiveEndPeriod > @CurrentBillingPeriod)\r\n\t\t\tGROUP BY a.BillingPeriod\r\n\t\t ) AS currAG\r\n\t\tINNER JOIN \r\n\t\t(SELECT a.BillingPeriod,SUM(CAST(a.BTU AS BIGINT)) AS CastYearAGTotal\r\n\t\t\tFROM Published.TemporalAccountLevelRawDataForCurrentPeriod AS a WITH (NOLOCK)\r\n\t\t\t\tINNER JOIN [Billing].[uftn_TableGetAllAgencyChildrenByAgencyCodeOEC](@AgencyOEC, 'zdurmaz@dcas.nyc.gov') AS ad ON ad.AgencyDivisionSeqID = a.AgencyDivisionSeqid\r\n\t\t\tWHERE CAST(a.BillingPeriod AS INT)  > (CAST(@CurrentBillingPeriod AS INT) - 200) AND  CAST(a.BillingPeriod AS INT)<= (CAST(@CurrentBillingPeriod AS INT) - 100)\r\n\t\t\tAND  (a.EffectiveStartPeriod <= @CurrentBillingPeriod AND a.EffectiveEndPeriod > @CurrentBillingPeriod)\r\n\t\t\tGROUP BY a.BillingPeriod\r\n\t\t) AS lastyearAG ON SUBSTRING(lastyearAG.BillingPeriod, 5, 2) = SUBSTRING(currAG.BillingPeriod, 5, 2)\r\n\t\tINNER JOIN \r\n\t\t(SELECT a.BillingPeriod,SUM(CAST(a.BTU AS BIGINT)) AS currCWTotal\r\n\t\t\tFROM Published.TemporalAccountLevelRawDataForCurrentPeriod AS a WITH (NOLOCK)\r\n\t\t\tWHERE CAST(a.BillingPeriod AS INT) > CAST(@CurrentBillingPeriod AS INT) - 100\r\n\t\t\tAND (a.EffectiveStartPeriod <= @CurrentBillingPeriod AND a.EffectiveEndPeriod > @CurrentBillingPeriod)\r\n\t\t\tGROUP BY a.BillingPeriod\r\n\t\t) AS currCW ON SUBSTRING(currAG.BillingPeriod, 5, 2) = SUBSTRING(currCW.BillingPeriod, 5, 2)\r\n\t\tINNER JOIN \r\n\t\t(SELECT a.BillingPeriod,SUM(CAST(a.BTU AS BIGINT)) AS lastyearCWTotal\r\n\t\t\tFROM Published.TemporalAccountLevelRawDataForCurrentPeriod AS a WITH (NOLOCK)\r\n\t\t\tWHERE CAST(a.BillingPeriod AS INT)  > (CAST(@CurrentBillingPeriod AS INT) - 200) AND  CAST(a.BillingPeriod AS INT)<= (CAST(@CurrentBillingPeriod AS INT) - 100)\r\n\t\t\tAND (a.EffectiveStartPeriod <= @CurrentBillingPeriod AND a.EffectiveEndPeriod > @CurrentBillingPeriod)\r\n\t\t\tGROUP BY a.BillingPeriod\r\n\t\t) AS lastyearCW ON SUBSTRING(lastyearCW.BillingPeriod, 5 ,2) = SUBSTRING(currAG.BillingPeriod, 5, 2)\r\n\tORDER BY currAG.BillingPeriod;\r\nEND;"
        }
      ]
    }
  ]
}
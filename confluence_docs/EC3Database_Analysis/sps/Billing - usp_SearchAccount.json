{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_SearchAccount",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_SearchAccount",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to search for account information within a billing system based on various criteria. It retrieves account details from a view and related tables, allowing for filtering, sorting, and pagination. The procedure is part of the "
        },
        {
          "type": "text",
          "text": "Billing",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " schema and is intended to be used by applications or users who need to query account data with specific search terms and sorting preferences."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAdress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address used to determine agency access rights."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SearchText AS VARCHAR(150) = NULL",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Optional text used to filter results based on account-related fields."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@CurrentPageNumber AS INT = 1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The current page number for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PageSize AS INT = 10",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The number of records per page for pagination."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SortColumn AS VARCHAR(100) = 'AgencyCodeOEC'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The column name by which to sort the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@SortOrder AS VARCHAR(100) = 'ASC'",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The order of sorting, either ascending ('ASC') or descending ('DESC')."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Total AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": An output parameter that returns the total number of distinct accounts matching the search criteria."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", allowing dirty reads to improve performance by avoiding locks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Total Count Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the total number of distinct accounts that match the search criteria and assigns this value to the "
                },
                {
                  "type": "text",
                  "text": "@Total",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " output parameter."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure retrieves account details from the "
                },
                {
                  "type": "text",
                  "text": "Billing.uvw_AccountSearchView",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " view, joining with "
                },
                {
                  "type": "text",
                  "text": "Billing.AccountMeterStatus",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and a function "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyByEmailAddressAgencyAccessAction",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to filter based on agency access."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Search Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If "
                },
                {
                  "type": "text",
                  "text": "@SearchText",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is provided, it filters results based on multiple fields using a "
                },
                {
                  "type": "text",
                  "text": "LIKE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " pattern match."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Sorting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The results are sorted based on the specified "
                },
                {
                  "type": "text",
                  "text": "@SortColumn",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "@SortOrder",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". The sorting logic uses a series of "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements to dynamically apply the sort order."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure implements pagination using the "
                },
                {
                  "type": "text",
                  "text": "OFFSET",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "FETCH NEXT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clauses, allowing for efficient data retrieval in chunks."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This isolation level can improve performance by reducing locking overhead but may lead to reading uncommitted or dirty data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dynamic Sorting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements for sorting can be less efficient than static sorting, especially if the number of records is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "LIKE with Wildcards",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "%",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " wildcards in "
                },
                {
                  "type": "text",
                  "text": "LIKE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clauses can lead to full table scans, impacting performance negatively if the dataset is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Pagination",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "OFFSET",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "FETCH NEXT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is efficient for pagination but can become slower with higher page numbers due to the need to skip rows."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " level may lead to inconsistencies if the underlying data is being modified concurrently."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SQL Injection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If input parameters are not properly sanitized, there is a risk of SQL injection, especially with dynamic sorting."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Bottlenecks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "LIKE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " with leading wildcards and dynamic sorting can lead to performance bottlenecks."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the performance of the procedure may degrade, particularly with the current search and sorting mechanisms."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output Parameter",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "@Total",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " output parameter is calculated separately from the main query, which could lead to discrepancies if the data changes between the two operations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Billing].[usp_SearchAccount]\n(\r\n\t@EmailAdress AS VARCHAR(75),\r\n\t@SearchText AS VARCHAR(150) = NULL,\r\n\t@CurrentPageNumber AS INT = 1,\r\n\t@PageSize AS INT = 10,\r\n\t@SortColumn AS VARCHAR(100) = 'AgencyCodeOEC',\r\n\t@SortOrder AS VARCHAR(100) = 'ASC',\r\n\t@Total AS INT OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tSELECT @Total = ISNULL(COUNT(DISTINCT AV.UniqueAccountSeqid), 0)\r\n\tFROM Billing.uvw_AccountSearchView AS AV\r\n\t\tINNER JOIN Billing.AccountMeterStatus as ST ON ST.AccountMeterStatus = AV.AccountStatus\r\n\t\tINNER JOIN dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAdress) AS AG ON AG.AgencyDivisionSeqid = AV.AgencyDivisionSeqid\r\n\t\tLEFT JOIN Billing.Meter AS M ON M.UniqueAccountSeqID = AV.UniqueAccountSeqid\r\n\tWHERE @SearchText IS NULL\r\n\t\tOR (AV.CurrentAccountNumber LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.FacilityName LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.FacilityAddress LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.AgencyName LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.UtilityCompany LIKE '%' + @SearchText + '%'\r\n\t\tOR M.CurrentMeterNumber LIKE '%' + @SearchText + '%'\r\n\t\tOR ST.ShortDesc LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.OecFacilityNumber LIKE '%' + @SearchText + '%');\r\n\r\n\tSELECT AV.UniqueAccountSeqid,\r\n\t\tAV.AccountSeqId,\r\n\t\tAV.CurrentAccountNumber,\r\n\t\tAV.UtilityServiceAccountName,\r\n\t\tAV.UtilityServiceAddress,\r\n\t\tST.ShortDesc as AccountStatus,\r\n\t\tAV.AccountPreviousStatus,\r\n\t\tAV.AccountStatusCodePeriod,\r\n\t\tAV.IsTimeOfDayAccount,\r\n\t\tAV.BillingCycle,\r\n\t\tAV.AccountEffectiveTurnOn,\r\n\t\tAV.AccountEffectiveTurnOff,\r\n\t\tAV.UtilityCompany,\r\n\t\tAV.InvoiceBillingGroup,\r\n\t\tAV.AgencyCodeOEC,\r\n\t\tAV.AgencyName,\r\n\t\tAV.OecFacilityNumber,\r\n\t\tAV.FacilityName,\r\n\t\tAV.FacilityAddress,\r\n\t\tAV.BBL,\r\n\t\tAV.EnergyDeliveryType,\r\n\t\tAV.DeliveryTariffRate,\r\n\t\tAV.BudgetGroupDEMName,\r\n\t\tAV.RateGroup1,\r\n\t\tAV.RateGroup2,\r\n\t\tAV.RateGroup3,\r\n\t\tAV.RateGroup4,\r\n\t\tAV.RateGroup5,\r\n\t\tAV.EnergyUnit,\r\n\t\tAV.DeliveryTariffEffectiveDate,\r\n\t\tAV.IsActive\r\n\tFROM Billing.uvw_AccountSearchView AS AV\r\n\t\tINNER JOIN Billing.AccountMeterStatus as ST ON ST.AccountMeterStatus = AV.AccountStatus\r\n\t\tINNER JOIN dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAdress) AS AG ON AG.AgencyDivisionSeqid = AV.AgencyDivisionSeqid\r\n\t\tLEFT JOIN Billing.Meter AS M ON M.UniqueAccountSeqID = AV.UniqueAccountSeqid\r\n\tWHERE @SearchText IS NULL\r\n\t\tOR (AV.CurrentAccountNumber LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.FacilityName LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.FacilityAddress LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.AgencyName LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.UtilityCompany LIKE '%' + @SearchText + '%'\r\n\t\tOR M.CurrentMeterNumber LIKE '%' + @SearchText + '%'\r\n\t\tOR ST.ShortDesc LIKE '%' + @SearchText + '%'\r\n\t\tOR AV.OecFacilityNumber LIKE '%' + @SearchText + '%')\r\n\tGROUP BY\r\n\t\tAV.UniqueAccountSeqid,\r\n\t\tAV.AccountSeqId,\r\n\t\tAV.CurrentAccountNumber,\r\n\t\tAV.UtilityServiceAccountName,\r\n\t\tAV.UtilityServiceAddress,\r\n\t\tAV.AccountStatus,\r\n\t\tST.ShortDesc,\r\n\t\tAV.AccountPreviousStatus,\r\n\t\tAV.AccountStatusCodePeriod,\r\n\t\tAV.IsTimeOfDayAccount,\r\n\t\tAV.BillingCycle,\r\n\t\tAV.AccountEffectiveTurnOn,\r\n\t\tAV.AccountEffectiveTurnOff,\r\n\t\tAV.UtilityCompany,\r\n\t\tAV.InvoiceBillingGroup,\r\n\t\tAV.AgencyCodeOEC,\r\n\t\tAV.AgencyName,\r\n\t\tAV.OecFacilityNumber,\r\n\t\tAV.FacilityName,\r\n\t\tAV.FacilityAddress,\r\n\t\tAV.BBL,\r\n\t\tAV.EnergyDeliveryType,\r\n\t\tAV.DeliveryTariffRate,\r\n\t\tAV.BudgetGroupDEMName,\r\n\t\tAV.RateGroup1,\r\n\t\tAV.RateGroup2,\r\n\t\tAV.RateGroup3,\r\n\t\tAV.RateGroup4,\r\n\t\tAV.RateGroup5,\r\n\t\tAV.EnergyUnit,\r\n\t\tAV.DeliveryTariffEffectiveDate,\r\n\t\tAV.IsActive\r\n\tORDER BY\r\n\t\tCASE WHEN(@SortColumn = 'AgencyCodeOEC' AND @SortOrder = 'ASC') THEN AV.AgencyCodeOEC END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'AgencyCodeOEC' AND @SortOrder = 'DESC') THEN AV.AgencyCodeOEC END DESC\r\n\t\t,CASE WHEN(@SortColumn = '') THEN AV.CurrentAccountNumber END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'CurrentAccountNumber' AND @SortOrder = 'ASC') THEN AV.CurrentAccountNumber END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'CurrentAccountNumber' AND @SortOrder = 'DESC') THEN AV.CurrentAccountNumber END DESC\r\n\t\t,CASE WHEN(@SortColumn = 'FacilityName' AND @SortOrder = 'ASC') THEN AV.FacilityName END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'FacilityName' AND @SortOrder = 'DESC') THEN AV.FacilityName END DESC\r\n\r\n\t\t,CASE WHEN(@SortColumn = 'AccountStatus' AND @SortOrder = 'ASC') THEN AccountStatus END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'AccountStatus' AND @SortOrder = 'DESC') THEN AccountStatus END DESC\r\n\r\n\t\t,CASE WHEN(@SortColumn = 'FacilityAddress' AND @SortOrder = 'ASC') THEN AV.FacilityAddress END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'FacilityAddress' AND @SortOrder = 'DESC') THEN AV.FacilityAddress END DESC\r\n\t\t,CASE WHEN(@SortColumn = 'AgencyName' AND @SortOrder = 'ASC') THEN AV.AgencyName END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'AgencyName' AND @SortOrder = 'DESC') THEN AV.AgencyName END DESC\r\n\t\t,CASE WHEN(@SortColumn = 'UtilityCompany' AND @SortOrder = 'ASC') THEN AV.UtilityCompany END ASC\r\n\t\t,CASE WHEN(@SortColumn = 'UtilityCompany' AND @SortOrder = 'DESC') THEN AV.UtilityCompany END DESC\r\n\t\tOFFSET CASE WHEN @PageSize = -1 THEN 0 ELSE @PageSize * (@CurrentPageNumber -1) END ROWS FETCH NEXT CASE WHEN @PageSize = -1 THEN IIF(@Total > 0, @Total, 1) ELSE @PageSize END ROWS ONLY;\r\nEND;"
        }
      ]
    }
  ]
}
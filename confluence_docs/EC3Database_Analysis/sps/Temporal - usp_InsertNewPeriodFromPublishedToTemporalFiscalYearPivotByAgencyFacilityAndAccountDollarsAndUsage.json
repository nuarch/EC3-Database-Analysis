{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Temporal",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_InsertNewPeriodFromPublishedToTemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_InsertNewPeriodFromPublishedToTemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to insert a new billing period into a temporal table, "
        },
        {
          "type": "text",
          "text": "Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ", from a source table, "
        },
        {
          "type": "text",
          "text": "Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". It ensures that only the next sequential period is inserted, checks for missing hash codes, and updates the effective periods for existing records. The procedure handles data related to fiscal years, agency facilities, accounts, and various financial and usage metrics."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple checks, conditional logic, and complex SQL operations, including joins and updates across tables. It also manages temporal data, which adds to its complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period to be inserted. It is expected to be in a format like 'YYYYMM'."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Determine Next Period",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Retrieves the maximum effective start period from the temporal table."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calls a function "
                        },
                        {
                          "type": "text",
                          "text": "CreateNextPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to determine the next period."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Ensures that the "
                        },
                        {
                          "type": "text",
                          "text": "@PublishedBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " matches the calculated next period. If not, it raises an error and exits."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Checks for null hash codes in both source and destination tables. If any are found, it raises an error and exits."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts records from the source table to the temporal table for the specified billing period, ensuring no duplicates based on hash values."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Effective Periods",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates the "
                        },
                        {
                          "type": "text",
                          "text": "EffectiveEndPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for records in the temporal table that match certain criteria, effectively closing out previous periods."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure is structured to use transactions, although the transaction handling (BEGIN TRANSACTION, COMMIT, ROLLBACK) is commented out."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Completion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Prints a message indicating the process has finished."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the columns used in joins and where clauses, especially "
                },
                {
                  "type": "text",
                  "text": "HashValue1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "HashValue2",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "EffectiveStartPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", are indexed to improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Although transaction handling is commented out, it should be implemented to ensure data integrity, especially given the multiple updates and inserts."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may face concurrency issues if multiple instances are run simultaneously without proper transaction isolation."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "RAISERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for error handling but lacks a robust mechanism to handle exceptions and roll back transactions, which could lead to partial updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Without transaction management, there is a risk of data inconsistency if the procedure fails midway."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the data grows, the performance of the procedure could degrade, especially if indexes are not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values like '999912' for "
                },
                {
                  "type": "text",
                  "text": "EffectiveEndPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " could lead to issues if the business logic changes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Commented Code",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The presence of commented-out transaction management code suggests incomplete implementation, which could lead to oversight in maintaining data integrity."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Temporal].[usp_InsertNewPeriodFromPublishedToTemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage]\n\t@PublishedBillingPeriod VARCHAR(6)\r\nAS\r\n    BEGIN\t\r\n\tDECLARE @MaxPeriod VARCHAR(6) = (SELECT MAX(EffectiveStartPeriod) FROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage )\r\n\tDECLARE @NextPeriod VARCHAR(6) =  [dbo].[CreateNextPeriod](@MaxPeriod, 'M')\r\n        \r\n\t\t\r\n\t\t-- Make sure only next period after the max is being inserted\r\n\t\tIF ( @NextPeriod <> @PublishedBillingPeriod  )\r\n\t\tBEGIN\r\n\t\t\tRAISERROR ('ERROR: You can only insert this period: %s', 12, 1, @NextPeriod) \r\n\t\t\tRETURN\r\n\t\tEND\r\n\t\t\t\t\r\n\t\t-- make sure the hashcode is populated before starting\r\n\t\tDECLARE @CountNullHashCodeSource int = ( SELECT COUNT(*) FROM [Published].[FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage] WHERE HashValue1 IS NULL OR HashValue2 IS NULL  )\r\n\t\tDECLARE @CountNullHashCodeDestination INT =  ( SELECT COUNT(*) FROM [Published].[TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage] WHERE HashValue1 IS NULL OR HashValue2 IS NULL)\t\t\r\n\t\tIF ( @CountNullHashCodeSource > 0 OR @CountNullHashCodeDestination > 0  )\r\n\t\tBEGIN\r\n\t\t\tRAISERROR ('ERROR: HashCode is missing from either [Published].[TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage] or [Published].[FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage].', 12, 1) \t\t\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\r\n\t\t\t\t--BEGIN TRANSACTION\r\n\t\t\t\t--\tBEGIN TRY \r\n\t\t\t\t\t---Process start---------------------------------------\r\n\t\t\t\t\t\r\n\t\t\t\t\tINSERT INTO Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n\t\t\t\t\t        ( CurrentFiscalYear\r\n\t\t\t\t\t\t\t, PriorFiscalYear\r\n\t\t\t\t\t\t\t, BillToAgencyCode\r\n\t\t\t\t\t\t\t, AgencyCodeOEC\r\n\t\t\t\t\t\t\t, AgencyName\r\n\t\t\t\t\t\t\t, OecFacilityNumber\r\n\t\t\t\t\t\t\t, FacilityName\r\n\t\t\t\t\t\t\t, Address1\r\n\t\t\t\t\t\t\t, Borough\r\n\t\t\t\t\t\t\t, Block\r\n\t\t\t\t\t\t\t, LotNumber\r\n\t\t\t\t\t\t\t, CityPlanningBIN\r\n\t\t\t\t\t\t\t, CurrentAccountNumber\r\n\t\t\t\t\t\t\t, OriginalAccountNumber\r\n\t\t\t\t\t\t\t, CurrentInvoiceAccountBillingGroup\r\n\t\t\t\t\t\t\t, InvoiceAccountBillingGroupDesc\r\n\t\t\t\t\t\t\t, FiscalYear\r\n\t\t\t\t\t\t\t, UtilityCompany\r\n\t\t\t\t\t\t\t, EnergyType\r\n\t\t\t\t\t\t\t, JulyOriginalBilledDollars\r\n\t\t\t\t\t\t\t, AugustOriginalBilledDollars\r\n\t\t\t\t\t\t\t, SeptemberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, OctoberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, NovemberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, DecemberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, JanuaryOriginalBilledDollars\r\n\t\t\t\t\t\t\t, FebruaryOriginalBilledDollars\r\n\t\t\t\t\t\t\t, MarchOriginalBilledDollars\r\n\t\t\t\t\t\t\t, AprilOriginalBilledDollars\r\n\t\t\t\t\t\t\t, MayOriginalBilledDollars\r\n\t\t\t\t\t\t\t, JuneOriginalBilledDollars\r\n\t\t\t\t\t\t\t, FiscalYearToDateOriginalBilledDollars\r\n\t\t\t\t\t\t\t, JulyOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, AugustOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, SeptemberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, OctoberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, NovemberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, DecemberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, JanuaryOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, FebruaryOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, MarchOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, AprilOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, MayOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, JuneOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, FiscalYearToDateOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, JulyOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, AugustOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, SeptemberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, OctoberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, NovemberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, DecemberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, JanuaryOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, FebruaryOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, MarchOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, AprilOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, MayOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, JuneOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, FiscalYearToDateOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, JulyOriginalEnergy\r\n\t\t\t\t\t\t\t, AugustOriginalEnergy\r\n\t\t\t\t\t\t\t, SeptemberOriginalEnergy\r\n\t\t\t\t\t\t\t, OctoberOriginalEnergy\r\n\t\t\t\t\t\t\t, NovemberOriginalEnergy\r\n\t\t\t\t\t\t\t, DecemberOriginalEnergy\r\n\t\t\t\t\t\t\t, JanuaryOriginalEnergy\r\n\t\t\t\t\t\t\t, FebruaryOriginalEnergy\r\n\t\t\t\t\t\t\t, MarchOriginalEnergy\r\n\t\t\t\t\t\t\t, AprilOriginalEnergy\r\n\t\t\t\t\t\t\t, MayOriginalEnergy\r\n\t\t\t\t\t\t\t, JuneOriginalEnergy\r\n\t\t\t\t\t\t\t, FiscalYearToDateOriginalEnergyUsage\r\n\t\t\t\t\t\t\t, JulyOriginalDemand\r\n\t\t\t\t\t\t\t, AugustOriginalDemand\r\n\t\t\t\t\t\t\t, SeptemberOriginalDemand\r\n\t\t\t\t\t\t\t, OctoberOriginalDemand\r\n\t\t\t\t\t\t\t, NovemberOriginalDemand\r\n\t\t\t\t\t\t\t, DecemberOriginalDemand\r\n\t\t\t\t\t\t\t, JanuaryOriginalDemand\r\n\t\t\t\t\t\t\t, FebruaryOriginalDemand\r\n\t\t\t\t\t\t\t, MarchOriginalDemand\r\n\t\t\t\t\t\t\t, AprilOriginalDemand\r\n\t\t\t\t\t\t\t, MayOriginalDemand\r\n\t\t\t\t\t\t\t, JuneOriginalDemand\r\n\t\t\t\t\t\t\t, FiscalYearToDateOriginalDemand\r\n\t\t\t\t\t\t\t, JulyRevisedBilledDollars\r\n\t\t\t\t\t\t\t, AugustRevisedBilledDollars\r\n\t\t\t\t\t\t\t, SeptemberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, OctoberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, NovemberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, DecemberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, JanuaryRevisedBilledDollars\r\n\t\t\t\t\t\t\t, FebruaryRevisedBilledDollars\r\n\t\t\t\t\t\t\t, MarchRevisedBilledDollars\r\n\t\t\t\t\t\t\t, AprilRevisedBilledDollars\r\n\t\t\t\t\t\t\t, MayRevisedBilledDollars\r\n\t\t\t\t\t\t\t, JuneRevisedBilledDollars\r\n\t\t\t\t\t\t\t, FiscalYearToDateRevisedBilledDollars\r\n\t\t\t\t\t\t\t, JulyRevisedEnergy\r\n\t\t\t\t\t\t\t, AugustRevisedEnergy\r\n\t\t\t\t\t\t\t, SeptemberRevisedEnergy\r\n\t\t\t\t\t\t\t, OctoberRevisedEnergy\r\n\t\t\t\t\t\t\t, NovemberRevisedEnergy\r\n\t\t\t\t\t\t\t, DecemberRevisedEnergy\r\n\t\t\t\t\t\t\t, JanuaryRevisedEnergy\r\n\t\t\t\t\t\t\t, FebruaryRevisedEnergy\r\n\t\t\t\t\t\t\t, MarchRevisedEnergy\r\n\t\t\t\t\t\t\t, AprilRevisedEnergy\r\n\t\t\t\t\t\t\t, MayRevisedEnergy\r\n\t\t\t\t\t\t\t, JuneRevisedEnergy\r\n\t\t\t\t\t\t\t, FiscalYearToDateRevisedEnergy\r\n\t\t\t\t\t\t\t, JulyRevisedDemand\r\n\t\t\t\t\t\t\t, AugustRevisedDemand\r\n\t\t\t\t\t\t\t, SeptemberRevisedDemand\r\n\t\t\t\t\t\t\t, OctoberRevisedDemand\r\n\t\t\t\t\t\t\t, NovemberRevisedDemand\r\n\t\t\t\t\t\t\t, DecemberRevisedDemand\r\n\t\t\t\t\t\t\t, JanuaryRevisedDemand\r\n\t\t\t\t\t\t\t, FebruaryRevisedDemand\r\n\t\t\t\t\t\t\t, MarchRevisedDemand\r\n\t\t\t\t\t\t\t, AprilRevisedDemand\r\n\t\t\t\t\t\t\t, MayRevisedDemand\r\n\t\t\t\t\t\t\t, JuneRevisedDemand\r\n\t\t\t\t\t\t\t, FiscalYearToDateRevisedDemand\r\n\t\t\t\t\t\t\t, JulyNetDollarChange\r\n\t\t\t\t\t\t\t, AugustNetDollarChange\r\n\t\t\t\t\t\t\t, SeptemberNetDollarChange\r\n\t\t\t\t\t\t\t, OctoberNetDollarChange\r\n\t\t\t\t\t\t\t, NovemberNetDollarChange\r\n\t\t\t\t\t\t\t, DecemberNetDollarChange\r\n\t\t\t\t\t\t\t, JanuaryNetDollarChange\r\n\t\t\t\t\t\t\t, FebruaryNetDollarChange\r\n\t\t\t\t\t\t\t, MarchNetDollarChange\r\n\t\t\t\t\t\t\t, AprilNetDollarChange\r\n\t\t\t\t\t\t\t, MayNetDollarChange\r\n\t\t\t\t\t\t\t, JuneNetDollarChange\r\n\t\t\t\t\t\t\t, FiscalYearToDateNetDollarChange\r\n\t\t\t\t\t\t\t, JulyEnergyUsageChange\r\n\t\t\t\t\t\t\t, AugustEnergyUsageChange\r\n\t\t\t\t\t\t\t, SeptemberEnergyUsageChange\r\n\t\t\t\t\t\t\t, OctoberEnergyUsageChange\r\n\t\t\t\t\t\t\t, NovemberEnergyUsageChange\r\n\t\t\t\t\t\t\t, DecemberEnergyUsageChange\r\n\t\t\t\t\t\t\t, JanuaryEnergyUsageChange\r\n\t\t\t\t\t\t\t, FebruaryEnergyUsageChange\r\n\t\t\t\t\t\t\t, MarchEnergyUsageChange\r\n\t\t\t\t\t\t\t, AprilEnergyUsageChange\r\n\t\t\t\t\t\t\t, MayEnergyUsageChange\r\n\t\t\t\t\t\t\t, JuneEnergyUsageChange\r\n\t\t\t\t\t\t\t, FiscalYearToDateNetEnergyUsageChange\r\n\t\t\t\t\t\t\t, JulyNetDemandUsageChange\r\n\t\t\t\t\t\t\t, AugustNetDemandUsageChange\r\n\t\t\t\t\t\t\t, SeptemberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, OctoberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, NovemberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, DecemberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, JanuaryNetDemandUsageChange\r\n\t\t\t\t\t\t\t, FebruaryNetDemandUsageChange\r\n\t\t\t\t\t\t\t, MarchNetDemandUsageChange\r\n\t\t\t\t\t\t\t, AprilNetDemandUsageChange\r\n\t\t\t\t\t\t\t, MayNetDemandUsageChange\r\n\t\t\t\t\t\t\t, JuneNetDemandUsageChange\r\n\t\t\t\t\t\t\t, FiscalYearToDateNetDemandUsageChange\r\n\t\t\t\t\t\t\t, JulyActualOrEstimated\r\n\t\t\t\t\t\t\t, AugustActualOrEstimated\r\n\t\t\t\t\t\t\t, SeptemberActualOrEstimated\r\n\t\t\t\t\t\t\t, OctoberActualOrEstimated\r\n\t\t\t\t\t\t\t, NovemberActualOrEstimated\r\n\t\t\t\t\t\t\t, DecemberActualOrEstimated\r\n\t\t\t\t\t\t\t, JanuaryActualOrEstimated\r\n\t\t\t\t\t\t\t, FebruaryActualOrEstimated\r\n\t\t\t\t\t\t\t, MarchActualOrEstimated\r\n\t\t\t\t\t\t\t, AprilActualOrEstimated\r\n\t\t\t\t\t\t\t, MayActualOrEstimated\r\n\t\t\t\t\t\t\t, JuneActualOrEstimated\r\n\t\t\t\t\t\t\t, Notes\r\n\t\t\t\t\t\t\t, AuthenticatedUserID\r\n\t\t\t\t\t\t\t, DateAdded\r\n\t\t\t\t\t\t\t, LastUpdate\r\n\t\t\t\t\t        , EffectiveStartPeriod\r\n\t\t\t\t\t        , EffectiveEndPeriod\r\n\t\t\t\t\t        , HashValue1\r\n\t\t\t\t\t\t\t, HashValue2\r\n\t\t\t\t\t        )\r\n\t\r\n\t\t\t\t\t  \t\tSELECT \r\n\t\t\t\t\t\t\t  alsbf.CurrentFiscalYear\r\n\t\t\t\t\t\t\t, alsbf.PriorFiscalYear\r\n\t\t\t\t\t\t\t, alsbf.BillToAgencyCode\r\n\t\t\t\t\t\t\t, alsbf.AgencyCodeOEC\r\n\t\t\t\t\t\t\t, alsbf.AgencyName\r\n\t\t\t\t\t\t\t, alsbf.OecFacilityNumber\r\n\t\t\t\t\t\t\t, alsbf.FacilityName\r\n\t\t\t\t\t\t\t, alsbf.Address1\r\n\t\t\t\t\t\t\t, alsbf.Borough\r\n\t\t\t\t\t\t\t, alsbf.Block\r\n\t\t\t\t\t\t\t, alsbf.LotNumber\r\n\t\t\t\t\t\t\t, alsbf.CityPlanningBIN\r\n\t\t\t\t\t\t\t, alsbf.CurrentAccountNumber\r\n\t\t\t\t\t\t\t, alsbf.OriginalAccountNumber\r\n\t\t\t\t\t\t\t, alsbf.CurrentInvoiceAccountBillingGroup\r\n\t\t\t\t\t\t\t, alsbf.InvoiceAccountBillingGroupDesc\r\n\t\t\t\t\t\t\t, alsbf.FiscalYear\r\n\t\t\t\t\t\t\t, alsbf.UtilityCompany\r\n\t\t\t\t\t\t\t, alsbf.EnergyType\r\n\t\t\t\t\t\t\t, alsbf.JulyOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.AugustOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.SeptemberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.OctoberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.NovemberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.DecemberOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.JanuaryOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.FebruaryOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.MarchOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.AprilOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.MayOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.JuneOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateOriginalBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.JulyOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.AugustOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.SeptemberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.OctoberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.NovemberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.DecemberOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.JanuaryOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.FebruaryOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.MarchOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.AprilOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.MayOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.JuneOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateOriginalPaidAdjustmentDollars\r\n\t\t\t\t\t\t\t, alsbf.JulyOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.AugustOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.SeptemberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.OctoberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.NovemberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.DecemberOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.JanuaryOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.FebruaryOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.MarchOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.AprilOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.MayOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.JuneOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateOriginalTotalDueDollars\r\n\t\t\t\t\t\t\t, alsbf.JulyOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.AugustOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.SeptemberOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.OctoberOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.NovemberOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.DecemberOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.JanuaryOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.FebruaryOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.MarchOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.AprilOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.MayOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.JuneOriginalEnergy\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateOriginalEnergyUsage\r\n\t\t\t\t\t\t\t, alsbf.JulyOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.AugustOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.SeptemberOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.OctoberOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.NovemberOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.DecemberOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.JanuaryOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.FebruaryOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.MarchOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.AprilOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.MayOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.JuneOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateOriginalDemand\r\n\t\t\t\t\t\t\t, alsbf.JulyRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.AugustRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.SeptemberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.OctoberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.NovemberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.DecemberRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.JanuaryRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.FebruaryRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.MarchRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.AprilRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.MayRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.JuneRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateRevisedBilledDollars\r\n\t\t\t\t\t\t\t, alsbf.JulyRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.AugustRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.SeptemberRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.OctoberRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.NovemberRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.DecemberRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.JanuaryRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.FebruaryRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.MarchRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.AprilRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.MayRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.JuneRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateRevisedEnergy\r\n\t\t\t\t\t\t\t, alsbf.JulyRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.AugustRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.SeptemberRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.OctoberRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.NovemberRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.DecemberRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.JanuaryRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.FebruaryRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.MarchRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.AprilRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.MayRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.JuneRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateRevisedDemand\r\n\t\t\t\t\t\t\t, alsbf.JulyNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.AugustNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.SeptemberNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.OctoberNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.NovemberNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.DecemberNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.JanuaryNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.FebruaryNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.MarchNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.AprilNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.MayNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.JuneNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateNetDollarChange\r\n\t\t\t\t\t\t\t, alsbf.JulyEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.AugustEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.SeptemberEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.OctoberEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.NovemberEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.DecemberEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.JanuaryEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.FebruaryEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.MarchEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.AprilEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.MayEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.JuneEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateNetEnergyUsageChange\r\n\t\t\t\t\t\t\t, alsbf.JulyNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.AugustNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.SeptemberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.OctoberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.NovemberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.DecemberNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.JanuaryNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.FebruaryNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.MarchNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.AprilNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.MayNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.JuneNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.FiscalYearToDateNetDemandUsageChange\r\n\t\t\t\t\t\t\t, alsbf.JulyActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.AugustActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.SeptemberActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.OctoberActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.NovemberActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.DecemberActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.JanuaryActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.FebruaryActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.MarchActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.AprilActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.MayActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.JuneActualOrEstimated\r\n\t\t\t\t\t\t\t, alsbf.Notes\r\n\t\t\t\t\t\t\t, alsbf.AuthenticatedUserID\r\n\t\t\t\t\t\t\t, alsbf.DateAdded\r\n\t\t\t\t\t\t\t, alsbf.LastUpdate\r\n\r\n\t\t\t\t\t\t\t, alsbf.PublishedBillingPeriod\r\n\t\t\t\t\t\t\t, '999912' \r\n\t\t\t\t\t\t\t, alsbf.HashValue1\r\n\t\t\t\t\t\t\t, alsbf.HashValue2\r\n\t\t\r\n\t\t\t\t\t\tFROM (SELECT * FROM Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage WHERE PublishedBillingPeriod=@PublishedBillingPeriod) AS alsbf\r\n\t\t\t\t\t\tleft JOIN \r\n\t\t\t\t\t\t(SELECT t.HashValue1,t.HashValue2,t.EffectiveStartPeriod FROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage t WHERE EffectiveEndPeriod='999912') AS talsbf \r\n\t\t\t\t\t\tON talsbf.HashValue1 = alsbf.HashValue1 AND talsbf.HashValue2 = alsbf.HashValue2\r\n\t\t\t\t\t\t--WHERE alsbf.PublishedBillingPeriod=@PublishedBillingPeriod\r\n\t\t\t\t\t\tWHERE  talsbf.EffectiveStartPeriod IS NULL\r\n\t\t\t\t\t\t-- we are joining with active data only\r\n\r\n--FROM Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS alsbf\r\n--left JOIN \r\n--(SELECT t.HashValue1,t.HashValue2,t.EffectiveStartPeriod FROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage t WHERE EffectiveEndPeriod='999912') AS talsbf \r\n--ON talsbf.HashValue1 = alsbf.HashValue1 AND talsbf.HashValue2 = alsbf.HashValue2\r\n--WHERE alsbf.PublishedBillingPeriod=@PublishedBillingPeriod\r\n--AND talsbf.EffectiveStartPeriod IS NULL\r\n\r\n--SELECT PublishedBillingPeriod,AgencyCodeOEC,OecFacilityNumber,CurrentInvoiceAccountBillingGroup,FiscalYear,OriginalAccountNumber,CurrentAccountNumber,COUNT(*) \r\n--FROM Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage \r\n--GROUP BY  PublishedBillingPeriod,AgencyCodeOEC,OecFacilityNumber,CurrentInvoiceAccountBillingGroup,FiscalYear,OriginalAccountNumber,CurrentAccountNumber\r\n--HAVING COUNT(*)>1\r\n\r\n\r\n\t\t\t\t\t\t--PRINT 'UPDATE 1 / Updating data change / EffectiveEndPeriod'\r\n\t\t\t\t\t\t------\r\n\t\t\t\t\t\t-- this is data change, just set datato publishedbillingperiod\r\n\t\t\t\t\t\tUPDATE Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n\t\t\t\t\t\tSET EffectiveEndPeriod = @PublishedBillingPeriod\r\n\t\t\t\t\t\tWHERE Seqid IN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT previousPeriods.Seqid\r\n\t\t\t\t\t\t\tFROM \r\n\t\t\t\t\t\t\t(SELECT talrdfcp.InvoiceAccountBillingGroupDesc, talrdfcp.AgencyCodeOEC,talrdfcp.OecFacilityNumber,talrdfcp.CurrentInvoiceAccountBillingGroup,talrdfcp.FiscalYear,talrdfcp.OriginalAccountNumber,talrdfcp.CurrentAccountNumber,talrdfcp.EffectiveEndPeriod FROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS talrdfcp WHERE talrdfcp.EffectiveStartPeriod=@PublishedBillingPeriod) AS processingPeriod\r\n\t\t\t\t\t\t\tINNER JOIN \r\n\t\t\t\t\t\t\t(SELECT talrdfcp.InvoiceAccountBillingGroupDesc,talrdfcp.Seqid,talrdfcp.EffectiveEndPeriod, talrdfcp.AgencyCodeOEC,talrdfcp.OecFacilityNumber,talrdfcp.CurrentInvoiceAccountBillingGroup,talrdfcp.FiscalYear,talrdfcp.OriginalAccountNumber,talrdfcp.CurrentAccountNumber FROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS talrdfcp WHERE talrdfcp.EffectiveStartPeriod<@PublishedBillingPeriod) AS previousPeriods\r\n\t\t\t\t\t\t\tON previousPeriods.AgencyCodeOEC= processingPeriod.AgencyCodeOEC\r\n\t\t\t\t\t\t\tAND previousPeriods.OecFacilityNumber = processingPeriod.OecFacilityNumber\r\n\t\t\t\t\t\t\tAND previousPeriods.CurrentInvoiceAccountBillingGroup = processingPeriod.CurrentInvoiceAccountBillingGroup\r\n\t\t\t\t\t\t\tAND previousPeriods.FiscalYear = processingPeriod.FiscalYear\r\n\t\t\t\t\t\t\tAND previousPeriods.OriginalAccountNumber = processingPeriod.OriginalAccountNumber\r\n\t\t\t\t\t\t\tAND previousPeriods.CurrentAccountNumber = processingPeriod.CurrentAccountNumber\r\n\t\t\t\t\t\t\tAND previousPeriods.InvoiceAccountBillingGroupDesc = processingPeriod.InvoiceAccountBillingGroupDesc\r\n\t\t\t\t\t\t\tWHERE previousPeriods.EffectiveEndPeriod='999912'\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t--AgencyCodeOEC,OecFacilityNumber,CurrentInvoiceAccountBillingGroup,FiscalYear,OriginalAccountNumber,CurrentAccountNumber\r\n\t\t\t\t\t\t------\r\n\t\t\t\t\t\t--PRINT 'UPDATE 2 / this is existing accountbilling seqid but does not exist in current period, set datato publishedbillingperiod'\r\n\t\t\t\t\t\t-- this is existing accountbilling seqid but does not exist in current period, set datato publishedbillingperiod\r\n\t\t\t\t\t\tUPDATE Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n\t\t\t\t\t\tSET EffectiveEndPeriod = @PublishedBillingPeriod\r\n\t\t\t\t\t\tWHERE Seqid IN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT talrdfcp.Seqid FROM \r\n\t\t\t\t\t\t\tPublished.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS talrdfcp\r\n\t\t\t\t\t\t\tLEFT JOIN \r\n\t\t\t\t\t\t\tPublished.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS alrdfcp\r\n\t\t\t\t\t\t\tON alrdfcp.HashValue1 = talrdfcp.HashValue1 AND  alrdfcp.HashValue2 = talrdfcp.HashValue2\r\n\t\t\t\t\t\t\tWHERE alrdfcp.PublishedBillingPeriod=@PublishedBillingPeriod\r\n\t\t\t\t\t\t\tAND  talrdfcp.EffectiveEndPeriod='999912'\r\n\t\t\t\t\t\t\tAND alrdfcp.FiscalYear IS NULL\r\n\t\t\t\t\t\t)\r\n\r\n\r\n\t\t\t\t\t\t--PRINT 'UPDATE 3 / this is setting datato to publishedbillingperiod for data that exists in destination but not exist in source'\r\n\t\t\t\t\t\t------\r\n\t\t\t\t\t\t-- this is setting datato to publishedbillingperiod for data that exists in destination but not exist in source\r\n\t\t\t\t\t\tUPDATE Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n\t\t\t\t\t\tSET EffectiveEndPeriod = @PublishedBillingPeriod\r\n\t\t\t\t\t\tWHERE Seqid IN \r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tSELECT t.Seqid\r\n\t\t\t\t\t\t\tFROM \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT Seqid,HashValue1,HashValue2 FROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n\t\t\t\t\t\t\t\tWHERE EffectiveStartPeriod <= @PublishedBillingPeriod AND EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\t\t\t\t) t\r\n\t\t\t\t\t\t\tLEFT JOIN\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tSELECT ammlrdfcp.HashValue1,ammlrdfcp.HashValue2,ammlrdfcp.PublishedBillingPeriod FROM Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS ammlrdfcp\r\n\t\t\t\t\t\t\t\tWHERE ammlrdfcp.PublishedBillingPeriod = @PublishedBillingPeriod\r\n\t\t\t\t\t\t\t) p \r\n\t\t\t\t\t\t\tON p.HashValue1 = t.HashValue1\r\n\t\t\t\t\t\t\tWHERE p.PublishedBillingPeriod IS NULL\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t--PROCESS ENDS-------------------------\r\n\t\t\t--\tCOMMIT TRANSACTION\r\n\t\t\t--END TRY\r\n\t\t\t\r\n\r\n\r\n\t\t\t--BEGIN CATCH \r\n\t\t\t--  RAISERROR('The Process Failed', 16, 1)\r\n\t\t\t--  ROLLBACK TRANSACTION\r\n\t\t\t--  RETURN\r\n\t\t\t--END CATCH \t\t\t          \r\n         \t\t\t\r\n\t\t\tPRINT 'process finished ' \r\n    END"
        }
      ]
    }
  ]
}
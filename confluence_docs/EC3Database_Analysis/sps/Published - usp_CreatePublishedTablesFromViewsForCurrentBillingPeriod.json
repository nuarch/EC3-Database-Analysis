{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Published",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CreatePublishedTablesFromViewsForCurrentBillingPeriod",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CreatePublishedTablesFromViewsForCurrentBillingPeriod",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process and publish billing data for the current billing period. It performs a series of operations including data transformation, insertion into published tables, updating statistics, and generating reports. The procedure also manages database recovery modes and performs maintenance tasks like reindexing and updating hash values for data integrity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to its extensive use of data manipulation, multiple table operations, and integration with other stored procedures. It involves various steps such as data insertion, updating, and reindexing, which require careful coordination and error handling."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is used to pass an email address, likely for notification or logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@StatusCode AS INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This output parameter is used to return the status of the procedure execution, indicating success or failure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure starts by determining the current billing period from the "
                },
                {
                  "type": "text",
                  "text": "Billing.ApplicationTimeFrame",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Database Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It sets the database recovery model to SIMPLE and shrinks the log file to manage space."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates historical billing period data and truncates legacy publishing tables to prepare for new data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Inserts data from views into published tables ("
                },
                {
                  "type": "text",
                  "text": "Published.AccountMeterLevelRawDataForCurrentPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "Published.AccountLevelRawDataForCurrentPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") while filtering out specific account statuses."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index and Statistics Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Rebuilds indexes and updates statistics on the published tables to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Aggregation and Reporting",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Executes additional stored procedures to create summaries and pivot tables for various reporting needs, such as energy usage summaries and fiscal year pivots."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variance Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates variance reports by comparing current and previous fiscal year data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporal Data Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Updates hash values and inserts data into temporal tables for historical tracking."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Finalization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Resets the database recovery model to FULL and performs final maintenance tasks."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Index Rebuilding",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Frequent index rebuilding can be resource-intensive. It is crucial for maintaining performance but should be scheduled during off-peak hours."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Log File Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure shrinks the log file, which can lead to fragmentation. Regular monitoring and maintenance are necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure handles large volumes of data, which can impact performance. Efficient indexing and query optimization are essential."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may lock resources, affecting other operations. Consider isolation levels and transaction management to mitigate this."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple data transformations and updates. Any errors in logic can lead to data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Resource Utilization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": High resource consumption due to index rebuilding and data processing can affect database performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks comprehensive error handling, which can lead to unhandled exceptions and incomplete transactions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the procedure may require optimization to handle increased load efficiently."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on External Procedures",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on other stored procedures, which must be maintained and synchronized to ensure consistent operation."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Published].[usp_CreatePublishedTablesFromViewsForCurrentBillingPeriod]\n(\r\n\t@EmailAddress AS VARCHAR(75),\r\n\t@StatusCode AS INT OUTPUT\r\n)\r\nAS\r\nBEGIN\t\r\n\tDECLARE @PublishedBillingPeriod AS VARCHAR(6);\r\n\r\n\tSELECT @PublishedBillingPeriod = BillingPeriod\r\n\tFROM Billing.ApplicationTimeFrame\r\n\tWHERE CurrentProcessingPeriod = 'Y';\r\n\r\n\tPRINT 'ALTER DATABASE EC3database SET RECOVERY simple: ' + CAST(GETDATE() AS VARCHAR(23));\r\n\tALTER DATABASE EC3database SET RECOVERY SIMPLE;\r\n\tDBCC SHRINKFILE(N'EC3database_log', 13);\r\n\r\n\tUPDATE Billing.ApplicationTimeFrame\r\n\tSET JulyBillingPeriodFiveYearsAgo ='200707'\r\n\tWHERE CurrentProcessingPeriod = 'Y';\r\n\r\n\t-- commented by Peter Heller 3/31/2014\r\n\t-- For asserted versioning and starting at 2014-02 publishing. I want the latest state of EC3 for the beginning of EC3 (200707)\r\n\r\n\t-- before starting publishing, truncate all legacy publishing tables \r\n\tPRINT 'Truncating legacy publishing tables ...................';\r\n\tEXEC Temporal.usp_TruncatePublishingTables;\r\n\r\n\tPRINT 'Started at: ' + CAST(GETDATE() AS VARCHAR(23))\r\n\tPRINT 'Loading Published.AccountMeterLevelRawDataForCurrentPeriod ...................'\r\n\tINSERT INTO Published.AccountMeterLevelRawDataForCurrentPeriod\r\n\t\t(PublishedBillingPeriod, BillingPeriod, LastPeriodModified,  BillingMonthConsumption, BillingMonthDemand, mbOriginalAccountNumber, \r\n\t\tmbOriginalMeterNumber, EstimatedReading, MeterBillingStatus, PreviousMeterBillingStatus, MeterBillingStatusCodePeriod, IsTodMeterBilling, \r\n\t\tBillingPeriodDays, ConsecutivePeriodsEstimatedReading, mbMeterConstant, Tension, FromDate, ToDate, FromReadingDate, ToReadingDate, \r\n\t\tConsumption, Demand, AdjustmentRecordSeqid, EnergySource, IsTimeOfDayAccount, SalesType, DeliveryTariffRate, CommodityTariffRate, \r\n\t\tBillingCycle, AccountEffectiveTurnOn, AccountEffectiveTurnOff, AccountStatus, AccountPreviousStatus, AccountStatusCodePeriod, CurrentMeterNumber, \r\n\t\tmeterOriginalAccountNumber, meterOriginalMeterNumber, UtilityServiceAddress, MeterEffectiveOnDate, MeterEffectiveOffDate, MeterType, MeterDials, \r\n\t\tMeterConstant, MeterStatus, MeterPreviousStatus, MeterStatusCodePeriod, OecFacilityNumber, FacilityName, Borough, Block, LotNumber, \r\n\t\tCityPlanningBIN, IsRentalSpace, Address1, BillToAgencyCode, AgencyCodeOEC, AgencyName, EnergyType, InvoiceAccountBillingGroupDesc, \r\n\t\tUtilityCompany, EnergyUnit, UtilityCompanySeqid, EnergyDeliveryType,\r\n\t\tEnergyDeliverySubType,EnergyDeliverySubTypeID\r\n\t\t, MeterSeqid, MeterBillingSeqid, AccountExchangeMeterTrackSeqid, \r\n\t\tFacilitySeqid, AgencyDivisionSeqid, AccountSeqid,CurrentAccountNumber,OriginalAccountNumber,CurrentFiscalYear,PriorFiscalYear,FiscalYear,\r\n\t\tNgridCorrectorMeterId, AssociatedDemandMeter, OnPeakEnergyUsage, OffPeakEnergyUsage, UniqueMeterSeqid, UniqueAccountSeqID)\r\n\tSELECT PublishedBillingPeriod, BillingPeriod, LastPeriodModified, BillingMonthConsumption, BillingMonthDemand, mbOriginalAccountNumber, \r\n        mbOriginalMeterNumber, EstimatedReading, MeterBillingStatus, PreviousMeterBillingStatus, MeterBillingStatusCodePeriod, IsTodMeterBilling, \r\n        BillingPeriodDays, ConsecutivePeriodsEstimatedReading, mbMeterConstant, Tension, FromDate, ToDate, FromReadingDate, ToReadingDate, \r\n        Consumption, Demand, AdjustmentRecordSeqid, EnergySource, IsTimeOfDayAccount, SalesType, DeliveryTariffRate, CommodityTariffRate, \r\n        BillingCycle, AccountEffectiveTurnOn, AccountEffectiveTurnOff, AccountStatus, AccountPreviousStatus, AccountStatusCodePeriod, CurrentMeterNumber, \r\n        meterOriginalAccountNumber, meterOriginalMeterNumber, UtilityServiceAddress, MeterEffectiveOnDate, MeterEffectiveOffDate, MeterType, MeterDials, \r\n        MeterConstant, MeterStatus, MeterPreviousStatus, MeterStatusCodePeriod, OecFacilityNumber, FacilityName, Borough, Block, LotNumber, \r\n        CityPlanningBIN, IsRentalSpace, Address1, BillToAgencyCode, AgencyCodeOEC, AgencyName, EnergyType, InvoiceAccountBillingGroupDesc, \r\n        UtilityCompany, EnergyUnit, UtilityCompanySeqid, EnergyDeliveryType,\r\n\t\tEnergyDeliverySubType,EnergyDeliverySubTypeID\r\n\t\t, MeterSeqid, MeterBillingSeqid, AccountExchangeMeterTrackSeqid, \r\n        FacilitySeqid, AgencyDivisionSeqid, AccountSeqid, CurrentAccountNumber, OriginalAccountNumber, CurrentFiscalYear, PriorFiscalYear, \r\n        FiscalYear AS Expr1, NgridCorrectorMeterId, AssociatedDemandMeter, OnPeakEnergyUsage, OffPeakEnergyUsage, UniqueMeterSeqid, UniqueAccountSeqID\r\n\tFROM Published.uvw_AccountMeterLevelRawDataForCurrentPeriod\r\n\tWHERE AccountStatus <> 'BE' and AccountStatus <> 'EP'\r\n\tORDER BY AgencyCodeOEC, OecFacilityNumber,CurrentAccountNumber,CurrentMeterNumber,BillingPeriod DESC;\r\n\r\n\tPRINT 'Started at: '+ CAST(GETDATE() AS VARCHAR(23));\r\n\tPRINT 'Loading Published.AccountLevelRawDataForCurrentPeriod ...................';\r\n\r\n\tINSERT INTO Published.AccountLevelRawDataForCurrentPeriod\r\n\t\t(PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        LastPeriodModified,\r\n        BillingMonth,\r\n        BillingMonthActualOrEstimated,\r\n        BillingMonthOriginalBilledDollars,\r\n        BillingMonthOriginalPaidAdjustmentDollars,\r\n        BillingMonthOriginalTotalDueDollars,\r\n        BillingMonthOriginalEnergyUsage,\r\n        BillingMonthOriginalDemandUsage,\r\n        BillingMonthRevisedBilledDollars,\r\n        BillingMonthRevisedEnergyUsage,\r\n        BillingMonthRevisedDemandUsage,\r\n        BillingMonthNetDollarChange,\r\n        BillingMonthNetEnergyUsageChange,\r\n        BillingMonthNetDemandUsageChange,\r\n        ActualOrEstimated,\r\n        FiscalYear,\r\n        TotalAmountDue,\r\n        OriginalBilledAmount,\r\n        RevisedBilledAmount,\r\n        NetDollarChange,\r\n        OriginalBilledAmountPaid,\r\n        PaidAdjustmentAmount,\r\n        OriginalEnergyUsage,\r\n        NetEnergyUsageChange,\r\n        AccountEnergyUsage,\r\n        OriginalDemandUsage,\r\n        NetDemandUsageChange,\r\n        AccountDemandUsage,\r\n        UtilityCompany,\r\n        EnergySource,\r\n        EnergyType,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        OecFacilityNumber,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        Address1,\r\n        CurrentAccountNumber,\r\n        OriginalAccountNumber,\r\n        BillToAgencyCode,\r\n        FacilityName,\r\n        Borough,\r\n        Block,\r\n        LotNumber,\r\n        CityPlanningBIN,\r\n        EnergyUnit,\r\n        AccountStatus,\r\n        AccountPreviousStatus,\r\n        AccountStatusCodePeriod,\r\n        IsTimeOfDayAccount,\r\n        SalesType,\r\n        DeliveryTariffRate,\r\n        CommodityTariffRate,\r\n        BillingCycle,\r\n        UtilityServiceAddress,\r\n        AccountBillingStatus,\r\n        PreviousAccountBillingStatus,\r\n        AccountBillingStatusCodePeriod,\r\n        BillingPeriodDays,\r\n        UtilityCompanySeqid,\r\n        EnergyDeliveryType,\r\n\t\tEnergyDeliverySubType,\r\n\t\tEnergyDeliverySubTypeID,\r\n        AccountSeqid,\r\n        AccountBillingSeqid,\r\n        IsRentalSpace,\r\n        AccountEffectiveTurnOn,\r\n        AccountEffectiveTurnOff,\r\n        FromDate,\r\n        ToDate,\r\n        AccountEnergyType,\r\n        UtilityTariffRateInformationSeqid,\r\n        BTUfactor,\r\n        BTU,\r\n        CO2factor,\r\n        CO2,\r\n        OriginalReactivePowerDollars,\r\n        RevisedReactivePowerDollars,\r\n        CommodityAllocationCharge,\r\n        NetchangeReactivePowerDollars,\r\n        CustomerLevelAdjustmentAmount,\r\n        AccountReactivePowerEnergy,\r\n        RevisedFacilityPointDollar,\r\n        OriginalAccountReactivePowerEnergy,\r\n        RevisedDemandDollar,\r\n        NetChangeAccountReactivePowerEnergy,\r\n        RevisedEnergyDollar,\r\n        IsMinimumBilledCharged,\r\n        DeliveryAllocationCharge,\r\n        MinimumBilledEnergyDollars,\r\n        GrossDemandUsageChange,\r\n        MinimumBilledDemandDollars,\r\n        AccountBillingStatusDescription,\r\n        MaxBilledDemandUsage,\r\n        GrossEnergyUsageChange,\r\n        InvoiceAccountGroupSeqid,\r\n        GrossDollarChange,\r\n        AgencyDivisionSeqid,\r\n        FacilitySeqid,\r\n        MaxBilledDemandPeriod,\r\n        StreetLightingFacilityPoints,\r\n        ManualPaymentOverride,\r\n        ManualPaymentOverrideAmount,\r\n        MinimumBilledDemandUsage,\r\n        IsDeliveryMinimumBilledFlag,\r\n        DeliveryMinimumBilledAmount,\r\n        DeliveryMinimumBilledDemand,\r\n        DeliveryMaximumBilledDemand,\r\n        DeliveryMaximumBilledDemandPeriod,\r\n        MinimumBilledEnergyUsage,\r\n        BudgetGroupDEM,\r\n        BudgetGroupDEMName,\r\n        BudgetRateClassDescription,\r\n        OnPeakEnergyUsage,\r\n        OffPeakEnergyUsage,\r\n\t\tRevisedCommodityDollars\t\t\t,\r\n\t\tRevisedDeliveryDollars\t\t\t,\r\n\t\tRevisedTotalReactivePowerDollars,\r\n\t\tUniqueAccountSeqid,\r\n\t\tZECsCharge)\r\n    SELECT PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        LastPeriodModified,\r\n        BillingMonth,\r\n        BillingMonthActualOrEstimated,\r\n        BillingMonthOriginalBilledDollars,\r\n        BillingMonthOriginalPaidAdjustmentDollars,\r\n        BillingMonthOriginalTotalDueDollars,\r\n        BillingMonthOriginalEnergyUsage,\r\n        BillingMonthOriginalDemandUsage,\r\n        BillingMonthRevisedBilledDollars,\r\n        BillingMonthRevisedEnergyUsage,\r\n        BillingMonthRevisedDemandUsage,\r\n        BillingMonthNetDollarChange,\r\n        BillingMonthNetEnergyUsageChange,\r\n        BillingMonthNetDemandUsageChange,\r\n        ActualOrEstimated,\r\n        FiscalYear,\r\n        TotalAmountDue,\r\n        OriginalBilledAmount,\r\n        RevisedBilledAmount,\r\n        NetDollarChange,\r\n        OriginalBilledAmountPaid,\r\n        PaidAdjustmentAmount,\r\n        OriginalEnergyUsage,\r\n        NetEnergyUsageChange,\r\n        AccountEnergyUsage,\r\n        OriginalDemandUsage,\r\n        NetDemandUsageChange,\r\n        AccountDemandUsage,\r\n        UtilityCompany,\r\n        EnergySource,\r\n        EnergyType,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        OecFacilityNumber,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        Address1,\r\n        CurrentAccountNumber,\r\n        OriginalAccountNumber,\r\n        BillToAgencyCode,\r\n        FacilityName,\r\n        Borough,\r\n        Block,\r\n        LotNumber,\r\n        CityPlanningBIN,\r\n        EnergyUnit,\r\n        AccountStatus,\r\n        AccountPreviousStatus,\r\n        AccountStatusCodePeriod,\r\n        IsTimeOfDayAccount,\r\n        SalesType,\r\n        DeliveryTariffRate,\r\n        CommodityTariffRate,\r\n        BillingCycle,\r\n        UtilityServiceAddress,\r\n        AccountBillingStatus,\r\n        PreviousAccountBillingStatus,\r\n        AccountBillingStatusCodePeriod,\r\n        BillingPeriodDays,\r\n        UtilityCompanySeqid,\r\n        EnergyDeliveryType,\r\n\t\tEnergyDeliverySubType,\r\n\t\tEnergyDeliverySubTypeID,\r\n        AccountSeqid,\r\n        AccountBillingSeqid,\r\n        IsRentalSpace,\r\n        AccountEffectiveTurnOn,\r\n        AccountEffectiveTurnOff,\r\n        FromDate,\r\n        ToDate,\r\n        AccountEnergyType,\r\n        UtilityTariffRateInformationSeqid,\r\n        BTUfactor,\r\n        BTU,\r\n        CO2factor,\r\n        CO2,\r\n        OriginalReactivePowerDollars,\r\n        RevisedReactivePowerDollars,\r\n        CommodityAllocationCharge,\r\n        NetchangeReactivePowerDollars,\r\n        CustomerLevelAdjustmentAmount,\r\n        AccountReactivePowerEnergy,\r\n        RevisedFacilityPointDollar,\r\n        OriginalAccountReactivePowerEnergy,\r\n        RevisedDemandDollar,\r\n        NetChangeAccountReactivePowerEnergy,\r\n        RevisedEnergyDollar,\r\n        IsMinimumBilledCharged,\r\n        DeliveryAllocationCharge,\r\n        MinimumBilledEnergyDollars,\r\n        GrossDemandUsageChange,\r\n        MinimumBilledDemandDollars,\r\n        AccountBillingStatusDescription,\r\n        MaxBilledDemandUsage,\r\n        GrossEnergyUsageChange,\r\n        InvoiceAccountGroupSeqid,\r\n        GrossDollarChange,\r\n        AgencyDivisionSeqid,\r\n        FacilitySeqid,\r\n        MaxBilledDemandPeriod,\r\n        StreetLightingFacilityPoints,\r\n        ManualPaymentOverride,\r\n        ManualPaymentOverrideAmount,\r\n        MinimumBilledDemandUsage,\r\n        IsDeliveryMinimumBilledFlag,\r\n        DeliveryMinimumBilledAmount,\r\n        DeliveryMinimumBilledDemand,\r\n        DeliveryMaximumBilledDemand,\r\n        DeliveryMaximumBilledDemandPeriod,\r\n        MinimumBilledEnergyUsage,\r\n        BudgetGroupDEM,\r\n        BudgetGroupDEMName,\r\n        BudgetRateClassDescription,\r\n        AccountEnergyUsage as OnPeakEnergyUsage,  -- Changed by PAH 3/6/2013 from zero to AccountEnergyUsage\r\n        0 as OffPeakEnergyUsage,\r\n\t\tRevisedCommodityDollars,\r\n\t\tRevisedDeliveryDollars,\r\n\t\tRevisedTotalReactivePowerDollars,\r\n\t\tUniqueAccountSeqid,\r\n\t\tZECsCharge\r\n    FROM Published.uvw_AccountLevelRawDataForCurrentPeriod\r\n    WHERE AccountBillingStatus <> 'BE' and AccountBillingStatus <> 'EP'\r\n    ORDER BY AgencyCodeOEC, OecFacilityNumber, CurrentAccountNumber, BillingPeriod DESC;\r\n\t\r\n\t-- rebuild te indexes of these tables to speed things up\r\n\tALTER INDEX ALL ON Published.AccountLevelRawDataForCurrentPeriod REBUILD;\r\n\tUPDATE STATISTICS Published.AccountLevelRawDataForCurrentPeriod;\r\n\r\n\tALTER index all on Published.AccountMeterLevelRawDataForCurrentPeriod rebuild\r\n\tUPDATE STATISTICS Published.AccountMeterLevelRawDataForCurrentPeriod\r\n\r\n\t-- update on peak and off peak for account level\r\n\tUPDATE publishedData\r\n\tSET publishedData.OnPeakEnergyUsage = AccountData.OnPeakEnergyUsage,\r\n        publishedData.OffPeakEnergyUsage = AccountData.OffPeakEnergyUsage\r\n\tFROM Published.AccountLevelRawDataForCurrentPeriod publishedData\r\n\t\tINNER join (select Billing.Account.CurrentAccountNumber,\r\n\t\t\t\tBilling.MeterBillingElectric.BillingPeriod,\r\n\t\t\t\tBilling.MeterBillingElectric.BillingPeriodRevision,\r\n\t\t\t\tBilling.Account.IsTimeOfDayAccount,\r\n\t\t\t\tsum(Billing.MeterBillingElectric.Consumption) as OnPeakEnergyUsage,\r\n\t\t\t\tsum(Billing.MeterBillingElectric.ConsumptionHoursOffPeak) as OffPeakEnergyUsage\r\n\t\t\tfrom Billing.Account\r\n                inner join Billing.AccountExchangeMeterTrack on Billing.Account.AccountSeqid = Billing.AccountExchangeMeterTrack.OriginalAccountSeqid\r\n                inner join Billing.MeterBilling on Billing.AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid = Billing.MeterBilling.AccountExchangeMeterTrackSeqid\r\n                inner join Billing.MeterBillingElectric on Billing.MeterBilling.MeterBillingSeqid = Billing.MeterBillingElectric.MeterBillingRowId\r\n                inner join Billing.Meter on Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid\r\n            where  ( Billing.Account.CurrentInvoiceAccountGroup = 1 )\r\n                and Billing.MeterBillingElectric.BillingPeriod > '200707'\r\n            group by Billing.Account.CurrentAccountNumber,\r\n                    Billing.MeterBillingElectric.BillingPeriod,\r\n                    Billing.MeterBillingElectric.BillingPeriodRevision,\r\n                    Billing.Account.IsTimeOfDayAccount\r\n                   ) as accountData on publishedData.CurrentAccountNumber = AccountData.CurrentAccountNumber\r\n\t\t\t\t\t\tand publishedData.BillingPeriod = AccountData.BillingPeriodRevision\r\n\t\t\t\t\t\tand publishedData.IsTimeOfDayAccount = AccountData.IsTimeOfDayAccount\r\n\tWHERE PublishedBillingPeriod = @PublishedBillingPeriod\r\n\t-- Above line is added to filter the update for the processing period only\r\n\r\n\tselect PublishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tOriginalAccountNumber,\r\n\t\tmax(EstimatedReading) as ActualOrEstimated\r\n\tinto #AccountLevelActualOrEstimated\r\n\tfrom Published.AccountMeterLevelRawDataForCurrentPeriod\r\n\tgroup by PublishedBillingPeriod,\r\n\t\tBillingPeriod,\r\n\t\tOriginalAccountNumber\r\n\thaving (PublishedBillingPeriod = @PublishedBillingPeriod)\r\n\r\n\t-- in this block process is overwriting Account level Act Est with meter level actual est\r\n\t-- Steam overwrite is excluded from this update because we are not receiving meter level actualorestimated \r\n\tupdate Published.AccountLevelRawDataForCurrentPeriod\r\n\tset ActualOrEstimated = #AccountLevelActualOrEstimated.ActualOrEstimated\r\n\tfrom Published.AccountLevelRawDataForCurrentPeriod\r\n\t\tinner join #AccountLevelActualOrEstimated on Published.AccountLevelRawDataForCurrentPeriod.BillingPeriod = #AccountLevelActualOrEstimated.BillingPeriod\r\n            and Published.AccountLevelRawDataForCurrentPeriod.OriginalAccountNumber = #AccountLevelActualOrEstimated.OriginalAccountNumber\r\n            and Published.AccountLevelRawDataForCurrentPeriod.PublishedBillingPeriod = #AccountLevelActualOrEstimated.PublishedBillingPeriod\r\n\tWHERE CurrentInvoiceAccountBillingGroup <> 10\r\n\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Executing Published.usp_Create_EnergyUsageSummaryGroupByAgencyAndEnergyType ...................'\r\n\r\n\texecute [Published].[usp_Create_EnergyUsageSummaryGroupByAgencyAndEnergyType] @PublishedBillingPeriod\r\n\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Loading Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage ...................'\r\n\tinsert  into Published.FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n        (PublishedBillingPeriod,\r\n        BillToAgencyCode,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        OecFacilityNumber,\r\n        Address1,\r\n        Borough,\r\n        Block,\r\n        LotNumber,\r\n        CityPlanningBIN,\r\n        CurrentAccountNumber,\r\n        OriginalAccountNumber,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        FiscalYear,\r\n        UtilityCompany,\r\n        EnergyType,\r\n\t\tJulyOriginalBilledDollars,\r\n        AugustOriginalBilledDollars,\r\n        SeptemberOriginalBilledDollars,\r\n        OctoberOriginalBilledDollars,\r\n        NovemberOriginalBilledDollars,\r\n        DecemberOriginalBilledDollars,\r\n        JanuaryOriginalBilledDollars,\r\n        FebruaryOriginalBilledDollars,\r\n        MarchOriginalBilledDollars,\r\n        AprilOriginalBilledDollars,\r\n        MayOriginalBilledDollars,\r\n        JuneOriginalBilledDollars,\r\n        FiscalYearToDateOriginalBilledDollars,\r\n        JulyOriginalPaidAdjustmentDollars,\r\n        AugustOriginalPaidAdjustmentDollars,\r\n        SeptemberOriginalPaidAdjustmentDollars,\r\n        OctoberOriginalPaidAdjustmentDollars,\r\n        NovemberOriginalPaidAdjustmentDollars,\r\n        DecemberOriginalPaidAdjustmentDollars,\r\n        JanuaryOriginalPaidAdjustmentDollars,\r\n        FebruaryOriginalPaidAdjustmentDollars,\r\n        MarchOriginalPaidAdjustmentDollars,\r\n        AprilOriginalPaidAdjustmentDollars,\r\n        MayOriginalPaidAdjustmentDollars,\r\n        JuneOriginalPaidAdjustmentDollars,\r\n        FiscalYearToDateOriginalPaidAdjustmentDollars,\r\n        JulyOriginalTotalDueDollars,\r\n        AugustOriginalTotalDueDollars,\r\n        SeptemberOriginalTotalDueDollars,\r\n        OctoberOriginalTotalDueDollars,\r\n        NovemberOriginalTotalDueDollars,\r\n        DecemberOriginalTotalDueDollars,\r\n        JanuaryOriginalTotalDueDollars,\r\n        FebruaryOriginalTotalDueDollars,\r\n        MarchOriginalTotalDueDollars,\r\n        AprilOriginalTotalDueDollars,\r\n        MayOriginalTotalDueDollars,\r\n        JuneOriginalTotalDueDollars,\r\n        FiscalYearToDateOriginalTotalDueDollars,\r\n        JulyOriginalEnergy,\r\n        AugustOriginalEnergy,\r\n        SeptemberOriginalEnergy,\r\n        OctoberOriginalEnergy,\r\n        NovemberOriginalEnergy,\r\n        DecemberOriginalEnergy,\r\n        JanuaryOriginalEnergy,\r\n        FebruaryOriginalEnergy,\r\n        MarchOriginalEnergy,\r\n        AprilOriginalEnergy,\r\n        MayOriginalEnergy,\r\n        JuneOriginalEnergy,\r\n        FiscalYearToDateOriginalEnergyUsage,\r\n        JulyOriginalDemand,\r\n        AugustOriginalDemand,\r\n        SeptemberOriginalDemand,\r\n        OctoberOriginalDemand,\r\n        NovemberOriginalDemand,\r\n        DecemberOriginalDemand,\r\n        JanuaryOriginalDemand,\r\n        FebruaryOriginalDemand,\r\n        MarchOriginalDemand,\r\n        AprilOriginalDemand,\r\n        MayOriginalDemand,\r\n        JuneOriginalDemand,\r\n        FiscalYearToDateOriginalDemand,\r\n        JulyRevisedBilledDollars,\r\n        AugustRevisedBilledDollars,\r\n        SeptemberRevisedBilledDollars,\r\n        OctoberRevisedBilledDollars,\r\n        NovemberRevisedBilledDollars,\r\n        DecemberRevisedBilledDollars,\r\n        JanuaryRevisedBilledDollars,\r\n        FebruaryRevisedBilledDollars,\r\n        MarchRevisedBilledDollars,\r\n        AprilRevisedBilledDollars,\r\n        MayRevisedBilledDollars,\r\n        JuneRevisedBilledDollars,\r\n        FiscalYearToDateRevisedBilledDollars,\r\n        JulyRevisedEnergy,\r\n        AugustRevisedEnergy,\r\n        SeptemberRevisedEnergy,\r\n        OctoberRevisedEnergy,\r\n        NovemberRevisedEnergy,\r\n        DecemberRevisedEnergy,\r\n        JanuaryRevisedEnergy,\r\n        FebruaryRevisedEnergy,\r\n        MarchRevisedEnergy,\r\n        AprilRevisedEnergy,\r\n        MayRevisedEnergy,\r\n        JuneRevisedEnergy,\r\n        FiscalYearToDateRevisedEnergy,\r\n        JulyRevisedDemand,\r\n        AugustRevisedDemand,\r\n        SeptemberRevisedDemand,\r\n        OctoberRevisedDemand,\r\n        NovemberRevisedDemand,\r\n        DecemberRevisedDemand,\r\n        JanuaryRevisedDemand,\r\n        FebruaryRevisedDemand,\r\n        MarchRevisedDemand,\r\n        AprilRevisedDemand,\r\n        MayRevisedDemand,\r\n        JuneRevisedDemand,\r\n        FiscalYearToDateRevisedDemand,\r\n        JulyNetDollarChange,\r\n        AugustNetDollarChange,\r\n        SeptemberNetDollarChange,\r\n        OctoberNetDollarChange,\r\n        NovemberNetDollarChange,\r\n        DecemberNetDollarChange,\r\n        JanuaryNetDollarChange,\r\n        FebruaryNetDollarChange,\r\n        MarchNetDollarChange,\r\n        AprilNetDollarChange,\r\n        MayNetDollarChange,\r\n        JuneNetDollarChange,\r\n        FiscalYearToDateNetDollarChange,\r\n        JulyEnergyUsageChange,\r\n        AugustEnergyUsageChange,\r\n        SeptemberEnergyUsageChange,\r\n        OctoberEnergyUsageChange,\r\n        NovemberEnergyUsageChange,\r\n        DecemberEnergyUsageChange,\r\n        JanuaryEnergyUsageChange,\r\n        FebruaryEnergyUsageChange,\r\n        MarchEnergyUsageChange,\r\n        AprilEnergyUsageChange,\r\n        MayEnergyUsageChange,\r\n        JuneEnergyUsageChange,\r\n        FiscalYearToDateNetEnergyUsageChange,\r\n        JulyNetDemandUsageChange,\r\n        AugustNetDemandUsageChange,\r\n        SeptemberNetDemandUsageChange,\r\n        OctoberNetDemandUsageChange,\r\n        NovemberNetDemandUsageChange,\r\n        DecemberNetDemandUsageChange,\r\n        JanuaryNetDemandUsageChange,\r\n        FebruaryNetDemandUsageChange,\r\n        MarchNetDemandUsageChange,\r\n        AprilNetDemandUsageChange,\r\n        MayNetDemandUsageChange,\r\n        JuneNetDemandUsageChange,\r\n        FiscalYearToDateNetDemandUsageChange,\r\n        JulyActualOrEstimated,\r\n        AugustActualOrEstimated,\r\n        SeptemberActualOrEstimated,\r\n        OctoberActualOrEstimated,\r\n        NovemberActualOrEstimated,\r\n        DecemberActualOrEstimated,\r\n        JanuaryActualOrEstimated,\r\n        FebruaryActualOrEstimated,\r\n        MarchActualOrEstimated,\r\n        AprilActualOrEstimated,\r\n        MayActualOrEstimated,\r\n        JuneActualOrEstimated,\r\n        CurrentFiscalYear,\r\n        PriorFiscalYear)\r\n    SELECT PublishedBillingPeriod,\r\n        BillToAgencyCode,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        OecFacilityNumber,\r\n        Address1,\r\n        Borough,\r\n        Block,\r\n        LotNumber,\r\n        CityPlanningBIN,\r\n        CurrentAccountNumber,\r\n        OriginalAccountNumber,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        FiscalYear,\r\n        UtilityCompany,\r\n        EnergyType,\r\n        isnull(JulyOriginalBilledDollars, 0),\r\n        isnull(AugustOriginalBilledDollars, 0),\r\n        isnull(SeptemberOriginalBilledDollars, 0),\r\n        isnull(OctoberOriginalBilledDollars, 0),\r\n        isnull(NovemberOriginalBilledDollars, 0),\r\n        isnull(DecemberOriginalBilledDollars, 0),\r\n        isnull(JanuaryOriginalBilledDollars, 0),\r\n        isnull(FebruaryOriginalBilledDollars, 0),\r\n        isnull(MarchOriginalBilledDollars, 0),\r\n        isnull(AprilOriginalBilledDollars, 0),\r\n        isnull(MayOriginalBilledDollars, 0),\r\n        isnull(JuneOriginalBilledDollars, 0),\r\n        isnull(FiscalYearToDateOriginalBilledDollars, 0),\r\n        isnull(JulyOriginalPaidAdjustmentDollars, 0),\r\n        isnull(AugustOriginalPaidAdjustmentDollars, 0),\r\n        isnull(SeptemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(OctoberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(NovemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(DecemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JanuaryOriginalPaidAdjustmentDollars, 0),\r\n        isnull(FebruaryOriginalPaidAdjustmentDollars, 0),\r\n        isnull(MarchOriginalPaidAdjustmentDollars, 0),\r\n        isnull(AprilOriginalPaidAdjustmentDollars, 0),\r\n        isnull(MayOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JuneOriginalPaidAdjustmentDollars, 0),\r\n        isnull(FiscalYearToDateOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JulyOriginalTotalDueDollars, 0),\r\n        isnull(AugustOriginalTotalDueDollars, 0),\r\n        isnull(SeptemberOriginalTotalDueDollars, 0),\r\n        isnull(OctoberOriginalTotalDueDollars, 0),\r\n        isnull(NovemberOriginalTotalDueDollars, 0),\r\n        isnull(DecemberOriginalTotalDueDollars, 0),\r\n        isnull(JanuaryOriginalTotalDueDollars, 0),\r\n        isnull(FebruaryOriginalTotalDueDollars, 0),\r\n        isnull(MarchOriginalTotalDueDollars, 0),\r\n        isnull(AprilOriginalTotalDueDollars, 0),\r\n        isnull(MayOriginalTotalDueDollars, 0),\r\n        isnull(JuneOriginalTotalDueDollars, 0),\r\n        isnull(FiscalYearToDateOriginalTotalDueDollars, 0),\r\n        isnull(JulyOriginalEnergy, 0),\r\n        isnull(AugustOriginalEnergy, 0),\r\n        isnull(SeptemberOriginalEnergy, 0),\r\n        isnull(OctoberOriginalEnergy, 0),\r\n        isnull(NovemberOriginalEnergy, 0),\r\n        isnull(DecemberOriginalEnergy, 0),\r\n        isnull(JanuaryOriginalEnergy, 0),\r\n        isnull(FebruaryOriginalEnergy, 0),\r\n        isnull(MarchOriginalEnergy, 0),\r\n        isnull(AprilOriginalEnergy, 0),\r\n        isnull(MayOriginalEnergy, 0),\r\n        isnull(JuneOriginalEnergy, 0),\r\n        isnull(FiscalYearToDateOriginalEnergyUsage, 0),\r\n        isnull(JulyOriginalDemand, 0),\r\n        isnull(AugustOriginalDemand, 0),\r\n        isnull(SeptemberOriginalDemand, 0),\r\n        isnull(OctoberOriginalDemand, 0),\r\n        isnull(NovemberOriginalDemand, 0),\r\n        isnull(DecemberOriginalDemand, 0),\r\n        isnull(JanuaryOriginalDemand, 0),\r\n        isnull(FebruaryOriginalDemand, 0),\r\n        isnull(MarchOriginalDemand, 0),\r\n        isnull(AprilOriginalDemand, 0),\r\n        isnull(MayOriginalDemand, 0),\r\n        isnull(JuneOriginalDemand, 0),\r\n        isnull(FiscalYearToDateOriginalDemand, 0),\r\n        isnull(JulyRevisedBilledDollars, 0),\r\n        isnull(AugustRevisedBilledDollars, 0),\r\n        isnull(SeptemberRevisedBilledDollars, 0),\r\n        isnull(OctoberRevisedBilledDollars, 0),\r\n        isnull(NovemberRevisedBilledDollars, 0),\r\n        isnull(DecemberRevisedBilledDollars, 0),\r\n        isnull(JanuaryRevisedBilledDollars, 0),\r\n        isnull(FebruaryRevisedBilledDollars, 0),\r\n        isnull(MarchRevisedBilledDollars, 0),\r\n        isnull(AprilRevisedBilledDollars, 0),\r\n        isnull(MayRevisedBilledDollars, 0),\r\n        isnull(JuneRevisedBilledDollars, 0),\r\n        isnull(FiscalYearToDateRevisedBilledDollars, 0),\r\n        isnull(JulyRevisedEnergy, 0),\r\n        isnull(AugustRevisedEnergy, 0),\r\n        isnull(SeptemberRevisedEnergy, 0),\r\n        isnull(OctoberRevisedEnergy, 0),\r\n        isnull(NovemberRevisedEnergy, 0),\r\n        isnull(DecemberRevisedEnergy, 0),\r\n        isnull(JanuaryRevisedEnergy, 0),\r\n        isnull(FebruaryRevisedEnergy, 0),\r\n        isnull(MarchRevisedEnergy, 0),\r\n        isnull(AprilRevisedEnergy, 0),\r\n        isnull(MayRevisedEnergy, 0),\r\n        isnull(JuneRevisedEnergy, 0),\r\n        isnull(FiscalYearToDateRevisedEnergy, 0),\r\n        isnull(JulyRevisedDemand, 0),\r\n        isnull(AugustRevisedDemand, 0),\r\n        isnull(SeptemberRevisedDemand, 0),\r\n        isnull(OctoberRevisedDemand, 0),\r\n        isnull(NovemberRevisedDemand, 0),\r\n        isnull(DecemberRevisedDemand, 0),\r\n        isnull(JanuaryRevisedDemand, 0),\r\n        isnull(FebruaryRevisedDemand, 0),\r\n        isnull(MarchRevisedDemand, 0),\r\n        isnull(AprilRevisedDemand, 0),\r\n        isnull(MayRevisedDemand, 0),\r\n        isnull(JuneRevisedDemand, 0),\r\n        isnull(FiscalYearToDateRevisedDemand, 0),\r\n        isnull(JulyNetDollarChange, 0),\r\n        isnull(AugustNetDollarChange, 0),\r\n        isnull(SeptemberNetDollarChange, 0),\r\n        isnull(OctoberNetDollarChange, 0),\r\n        isnull(NovemberNetDollarChange, 0),\r\n        isnull(DecemberNetDollarChange, 0),\r\n        isnull(JanuaryNetDollarChange, 0),\r\n        isnull(FebruaryNetDollarChange, 0),\r\n        isnull(MarchNetDollarChange, 0),\r\n        isnull(AprilNetDollarChange, 0),\r\n        isnull(MayNetDollarChange, 0),\r\n        isnull(JuneNetDollarChange, 0),\r\n        isnull(FiscalYearToDateNetDollarChange, 0),\r\n        isnull(JulyEnergyUsageChange, 0),\r\n        isnull(AugustEnergyUsageChange, 0),\r\n        isnull(SeptemberEnergyUsageChange, 0),\r\n        isnull(OctoberEnergyUsageChange, 0),\r\n        isnull(NovemberEnergyUsageChange, 0),\r\n        isnull(DecemberEnergyUsageChange, 0),\r\n        isnull(JanuaryEnergyUsageChange, 0),\r\n        isnull(FebruaryEnergyUsageChange, 0),\r\n        isnull(MarchEnergyUsageChange, 0),\r\n        isnull(AprilEnergyUsageChange, 0),\r\n        isnull(MayEnergyUsageChange, 0),\r\n        isnull(JuneEnergyUsageChange, 0),\r\n        isnull(FiscalYearToDateNetEnergyUsageChange, 0),\r\n        isnull(JulyNetDemandUsageChange, 0),\r\n        isnull(AugustNetDemandUsageChange, 0),\r\n        isnull(SeptemberNetDemandUsageChange, 0),\r\n        isnull(OctoberNetDemandUsageChange, 0),\r\n        isnull(NovemberNetDemandUsageChange, 0),\r\n        isnull(DecemberNetDemandUsageChange, 0),\r\n        isnull(JanuaryNetDemandUsageChange, 0),\r\n        isnull(FebruaryNetDemandUsageChange, 0),\r\n        isnull(MarchNetDemandUsageChange, 0),\r\n        isnull(AprilNetDemandUsageChange, 0),\r\n        isnull(MayNetDemandUsageChange, 0),\r\n        isnull(JuneNetDemandUsageChange, 0),\r\n        isnull(FiscalYearToDateNetDemandUsageChange, 0),\r\n        JulyActualOrEstimated,\r\n        AugustActualOrEstimated,\r\n        SeptemberActualOrEstimated,\r\n        OctoberActualOrEstimated,\r\n        NovemberActualOrEstimated,\r\n        DecemberActualOrEstimated,\r\n        JanuaryActualOrEstimated,\r\n        FebruaryActualOrEstimated,\r\n        MarchActualOrEstimated,\r\n        AprilActualOrEstimated,\r\n        MayActualOrEstimated,\r\n        JuneActualOrEstimated,\r\n        CurrentFiscalYear,\r\n        PriorFiscalYear\r\n\tFROM Published.uvw_FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage\r\n\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Loading Published.FiscalYearPivotByAgencyAndFacilityDollarsAndUsage ...................'\r\n\tinsert  into Published.FiscalYearPivotByAgencyAndFacilityDollarsAndUsage\r\n\t\t(PublishedBillingPeriod,\r\n        BillToAgencyCode,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        OecFacilityNumber,\r\n        Address1,\r\n        Borough,\r\n        Block,\r\n        LotNumber,\r\n        CityPlanningBIN,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        FiscalYear,\r\n        UtilityCompany,\r\n        EnergyType,\r\n        JulyOriginalBilledDollars,\r\n        AugustOriginalBilledDollars,\r\n        SeptemberOriginalBilledDollars,\r\n        OctoberOriginalBilledDollars,\r\n        NovemberOriginalBilledDollars,\r\n        DecemberOriginalBilledDollars,\r\n        JanuaryOriginalBilledDollars,\r\n        FebruaryOriginalBilledDollars,\r\n        MarchOriginalBilledDollars,\r\n        AprilOriginalBilledDollars,\r\n        MayOriginalBilledDollars,\r\n        JuneOriginalBilledDollars,\r\n        FiscalYearToDateOriginalBilledDollars,\r\n        JulyOriginalPaidAdjustmentDollars,\r\n        AugustOriginalPaidAdjustmentDollars,\r\n        SeptemberOriginalPaidAdjustmentDollars,\r\n        OctoberOriginalPaidAdjustmentDollars,\r\n        NovemberOriginalPaidAdjustmentDollars,\r\n        DecemberOriginalPaidAdjustmentDollars,\r\n        JanuaryOriginalPaidAdjustmentDollars,\r\n        FebruaryOriginalPaidAdjustmentDollars,\r\n        MarchOriginalPaidAdjustmentDollars,\r\n        AprilOriginalPaidAdjustmentDollars,\r\n        MayOriginalPaidAdjustmentDollars,\r\n        JuneOriginalPaidAdjustmentDollars,\r\n        FiscalYearToDateOriginalPaidAdjustmentDollars,\r\n        JulyOriginalTotalDueDollars,\r\n        AugustOriginalTotalDueDollars,\r\n        SeptemberOriginalTotalDueDollars,\r\n        OctoberOriginalTotalDueDollars,\r\n        NovemberOriginalTotalDueDollars,\r\n        DecemberOriginalTotalDueDollars,\r\n        JanuaryOriginalTotalDueDollars,\r\n        FebruaryOriginalTotalDueDollars,\r\n        MarchOriginalTotalDueDollars,\r\n        AprilOriginalTotalDueDollars,\r\n        MayOriginalTotalDueDollars,\r\n        JuneOriginalTotalDueDollars,\r\n        FiscalYearToDateOriginalTotalDueDollars,\r\n        JulyOriginalEnergy,\r\n        AugustOriginalEnergy,\r\n        SeptemberOriginalEnergy,\r\n        OctoberOriginalEnergy,\r\n        NovemberOriginalEnergy,\r\n        DecemberOriginalEnergy,\r\n        JanuaryOriginalEnergy,\r\n        FebruaryOriginalEnergy,\r\n        MarchOriginalEnergy,\r\n        AprilOriginalEnergy,\r\n        MayOriginalEnergy,\r\n        JuneOriginalEnergy,\r\n        FiscalYearToDateOriginalEnergyUsage,\r\n        JulyOriginalDemand,\r\n        AugustOriginalDemand,\r\n        SeptemberOriginalDemand,\r\n        OctoberOriginalDemand,\r\n        NovemberOriginalDemand,\r\n        DecemberOriginalDemand,\r\n        JanuaryOriginalDemand,\r\n        FebruaryOriginalDemand,\r\n        MarchOriginalDemand,\r\n        AprilOriginalDemand,\r\n        MayOriginalDemand,\r\n        JuneOriginalDemand,\r\n        FiscalYearToDateOriginalDemand,\r\n        JulyRevisedBilledDollars,\r\n        AugustRevisedBilledDollars,\r\n        SeptemberRevisedBilledDollars,\r\n        OctoberRevisedBilledDollars,\r\n        NovemberRevisedBilledDollars,\r\n        DecemberRevisedBilledDollars,\r\n        JanuaryRevisedBilledDollars,\r\n        FebruaryRevisedBilledDollars,\r\n        MarchRevisedBilledDollars,\r\n        AprilRevisedBilledDollars,\r\n        MayRevisedBilledDollars,\r\n        JuneRevisedBilledDollars,\r\n        FiscalYearToDateRevisedBilledDollars,\r\n        JulyRevisedEnergy,\r\n        AugustRevisedEnergy,\r\n        SeptemberRevisedEnergy,\r\n        OctoberRevisedEnergy,\r\n        NovemberRevisedEnergy,\r\n        DecemberRevisedEnergy,\r\n        JanuaryRevisedEnergy,\r\n        FebruaryRevisedEnergy,\r\n        MarchRevisedEnergy,\r\n        AprilRevisedEnergy,\r\n        MayRevisedEnergy,\r\n        JuneRevisedEnergy,\r\n        FiscalYearToDateRevisedEnergy,\r\n        JulyRevisedDemand,\r\n        AugustRevisedDemand,\r\n        SeptemberRevisedDemand,\r\n        OctoberRevisedDemand,\r\n        NovemberRevisedDemand,\r\n        DecemberRevisedDemand,\r\n        JanuaryRevisedDemand,\r\n        FebruaryRevisedDemand,\r\n        MarchRevisedDemand,\r\n        AprilRevisedDemand,\r\n        MayRevisedDemand,\r\n        JuneRevisedDemand,\r\n        FiscalYearToDateRevisedDemand,\r\n        JulyNetDollarChange,\r\n        AugustNetDollarChange,\r\n        SeptemberNetDollarChange,\r\n        OctoberNetDollarChange,\r\n        NovemberNetDollarChange,\r\n        DecemberNetDollarChange,\r\n        JanuaryNetDollarChange,\r\n        FebruaryNetDollarChange,\r\n        MarchNetDollarChange,\r\n        AprilNetDollarChange,\r\n        MayNetDollarChange,\r\n        JuneNetDollarChange,\r\n        FiscalYearToDateNetDollarChange,\r\n        JulyEnergyUsageChange,\r\n        AugustEnergyUsageChange,\r\n        SeptemberEnergyUsageChange,\r\n        OctoberEnergyUsageChange,\r\n        NovemberEnergyUsageChange,\r\n        DecemberEnergyUsageChange,\r\n        JanuaryEnergyUsageChange,\r\n        FebruaryEnergyUsageChange,\r\n        MarchEnergyUsageChange,\r\n        AprilEnergyUsageChange,\r\n        MayEnergyUsageChange,\r\n        JuneEnergyUsageChange,\r\n        FiscalYearToDateNetEnergyUsageChange,\r\n        JulyNetDemandUsageChange,\r\n        AugustNetDemandUsageChange,\r\n        SeptemberNetDemandUsageChange,\r\n        OctoberNetDemandUsageChange,\r\n        NovemberNetDemandUsageChange,\r\n        DecemberNetDemandUsageChange,\r\n        JanuaryNetDemandUsageChange,\r\n        FebruaryNetDemandUsageChange,\r\n        MarchNetDemandUsageChange,\r\n        AprilNetDemandUsageChange,\r\n        MayNetDemandUsageChange,\r\n        JuneNetDemandUsageChange,\r\n        FiscalYearToDateNetDemandUsageChange)\r\n    SELECT PublishedBillingPeriod,\r\n        BillToAgencyCode,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        OecFacilityNumber,\r\n        Address1,\r\n        Borough,\r\n        Block,\r\n        LotNumber,\r\n        CityPlanningBIN,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        FiscalYear,\r\n        UtilityCompany,\r\n        EnergyType,\r\n        isnull(JulyOriginalBilledDollars, 0),\r\n        isnull(AugustOriginalBilledDollars, 0),\r\n        isnull(SeptemberOriginalBilledDollars, 0),\r\n        isnull(OctoberOriginalBilledDollars, 0),\r\n        isnull(NovemberOriginalBilledDollars, 0),\r\n        isnull(DecemberOriginalBilledDollars, 0),\r\n        isnull(JanuaryOriginalBilledDollars, 0),\r\n        isnull(FebruaryOriginalBilledDollars, 0),\r\n        isnull(MarchOriginalBilledDollars, 0),\r\n        isnull(AprilOriginalBilledDollars, 0),\r\n        isnull(MayOriginalBilledDollars, 0),\r\n        isnull(JuneOriginalBilledDollars, 0),\r\n        isnull(FiscalYearToDateOriginalBilledDollars, 0),\r\n        isnull(JulyOriginalPaidAdjustmentDollars, 0),\r\n        isnull(AugustOriginalPaidAdjustmentDollars, 0),\r\n        isnull(SeptemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(OctoberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(NovemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(DecemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JanuaryOriginalPaidAdjustmentDollars, 0),\r\n        isnull(FebruaryOriginalPaidAdjustmentDollars, 0),\r\n        isnull(MarchOriginalPaidAdjustmentDollars, 0),\r\n        isnull(AprilOriginalPaidAdjustmentDollars, 0),\r\n        isnull(MayOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JuneOriginalPaidAdjustmentDollars, 0),\r\n        isnull(FiscalYearToDateOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JulyOriginalTotalDueDollars, 0),\r\n        isnull(AugustOriginalTotalDueDollars, 0),\r\n        isnull(SeptemberOriginalTotalDueDollars, 0),\r\n        isnull(OctoberOriginalTotalDueDollars, 0),\r\n        isnull(NovemberOriginalTotalDueDollars, 0),\r\n        isnull(DecemberOriginalTotalDueDollars, 0),\r\n        isnull(JanuaryOriginalTotalDueDollars, 0),\r\n        isnull(FebruaryOriginalTotalDueDollars, 0),\r\n        isnull(MarchOriginalTotalDueDollars, 0),\r\n        isnull(AprilOriginalTotalDueDollars, 0),\r\n        isnull(MayOriginalTotalDueDollars, 0),\r\n        isnull(JuneOriginalTotalDueDollars, 0),\r\n        isnull(FiscalYearToDateOriginalTotalDueDollars, 0),\r\n        isnull(JulyOriginalEnergy, 0),\r\n        isnull(AugustOriginalEnergy, 0),\r\n        isnull(SeptemberOriginalEnergy, 0),\r\n        isnull(OctoberOriginalEnergy, 0),\r\n        isnull(NovemberOriginalEnergy, 0),\r\n        isnull(DecemberOriginalEnergy, 0),\r\n        isnull(JanuaryOriginalEnergy, 0),\r\n        isnull(FebruaryOriginalEnergy, 0),\r\n        isnull(MarchOriginalEnergy, 0),\r\n        isnull(AprilOriginalEnergy, 0),\r\n        isnull(MayOriginalEnergy, 0),\r\n        isnull(JuneOriginalEnergy, 0),\r\n        isnull(FiscalYearToDateOriginalEnergyUsage, 0),\r\n        isnull(JulyOriginalDemand, 0),\r\n        isnull(AugustOriginalDemand, 0),\r\n        isnull(SeptemberOriginalDemand, 0),\r\n        isnull(OctoberOriginalDemand, 0),\r\n        isnull(NovemberOriginalDemand, 0),\r\n        isnull(DecemberOriginalDemand, 0),\r\n        isnull(JanuaryOriginalDemand, 0),\r\n        isnull(FebruaryOriginalDemand, 0),\r\n        isnull(MarchOriginalDemand, 0),\r\n        isnull(AprilOriginalDemand, 0),\r\n        isnull(MayOriginalDemand, 0),\r\n        isnull(JuneOriginalDemand, 0),\r\n        isnull(FiscalYearToDateOriginalDemand, 0),\r\n        isnull(JulyRevisedBilledDollars, 0),\r\n        isnull(AugustRevisedBilledDollars, 0),\r\n        isnull(SeptemberRevisedBilledDollars, 0),\r\n        isnull(OctoberRevisedBilledDollars, 0),\r\n        isnull(NovemberRevisedBilledDollars, 0),\r\n        isnull(DecemberRevisedBilledDollars, 0),\r\n        isnull(JanuaryRevisedBilledDollars, 0),\r\n        isnull(FebruaryRevisedBilledDollars, 0),\r\n        isnull(MarchRevisedBilledDollars, 0),\r\n        isnull(AprilRevisedBilledDollars, 0),\r\n        isnull(MayRevisedBilledDollars, 0),\r\n        isnull(JuneRevisedBilledDollars, 0),\r\n        isnull(FiscalYearToDateRevisedBilledDollars, 0),\r\n        isnull(JulyRevisedEnergy, 0),\r\n        isnull(AugustRevisedEnergy, 0),\r\n        isnull(SeptemberRevisedEnergy, 0),\r\n        isnull(OctoberRevisedEnergy, 0),\r\n        isnull(NovemberRevisedEnergy, 0),\r\n        isnull(DecemberRevisedEnergy, 0),\r\n        isnull(JanuaryRevisedEnergy, 0),\r\n        isnull(FebruaryRevisedEnergy, 0),\r\n        isnull(MarchRevisedEnergy, 0),\r\n        isnull(AprilRevisedEnergy, 0),\r\n        isnull(MayRevisedEnergy, 0),\r\n        isnull(JuneRevisedEnergy, 0),\r\n        isnull(FiscalYearToDateRevisedEnergy, 0),\r\n        isnull(JulyRevisedDemand, 0),\r\n        isnull(AugustRevisedDemand, 0),\r\n        isnull(SeptemberRevisedDemand, 0),\r\n        isnull(OctoberRevisedDemand, 0),\r\n        isnull(NovemberRevisedDemand, 0),\r\n        isnull(DecemberRevisedDemand, 0),\r\n        isnull(JanuaryRevisedDemand, 0),\r\n        isnull(FebruaryRevisedDemand, 0),\r\n        isnull(MarchRevisedDemand, 0),\r\n        isnull(AprilRevisedDemand, 0),\r\n        isnull(MayRevisedDemand, 0),\r\n        isnull(JuneRevisedDemand, 0),\r\n        isnull(FiscalYearToDateRevisedDemand, 0),\r\n        isnull(JulyNetDollarChange, 0),\r\n        isnull(AugustNetDollarChange, 0),\r\n        isnull(SeptemberNetDollarChange, 0),\r\n        isnull(OctoberNetDollarChange, 0),\r\n        isnull(NovemberNetDollarChange, 0),\r\n        isnull(DecemberNetDollarChange, 0),\r\n        isnull(JanuaryNetDollarChange, 0),\r\n        isnull(FebruaryNetDollarChange, 0),\r\n        isnull(MarchNetDollarChange, 0),\r\n        isnull(AprilNetDollarChange, 0),\r\n        isnull(MayNetDollarChange, 0),\r\n        isnull(JuneNetDollarChange, 0),\r\n        isnull(FiscalYearToDateNetDollarChange, 0),\r\n        isnull(JulyEnergyUsageChange, 0),\r\n        isnull(AugustEnergyUsageChange, 0),\r\n        isnull(SeptemberEnergyUsageChange, 0),\r\n        isnull(OctoberEnergyUsageChange, 0),\r\n        isnull(NovemberEnergyUsageChange, 0),\r\n        isnull(DecemberEnergyUsageChange, 0),\r\n        isnull(JanuaryEnergyUsageChange, 0),\r\n        isnull(FebruaryEnergyUsageChange, 0),\r\n        isnull(MarchEnergyUsageChange, 0),\r\n        isnull(AprilEnergyUsageChange, 0),\r\n        isnull(MayEnergyUsageChange, 0),\r\n        isnull(JuneEnergyUsageChange, 0),\r\n        isnull(FiscalYearToDateNetEnergyUsageChange, 0),\r\n        isnull(JulyNetDemandUsageChange, 0),\r\n        isnull(AugustNetDemandUsageChange, 0),\r\n        isnull(SeptemberNetDemandUsageChange, 0),\r\n        isnull(OctoberNetDemandUsageChange, 0),\r\n        isnull(NovemberNetDemandUsageChange, 0),\r\n        isnull(DecemberNetDemandUsageChange, 0),\r\n        isnull(JanuaryNetDemandUsageChange, 0),\r\n        isnull(FebruaryNetDemandUsageChange, 0),\r\n        isnull(MarchNetDemandUsageChange, 0),\r\n        isnull(AprilNetDemandUsageChange, 0),\r\n        isnull(MayNetDemandUsageChange, 0),\r\n        isnull(JuneNetDemandUsageChange, 0),\r\n        isnull(FiscalYearToDateNetDemandUsageChange, 0)\r\n    FROM Published.uvw_FiscalYearPivotByAgencyAndFacilityDollarsAndUsage\r\n\r\n\tPRINT 'Started at: ' + cast(getdate() as varchar(23))\r\n\tPRINT 'Loading Published.FiscalYearPivotByAgencyDollarsAndUsage ...................'\r\n\tINSERT into Published.FiscalYearPivotByAgencyDollarsAndUsage\r\n\t\t(PublishedBillingPeriod,\r\n        BillToAgencyCode,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        FiscalYear,\r\n        UtilityCompany,\r\n        EnergyType,\r\n        JulyOriginalBilledDollars,\r\n        AugustOriginalBilledDollars,\r\n        SeptemberOriginalBilledDollars,\r\n        OctoberOriginalBilledDollars,\r\n        NovemberOriginalBilledDollars,\r\n        DecemberOriginalBilledDollars,\r\n        JanuaryOriginalBilledDollars,\r\n        FebruaryOriginalBilledDollars,\r\n        MarchOriginalBilledDollars,\r\n        AprilOriginalBilledDollars,\r\n        MayOriginalBilledDollars,\r\n        JuneOriginalBilledDollars,\r\n        FiscalYearToDateOriginalBilledDollars,\r\n        JulyOriginalPaidAdjustmentDollars,\r\n        AugustOriginalPaidAdjustmentDollars,\r\n        SeptemberOriginalPaidAdjustmentDollars,\r\n        OctoberOriginalPaidAdjustmentDollars,\r\n        NovemberOriginalPaidAdjustmentDollars,\r\n        DecemberOriginalPaidAdjustmentDollars,\r\n        JanuaryOriginalPaidAdjustmentDollars,\r\n        FebruaryOriginalPaidAdjustmentDollars,\r\n        MarchOriginalPaidAdjustmentDollars,\r\n        AprilOriginalPaidAdjustmentDollars,\r\n        MayOriginalPaidAdjustmentDollars,\r\n        JuneOriginalPaidAdjustmentDollars,\r\n        FiscalYearToDateOriginalPaidAdjustmentDollars,\r\n        JulyOriginalTotalDueDollars,\r\n        AugustOriginalTotalDueDollars,\r\n        SeptemberOriginalTotalDueDollars,\r\n        OctoberOriginalTotalDueDollars,\r\n        NovemberOriginalTotalDueDollars,\r\n        DecemberOriginalTotalDueDollars,\r\n        JanuaryOriginalTotalDueDollars,\r\n        FebruaryOriginalTotalDueDollars,\r\n        MarchOriginalTotalDueDollars,\r\n        AprilOriginalTotalDueDollars,\r\n        MayOriginalTotalDueDollars,\r\n        JuneOriginalTotalDueDollars,\r\n        FiscalYearToDateOriginalTotalDueDollars,\r\n        JulyOriginalEnergy,\r\n        AugustOriginalEnergy,\r\n        SeptemberOriginalEnergy,\r\n        OctoberOriginalEnergy,\r\n        NovemberOriginalEnergy,\r\n        DecemberOriginalEnergy,\r\n        JanuaryOriginalEnergy,\r\n        FebruaryOriginalEnergy,\r\n        MarchOriginalEnergy,\r\n        AprilOriginalEnergy,\r\n        MayOriginalEnergy,\r\n        JuneOriginalEnergy,\r\n        FiscalYearToDateOriginalEnergyUsage,\r\n        JulyOriginalDemand,\r\n        AugustOriginalDemand,\r\n        SeptemberOriginalDemand,\r\n        OctoberOriginalDemand,\r\n        NovemberOriginalDemand,\r\n        DecemberOriginalDemand,\r\n        JanuaryOriginalDemand,\r\n        FebruaryOriginalDemand,\r\n        MarchOriginalDemand,\r\n        AprilOriginalDemand,\r\n        MayOriginalDemand,\r\n        JuneOriginalDemand,\r\n        FiscalYearToDateOriginalDemand,\r\n        JulyRevisedBilledDollars,\r\n        AugustRevisedBilledDollars,\r\n        SeptemberRevisedBilledDollars,\r\n        OctoberRevisedBilledDollars,\r\n        NovemberRevisedBilledDollars,\r\n        DecemberRevisedBilledDollars,\r\n        JanuaryRevisedBilledDollars,\r\n        FebruaryRevisedBilledDollars,\r\n        MarchRevisedBilledDollars,\r\n        AprilRevisedBilledDollars,\r\n        MayRevisedBilledDollars,\r\n        JuneRevisedBilledDollars,\r\n        FiscalYearToDateRevisedBilledDollars,\r\n        JulyRevisedEnergy,\r\n        AugustRevisedEnergy,\r\n        SeptemberRevisedEnergy,\r\n        OctoberRevisedEnergy,\r\n        NovemberRevisedEnergy,\r\n        DecemberRevisedEnergy,\r\n        JanuaryRevisedEnergy,\r\n        FebruaryRevisedEnergy,\r\n        MarchRevisedEnergy,\r\n        AprilRevisedEnergy,\r\n        MayRevisedEnergy,\r\n        JuneRevisedEnergy,\r\n        FiscalYearToDateRevisedEnergy,\r\n        JulyRevisedDemand,\r\n        AugustRevisedDemand,\r\n        SeptemberRevisedDemand,\r\n        OctoberRevisedDemand,\r\n        NovemberRevisedDemand,\r\n        DecemberRevisedDemand,\r\n        JanuaryRevisedDemand,\r\n        FebruaryRevisedDemand,\r\n        MarchRevisedDemand,\r\n        AprilRevisedDemand,\r\n        MayRevisedDemand,\r\n        JuneRevisedDemand,\r\n        FiscalYearToDateRevisedDemand,\r\n        JulyNetDollarChange,\r\n        AugustNetDollarChange,\r\n        SeptemberNetDollarChange,\r\n        OctoberNetDollarChange,\r\n        NovemberNetDollarChange,\r\n        DecemberNetDollarChange,\r\n        JanuaryNetDollarChange,\r\n        FebruaryNetDollarChange,\r\n        MarchNetDollarChange,\r\n        AprilNetDollarChange,\r\n        MayNetDollarChange,\r\n        JuneNetDollarChange,\r\n        FiscalYearToDateNetDollarChange,\r\n        JulyEnergyUsageChange,\r\n        AugustEnergyUsageChange,\r\n        SeptemberEnergyUsageChange,\r\n        OctoberEnergyUsageChange,\r\n        NovemberEnergyUsageChange,\r\n        DecemberEnergyUsageChange,\r\n        JanuaryEnergyUsageChange,\r\n        FebruaryEnergyUsageChange,\r\n        MarchEnergyUsageChange,\r\n        AprilEnergyUsageChange,\r\n        MayEnergyUsageChange,\r\n        JuneEnergyUsageChange,\r\n        FiscalYearToDateNetEnergyUsageChange,\r\n        JulyNetDemandUsageChange,\r\n        AugustNetDemandUsageChange,\r\n        SeptemberNetDemandUsageChange,\r\n        OctoberNetDemandUsageChange,\r\n        NovemberNetDemandUsageChange,\r\n        DecemberNetDemandUsageChange,\r\n        JanuaryNetDemandUsageChange,\r\n        FebruaryNetDemandUsageChange,\r\n        MarchNetDemandUsageChange,\r\n        AprilNetDemandUsageChange,\r\n        MayNetDemandUsageChange,\r\n        JuneNetDemandUsageChange,\r\n        FiscalYearToDateNetDemandUsageChange,\r\n        CurrentFiscalYear,\r\n        PriorFiscalYear)\r\n    SELECT PublishedBillingPeriod,\r\n        BillToAgencyCode,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        CurrentInvoiceAccountBillingGroup,\r\n        InvoiceAccountBillingGroupDesc,\r\n        FiscalYear,\r\n        UtilityCompany,\r\n        EnergyType,\r\n        isnull(JulyOriginalBilledDollars, 0),\r\n        isnull(AugustOriginalBilledDollars, 0),\r\n        isnull(SeptemberOriginalBilledDollars, 0),\r\n        isnull(OctoberOriginalBilledDollars, 0),\r\n        isnull(NovemberOriginalBilledDollars, 0),\r\n        isnull(DecemberOriginalBilledDollars, 0),\r\n        isnull(JanuaryOriginalBilledDollars, 0),\r\n        isnull(FebruaryOriginalBilledDollars, 0),\r\n        isnull(MarchOriginalBilledDollars, 0),\r\n        isnull(AprilOriginalBilledDollars, 0),\r\n        isnull(MayOriginalBilledDollars, 0),\r\n        isnull(JuneOriginalBilledDollars, 0),\r\n        isnull(FiscalYearToDateOriginalBilledDollars, 0),\r\n        isnull(JulyOriginalPaidAdjustmentDollars, 0),\r\n        isnull(AugustOriginalPaidAdjustmentDollars, 0),\r\n        isnull(SeptemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(OctoberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(NovemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(DecemberOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JanuaryOriginalPaidAdjustmentDollars, 0),\r\n        isnull(FebruaryOriginalPaidAdjustmentDollars, 0),\r\n        isnull(MarchOriginalPaidAdjustmentDollars, 0),\r\n        isnull(AprilOriginalPaidAdjustmentDollars, 0),\r\n        isnull(MayOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JuneOriginalPaidAdjustmentDollars, 0),\r\n        isnull(FiscalYearToDateOriginalPaidAdjustmentDollars, 0),\r\n        isnull(JulyOriginalTotalDueDollars, 0),\r\n        isnull(AugustOriginalTotalDueDollars, 0),\r\n        isnull(SeptemberOriginalTotalDueDollars, 0),\r\n        isnull(OctoberOriginalTotalDueDollars, 0),\r\n        isnull(NovemberOriginalTotalDueDollars, 0),\r\n        isnull(DecemberOriginalTotalDueDollars, 0),\r\n        isnull(JanuaryOriginalTotalDueDollars, 0),\r\n        isnull(FebruaryOriginalTotalDueDollars, 0),\r\n        isnull(MarchOriginalTotalDueDollars, 0),\r\n        isnull(AprilOriginalTotalDueDollars, 0),\r\n        isnull(MayOriginalTotalDueDollars, 0),\r\n        isnull(JuneOriginalTotalDueDollars, 0),\r\n        isnull(FiscalYearToDateOriginalTotalDueDollars, 0),\r\n        isnull(JulyOriginalEnergy, 0),\r\n        isnull(AugustOriginalEnergy, 0),\r\n        isnull(SeptemberOriginalEnergy, 0),\r\n        isnull(OctoberOriginalEnergy, 0),\r\n        isnull(NovemberOriginalEnergy, 0),\r\n        isnull(DecemberOriginalEnergy, 0),\r\n        isnull(JanuaryOriginalEnergy, 0),\r\n        isnull(FebruaryOriginalEnergy, 0),\r\n        isnull(MarchOriginalEnergy, 0),\r\n        isnull(AprilOriginalEnergy, 0),\r\n        isnull(MayOriginalEnergy, 0),\r\n        isnull(JuneOriginalEnergy, 0),\r\n        isnull(FiscalYearToDateOriginalEnergyUsage, 0),\r\n        isnull(JulyOriginalDemand, 0),\r\n        isnull(AugustOriginalDemand, 0),\r\n        isnull(SeptemberOriginalDemand, 0),\r\n        isnull(OctoberOriginalDemand, 0),\r\n        isnull(NovemberOriginalDemand, 0),\r\n        isnull(DecemberOriginalDemand, 0),\r\n        isnull(JanuaryOriginalDemand, 0),\r\n        isnull(FebruaryOriginalDemand, 0),\r\n        isnull(MarchOriginalDemand, 0),\r\n        isnull(AprilOriginalDemand, 0),\r\n        isnull(MayOriginalDemand, 0),\r\n        isnull(JuneOriginalDemand, 0),\r\n        isnull(FiscalYearToDateOriginalDemand, 0),\r\n        isnull(JulyRevisedBilledDollars, 0),\r\n        isnull(AugustRevisedBilledDollars, 0),\r\n        isnull(SeptemberRevisedBilledDollars, 0),\r\n        isnull(OctoberRevisedBilledDollars, 0),\r\n        isnull(NovemberRevisedBilledDollars, 0),\r\n        isnull(DecemberRevisedBilledDollars, 0),\r\n        isnull(JanuaryRevisedBilledDollars, 0),\r\n        isnull(FebruaryRevisedBilledDollars, 0),\r\n        isnull(MarchRevisedBilledDollars, 0),\r\n        isnull(AprilRevisedBilledDollars, 0),\r\n        isnull(MayRevisedBilledDollars, 0),\r\n        isnull(JuneRevisedBilledDollars, 0),\r\n        isnull(FiscalYearToDateRevisedBilledDollars, 0),\r\n        isnull(JulyRevisedEnergy, 0),\r\n        isnull(AugustRevisedEnergy, 0),\r\n        isnull(SeptemberRevisedEnergy, 0),\r\n        isnull(OctoberRevisedEnergy, 0),\r\n        isnull(NovemberRevisedEnergy, 0),\r\n        isnull(DecemberRevisedEnergy, 0),\r\n        isnull(JanuaryRevisedEnergy, 0),\r\n        isnull(FebruaryRevisedEnergy, 0),\r\n        isnull(MarchRevisedEnergy, 0),\r\n        isnull(AprilRevisedEnergy, 0),\r\n        isnull(MayRevisedEnergy, 0),\r\n        isnull(JuneRevisedEnergy, 0),\r\n        isnull(FiscalYearToDateRevisedEnergy, 0),\r\n        isnull(JulyRevisedDemand, 0),\r\n        isnull(AugustRevisedDemand, 0),\r\n        isnull(SeptemberRevisedDemand, 0),\r\n        isnull(OctoberRevisedDemand, 0),\r\n        isnull(NovemberRevisedDemand, 0),\r\n        isnull(DecemberRevisedDemand, 0),\r\n        isnull(JanuaryRevisedDemand, 0),\r\n        isnull(FebruaryRevisedDemand, 0),\r\n        isnull(MarchRevisedDemand, 0),\r\n        isnull(AprilRevisedDemand, 0),\r\n        isnull(MayRevisedDemand, 0),\r\n        isnull(JuneRevisedDemand, 0),\r\n        isnull(FiscalYearToDateRevisedDemand, 0),\r\n        isnull(JulyNetDollarChange, 0),\r\n        isnull(AugustNetDollarChange, 0),\r\n        isnull(SeptemberNetDollarChange, 0),\r\n        isnull(OctoberNetDollarChange, 0),\r\n        isnull(NovemberNetDollarChange, 0),\r\n        isnull(DecemberNetDollarChange, 0),\r\n        isnull(JanuaryNetDollarChange, 0),\r\n        isnull(FebruaryNetDollarChange, 0),\r\n        isnull(MarchNetDollarChange, 0),\r\n        isnull(AprilNetDollarChange, 0),\r\n        isnull(MayNetDollarChange, 0),\r\n        isnull(JuneNetDollarChange, 0),\r\n        isnull(FiscalYearToDateNetDollarChange, 0),\r\n        isnull(JulyEnergyUsageChange, 0),\r\n        isnull(AugustEnergyUsageChange, 0),\r\n        isnull(SeptemberEnergyUsageChange, 0),\r\n        isnull(OctoberEnergyUsageChange, 0),\r\n        isnull(NovemberEnergyUsageChange, 0),\r\n        isnull(DecemberEnergyUsageChange, 0),\r\n        isnull(JanuaryEnergyUsageChange, 0),\r\n        isnull(FebruaryEnergyUsageChange, 0),\r\n        isnull(MarchEnergyUsageChange, 0),\r\n        isnull(AprilEnergyUsageChange, 0),\r\n        isnull(MayEnergyUsageChange, 0),\r\n        isnull(JuneEnergyUsageChange, 0),\r\n        isnull(FiscalYearToDateNetEnergyUsageChange, 0),\r\n        isnull(JulyNetDemandUsageChange, 0),\r\n        isnull(AugustNetDemandUsageChange, 0),\r\n        isnull(SeptemberNetDemandUsageChange, 0),\r\n        isnull(OctoberNetDemandUsageChange, 0),\r\n        isnull(NovemberNetDemandUsageChange, 0),\r\n        isnull(DecemberNetDemandUsageChange, 0),\r\n        isnull(JanuaryNetDemandUsageChange, 0),\r\n        isnull(FebruaryNetDemandUsageChange, 0),\r\n        isnull(MarchNetDemandUsageChange, 0),\r\n        isnull(AprilNetDemandUsageChange, 0),\r\n        isnull(MayNetDemandUsageChange, 0),\r\n        isnull(JuneNetDemandUsageChange, 0),\r\n        isnull(FiscalYearToDateNetDemandUsageChange, 0),\r\n        CurrentFiscalYear,\r\n        PriorFiscalYear\r\n    FROM Published.uvw_FiscalYearPivotByAgencyDollarsAndUsage\r\n\r\n\t-- Variance Report by Agency\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Loading Published.AccountLevelSummaryByAgency ...................'\r\n\tinsert into Published.AccountLevelSummaryByAgency\r\n\t\t(PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        FiscalYear,\r\n        CalendarYear,\r\n        MonthName,\r\n        MonthNameYear,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        BilledAmount,\r\n        EnergyUsage,\r\n        DemandUsage,\r\n        EnergySource,\r\n        EnergyType,\r\n        BTUfactor,\r\n        Co2factor,\r\n        BTU,\r\n        CO2,\r\n        BillingPeriodLastYear)\r\n    SELECT PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        min(FiscalYear),\r\n        min(substring(BillingPeriod, 1, 4)),\r\n        min(datename(mm, BillingPeriod + '01')),\r\n        min(datename(mm, BillingPeriod + '01') + ', '\r\n            + substring(BillingPeriod, 1, 4)),\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        sum(RevisedBilledAmount),\r\n        sum(AccountEnergyUsage),\r\n        sum(AccountDemandUsage),\r\n        min(EnergySource),\r\n        EnergyType,\r\n        min(Factors.GetEnergySourceCalculationFactor(EnergySource, substring(BillingPeriod, 1, 4), 'BTU')),\r\n        min(Factors.GetEnergySourceCalculationFactor(EnergySource, substring(BillingPeriod, 1, 4), 'CO2')),\r\n        sum(AccountEnergyUsage * Factors.GetEnergySourceCalculationFactor(EnergySource, substring(BillingPeriod, 1, 4), 'BTU')),\r\n        sum(AccountEnergyUsage * Factors.GetEnergySourceCalculationFactor(EnergySource, substring(BillingPeriod, 1, 4), 'CO2')),\r\n        min(dbo.CreatePreviousPeriod(BillingPeriod, 'Y'))\r\n    FROM Published.AccountLevelRawDataForCurrentPeriod\r\n    where   PublishedBillingPeriod = @PublishedBillingPeriod\r\n    group by PublishedBillingPeriod,\r\n                BillingPeriod,\r\n                AgencyCodeOEC,\r\n                AgencyName,\r\n                EnergyType\r\n\r\n\t-- reindex to speed things up\r\n\talter index all on Published.AccountLevelSummaryByAgency rebuild\r\n\tUPDATE STATISTICS Published.AccountLevelSummaryByAgency\r\n\r\n\tupdate  Published.AccountLevelSummaryByAgency\r\n\tset BilledAmountFiscalYearVariance = case when isnull(AccountLevelSummaryByAgency_1.BilledAmount,\r\n                                                          0) = 0.00 then 0\r\n                                              else ( Published.AccountLevelSummaryByAgency.BilledAmount\r\n                                                     / AccountLevelSummaryByAgency_1.BilledAmount )\r\n                                                   - 1.0\r\n                                         end,\r\n        BTUFiscalYearVariance = case when isnull(AccountLevelSummaryByAgency_1.EnergyUsage,\r\n                                                 0) = 0 then 0\r\n                                     else ( Published.AccountLevelSummaryByAgency.EnergyUsage\r\n                                            / cast(AccountLevelSummaryByAgency_1.EnergyUsage as float) )\r\n                                          - 1.0\r\n                                end,\r\n        BilledAmountLastYear = AccountLevelSummaryByAgency_1.BilledAmount,\r\n        EnergyUsageLastYear = AccountLevelSummaryByAgency_1.EnergyUsage,\r\n        BTULastYear = AccountLevelSummaryByAgency_1.BTU,\r\n        DemandUsageLastYear = AccountLevelSummaryByAgency_1.DemandUsage\r\n\tFROM Published.AccountLevelSummaryByAgency\r\n        inner join Published.AccountLevelSummaryByAgency as AccountLevelSummaryByAgency_1 on Published.AccountLevelSummaryByAgency.PublishedBillingPeriod = AccountLevelSummaryByAgency_1.PublishedBillingPeriod\r\n                                                              and Published.AccountLevelSummaryByAgency.AgencyCodeOEC = AccountLevelSummaryByAgency_1.AgencyCodeOEC\r\n                                                              and Published.AccountLevelSummaryByAgency.AgencyName = AccountLevelSummaryByAgency_1.AgencyName\r\n\twhere Published.AccountLevelSummaryByAgency.BillingPeriod = dbo.CalculateNextBillingPeriod(AccountLevelSummaryByAgency_1.BillingPeriod,\r\n                                                              'Y')\r\n        and Published.AccountLevelSummaryByAgency.PublishedBillingPeriod = @PublishedBillingPeriod\r\n\r\n\t-- Variance Report by CityWide\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Loading Published.AccountLevelSummaryByCityWide ...................'\r\n\tinsert  into Published.AccountLevelSummaryByCityWide\r\n\t\t(PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        FiscalYear,\r\n        CalendarYear,\r\n        MonthName,\r\n        MonthNameYear,\r\n        BilledAmount,\r\n        EnergyUsage,\r\n        DemandUsage,\r\n        EnergySource,\r\n        EnergyType,\r\n        BTUfactor,\r\n        Co2factor,\r\n        BTU,\r\n        CO2,\r\n        BillingPeriodLastYear)\r\n    SELECT PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        min(FiscalYear),\r\n        min(substring(BillingPeriod, 1, 4)),\r\n        min(datename(mm, BillingPeriod + '01')),\r\n        min(datename(mm, BillingPeriod + '01') + ', '\r\n            + substring(BillingPeriod, 1, 4)),\r\n        sum(RevisedBilledAmount),\r\n        sum(AccountEnergyUsage),\r\n        sum(AccountDemandUsage),\r\n        min(EnergySource),\r\n        EnergyType,\r\n        min(Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'BTU')),\r\n        min(Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'CO2')),\r\n        sum(AccountEnergyUsage\r\n            * Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'BTU')),\r\n        sum(AccountEnergyUsage\r\n            * Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'CO2')),\r\n        min(dbo.CreatePreviousPeriod(BillingPeriod, 'Y'))\r\n    FROM Published.AccountLevelRawDataForCurrentPeriod\r\n    where   PublishedBillingPeriod = @PublishedBillingPeriod\r\n    group by PublishedBillingPeriod,\r\n            BillingPeriod,\r\n            EnergyType\r\n\r\n\t-- reindex to speed things up\r\n\talter index all on Published.AccountLevelSummaryByCityWide rebuild\r\n\tUPDATE STATISTICS Published.AccountLevelSummaryByCityWide\r\n\r\n\tupdate  Published.AccountLevelSummaryByCityWide\r\n\tset     BilledAmountFiscalYearVariance = case when isnull(AccountLevelSummaryByCityWide_1.BilledAmount,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  0) = 0.00 then 0\r\n                                              else ( Published.AccountLevelSummaryByCityWide.BilledAmount\r\n                                                     / AccountLevelSummaryByCityWide_1.BilledAmount )\r\n                                                   - 1.0\r\n                                         end,\r\n        BTUFiscalYearVariance = case when isnull(AccountLevelSummaryByCityWide_1.EnergyUsage,\r\n                                                 0) = 0 then 0\r\n                                     else ( Published.AccountLevelSummaryByCityWide.EnergyUsage\r\n                                            / cast(AccountLevelSummaryByCityWide_1.EnergyUsage as float) )\r\n                                          - 1.0\r\n                                end,\r\n        BilledAmountLastYear = AccountLevelSummaryByCityWide_1.BilledAmount,\r\n        EnergyUsageLastYear = AccountLevelSummaryByCityWide_1.EnergyUsage,\r\n        BTULastYear = AccountLevelSummaryByCityWide_1.BTU,\r\n        DemandUsageLastYear = AccountLevelSummaryByCityWide_1.DemandUsage\r\n\tFROM Published.AccountLevelSummaryByCityWide\r\n        inner join Published.AccountLevelSummaryByCityWide as AccountLevelSummaryByCityWide_1 on Published.AccountLevelSummaryByCityWide.PublishedBillingPeriod = AccountLevelSummaryByCityWide_1.PublishedBillingPeriod\r\n                                                              and Published.AccountLevelSummaryByCityWide.BillingPeriod = dbo.CalculateNextBillingPeriod(AccountLevelSummaryByCityWide_1.BillingPeriod,\r\n                                                              'Y')\r\n                                                              and Published.AccountLevelSummaryByCityWide.EnergyType = AccountLevelSummaryByCityWide_1.EnergyType\r\n\tWHERE Published.AccountLevelSummaryByCityWide.PublishedBillingPeriod = @PublishedBillingPeriod                   \r\n\r\n\t-- Variance Report by Facility\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Loading Published.AccountLevelSummaryByFacility ...................'\r\n\tinsert  into Published.AccountLevelSummaryByFacility\r\n        (PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        FiscalYear,\r\n        CalendarYear,\r\n        MonthName,\r\n        MonthNameYear,\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        OecFacilityNumber,\r\n        Address1,\r\n        BilledAmount,\r\n        EnergyUsage,\r\n        DemandUsage,\r\n        EnergySource,\r\n        EnergyType,\r\n        BTUfactor,\r\n        Co2factor,\r\n        BTU,\r\n        CO2,\r\n        BillingPeriodLastYear)\r\n    select  PublishedBillingPeriod,\r\n        BillingPeriod,\r\n        min(FiscalYear),\r\n        min(substring(BillingPeriod, 1, 4)),\r\n        min(datename(mm, BillingPeriod + '01')),\r\n        min(datename(mm, BillingPeriod + '01') + ', '\r\n            + substring(BillingPeriod, 1, 4)),\r\n        AgencyCodeOEC,\r\n        AgencyName,\r\n        OecFacilityNumber,\r\n        Address1,\r\n        sum(RevisedBilledAmount),\r\n        sum(AccountEnergyUsage),\r\n        sum(AccountDemandUsage),\r\n        min(EnergySource),\r\n        EnergyType,\r\n        min(Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'BTU')),\r\n        min(Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'CO2')),\r\n        sum(AccountEnergyUsage\r\n            * Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'BTU')),\r\n        sum(AccountEnergyUsage\r\n            * Factors.GetEnergySourceCalculationFactor(EnergySource,\r\n                                                        substring(BillingPeriod,\r\n                                                        1, 4), 'CO2')),\r\n        min(dbo.CreatePreviousPeriod(BillingPeriod, 'Y'))\r\n    FROM Published.AccountLevelRawDataForCurrentPeriod\r\n    where   PublishedBillingPeriod = @PublishedBillingPeriod\r\n    group by PublishedBillingPeriod,\r\n            BillingPeriod,\r\n            AgencyCodeOEC,\r\n            AgencyName,\r\n            OecFacilityNumber,\r\n            Address1,\r\n            EnergyType\r\n\r\n\t-- reindex to speed things up\r\n\tALTER INDEX ALL ON Published.AccountLevelSummaryByFacility REBUILD;\r\n\tUPDATE STATISTICS Published.AccountLevelSummaryByFacility\r\n\r\n\t-- put the source set in a CTE\r\n\t;WITH CTE_PreviousSet \r\n\tAS\r\n\t(SELECT PublishedBillingPeriod,\r\n        AgencyCodeOEC,\r\n        OecFacilityNumber,\r\n        AgencyName,\r\n        BillingPeriod,\r\n        BilledAmount,\r\n        EnergyUsage, \r\n        DemandUsage,\r\n        BTU,\r\n\t\tEnergyUsageLastYear,\r\n\t\tEnergyType\r\n    FROM Published.AccountLevelSummaryByFacility\r\n    WHERE PublishedBillingPeriod = @PublishedBillingPeriod)\r\n\r\n\t-- run the update using the CTE to reduce inner join to itself\r\n\tUPDATE Published.AccountLevelSummaryByFacility\r\n\tSET BilledAmountFiscalYearVariance = CASE WHEN ISNULL(AccountLevelSummaryByFacility_1.BilledAmount, 0.00) = 0.00 THEN 0\r\n\t\t\t\t\t\t\t\t\t\t\tELSE (Published.AccountLevelSummaryByFacility.BilledAmount / AccountLevelSummaryByFacility_1.BilledAmount) - 1.0 END,\r\n        BTUFiscalYearVariance = CASE WHEN ISNULL(AccountLevelSummaryByFacility_1.EnergyUsage, 0) = 0 THEN 0\r\n\t\t\t\t\t\t\t\t\tELSE (Published.AccountLevelSummaryByFacility.EnergyUsage * 1.0)/ (AccountLevelSummaryByFacility_1.EnergyUsage * 1.0) - 1.0 END,\r\n        BilledAmountLastYear = AccountLevelSummaryByFacility_1.BilledAmount,\r\n        EnergyUsageLastYear = AccountLevelSummaryByFacility_1.EnergyUsage,\r\n        BTULastYear = AccountLevelSummaryByFacility_1.BTU,\r\n        DemandUsageLastYear = AccountLevelSummaryByFacility_1.DemandUsage\r\n\tFROM Published.AccountLevelSummaryByFacility\r\n        INNER JOIN CTE_PreviousSet AS AccountLevelSummaryByFacility_1 ON Published.AccountLevelSummaryByFacility.PublishedBillingPeriod = AccountLevelSummaryByFacility_1.PublishedBillingPeriod\r\n\t\t\tAND Published.AccountLevelSummaryByFacility.AgencyCodeOEC = AccountLevelSummaryByFacility_1.AgencyCodeOEC\r\n\t\t\tAND Published.AccountLevelSummaryByFacility.OecFacilityNumber = AccountLevelSummaryByFacility_1.OecFacilityNumber\r\n\t\t\tAND Published.AccountLevelSummaryByFacility.AgencyName = AccountLevelSummaryByFacility_1.AgencyName\r\n\t\t\tAND Published.AccountLevelSummaryByFacility.EnergyType = AccountLevelSummaryByFacility_1.EnergyType\r\n\tWHERE Published.AccountLevelSummaryByFacility.BillingPeriod = dbo.CalculateNextBillingPeriod(AccountLevelSummaryByFacility_1.BillingPeriod, 'Y')\r\n\t\tAND Published.AccountLevelSummaryByFacility.PublishedBillingPeriod = @PublishedBillingPeriod\r\n\r\n\tINSERT into Published.FiscalYearPivotByEncoreMonthlyPayments\r\n\t\t(PublishedBillingPeriod,\r\n        FiscalYear,\r\n        JulyEncoreMonthlyDollars,\r\n        AugustEncoreMonthlyDollars,\r\n        SeptemberEncoreMonthlyDollars,\r\n        OctoberEncoreMonthlyDollars,\r\n        NovemberEncoreMonthlyDollars,\r\n        DecemberEncoreMonthlyDollars,\r\n        JanuaryEncoreMonthlyDollars,\r\n        FebruaryEncoreMonthlyDollars,\r\n        MarchEncoreMonthlyDollars,\r\n        AprilEncoreMonthlyDollars,\r\n        MayEncoreMonthlyDollars,\r\n        JuneEncoreMonthlyDollars,\r\n        FiscalYearToDateEncoreMonthlyDollars,\r\n        Notes,\r\n        AuthenticatedUserID)\r\n\tSELECT PublishedBillingPeriod,\r\n        FiscalYear,\r\n        JulyEncoreMonthlyDollars,\r\n        AugustEncoreMonthlyDollars,\r\n        SeptemberEncoreMonthlyDollars,\r\n        OctoberEncoreMonthlyDollars,\r\n        NovemberEncoreMonthlyDollars,\r\n        DecemberEncoreMonthlyDollars,\r\n        JanuaryEncoreMonthlyDollars,\r\n        FebruaryEncoreMonthlyDollars,\r\n        MarchEncoreMonthlyDollars,\r\n        AprilEncoreMonthlyDollars,\r\n        MayEncoreMonthlyDollars,\r\n        JuneEncoreMonthlyDollars,\r\n        FiscalYearToDateEncoreMonthlyDollars,\r\n        NULL AS Expr1,\r\n        1 AS Expr2\r\n    FROM Published.uvw_FiscalYearPivotByEncoreMonthlyPayments;\r\n\r\n\tSET @StatusCode = 0;\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Executing  [Published].[usp_CreateAccountLevelSummaryByDollarsBtusCo2AndEnergyType] ...................'\r\n\r\n\texecute [Published].[usp_CreateAccountLevelSummaryByDollarsBtusCo2AndEnergyType] @EmailAddress, @StatusCode output\r\n\tprint 'Completed at: ' + cast(getdate() as varchar(23))\r\n\r\n\tprint 'Started at: ' + cast(getdate() as varchar(23))\r\n\tprint 'Executing  [usp_CreateSummarizededDollarsBtusAndCo2ByAgencyDivisionHierarchy] ...................'\r\n\r\n\texec [Published].[usp_CreateSummarizededDollarsBtusAndCo2ByAgencyDivisionHierarchy] @PublishedBillingPeriod, @EmailAddress\r\n\tprint 'Completed at: ' + cast(getdate() as varchar(23))\r\n\r\n\tinsert into Published.MonthlyPublishedSummaryData(PublishedBillingPeriod)\r\n\tvalues (@PublishedBillingPeriod)\r\n\r\n\t-- Peter 10/13/2011 added the extracts for SEPTS and DEP as part of this batch stream\r\n\tprint 'Started extracts for SEPTS and DEP at: ' + cast(getdate() as varchar(23))\r\n\tdeclare @Status int\r\n\texec [Published].[usp_SSIS_CreateDEPExtractInSeptsFormat] @Status = @Status output\r\n\texec [Published].[usp_SSIS_CreateSeptsCsvExtract] @Status = @Status output\r\n\tprint 'Completed extracts for SEPTS and DEP at: ' + cast(getdate() as varchar(23))\r\n\r\n\t-- Peter 4/4/2014 added Get Count of Rows in Published Data By PublishedBillingPeriod\r\n\tEXEC [Published].[usp_Utility_CountRowsPublishedDataByPublishedBillingPeriod] @PublishedBillingPeriod\r\n\r\n\t-- Temporal block\r\n\t-- reindex the legacy tables to speed up temporal tables inserts\r\n\tprint 'Started index all important tables at: ' + cast(getdate() as varchar(23))\r\n\t-- re index all important tables\r\n\tEXEC [Utils].[usp_ReindexTablesAfterPublishing]\r\n\tprint 'Completed index all important tables at: ' + cast(getdate() as varchar(23))\r\n\r\n\t-- update hash codes on legacy tables.\r\n\tprint 'Started updating hash values on legacy tables at: ' + cast(getdate() as varchar(23))\r\n\tEXECUTE [Temporal].[HashValueUpdateforPublishedTables] @PublishedBillingPeriod\r\n\r\n\t-- insert new data into temporal tables\r\n\tPRINT 'Inserting data into TEMPORAL tables at: ' + CAST(GETDATE() AS VARCHAR(23));\r\n\tEXECUTE [Temporal].[usp_ProcessAndInsertTemporalData] @PublishedBillingPeriod;\r\n\r\n\t-- reindex the TEMPORAL tables to speed up temporal tables inserts\r\n\tPRINT 'Started index all TEMPORAL tables at: ' + CAST(GETDATE() AS VARCHAR(23));\r\n\t-- re index all important tables\r\n\tEXEC [Utils].usp_ReindexTemporalTablesAfterPublishing;\r\n\tPRINT 'Completed index all TEMPORAL tables at: ' + CAST(GETDATE() AS VARCHAR(23));\r\n\r\n\tALTER DATABASE EC3database SET RECOVERY simple DBCC SHRINKFILE(N'EC3database_log', 13); \r\n\tALTER DATABASE EC3database SET RECOVERY FULL;\r\n\tPRINT 'ALTER DATABASE EC3database SET RECOVERY full: ' + CAST(GETDATE() AS VARCHAR(23));\r\n\r\n\tRETURN 0;\r\nEND;"
        }
      ]
    }
  ]
}
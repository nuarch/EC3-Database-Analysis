{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Common",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CopyNationalGridExchangeDataToCommon",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "CopyNationalGridExchangeDataToCommon",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to transfer data from the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest.UploadExchangeDetailPreload",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table to the "
        },
        {
          "type": "text",
          "text": "Common.ExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. This procedure is part of a data integration process that involves copying and transforming data related to utility accounts and meters for further processing. The procedure handles two main scenarios: a general data copy and a specific case where new accounts with new meters require additional processing."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple data transformations and conditional logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs two separate insert operations, each with a different set of conditions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes the use of functions and conditional expressions to handle data transformations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on the data available in the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest.UploadExchangeDetailPreload",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table and inserts it into the "
        },
        {
          "type": "text",
          "text": "Common.ExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "First Insert Operation:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure inserts data from "
                        },
                        {
                          "type": "text",
                          "text": "CrisNationalGridWest.UploadExchangeDetailPreload",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into "
                        },
                        {
                          "type": "text",
                          "text": "Common.ExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It transforms and maps fields from the source to the target table, applying default values and conditional logic where necessary."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "ExchangeCode",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " field is used to determine specific transformations for "
                        },
                        {
                          "type": "text",
                          "text": "MeterEffectiveTurnOnDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "MeterEffectiveTurnOffDate",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Second Insert Operation:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "This operation specifically handles cases where "
                        },
                        {
                          "type": "text",
                          "text": "ExchangeCode",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is '47'."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It inserts an additional record with "
                        },
                        {
                          "type": "text",
                          "text": "ExchangeCode",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " set to '46' to handle new accounts with new meters separately."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "This ensures that both new account and new meter exchanges are processed independently."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " The procedure processes all records in the "
                },
                {
                  "type": "text",
                  "text": "CrisNationalGridWest.UploadExchangeDetailPreload",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table without filtering (except for the second insert), which could impact performance if the table is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " The use of "
                },
                {
                  "type": "text",
                  "text": "Common.GetDefaultEnergySubType(5)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " in the SELECT statement could introduce overhead if the function is complex or not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Transformation:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " The use of "
                },
                {
                  "type": "text",
                  "text": "LTRIM",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "RTRIM",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "NULLIF",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " functions for data cleaning could affect performance if applied to a large number of records."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " The procedure assumes that concatenating '0000' to "
                },
                {
                  "type": "text",
                  "text": "AccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is valid for both "
                },
                {
                  "type": "text",
                  "text": "CurrentAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "OriginalAccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". If this assumption is incorrect, it could lead to data integrity issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " The use of hardcoded values (e.g., 'Y', 'BT', 'M', 'N', 5) may not be flexible for future changes in business logic or requirements."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " The procedure lacks error handling mechanisms, which could lead to unhandled exceptions or data inconsistencies if unexpected data is encountered."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability:",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " As the procedure processes all records in the source table, it may not scale well with increasing data volumes without additional filtering or batching logic."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Description:\tCopy data from NYPA exchange to Common for further processing\r\n--*\r\n--* AUTHOR:       Zafer Durmaz\r\n--* Created On:   08/08/2016\r\n--**************************************************************************************\r\n--* Change Log\r\n--* ---------- ---\t-------------------------------------------------------------\r\n--* 08/08/2016 zd  First Version  \r\n--* 08/09/2016 zd  added insert for 46. if we have a new account with a new meter coming under 47, we insert another record for 46 because our exchange processes handles both exchanges seperately\r\n--* 04/08/2019  VY  Modified for EnergyDeliverySubTypeID\r\n--**************************************************************************************\r\nCREATE PROCEDURE [Common].[CopyNationalGridExchangeDataToCommon]\r\nAS \r\nBEGIN\t\r\n\tINSERT INTO Common.ExchangeData\r\n\t\t(UtilityCompanySeqid,\r\n\t\tAccountBillingGroupSeqid,\r\n\t\tBillingPeriod,\r\n\t\tApprovedForCreation,\r\n\t\tCurrentAccountNumber,\r\n\t\tOriginalAccountNumber,\r\n\t\tCurrentMeterNumber,\r\n\t\tOriginalMeterNumber,\r\n\t\tAssociatedDemandMeter,\r\n\t\tExchangeCode,\r\n\t\tAccountEffectiveTurnOn,\r\n\t\tAccountEffectiveTurnOff,\r\n\t\tSalesType,\r\n\t\tDeliveryServiceClass,\r\n\t\tDeliveryServiceClassEffectiveDate,\r\n\t\tBillingCycle,\r\n\t\tExcessDistributionAccount,\r\n\t\tTODAccount,\r\n\t\tMunicipalCode,\r\n\t\tTensionCode,\r\n\t\tTripNumber,\r\n\t\tAccountName,\r\n\t\tAccountAddress,\r\n\t\tBorough,\r\n\t\tMeterStatus,\r\n\t\tMeterEffectiveTurnOnDate,\r\n\t\tMeterEffectiveTurnOffDate,\r\n\t\tMeterType,\r\n\t\tMeterNumberofDials,\r\n\t\tMeterConstant,\r\n\t\tMeterTension,\r\n\t\tManualDataEntry,\r\n\t\tEnergyDeliveryType,\r\n\t\tEnergyDeliverySubTypeId,\r\n\t\tAccountServiceCode,\r\n\t\tTransactionEffectiveDate,\r\n\t\tActivityTime,\r\n\t\tContractNumber,\r\n\t\tAMRIndicator,\r\n\t\tauthenticatedUserID,\r\n\t\tDateAdded,\r\n\t\tLastUpdate,\r\n\t\tPreviousServiceCassification,\r\n\t\tTransactionCode)\r\n\tSELECT UtilityCompanyId\r\n\t\t,AccountBillingGroup\r\n\t\t,BillingPeriod\r\n\t\t,'Y'\r\n\t\t,AccountNumber+ '0000' cac\r\n\t\t,AccountNumber+ '0000' oac\r\n\t\t,NULLIF(LTRIM(RTRIM(MeterNumber)), '')\r\n\t\t,OldMeterNumber\r\n\t\t,NULL\r\n\t\t,ExchangeCode\t\t\r\n\t\t,NULLIF(LTRIM(RTRIM(AccountStartDate)), '')\r\n\t\t,NULLIF(LTRIM(RTRIM(AccountTerminationDate)), '')\r\n\t\t,'BT' -- default since this is not provided in upload file\r\n\t\t,GasRateCode -- DeliveryServiceClass\r\n\t\t,RateCodeChangeDate -- DeliveryServiceClassEffectiveDate\r\n\t\t,'M' --BillingCycle default\r\n\t\t,NULL\r\n\t\t,'N' --TODAccount\r\n\t\t,NULL --MunicipalCode\r\n\t\t,NULL\r\n\t\t,MeterReadWorkDay --TripNumber\r\n\t\t,NULLIF(LTRIM(RTRIM(UtilityServiceAccountName)), '') -- accountname\r\n\t\t,NULLIF(LTRIM(RTRIM(UtilityServiceAddress)), '')\r\n\t\t,Borough\r\n\t\t,MeterStatus\r\n\t\t,CASE \r\n\t\t\tWHEN ExchangeCode = '46' THEN  NULLIF(LTRIM(RTRIM(MeterEffectiveActionDate)), '')\r\n\t\t\tWHEN ExchangeCode = '45' THEN  NULLIF(LTRIM(RTRIM(MeterEffectiveActionDate)), '')\r\n\t\t\tWHEN ExchangeCode = 'AX' THEN  NULLIF(LTRIM(RTRIM(MeterEffectiveActionDate)), '')\r\n\t\t\tELSE NULL END\r\n\t\t,CASE \r\n\t\t\tWHEN ExchangeCode = '27' THEN  NULLIF(LTRIM(RTRIM(MeterEffectiveActionDate)), '')\r\n\t\t\tELSE NULL END\r\n\t\t,CAST(MeterType as varchar(1))\r\n\t\t,CAST(NumberOfDials AS INT) --MeterNumberofDials\r\n\t\t,NULLIF(LTRIM(RTRIM(MeterConstant)), '')\r\n\t\t,NULL\r\n\t\t,'N'\r\n\t\t,5 --energydelivertype\r\n\t\t,Common.GetDefaultEnergySubType(5) \r\n\t\t,NULL --AccountServiceCode\r\n\t\t,NULLIF(LTRIM(RTRIM(ActivityDate)), '')   --TransactionEffectiveDate \r\n\t\t,ActivityTime --ADD ACTIVITY TIME TO THE TABLE AND INTO NYPE INSERT PROCESS\r\n\t\t,NULL --ContractNumber SPESIFIC TO NYPA\r\n\t\t,NULL\r\n\t\t,1\r\n\t\t,GETDATE()\r\n\t\t,GETDATE()\r\n\t\t,OldGasRateCode --PREVIOUS SERVICE CLASSIFICATION\r\n\t\t,TransactionCode\r\n\tFROM CrisNationalGridWest.UploadExchangeDetailPreload;\r\n\r\n\t-- this insert splits New meter exchange from new account\r\n\t-- basically, if we have a new account witha new meter coming under 47, we insert another recod for 46 because our exchange processes handles bothe exchanges seperately\r\n\tINSERT INTO Common.ExchangeData\r\n\t\t(UtilityCompanySeqid,\r\n\t\tAccountBillingGroupSeqid,\r\n\t\tBillingPeriod,\r\n\t\tApprovedForCreation,\r\n\t\tCurrentAccountNumber,\r\n\t\tOriginalAccountNumber,\r\n\t\tCurrentMeterNumber,\r\n\t\tOriginalMeterNumber,\r\n\t\tAssociatedDemandMeter,\r\n\t\tExchangeCode,\r\n\t\tAccountEffectiveTurnOn,\r\n\t\tAccountEffectiveTurnOff,\r\n\t\tSalesType,\r\n\t\tDeliveryServiceClass,\r\n\t\tDeliveryServiceClassEffectiveDate,\r\n\t\tBillingCycle,\r\n\t\tExcessDistributionAccount,\r\n\t\tTODAccount,\r\n\t\tMunicipalCode,\r\n\t\tTensionCode,\r\n\t\tTripNumber,\r\n\t\tAccountName,\r\n\t\tAccountAddress,\r\n\t\tBorough,\r\n\t\tMeterStatus,\r\n\t\tMeterEffectiveTurnOnDate,\r\n\t\tMeterEffectiveTurnOffDate,\r\n\t\tMeterType,\r\n\t\tMeterNumberofDials,\r\n\t\tMeterConstant,\r\n\t\tMeterTension,\r\n\t\tManualDataEntry,\r\n\t\tEnergyDeliveryType,\r\n\t\tEnergyDeliverySubTypeId,\r\n\t\tAccountServiceCode,\r\n\t\tTransactionEffectiveDate,\r\n\t\tActivityTime,\r\n\t\tContractNumber,\r\n\t\tAMRIndicator,\r\n\t\tauthenticatedUserID,\r\n\t\tDateAdded,\r\n\t\tLastUpdate,\r\n\t\tPreviousServiceCassification,\r\n\t\tTransactionCode)\r\n\tSELECT  \r\n\t\tUtilityCompanyId\r\n\t\t,AccountBillingGroup\r\n\t\t,BillingPeriod\r\n\t\t,'Y'\r\n\t\t,AccountNumber + '0000' AS cac\r\n\t\t,AccountNumber + '0000' AS oac\r\n\t\t,NULLIF(LTRIM(RTRIM(MeterNumber)), '')\r\n\t\t,OldMeterNumber\r\n\t\t,NULL\r\n\t\t,'46'\t\t\r\n\t\t,NULLIF(LTRIM(RTRIM(AccountStartDate)), '')\r\n\t\t,NULLIF(LTRIM(RTRIM(AccountTerminationDate)), '')\r\n\t\t,'BT' --default since this is not provided in upload file\r\n\t\t,GasRateCode --DeliveryServiceClass\r\n\t\t,RateCodeChangeDate --DeliveryServiceClassEffectiveDate\r\n\t\t,'M' --BillingCycle default\r\n\t\t,NULL\r\n\t\t,'N' --TODAccount\r\n\t\t,NULL --MunicipalCode\r\n\t\t,NULL\r\n\t\t,MeterReadWorkDay --TripNumber\r\n\t\t,NULLIF(LTRIM(RTRIM(UtilityServiceAccountName)), '') -- accountname\r\n\t\t,NULLIF(LTRIM(RTRIM(UtilityServiceAddress)), '')\r\n\t\t,Borough\r\n\t\t,MeterStatus\r\n\t\t,MeterEffectiveActionDate -- we know that this is a new meter\r\n\t\t,NULL \r\n \t\t,CAST(MeterType as varchar(1))\r\n\t\t,CAST(NumberOfDials AS INT) --MeterNumberofDials\r\n\t\t,NULLIF(LTRIM(RTRIM(MeterConstant)), '')\r\n\t\t,NULL\r\n\t\t,'N'\r\n\t\t,5 --energydelivertype\r\n\t\t,Common.GetDefaultEnergySubType(5)\r\n\t\t,NULL --AccountServiceCode\r\n\t\t,NULLIF(LTRIM(RTRIM(ActivityDate)), '')   --TransactionEffectiveDate \r\n\t\t,ActivityTime --ADD ACTIVITY TIME TO THE TABLE AND INTO NYPE INSERT PROCESS\r\n\t\t,NULL --ContractNumber SPESIFIC TO NYPA\r\n\t\t,NULL\r\n\t\t,1\r\n\t\t,GETDATE()\r\n\t\t,GETDATE()\r\n\t\t,OldGasRateCode --PREVIOUS SERVICE CLASSIFICATION\r\n\t\t,TransactionCode\r\n\tFROM CrisNationalGridWest.UploadExchangeDetailPreload\r\n\tWHERE ExchangeCode = '47';\r\nEND;"
        }
      ]
    }
  ]
}
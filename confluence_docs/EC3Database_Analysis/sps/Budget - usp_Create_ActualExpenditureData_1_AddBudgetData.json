{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Create_ActualExpenditureData_1_AddBudgetData",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Create_ActualExpenditureData_1_AddBudgetData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process budget data for budget reports. It inserts calculated budget and expenditure data into the "
        },
        {
          "type": "text",
          "text": "BudgetVersusActualExpendituresByAgencyAndServiceClassification",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. The procedure handles various energy delivery types and budget stages, including total budget, tenant charges, and specific energy types like electricity, gas, steam, and solar energy. It also includes data validation checks to ensure the integrity of the budget data."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple insert operations with complex calculations and conditional logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It processes data for various energy delivery types and budget stages, each with specific business rules."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes data validation logic to ensure data integrity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure interacts with multiple tables and relies on dynamic data retrieval based on input parameters."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the budget data is being processed. It is used to filter and calculate budget and expenditure data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the published billing period, which is used in the insert operations to track when the data was published."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure initializes several variables, including "
                },
                {
                  "type": "text",
                  "text": "@TotalExpenditureSeqID",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "@ScenarioTypeSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "@ProjectionScenarioTypeSeqId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", which are used to identify specific budget scenarios and expenditure types."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Fiscal Year Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the fiscal year beginning period using helper functions "
                },
                {
                  "type": "text",
                  "text": "CreateFiscalYearPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "CalculateFiscalYear",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs multiple insert operations into the "
                },
                {
                  "type": "text",
                  "text": "BudgetVersusActualExpendituresByAgencyAndServiceClassification",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. Each insert operation corresponds to a specific budget scenario or energy delivery type, such as: Each insert operation involves complex calculations using SQL aggregate functions like "
                },
                {
                  "type": "text",
                  "text": "SUM",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and conditional logic to compute current month, year-to-date, and end-of-year budget values."
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Total budget"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "End-of-year projections"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "NYPA building electricity, demand, and reactive power"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Non-NYPA electricity and demand"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Gas, steam, and chilled water"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Solar energy"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure includes validation checks to ensure that all budget codes are mapped correctly and that the budget data is consistent. It raises errors if any discrepancies are found."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensure that the tables involved, especially those with large datasets like "
                },
                {
                  "type": "text",
                  "text": "Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", have appropriate indexes to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider breaking down the insert operations into smaller batches if the dataset is large to avoid locking and performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Calls",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of scalar functions like "
                },
                {
                  "type": "text",
                  "text": "CreateFiscalYearPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "CalculateFiscalYear",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can impact performance if they are not optimized."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on accurate mapping of budget codes. Any missing or incorrect mappings can lead to data integrity issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "RAISERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for validation failures, which can halt execution. Ensure that error handling is robust and that any raised errors are logged and addressed promptly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the complexity and number of insert operations may lead to performance bottlenecks. Regular performance reviews and optimizations may be necessary."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure run concurrently, it may lead to locking issues, especially during insert operations. Consider implementing transaction isolation levels or row versioning to mitigate this risk."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--************************************************************************************************************\n\t\t--* Name:\t\t\t\tusp_Create_ActualExpenditureData_1_AddActualData\r\n\t\t--*\r\n\t\t--* Description:\t\tthis SP processes budget data for Budget Reports processing.  \r\n\t\t--*\r\n\t\t--* AUTHOR:\t\t\t\tDerek Ho\r\n\t\t--* Created On:   \r\n\t\t--************************************************************************************************************\r\n\t\t--* Date\t\tTech\tDescription of Change\r\n\t\t--* ----------\t---\t\t-------------------------------------------------------------\r\n\t\t--* 2015-09-18\t ZD\t\tBudgetGroupDEM 71 was added twice. in Non-NYPA Ele and in Solar Energy\r\n\t\t--*\t\t\t\t\t\tExcluded 71 from -- 23 Non-NYPA Ele Energy and -- 24 Non-NYPA Ele Demand below\r\n\t\t--* 2016-01-13  MB-ZD\tChanged the synonym name from [Budget].[CurrentFiscalYearBudget] to dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency\r\n\t\t--*\t\t\t\t\t\tand [Budget].[TenantCharges] also with dbo.Syn_BudgetDB_Scenarios_TenantCharges\r\n\t\t--************************************************************************************************************\r\n\r\nCREATE PROCEDURE [Budget].[usp_Create_ActualExpenditureData_1_AddBudgetData]\r\n    @BillingPeriod BillingPeriod ,\r\n    @PublishedBillingPeriod BillingPeriod\r\nAS \r\n    BEGIN\r\n\r\n        DECLARE \r\n            @TotalExpenditureSeqID INT ,\r\n            @ScenarioTypeSeqId INT ,\r\n            @ProjectionScenarioTypeSeqId INT\r\n\r\n        SET @TotalExpenditureSeqID = 19\r\n\r\n        DECLARE @FiscalYearBeginningPeriod VARCHAR(6)\t\r\n        SELECT  @FiscalYearBeginningPeriod = dbo.CreateFiscalYearPeriod(dbo.CalculateFiscalYear(@BillingPeriod),\r\n                                                              'S')\r\n\r\n        SET @ScenarioTypeSeqId = ( SELECT   MAX(ScenarioTypeSeqid)\r\n                                   FROM  dbo.Syn_BudgetDB_Budget_ScenarioType\r\n                                   WHERE    IsCurrentBudget = 'Y'\r\n                                 )\r\n\r\n        SET @ProjectionScenarioTypeSeqId = ( SELECT MAX(ScenarioTypeSeqid)\r\n                                             FROM dbo.Syn_BudgetDB_Budget_ScenarioType\r\n                                             WHERE  IsCurrentProjection = 'Y'\r\n                                           )\r\n\r\n\r\n        BEGIN -- Total\r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      AgencyName ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            @TotalExpenditureSeqID ,\r\n                            AgencyCodeOEC ,\r\n                            MAX(AgencyName) ,\r\n                            SUM(CASE WHEN billingperiod = @BillingPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN billingperiod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN billingperiod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN billingperiod > @BillingPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYearBudget ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budgetData\r\n                    WHERE   ( ( budgetData.BudgetStage = 'Total Budget' )\r\n                              OR ( budgetData.BudgetStage = 'Encore Surcharges' )\r\n                              OR ( budgetData.BudgetStage = 'Tenant Charges' )\r\n                            )\r\n                            AND budgetData.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- end of year projection\r\n \r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      EndOfYearProjectionDollars ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @BillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            @TotalExpenditureSeqID ,\r\n                            a.AgencyCodeOEC ,\r\n                            a.EndOfYearProjectionDollars ,\r\n                            'Y'\r\n                    FROM ( SELECT    AgencyCodeOEC ,\r\n                                        SUM(CASE WHEN billingperiod > @BillingPeriod\r\n                                                 THEN TotalDollars\r\n                                                 ELSE 0\r\n                                            END) EndOfYearProjectionDollars\r\n                              FROM   dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budgetData\r\n                              WHERE ( ( budgetData.BudgetStage = 'Total Budget' )\r\n                                          OR ( budgetData.BudgetStage = 'Encore Surcharges' )\r\n                                          OR ( budgetData.BudgetStage = 'Tenant Charges' )\r\n                                        )\r\n                                        AND budgetData.scenarioTypeSeqid = @ProjectionScenarioTypeSeqId\r\n                              GROUP BY  AgencyCodeOEC\r\n                            ) AS a\r\n\r\n        END\r\n        \r\n\t\t\r\n        BEGIN -- NYPA building ele (1) \r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '1' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '1', '3', '5', '56' )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n        END\r\n\t\r\n        BEGIN -- NYPA BE Demand (2)\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '2' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( 1, 3, 5, 56 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n        END\r\n\r\n        BEGIN -- NYPA BE reactive power (3)\r\n\r\n\t\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '3' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            0 ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '1', '3', '5', 56 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- NYPA TOD Energy (4) \r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '4' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '2', '4', '6', '53', '55' )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- NYPA TOD Demand (5)\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '5' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( 2, 4, 6, 53, 55 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n        END\r\n\r\n        BEGIN -- NYPA BE reactive power (6)\r\n\r\n\t\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '6' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            0 ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( 2, 4, 6, 53, 55 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n        END\r\n\t\t\r\n        BEGIN --NYPA STL Energy (9)\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '9' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '7' )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- NYPA STL Demand (10)\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '10' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( 7 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\r\n        BEGIN -- NYPA BE reactive power (11)\r\n\r\n\t\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '11' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            0 ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN ReactivePowerUsageDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( 7 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n        END\r\n        BEGIN -- 12\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            12 ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN FacilityPointDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN StreetLightingFacilityPoints\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN FacilityPointDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN FacilityPointDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( 7 )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                       \r\n        END\r\n\r\n        BEGIN -- gas 15\r\n\t\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '15' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'GAS' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN (\r\n                            SELECT DISTINCT\r\n                                    BudgetGroupDEM\r\n                            FROM billing.UtilityTariffRateInformation\r\n                            WHERE   EnergyDeliveryType IN ('GAS', 'GAF', 'GAI')\r\n                                    AND BudgetGroupDEM <> '15' -- gas but ignore excess distribution\r\n\t\t\t)\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n\t-- excess distribution\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            expenditureMap.BudgetVersusExpenditureTypeSeqID ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            0 ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            expenditureMap.EnergyDeliveryType ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                            INNER JOIN Budget.BudgetVersusExpenditureTypeMapBudgetGroup\r\n                           AS expenditureMap ON expenditureMap.BudgetGroupDEMSeqID = budget.BudgetGroupDEM\r\n                    WHERE   BudgetStage = 'Total Budget'\r\n                            AND expenditureMap.BudgetGroupDEMSeqID IN ( 15 )\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC ,\r\n                            expenditureMap.BudgetVersusExpenditureTypeSeqID ,\r\n                            expenditureMap.EnergyDeliveryType\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- steam (17)\r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '17' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n\t\t\t\t\t\t\t\t\t\t  + DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n\t\t\t\t\t\t\t\t\t\t  + DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n\t\t\t\t\t\t\t\t\t\t  + DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'STM' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN (\r\n                            SELECT DISTINCT\r\n                                    BudgetGroupDEM\r\n                            FROM billing.UtilityTariffRateInformation\r\n                            WHERE   EnergyDeliveryType = 'STM' )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n        END\r\n\t\t\r\n        BEGIN -- 18 encore\r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            18 ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            0 ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN TotalDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'SUR' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '61' )\r\n                            AND BudgetStage LIKE 'encore%'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC \r\n        END\r\n\t\t\r\n        BEGIN -- 23 Non-NYPA Ele Energy \r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            23 ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN TotalDollars - DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN TotalDollars - DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN TotalDollars - DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budgetData\r\n                    WHERE   BudgetStage = 'Total Budget'\r\n                            AND budgetData.BudgetGroupDEM IN (\r\n                            SELECT DISTINCT\r\n                                    BudgetGroupDEM\r\n                            FROM billing.UtilityTariffRateInformation\r\n                            WHERE   EnergyDeliveryType = 'ELE'\r\n                                    AND UtilityCompanyTariff <> 7\r\n                                    AND BudgetGroupDEM <> 21 -- skip lypa street light\r\n\t\t\t\t\t\t\t\t\tAND\tBudgetGroupDEM<> 71   -- skip Solar Energy (there is a separate insert block for this)\r\n\t\t\t\t\t\t)\r\n                            AND budgetData.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- 24 Non-NYPA Ele Demand\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '24' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   BudgetStage = 'Total Budget'\r\n                            AND budget.BudgetGroupDEM IN (\r\n                            SELECT DISTINCT\r\n                                    BudgetGroupDEM\r\n                            FROM billing.UtilityTariffRateInformation\r\n                            WHERE   EnergyDeliveryType = 'ELE'\r\n                                    AND UtilityCompanyTariff <> 7\r\n                                    AND BudgetGroupDEM <> 21 -- skip lypa street light\r\n\t\t\t\t\t\t\t\t\tAND\tBudgetGroupDEM<> 71   -- skip Solar Energy (there is a separate insert block for this)\r\n\t\t\t\t\t\t)\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\r\n        BEGIN -- Lypa (25)\r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '25' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '21' )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- 26 LYPA STL Demand\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '26' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   BudgetStage = 'Total Budget'\r\n                            AND budget.BudgetGroupDEM IN ( 21 )\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n        END\r\n\r\n        BEGIN -- Chilled Water (30)\r\n\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t                )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '30' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN EnergyDollars\r\n                                          + CustomerChargeDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'CHW' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   budget.BudgetGroupDEM IN ( '34' )\r\n                            AND BudgetStage = 'Total Budget'\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n                    ORDER BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\r\n\t\tBEGIN -- 34 solar energy - Energy \r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            34 ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN TotalDollars - DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN EnergyUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN TotalDollars - DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN TotalDollars - DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budgetData\r\n                    WHERE   BudgetStage = 'Total Budget'\r\n                            AND budgetData.BudgetGroupDEM = 71\r\n                            AND budgetData.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\t\t\r\n        BEGIN -- 35 solar energy - Demand\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t\t        )\r\n                    SELECT  @PublishedBillingPeriod ,\r\n                            @BillingPeriod ,\r\n                            '35' ,\r\n                            AgencyCodeOEC ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod = @BillingPeriod\r\n                                     THEN DemandUsage\r\n                                     ELSE 0\r\n                                END) ,\r\n                            SUM(CASE WHEN BillingPeriod <= @BillingPeriod\r\n                                          AND BillingPeriod >= @FiscalYearBeginningPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS yearToDate ,\r\n                            SUM(CASE WHEN BillingPeriod > @BillingPeriod\r\n                                     THEN DemandDollars\r\n                                     ELSE 0\r\n                                END) AS EndOfYear ,\r\n                            'ELE' ,\r\n                            'Y'\r\n                    FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budget\r\n                    WHERE   BudgetStage = 'Total Budget'\r\n                            AND budget.BudgetGroupDEM = 71\r\n                            AND budget.scenarioTypeSeqid = @ScenarioTypeSeqId\r\n                    GROUP BY AgencyCodeOEC\r\n\r\n\r\n        END\r\n\r\n\r\n\t\t-- check budget code 62\r\n        BEGIN -- tenant charge\r\n\t\t\r\n            INSERT  INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                    ( PublishedBillingPeriod ,\r\n                      BillingPeriod ,\r\n                      BudgetVersusExpenditureTypeSeqID ,\r\n                      AgencyCodeOEC ,\r\n                      CurrentMonthBudgetEnergyDollars ,\r\n                      CurrentMonthBudgetEnergyUsage ,\r\n                      YearToDateBudgetDollars ,\r\n                      EndOfYearBudgetDollars ,\r\n                      EnergyDeliveryType ,\r\n                      IsSourceOfFundingGroupData\r\n\t\t            )\r\n                    SELECT  PublishedBillingPeriod ,\r\n                            BillingPeriod ,\r\n                            BudgetVersusExpenditureTypeSeqID ,\r\n                            tenantPercentage.oecagencycode ,\r\n                            CurrentMonthBudgetEnergyDollars\r\n                            * tenantPercentage.TenantChargePercentage ,\r\n                            CurrentMonthBudgetEnergyUsage\r\n                            * tenantPercentage.TenantChargePercentage ,\r\n                            YearToDateBudgetDollars\r\n                            * tenantPercentage.TenantChargePercentage ,\r\n                            EndOfYearBudgetDollars\r\n                            * tenantPercentage.TenantChargePercentage ,\r\n                            EnergyDeliveryType ,\r\n                            IsSourceOfFundingGroupData\r\n                    FROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                           AS budgetData\r\n                            INNER JOIN dbo.Syn_BudgetDB_Scenarios_TenantCharges AS tenantPercentage ON budgetData.AgencyCodeOEC = tenantPercentage.DCASAgencyCode\r\n                    WHERE   BudgetVersusExpenditureTypeSeqID NOT IN ( 19, 18 )\r\n                            AND tenantPercentage.ScenarioTypeseqid = @ScenarioTypeSeqId\r\n                            AND budgetData.billingperiod = @billingPeriod\r\n        END\r\n\t\t\r\n\tBEGIN -- Data validation\r\n \t\r\n\r\n        IF ( EXISTS ( SELECT    *\r\n                      FROM   Billing.UtilityTariffRateInformation\r\n                      WHERE BudgetGroupDEM NOT IN (\r\n                                SELECT DISTINCT\r\n                                        BudgetGroupDEMSeqID\r\n                                FROM Budget.BudgetVersusExpenditureTypeMapBudgetGroup ) ) ) \r\n            BEGIN\r\n                RAISERROR('Missing budget code mapping', 12, 1)\r\n\r\n            END\r\n\r\n\t\r\n\t--note: encore tenant charge was not included in the original \r\n\t\r\n        IF ( EXISTS ( SELECT DISTINCT\r\n                                BudgetGroupDEM ,\r\n                                EnergyDeliveryType\r\n                      FROM   dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency\r\n                      WHERE BudgetGroupDEM NOT IN (\r\n                                SELECT  BudgetGroupDEMSeqID\r\n                                FROM budget.BudgetVersusExpenditureTypeMapBudgetGroup ) ) ) \r\n            BEGIN\r\n                RAISERROR('Missing budget code in mapping', 12, 1)\r\n            END\r\n\t\r\n        IF ( EXISTS ( SELECT    * ,\r\n                                data.totalSum - ( data.otherSum\r\n                                                  - ISNULL(tenantEncore.currentMonthDollar,\r\n                                                           0) )\r\n                      FROM   ( SELECT    SUM(CASE WHEN BudgetVersusExpenditureTypeSeqID = 19\r\n                                                     THEN CurrentMonthBudgetEnergyDollars\r\n                                                     ELSE 0\r\n                                                END) totalSum ,\r\n                                            AgencyCodeOEC ,\r\n                                            SUM(CASE WHEN BudgetVersusExpenditureTypeSeqID <> 19\r\n                                                          AND BudgetVersusExpenditureTypeSeqID <> 8\r\n                                                          AND BudgetVersusExpenditureTypeSeqID <> 14\r\n                                                     THEN CurrentMonthBudgetEnergyDollars\r\n                                                     ELSE 0\r\n                                                END) otherSum\r\n                                  FROM   budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n                                  WHERE BillingPeriod = @BillingPeriod\r\n                                            AND PublishedBillingPeriod = @PublishedBillingPeriod\r\n                                  GROUP BY  AgencyCodeOEC\r\n                                ) AS data\r\n                                LEFT JOIN ( SELECT    tnc.OECAgencyCode ,\r\n                                                            SUM(CurrentMonthDollars\r\n                                                              * TenantChargePercentage) currentMonthDollar\r\n                                                  FROM   ( SELECT\r\n                                                              AgencyCodeOEC ,\r\n                                                              SUM(CASE\r\n                                                              WHEN BillingPeriod = @BillingPeriod\r\n                                                              THEN TotalDollars\r\n                                                              ELSE 0\r\n                                                              END) AS CurrentMonthDollars\r\n                                                              FROM\r\n                                                              dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency\r\n                                                             AS BaseBudgetStagingByAgency\r\n                                                              WHERE\r\n                                                              ( BaseBudgetStagingByAgency.EnergyDeliveryType IN (\r\n                                                              'SUR' ) )\r\n                                                              AND AgencyCodeOEC = '856001'\r\n                                                              AND BudgetStage IN (\r\n                                                              'Encore Surcharges' )\r\n                                                              AND BillingPeriod = @BillingPeriod\r\n                                                              GROUP BY AgencyCodeOEC ,\r\n                                                              BaseBudgetStagingByAgency.EnergyDeliveryType\r\n                                                            ) AS Charge\r\n                                                            INNER JOIN dbo.Syn_BudgetDB_Scenarios_TenantCharges\r\n                                                           AS tnc ON charge.AgencyCodeOEC = tnc.DCASAgencyCode\r\n                                                  GROUP BY  tnc.OECAgencyCode\r\n                                                ) tenantEncore ON data.AgencyCodeOEC = tenantEncore.OECAgencyCode\r\n                      WHERE ABS(data.totalSum - data.otherSum) > 0.4 -- - (data.otherSum - tenantEncore.currentMonthDollar) > 0.4\r\n\t) ) \r\n            BEGIN\r\n                RAISERROR('Budget data validation failed', 12, 1)\r\n            END\r\n\r\n\tend\r\n\r\n    END\r\n\t\r\n\r\n\t/*\r\n\t1) check tenant percentage\r\n\tSELECT * FROM dbo.Syn_BudgetDB_Scenarios_TenantCharges\r\nWHERE OECAgencyCode = '002000'\r\n\r\nSELECT  TotalDollars  FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budgetData\r\nWHERE   (  budgetData.BudgetStage = 'Tenant Charges' \r\n        )\r\n        AND budgetData.scenarioTypeSeqid = 1\r\nAND budgetData.AgencyCodeOec = '002000'\r\nAND billingperiod = '201501'\r\n\r\n\r\n\r\nSELECT  SUM(TotalDollars), SUM(TotalDollars) * 0.01571  FROM dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency AS budgetData\r\nWHERE   (  BudgetStage = 'Total Budget'\r\n        )\r\n        AND budgetData.scenarioTypeSeqid = 1\r\nAND budgetData.AgencyCodeOec = '856001'\r\nAND billingperiod = '201501'\r\n\t\r\n\t*/\r\n\r\n\t/*\r\n\t2)\r\n\t\r\nSELECT  CurrentMonthBudgetEnergyDollars ,\r\n        bvet.Description ,\r\n        bvet.BudgetVersusExpenditureTypeSeqid\r\nFROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n       AS bvaebaasc\r\n        INNER JOIN budget.BudgetVersusExpenditureType AS bvet ON bvaebaasc.BudgetVersusExpenditureTypeSeqID = bvet.BudgetVersusExpenditureTypeSeqid\r\nWHERE   PublishedBillingPeriod = @PublishedBillingPeriod\r\n        AND AgencyCodeOEC = '856001'\r\n        AND bvet.BudgetVersusExpenditureTypeSeqid NOT IN ( 19 )\r\n\t*/"
        }
      ]
    }
  ]
}
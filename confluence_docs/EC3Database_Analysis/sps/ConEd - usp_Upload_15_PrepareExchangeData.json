{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ConEd",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Upload_15_PrepareExchangeData",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Upload_15_PrepareExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to prepare data for gas exchange processing by populating a table named "
        },
        {
          "type": "text",
          "text": "Gas.UploadCommonElectronicGasExchangeData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": ". It performs several operations including truncating the table, inserting data from other tables based on specific conditions, and cleaning up the data by removing certain rows. The procedure is part of a larger system that handles utility billing adjustments and exchanges, specifically for gas accounts."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple operations such as truncating, inserting, and deleting data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a "
                },
                {
                  "type": "text",
                  "text": "FULL OUTER JOIN",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and conditional logic in the "
                },
                {
                  "type": "text",
                  "text": "WHERE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clause, which can be complex to optimize."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes data transformation and validation logic, such as handling null values and setting default values."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It relies on data from existing tables within the database to perform its operations."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A variable "
                        },
                        {
                          "type": "text",
                          "text": "@CurrentBillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is declared to store the current billing period, which is fetched from the "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadCommonElectronicGasExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table is truncated to remove any existing data, ensuring a fresh start for the new data insertion."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Data is inserted into "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadCommonElectronicGasExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " from a "
                        },
                        {
                          "type": "text",
                          "text": "FULL OUTER JOIN",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " between "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonMeterBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "ConEd.UploadConEdisonAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The "
                        },
                        {
                          "type": "text",
                          "text": "SELECT",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " statement includes various transformations and default values, such as setting "
                        },
                        {
                          "type": "text",
                          "text": "AccountEffectiveTurnOff",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to '99991231' and handling null values for "
                        },
                        {
                          "type": "text",
                          "text": "FacilityName",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "ServiceAddress",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Cleanup",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Rows are deleted from "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadCommonElectronicGasExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where the account and meter status codes are less than the current billing period."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Additional cleanup removes rows where "
                        },
                        {
                          "type": "text",
                          "text": "CurrentAccountNumber",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " or "
                        },
                        {
                          "type": "text",
                          "text": "CurrentMeterNumber",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is null, ensuring data integrity."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Truncation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating the table is efficient but should be used with caution in a production environment as it removes all data without logging individual row deletions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Conditions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "FULL OUTER JOIN",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and complex "
                },
                {
                  "type": "text",
                  "text": "WHERE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " conditions can impact performance, especially if the tables involved are large. Indexing on join columns and filtering conditions can help improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Aggregation Functions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "MIN()",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " functions for many columns can be computationally expensive. Ensuring that these operations are necessary and optimized is crucial."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating the table without proper backups or logging can lead to data loss if not handled carefully."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Null Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes certain default values for null fields, which might not always align with business requirements."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Bottlenecks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The "
                },
                {
                  "type": "text",
                  "text": "FULL OUTER JOIN",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and aggregation functions could lead to performance bottlenecks if the dataset is large and not properly indexed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values like '99991231' for dates and default values for other fields might not be flexible for future changes in business logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If multiple instances of this procedure are run simultaneously, it could lead to race conditions or locking issues, especially during the truncation and insertion phases."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--**************************************************************************************\n--* Description:\t\r\n--*\r\n--* AUTHOR:       \r\n--* Created On:   \r\n--**************************************************************************************\r\n--* Change Log\r\n--* xx/xx/xxxx\txx  First Version \r\n--* 11/29/2016\tzd\tturn off date to 99991231\r\n--***************************************************************************************\r\nCREATE PROCEDURE [ConEd].[usp_Upload_15_PrepareExchangeData]\r\nAS\r\nBEGIN\r\n\r\ndeclare @CurrentBillingPeriod varchar(6)\r\n--\r\n--**************************************************************************************\r\n--Set defaults\r\n--**************************************************************************************\r\n--\r\nSELECT TOP (1) @CurrentBillingPeriod = BillingPeriod FROM ConEd.UploadConEdisonAccountBillingAdjustmentGas\r\n\r\n--\tCreate Common.UploadCommonExchangeData in preparation to do the exchange processing.\r\n--\r\ntruncate table Gas.UploadCommonElectronicGasExchangeData\r\n--\r\nINSERT INTO Gas.UploadCommonElectronicGasExchangeData\r\n\t(\r\n\t\tUtilityCompanyId,\r\n\t\tAccountBillingGroup,\r\n\t\tBillingPeriod,\r\n\t\tApprovedForCreation,\r\n\t\tCurrentAccountNumber,\r\n\t\tCurrentMeterNumber,\r\n\t\tExchangeCode,\r\n\t\tAccountStatus,\r\n\t\tAccountEffectiveTurnOn,\r\n\t\tAccountEffectiveTurnOff,\r\n\t\t--  KWHAccountDescription,\r\n\t\tSalesType,\r\n\t\tDeliveryServiceClass,\r\n\t\tDeliveryServiceClassEffectiveDate,\r\n\t\tProductionServiceClass,\r\n\t\tProductionServiceClassEffectiveDate,\r\n\t\tBillingCycle,\r\n\t\t--   ExcessDistributionAccount,\r\n\t\tTODAccount,\r\n\t\tTripNumber,\r\n\t\tAccountName,\r\n\t\tAccountAddress,\r\n\t\tBorough,\r\n\t\tMeterStatus,\r\n\t\tMeterEffectiveTurnOnDate,\r\n\t\tMeterEffectiveTurnOffDate,\r\n\t\tMeterType,\r\n\t\tMeterNumberofDials,\r\n\t\tMeterConstant,\r\n\t\t--    MeterTension,\r\n\t\tManualDataEntry,\r\n\t\tEnergyDeliveryCount, \r\n\t\tEnergyDeliveryType,\r\n\t\t--   EnergyDeliveryType1, \r\n\t\tauthenticatedUserID \r\n\t)\r\nSELECT \r\n\t\tMin(9) as UtilityCompanyId,\r\n\t\tmin(2) as AccountBillingGroup,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.BillingPeriod) as BillingPeriod,\r\n\t\tmin('Y') as ApprovedForCreation,\r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.OriginalAccountNumber, \r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.OriginalMeterNumber,\r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.MeterBillingStatus as ExchangeCode,\r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.MeterBillingStatus as AccountStatus,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.FromDate) as AccountEffectiveTurnOn,\r\n\t\tmin('99991231') as AccountEffectiveTurnOff,\r\n\t\t--min(null) as KWHAccountDescription,\r\n\t\tmin('BT') as SalesType,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.GasRateCode) as DeliveryServiceClass,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.FromDate) as DeliveryServiceClassEffectiveDate,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.GasRateCode) as ProductionServiceClass,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.FromDate) as ProductionServiceClassEffectiveDate,\r\n\t\tmin('M') as BillingCycle,\r\n\t\t--min(null) as ExcessDistributionAccount,\r\n\t\tmin('N') as TODAccount,\r\n\t\tmin('18') as TripNumber,\r\n\t\tmin(case when ConEd.UploadConEdisonMeterBillingAdjustmentGas.FacilityName is null then 'Missing Facility Name' else ConEd.UploadConEdisonMeterBillingAdjustmentGas.FacilityName end ) as AccountName,\r\n\t\tmin(case when ConEd.UploadConEdisonMeterBillingAdjustmentGas.ServiceAddress is null then 'Missing Service Address' else ConEd.UploadConEdisonMeterBillingAdjustmentGas.ServiceAddress end ) as AccountAddress,\r\n\t\tmin(1) as Borough,\r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.MeterBillingStatus as MeterStatus,\r\n\t\tmin(ConEd.UploadConEdisonMeterBillingAdjustmentGas.FromDate) as MeterEffectiveTurnOnDate,\r\n\t\tmin('99991231') as MeterEffectiveTurnOffDate,\r\n\t\tmin('G') as MeterType,\r\n\t\tmin(NumberOfDials) as MeterNumberofDials,\r\n\t\tmin(MeterConstant) as MeterConstant,\r\n\t\t--min(null) as MeterTension,\r\n\t\tmin('N') as ManualDataEntry,\r\n\t\tmin(1) as EnergyDeliveryCount,\r\n\t\tmin(5) as EnergyDeliveryType,\r\n\t\t--min(null) as EnergyDeliveryType1, \r\n\t\tmin(1) as authenticatedUserID\r\nFROM \r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas FULL OUTER JOIN\r\n\t\tConEd.UploadConEdisonAccountBillingAdjustmentGas ON \r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.OriginalAccountNumber = ConEd.UploadConEdisonAccountBillingAdjustmentGas.OriginalAccountNumber\r\n\t\tAND ConEd.UploadConEdisonMeterBillingAdjustmentGas.BillingPeriod = ConEd.UploadConEdisonAccountBillingAdjustmentGas.BillingPeriod AND \r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.BillingPeriodRevision = ConEd.UploadConEdisonAccountBillingAdjustmentGas.BillingPeriodRevision\r\nWHERE \r\n\t\t(ConEd.UploadConEdisonAccountBillingAdjustmentGas.AccountStatus LIKE 'U%' and ConEd.UploadConEdisonAccountBillingAdjustmentGas.AdjustedAccount is null) OR\r\n\t\t(ConEd.UploadConEdisonMeterBillingAdjustmentGas.MeterBillingStatus LIKE 'U%' and ConEd.UploadConEdisonMeterBillingAdjustmentGas.AccountExchangeMeterTrackSeqid is null)\r\ngroup by \r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.OriginalAccountNumber, \r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.OriginalMeterNumber,\r\n\t\tConEd.UploadConEdisonMeterBillingAdjustmentGas.MeterBillingStatus\r\n--\r\n--\r\nDELETE FROM Gas.UploadCommonElectronicGasExchangeData\r\nFROM Billing.AccountExchangeMeterTrack INNER JOIN\r\n                      Billing.Account ON Billing.AccountExchangeMeterTrack.OriginalAccountSeqid = Billing.Account.AccountSeqid INNER JOIN\r\n                      Billing.Meter ON Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid INNER JOIN\r\n                      Gas.UploadCommonElectronicGasExchangeData ON \r\n                      Billing.Meter.OriginalAccountNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber AND \r\n                      Billing.Meter.OriginalMeterNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentMeterNumber AND \r\n                      Billing.Account.UtilityAccountProvider = Gas.UploadCommonElectronicGasExchangeData.UtilityCompanyId AND \r\n                      Billing.Account.OriginalAccountNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber\r\nWHERE (Billing.Account.AccountStatusCodePeriod < @CurrentBillingPeriod) AND (Billing.Meter.MeterStatusCodePeriod < @CurrentBillingPeriod)\t\t\r\n--\r\n--\tRemove any garbage row where the (CurrentAccountNumber IS NULL) OR (CurrentMeterNumber IS NULL)\r\n--\r\nDELETE FROM Gas.UploadCommonElectronicGasExchangeData\r\nWHERE (CurrentAccountNumber IS NULL) OR\r\n                      (CurrentMeterNumber IS NULL)\r\nEND"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Gas",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_ProcessCommonElectronicGasUnknownExchangeDataByCursor",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_ProcessCommonElectronicGasUnknownExchangeDataByCursor",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process electronic gas exchange data within a SQL Server database. It involves several steps, including selecting the current billing period, deleting outdated records, processing records through a cursor, and updating related tables. The procedure is part of a larger system that manages gas exchange data, likely for billing or account management purposes."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple SQL operations, including SELECT, DELETE, UPDATE, and INSERT."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a cursor to iterate over records, which adds complexity and potential performance considerations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It interacts with multiple tables and requires understanding of the relationships between them."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic and error handling through return codes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AuthenticatedUserID int",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter represents the ID of the authenticated user executing the procedure. It is used when calling another stored procedure, "
                },
                {
                  "type": "text",
                  "text": "usp_ProcessCommonElectronicGasUnknownExchangeCode",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", to process individual records."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Variable Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Several variables are declared to store intermediate data, such as the billing period and sequence IDs."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Billing Period Selection",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure retrieves the current active billing period from the "
                },
                {
                  "type": "text",
                  "text": "Gas.UploadCommonElectronicGasExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. If no valid billing period is found, it returns an error code "
                },
                {
                  "type": "text",
                  "text": "-100",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Deletion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It deletes records from "
                },
                {
                  "type": "text",
                  "text": "Gas.UploadCommonElectronicGasExchangeData",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " that are associated with accounts and meters having a status code period less than the current billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Declaration and Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A cursor is declared to iterate over records in "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadCommonElectronicGasExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where "
                        },
                        {
                          "type": "text",
                          "text": "ApprovedForCreation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is 'Y'."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each record, it calls another stored procedure, "
                        },
                        {
                          "type": "text",
                          "text": "usp_ProcessCommonElectronicGasUnknownExchangeCode",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", to process the exchange data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "After processing, it updates the "
                        },
                        {
                          "type": "text",
                          "text": "ApprovedForCreation",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " flag to 'N' to prevent reprocessing."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Tracking and Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It tracks the maximum sequence IDs of several tables before processing."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates are made to "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Gas.UploadMeterBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to reflect changes in account and meter sequence IDs."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure outputs the number of rows updated in the adjustment tables."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can lead to performance issues, especially with large datasets, as it processes records row-by-row rather than in a set-based manner."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Truncation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating "
                },
                {
                  "type": "text",
                  "text": "Gas.AccountMeterAndTrackTablesSeqidPriorToGasExchange",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can be efficient but may lead to data loss if not handled correctly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the tables involved, especially those used in joins and where clauses, can improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Batch Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Consider processing records in batches to reduce the load on the database server."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure deletes and updates records across multiple tables, which could lead to data integrity issues if not managed correctly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses return codes for error handling, but additional error logging and handling mechanisms could be beneficial."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not include explicit transaction management, which could lead to concurrency issues if multiple instances run simultaneously."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the performance of the cursor-based approach may degrade, necessitating a review of the logic for scalability improvements."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE    PROCEDURE [Gas].[usp_ProcessCommonElectronicGasUnknownExchangeDataByCursor] (@AuthenticatedUserID int)\nAS\r\n\r\n--**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  \r\n--*               \r\n--*               \r\n--*               \r\n--* Exec:         usp_ProcessNYPAExchangeInfo\r\n--*\r\n--* Parameter(s):         \r\n--*                            UtilityCompanySeqid int   \t   - The sequence id of the Utility Companyto be processed\r\n--*                            StatusCode  int output       \t   -  Execution Return Status \r\n--*\r\n--* Database:     OEC\r\n--*\r\n--* Return:\t    0 Success\r\n--*                   9 Failure\r\n--*\r\n--* AUTHOR:       Peter Heller (PAH)\r\n--* Created On:   10/26/2005\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 05/16/2006 PAH  First Version  \r\n--***************************************************************************************\r\nBegin \r\n--************************************************************************************** \r\n--Declare Variables                                            \r\n--**************************************************************************************\r\n--\r\n--\r\ndeclare @BillingPeriod varchar(6)\r\nDeclare @UploadCommonElectronicGasExchangeDataSeqid int\r\ndeclare @StatusCode int\r\n--\r\n--  Find the current active billing period\r\n--\r\nSELECT top 1 @BillingPeriod = IsNull(BillingPeriod,'187601') FROM\tGas.UploadCommonElectronicGasExchangeData\r\n--\r\nif ( @BillingPeriod = '187601' )    return -100\r\n--\r\n--\r\n--\r\nDELETE FROM Gas.UploadCommonElectronicGasExchangeData\r\nFROM Billing.AccountExchangeMeterTrack INNER JOIN\r\n                      Billing.Account ON Billing.AccountExchangeMeterTrack.OriginalAccountSeqid = Billing.Account.AccountSeqid INNER JOIN\r\n                      Billing.Meter ON Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid INNER JOIN\r\n                      Gas.UploadCommonElectronicGasExchangeData ON \r\n                      Billing.Meter.OriginalAccountNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber AND \r\n                      Billing.Meter.OriginalMeterNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentMeterNumber AND \r\n                      Billing.Account.UtilityAccountProvider = Gas.UploadCommonElectronicGasExchangeData.UtilityCompanyId AND \r\n                      Billing.Account.OriginalAccountNumber = Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber\r\nWHERE (Billing.Account.AccountStatusCodePeriod < @BillingPeriod) AND (Billing.Meter.MeterStatusCodePeriod < @BillingPeriod)\t\t\r\n--\r\n--************************************************************************************** \r\n--\tDeclare Cursor\r\n--**************************************************************************************\r\n----\r\ndeclare @NumberExchangesApprovedForCreation int\r\n--\r\nSELECT\t@NumberExchangesApprovedForCreation = count(*) FROM Gas.UploadCommonElectronicGasExchangeData WHERE (ApprovedForCreation = 'Y')\r\n--\r\n--\r\n--\r\nif (@NumberExchangesApprovedForCreation = 0)  return \r\n--\r\nDeclare read_exchange_record cursor for \r\nSELECT\tUploadCommonElectronicGasExchangeDataSeqid\r\nFROM\tGas.UploadCommonElectronicGasExchangeData\r\n--WHERE \r\n--\t\t(ApprovedForCreation = 'Y')\r\nORDER BY \r\n\t\tCurrentAccountNumber, AccountEffectiveTurnOn\r\n--************************************************************************************** \r\n--\tMain Processing\r\n--**************************************************************************************\r\n--\r\nselect * from Gas.uvw_XcheckAccountMeterAndTrackTablesSeqid\r\n--\r\n--  Save the max sequence ids of the tables prior to the exchange process.\r\n--\r\n--\tThe following tables are being tracked:\r\n--\t\t\tBilling.Account\r\n--\t\t\tBilling.Meter\r\n--\t\t\tBilling.AccountExchangeMeterTrack\r\n--\t\t\tBilling.Address\r\n--\t\t\tGas.UploadCommonElectronicGasExchangeData\r\n--\tInitialize the table prior \r\ntruncate table Gas.AccountMeterAndTrackTablesSeqidPriorToGasExchange\r\n--\r\ninsert into Gas.AccountMeterAndTrackTablesSeqidPriorToGasExchange\r\n(\r\n\t\t [BillingPeriod]\r\n\t\t,[TableName]\r\n\t\t,[MaxTableSeqid]\r\n\t\t,[TableRowCount]\r\n\t\t,[MaxDateAdded]\r\n)\r\nSELECT   @BillingPeriod\r\n\t\t,[TableName]\r\n\t\t,[MaxTableSeqid]\r\n\t\t,[TableRowCount]\r\n\t\t,[MaxDateAdded]\r\nFROM [Gas].[uvw_XcheckAccountMeterAndTrackTablesSeqid]\r\n\r\n--\r\nopen read_exchange_record\r\n\r\n-- Read first row\r\nfetch read_exchange_record into @UploadCommonElectronicGasExchangeDataSeqid\r\n\r\nwhile @@fetch_status =0\r\n  begin\r\n\t--\r\n\texecute Gas.usp_ProcessCommonElectronicGasUnknownExchangeCode @AuthenticatedUserID,@UploadCommonElectronicGasExchangeDataSeqid,@StatusCode\r\n\t--\r\n\t-- Assumes that the exchange was completed and sets the ApprovedForCreation to 'N' so in the event that the exchange is reprocessed.  The\r\n\t-- rows that have ApprovedForCreation = 'N' will be ignored\r\n\t--\r\n\tUPDATE\tGas.UploadCommonElectronicGasExchangeData\r\n\tSET\t\tApprovedForCreation = 'N'\r\n\tWHERE \r\n\t\t\t(UploadCommonElectronicGasExchangeDataSeqid = @UploadCommonElectronicGasExchangeDataSeqid)\r\n\r\n\tfetch read_exchange_record into    @UploadCommonElectronicGasExchangeDataSeqid\r\n end \r\n--\r\nclose read_exchange_record\r\n\r\nDeallocate read_exchange_record\r\n--\r\nselect * from Gas.uvw_XcheckAccountMeterAndTrackTablesSeqid\r\n--\r\n--\tUpdate the Gas.UploadAccountBillingAdjustmentGas.AccountSeqid = Billing.Account.AccountSeqid with the seqid from the newly created account\r\n--\tfrom the Common Gas exchange data(ProcessCommonElectronicGasUnknownExchange) \r\n--\r\nupdate\tGas.UploadAccountBillingAdjustmentGas\r\nSET \r\n\t\tAccountSeqid = Billing.Account.AccountSeqid\r\nFROM \r\n\t\tGas.UploadCommonElectronicGasExchangeData INNER JOIN\r\n\t\tBilling.Account ON Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber = Billing.Account.OriginalAccountNumber AND \r\n\t\tGas.UploadCommonElectronicGasExchangeData.UtilityCompanyId = Billing.Account.UtilityAccountProvider INNER JOIN\r\n\t\tGas.UploadAccountBillingAdjustmentGas ON \r\n\t\tGas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber = Gas.UploadAccountBillingAdjustmentGas.OriginalAccountNumber\r\nwhere\t(Gas.UploadAccountBillingAdjustmentGas.AccountSeqid IS NULL)\r\nselect 'Updated Gas.UploadAccountBillingAdjustmentGas transaction Sequence ids:',@@rowcount\r\n--\r\n--update\tGas.UploadMeterBillingAdjustmentGas\r\n--\r\nupdate\tGas.UploadMeterBillingAdjustmentGas\r\nSET              \r\n\t\tAccountSeqid = Billing.AccountExchangeMeterTrack.OriginalAccountSeqid, \r\n\t\tMeterSeqid = Billing.AccountExchangeMeterTrack.OriginalMeterSeqid, \r\n\t\tAccountExchangeMeterTrackSeqid = Billing.AccountExchangeMeterTrack.AccountExchangeMeterTrackSeqid, \r\n\t\tUtilityCompanySeqid =Billing.AccountExchangeMeterTrack.UtilityCompanySeqid\r\nFROM \r\n\t\tGas.UploadCommonElectronicGasExchangeData INNER JOIN\r\n\t\tBilling.Account ON Gas.UploadCommonElectronicGasExchangeData.CurrentAccountNumber = Billing.Account.OriginalAccountNumber AND \r\n\t\tGas.UploadCommonElectronicGasExchangeData.UtilityCompanyId = Billing.Account.UtilityAccountProvider INNER JOIN\r\n\t\tBilling.AccountExchangeMeterTrack ON Billing.Account.AccountSeqid = Billing.AccountExchangeMeterTrack.OriginalAccountSeqid AND \r\n\t\tBilling.Account.OriginalAccountNumber = Billing.AccountExchangeMeterTrack.OriginalAccountNumber INNER JOIN\r\n\t\tBilling.Meter ON Billing.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalMeterSeqid = Billing.Meter.MeterSeqid AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalAccountNumber = Billing.Meter.OriginalAccountNumber AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalMeterNumber = Billing.Meter.OriginalMeterNumber INNER JOIN\r\n\t\tGas.UploadMeterBillingAdjustmentGas ON Billing.Meter.OriginalAccountNumber = Gas.UploadMeterBillingAdjustmentGas.OriginalAccountNumber AND \r\n\t\tBilling.Meter.CurrentMeterNumber = Gas.UploadMeterBillingAdjustmentGas.OriginalMeterNumber AND \r\n\t\tBilling.Account.UtilityAccountProvider = Gas.UploadMeterBillingAdjustmentGas.UtilityCompanySeqid AND \r\n\t\tBilling.Account.OriginalAccountNumber = Gas.UploadMeterBillingAdjustmentGas.OriginalAccountNumber\r\nWHERE (Billing.Meter.MeterStatus LIKE 'U%')\r\n--\r\nselect 'Updated Gas.UploadMeterBillingAdjustmentGas transaction Sequence ids:',@@rowcount\r\n--\r\n--\r\nend"
        }
      ]
    }
  ]
}
{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Utils",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Membership_AddKeysConstraintsAndEnableTriggers",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Membership_AddKeysConstraintsAndEnableTriggers",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to restore database integrity and functionality after data migration between databases. It re-establishes primary keys, unique constraints, default constraints, foreign keys, and enables triggers for various tables in the database. This procedure is typically used after data has been copied from a more up-to-date database to a less up-to-date one, where constraints and triggers were previously disabled or dropped to facilitate the data transfer."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level of this stored procedure is considered medium. It involves multiple operations across several tables, including the addition of primary keys, unique constraints, default constraints, foreign keys, and enabling triggers. While each operation is straightforward, the number of operations and the need to ensure they are executed in the correct order adds to the complexity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on predefined tables and columns within the database schema."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Primary Keys and Unique Constraints",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure adds primary keys and unique constraints to various tables such as "
                },
                {
                  "type": "text",
                  "text": "aspnet_Applications",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "aspnet_Membership",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "aspnet_Paths",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", etc. This ensures that each table has a unique identifier for its records and maintains data integrity."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Default Constraints",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Default constraints are added to certain columns to provide default values when no value is specified during data insertion. For example, "
                },
                {
                  "type": "text",
                  "text": "newid()",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is used to generate unique identifiers for columns like "
                },
                {
                  "type": "text",
                  "text": "ApplicationId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "PathId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "RoleId",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Triggers",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure enables triggers that were previously disabled. Triggers are used to automatically execute a batch of SQL code in response to certain events on a table, such as insertions or updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Foreign Keys",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Foreign key constraints are added to establish relationships between tables, ensuring referential integrity. For example, "
                },
                {
                  "type": "text",
                  "text": "aspnet_Membership",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " references "
                },
                {
                  "type": "text",
                  "text": "aspnet_Applications",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "aspnet_Users",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The workflow involves sequentially executing these operations to restore the database's structural integrity and ensure that all constraints and triggers are active."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Execution Time",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Adding constraints and enabling triggers can be resource-intensive, especially on large tables. The procedure should be executed during off-peak hours to minimize impact on database performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The addition of primary keys and unique constraints involves creating indexes, which can improve query performance but also increase the time required for data modifications."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not handle concurrency explicitly. If the database is being accessed by other processes, there might be contention issues."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the data copied into the database violates any of the constraints being added, the procedure will fail. It is crucial to ensure data integrity before executing this procedure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Trigger Logic",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Enabling triggers without verifying their logic could lead to unintended side effects, such as recursive triggers or performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling. If any operation fails, it could leave the database in an inconsistent state. Implementing transaction management and error handling would mitigate this risk."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dependency on Schema",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes a specific database schema. Any changes to table structures or column names would require updates to the procedure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Overall, while the procedure is effective in restoring database integrity post-migration, careful planning and validation are necessary to avoid potential issues."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--********************************************************************************\n--\tAuthor: MOHAMMED BELARREM\r\n-- Description: Migrating the membership information from one DB to another requires dropping \r\n--\t\t Primary keys, foreign keys and constrains and also disabling triggers.\r\n--  \t This allows the user to copy data from the most uptodate database into the less uptodate one.\r\n--\t\t After copying the data the following stored procedure restores the following:\r\n--\t\t\t* Primary keys\r\n--\t\t\t* Foreign Keys\r\n--\t\t\t* Constrains\r\n--\t\t\t* enables Triggers\r\n--\t\t\t\t\r\n--\tLog: \r\n--\t\tCreation 07/21/2009\r\n--\t\tUpdate\t XX/XX/XXXX\t: Description\r\n--\r\n--********************************************************************************\r\nCREATE PROCEDURE [Utils].[usp_Membership_AddKeysConstraintsAndEnableTriggers]\r\nAS\r\nBEGIN\r\n\t-- dbo.aspnet_Applications\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Applicati__13154250]    Script Date: 07/21/2009 09:13:49 ******/\r\n\tALTER TABLE [dbo].[aspnet_Applications] ADD PRIMARY KEY NONCLUSTERED \r\n\t(\r\n\t\t[ApplicationId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t/****** Object:  Index [UQ__aspnet_Applicati__14096689]    Script Date: 07/21/2009 09:14:42 ******/\r\n\tALTER TABLE [dbo].[aspnet_Applications] ADD UNIQUE NONCLUSTERED \r\n\t(\r\n\t\t[LoweredApplicationName] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t/****** Object:  Index [UQ__aspnet_Applicati__14FD8AC2]    Script Date: 07/21/2009 09:14:54 ******/\r\n\tALTER TABLE [dbo].[aspnet_Applications] ADD UNIQUE NONCLUSTERED \r\n\t(\r\n\t\t[ApplicationName] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\tALTER TABLE [dbo].[aspnet_Applications] ADD  DEFAULT (newid()) FOR [ApplicationId];\r\n\r\n\t-- triggers\t\r\n\tenable trigger dbo.tD_aspnet_Applications on  dbo.aspnet_Applications;\t\r\n\tenable trigger tU_aspnet_Applications on  dbo.aspnet_Applications;\t\r\n\r\n\t-- aspnet_Membership\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Membershi__28105F36]    Script Date: 07/21/2009 09:17:59 ******/\r\n\tALTER TABLE [dbo].[aspnet_Membership] ADD PRIMARY KEY NONCLUSTERED \r\n\t(\r\n\t\t[UserId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\t\r\n\t-- constraints\r\n\tALTER TABLE [dbo].[aspnet_Membership] ADD  DEFAULT (0) FOR [PasswordFormat];\r\n\r\n\t-- triggers\t\r\n\tenable trigger tD_aspnet_Membership on  dbo.aspnet_Membership;\t\r\n\tenable trigger tU_aspnet_Membership on  dbo.aspnet_Membership;\t\r\n\r\n\t-- aspnet_Paths\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Paths__59A7BACA]    Script Date: 07/21/2009 09:20:04 ******/\r\n\tALTER TABLE [dbo].[aspnet_Paths] ADD PRIMARY KEY NONCLUSTERED \r\n\t(\r\n\t\t[PathId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\tALTER TABLE [dbo].[aspnet_Paths] ADD  DEFAULT (newid()) FOR [PathId];\r\n\r\n\t-- triggers\t\r\n\tenable trigger tD_aspnet_Paths on  dbo.aspnet_Paths;\t\r\n\tenable trigger tU_aspnet_Paths on  dbo.aspnet_Paths;\r\n\r\n\t-- dbo.aspnet_PersonalizationAllUsers\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Personali__5F609420]    Script Date: 07/21/2009 10:14:06 ******/\r\n\tALTER TABLE [dbo].[aspnet_PersonalizationAllUsers] ADD PRIMARY KEY CLUSTERED \r\n\t(\r\n\t\t[PathId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\t\t\t\t\r\n\t-- constraints\r\n\t-- triggers\r\n\t-- dbo.aspnet_PersonalizationPerUser\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Personali__623D00CB]    Script Date: 07/21/2009 10:15:43 ******/\r\n\tALTER TABLE [dbo].[aspnet_PersonalizationPerUser] ADD PRIMARY KEY NONCLUSTERED \r\n\t(\r\n\t\t[Id] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\tALTER TABLE [dbo].[aspnet_PersonalizationPerUser] ADD  DEFAULT (newid()) FOR [Id];\r\n\r\n\t-- triggers\t\t\t\t\r\n\tenable trigger tD_aspnet_PersonalizationPerUser on  dbo.aspnet_PersonalizationPerUser;\t\t\t\t\r\n\tenable trigger tU_aspnet_PersonalizationPerUser on  dbo.aspnet_PersonalizationPerUser;\r\n\r\n\t-- dbo.aspnet_Profile\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Profile__3D0B7C1C]    Script Date: 07/21/2009 10:18:35 ******/\r\n\tALTER TABLE [dbo].[aspnet_Profile] ADD PRIMARY KEY CLUSTERED \r\n\t(\r\n\t\t[UserId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\t-- triggers\r\n\t-- dbo.aspnet_Roles\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Roles__4694E656]    Script Date: 07/21/2009 10:19:30 ******/\r\n\tALTER TABLE [dbo].[aspnet_Roles] ADD PRIMARY KEY NONCLUSTERED \r\n\t(\r\n\t\t[RoleId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\tALTER TABLE [dbo].[aspnet_Roles] ADD  DEFAULT (newid()) FOR [RoleId];\r\n\r\n\t-- triggers\t\t\t\t\r\n\tenable trigger tD_aspnet_Roles on  dbo.aspnet_Roles;\t\t\t\t\r\n\tenable trigger tU_aspnet_Roles on  dbo.aspnet_Roles;\r\n\r\n\t-- dbo.aspnet_SchemaVersions\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_SchemaVer__1D92D0C3]    Script Date: 07/21/2009 10:21:25 ******/\r\n\tALTER TABLE [dbo].[aspnet_SchemaVersions] ADD PRIMARY KEY CLUSTERED \r\n\t(\r\n\t\t[Feature] ASC,\r\n\t\t[CompatibleSchemaVersion] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\t\t\t\r\n\r\n\t-- constraints\r\n\t-- triggers\r\n\t-- dbo.aspnet_Users\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_Users__17D9F76D]    Script Date: 07/21/2009 10:22:15 ******/\r\n\tALTER TABLE [dbo].[aspnet_Users] ADD PRIMARY KEY NONCLUSTERED \r\n\t(\r\n\t\t[UserId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\tALTER TABLE [dbo].[aspnet_Users] ADD  DEFAULT (0) FOR [IsAnonymous];\r\n\tALTER TABLE [dbo].[aspnet_Users] ADD  DEFAULT (null) FOR [MobileAlias];\r\n\tALTER TABLE [dbo].[aspnet_Users] ADD  DEFAULT (newid()) FOR [UserId];\r\n\r\n\t-- triggers\t\t\t\t\r\n\tenable trigger tD_aspnet_Users on  dbo.aspnet_Users;\t\t\t\t\r\n\tenable trigger tU_aspnet_Users on  dbo.aspnet_Users;\r\n\r\n\t-- dbo.aspnet_UsersInRoles\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_UsersInRo__4A65773A]    Script Date: 07/21/2009 10:24:52 ******/\r\n\tALTER TABLE [dbo].[aspnet_UsersInRoles] ADD PRIMARY KEY CLUSTERED \r\n\t(\r\n\t\t[UserId] ASC,\r\n\t\t[RoleId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\t-- triggers\r\n\t-- dbo.aspnet_WebEvent_Events\r\n\t-- keys\r\n\t/****** Object:  Index [PK__aspnet_WebEvent___745BB106]    Script Date: 07/21/2009 10:26:42 ******/\r\n\tALTER TABLE [dbo].[aspnet_WebEvent_Events] ADD PRIMARY KEY CLUSTERED \r\n\t(\r\n\t\t[EventId] ASC\r\n\t)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]\r\n\r\n\t-- constraints\r\n\t-- triggers\r\n\t-- foreign keys\r\n\tALTER TABLE [dbo].[aspnet_Membership]  WITH CHECK ADD FOREIGN KEY([ApplicationId])\r\n\tREFERENCES [dbo].[aspnet_Applications] ([ApplicationId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_Membership]  WITH CHECK ADD FOREIGN KEY([UserId])\r\n\tREFERENCES [dbo].[aspnet_Users] ([UserId])\r\n\t\t\t\t\r\n\tALTER TABLE [dbo].[aspnet_Paths]  WITH CHECK ADD FOREIGN KEY([ApplicationId])\r\n\tREFERENCES [dbo].[aspnet_Applications] ([ApplicationId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_PersonalizationAllUsers]  WITH CHECK ADD FOREIGN KEY([PathId])\r\n\tREFERENCES [dbo].[aspnet_Paths] ([PathId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_PersonalizationPerUser]  WITH CHECK ADD FOREIGN KEY([PathId])\r\n\tREFERENCES [dbo].[aspnet_Paths] ([PathId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_PersonalizationPerUser]  WITH CHECK ADD FOREIGN KEY([UserId])\r\n\tREFERENCES [dbo].[aspnet_Users] ([UserId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_Profile]  WITH CHECK ADD FOREIGN KEY([UserId])\r\n\tREFERENCES [dbo].[aspnet_Users] ([UserId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_Roles]  WITH CHECK ADD FOREIGN KEY([ApplicationId])\r\n\tREFERENCES [dbo].[aspnet_Applications] ([ApplicationId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_Users]  WITH CHECK ADD FOREIGN KEY([ApplicationId])\r\n\tREFERENCES [dbo].[aspnet_Applications] ([ApplicationId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_UsersInRoles]  WITH CHECK ADD FOREIGN KEY([RoleId])\r\n\tREFERENCES [dbo].[aspnet_Roles] ([RoleId])\r\n\r\n\tALTER TABLE [dbo].[aspnet_UsersInRoles]  WITH CHECK ADD FOREIGN KEY([UserId])\r\n\tREFERENCES [dbo].[aspnet_Users] ([UserId])\r\nEND;"
        }
      ]
    }
  ]
}
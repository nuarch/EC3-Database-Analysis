{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Billing",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_SearchAccountsBy_Excel_Export",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_SearchAccountsBy_Excel_Export",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to export account-related data for reporting purposes, specifically formatted for Excel export. It retrieves account information based on parameters provided in XML format, processes the data, and outputs a structured result set. The procedure utilizes temporary tables, dynamic SQL, and a PIVOT operation to transform and aggregate data from multiple related tables in the database."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple joins across different tables, including full joins and left joins."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a PIVOT operation to transform rows into columns, which adds complexity to the data processing logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure handles XML input, which requires parsing and interpreting the XML structure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes conditional logic and dynamic SQL elements, which can be challenging to maintain and debug."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@ParametersXML XML",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter is expected to contain XML data that specifies the criteria for searching accounts. The XML structure is not detailed in the procedure, but it is used to filter and retrieve relevant account data."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Setup and Configuration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure begins by setting "
                        },
                        {
                          "type": "text",
                          "text": "NOCOUNT ON",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to prevent the sending of row count messages, and sets the transaction isolation level to "
                        },
                        {
                          "type": "text",
                          "text": "READ UNCOMMITTED",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to allow dirty reads, which can improve performance but may lead to reading uncommitted data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#TempSearchResults",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is created to store intermediate results with a predefined schema."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The procedure calls another stored procedure, "
                        },
                        {
                          "type": "text",
                          "text": "usp_SearchAccountsBy_Updated",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", passing the XML parameter and other default values to populate the temporary table with account data. This suggests that "
                        },
                        {
                          "type": "text",
                          "text": "usp_SearchAccountsBy_Updated",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is responsible for the initial data retrieval based on the XML criteria."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Transformation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A subquery is used to select distinct attributes and their statuses from the temporary table and related tables. This involves complex joins and conditional logic to determine the correct attribute descriptions."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "A PIVOT operation is applied to transform attribute types into columns, aggregating data using the "
                        },
                        {
                          "type": "text",
                          "text": "MIN",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " function."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The transformed data is selected and grouped by key account fields, producing a result set that includes account numbers, facility information, utility details, and various attribute statuses."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use of READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": While this can improve performance by reducing locking overhead, it risks reading uncommitted or inconsistent data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a temporary table can impact performance, especially if the dataset is large. Indexing the temporary table could improve performance but is not implemented here."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and PIVOT",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The full joins and PIVOT operation can be resource-intensive, potentially leading to slow performance on large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Lack of Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The absence of indexes on the temporary table and the joined tables can lead to inefficient query execution plans."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Consistency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to data consistency issues, as it allows reading data that might not be committed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity of the joins and the PIVOT operation may not scale well with large datasets, leading to performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and failures during execution."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "XML Parsing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the XML input is correctly formatted and does not include validation or error handling for malformed XML."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The complexity and interdependencies with other stored procedures and tables make maintenance challenging, especially if changes are required in the business logic or data structure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Billing].[usp_SearchAccountsBy_Excel_Export]\n(\r\n\t@ParametersXML XML\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\tSET FMTONLY OFF;\r\n\r\n\tCREATE TABLE #TempSearchResults\r\n\t\t(UniqueAccountSeqid int,\r\n\t\tAccountSeqId int,\r\n\t\tCurrentAccountNumber VARCHAR(15),\r\n\t\tUtilityServiceAccountName VARCHAR(100),\r\n\t\tUtilityServiceAddress VARCHAR(100),\r\n\t\tAccountStatus  VARCHAR(2),\r\n\t\tAccountPreviousStatus  VARCHAR(2),\r\n\t\tAccountStatusCodePeriod  VARCHAR(6),\r\n\t\tIsTimeOfDayAccount  VARCHAR(1),\r\n\t\tBillingCycle  VARCHAR(15),\r\n\t\tAccountEffectiveTurnOn DATETIME,\r\n\t\tAccountEffectiveTurnOff DATETIME, \r\n\t\tUtilityCompany  VARCHAR(100),\r\n\t\tInvoiceBillingGroup  VARCHAR(100),\r\n\t\tAgencyCodeOEC  VARCHAR(6),\r\n\t\tAgencyName  VARCHAR(100),\r\n\t\tOecFacilityNumber  VARCHAR(7),\r\n\t\tFacilityName  VARCHAR(100),\r\n\t\tFacilityAddress  VARCHAR(100),\r\n\t\tBBL  VARCHAR(15),\r\n\t\tEnergyDeliveryType  VARCHAR(3),\r\n\t\tDeliveryTariffRate  VARCHAR(10),\r\n\t\tBudgetGroupDEMName  VARCHAR(100),\r\n\t\tRateGroup1 VARCHAR(10),\r\n\t\tRateGroup2 VARCHAR(10),\r\n\t\tRateGroup3 VARCHAR(10),\r\n\t\tRateGroup4 VARCHAR(10),\r\n\t\tRateGroup5 VARCHAR(10),\r\n\t\tEnergyUnit VARCHAR(10),\r\n\t\tDeliveryTariffEffectiveDate DATETIME, \r\n\t\t--RowNumber INT ,\r\n\t\t--[RowCount] INT,\r\n\t\tisActive BIT);\r\n\r\n\r\n\tDECLARE @Total INT \r\n\tINSERT INTO #TempSearchResults\r\n\t--EXEC [Billing].[usp_SearchAccountsBy] @ParametersXML\r\n\t\r\n\tEXEC [Billing].[usp_SearchAccountsBy_Updated] @ParametersXML = NULL, @SearchText = '', @CurrentPageNumber = 0, @PageSize = 0, @SortColumn = '', @SortOrder = '', @ForReport = 'N', @Total = @Total OUTPUT\r\n\r\n\tSELECT  \r\n\t\tpiv.CurrentAccountNumber AS AccountNumber\r\n\t\t,piv.FacilityName\r\n\t\t,piv.FacilityAddress\r\n\t\t,piv.UtilityServiceAddress\r\n\t\t,piv.OecFacilityNumber\r\n\t\t,piv.EnergyDeliveryType AS EnergyType\r\n\t\t,piv.UtilityCompany\r\n\t\t,piv.DeliveryTariffRate AS TariffCode\r\n\t\t,piv.BudgetGroupDEMName AS TariffDescription\r\n\t\t,piv.AgencyName\r\n\t\t,piv.AgencyCodeOEC\r\n\t\t,CAST(MAX (piv.IntervalMeter) AS VARCHAR) AS IntervalMeter\r\n\t\t,CAST(MAX( piv.DemarcationBox ) AS VARCHAR) DemarcationBox\r\n\t\t,CAST(MAX(piv.DistributedGenerationType) AS VARCHAR) AS DistributedGenerationType\r\n\t\t,CAST(MAX(piv.DemandResponse) AS VARCHAR) AS DemandResponse\r\n\t\t,CAST(MAX(piv.[High Pressure Gas]) AS VARCHAR) AS HighPressureGas\r\n\t\t,CAST(MAX(piv.[Real-TimeMetering]) AS VARCHAR) AS [Real-TimeMetering]\r\n\t\t,CAST(MAX(CASE WHEN piv.[Real-TimeMetering] IS NOT NULL THEN AttributeUpdatedOn END) AS INT) AS [Real-TimeMeteringStatusAsOf]\r\n\t\t,CAST(MAX( piv.NetMetered\t) AS VARCHAR) NetMetered\r\n\t\t,CAST(MAX(CONVERT(INT,piv.IsActive)) AS BIT) AS IsActive\r\n\t\t,CAST(MAX (piv.AMI) AS VARCHAR) AS AMI\r\n\tFROM\r\n\t\t(SELECT DISTINCT\r\n\t\t\tCASE WHEN PA.AssociatedTypeId IS NULL THEN PA.Description END AS attributeType,\r\n\t\t\tCASE WHEN PA.AssociatedTypeId IS NOT NULL THEN PA.Description END AS attributeStatus,\r\n\t\t\tCASE \r\n\t\t\t\tWHEN AP.AttributeTypeOptionSeqid IS NOT NULL \r\n\t\t\t\tTHEN \r\n\t\t\t\tSTUFF((SELECT DISTINCT ',' + ato1.ShortDescription FROM #TempSearchResults va1\r\n\t\t\t\tFULL JOIN Billing.AccountProgramAttributeType apat1 ON va1.UniqueAccountSeqid = apat1.AccountUniqueSeqID \r\n\t\t\t\tINNER JOIN Billing.AttributeTypeOption AS ato1 ON ato1.AttributeTypeOptionSeqid = apat1.AttributeStatusOptionSeqid\tOR ato1.AttributeTypeOptionSeqid = apat1.AttributeTypeOptionSeqid \r\n\t\t\t\tINNER JOIN Billing.ProgramAttributeType AS pat1 ON pat1.ProgramAttributeTypeSeqID = ato1.AttributeTypeSeqid\r\n\t\t\t\tWHERE va1.UniqueAccountSeqid IS NOT NULL\r\n\t\t\t\tAND va.AccountSeqId= va1.AccountSeqId AND ato1.AttributeTypeSeqid = AT.AttributeTypeSeqid \r\n\t\t\t\tFOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)'),1,1,'') \r\n\t\t\t\tWHEN AP.AttributeTypeOptionSeqid IS NULL THEN AST.ShortDescription\r\n\t\t\tEND AS TypeShortDescription,\r\n\t\t\tCASE WHEN AT.AttributeTypeSeqid  IS NOT NULL \r\n\t\t\tTHEN (SELECT atto.ShortDescription FROM Billing.AttributeTypeOption AS atto WHERE atto.AttributeTypeOptionSeqid = AP.AttributeStatusOptionSeqid) \r\n\t\t\tELSE NULL END AS StatusShortDescription\r\n\t\t\t,va.UniqueAccountSeqid\r\n\t\t\t,va.AccountSeqId\r\n\t\t\t,va.CurrentAccountNumber\r\n\t\t\t,va.UtilityServiceAccountName\r\n\t\t\t,va.UtilityServiceAddress\r\n\t\t\t,va.AccountStatus\r\n\t\t\t,va.AccountPreviousStatus\r\n\t\t\t,va.AccountStatusCodePeriod\r\n\t\t\t,va.IsTimeOfDayAccount\r\n\t\t\t,va.BillingCycle\r\n\t\t\t,va.AccountEffectiveTurnOn\r\n\t\t\t,va.AccountEffectiveTurnOff\r\n\t\t\t,va.UtilityCompany\r\n\t\t\t,va.InvoiceBillingGroup\r\n\t\t\t,va.AgencyCodeOEC\r\n\t\t\t,va.AgencyName\r\n\t\t\t,va.OecFacilityNumber\r\n\t\t\t,va.FacilityName\r\n\t\t\t,va.FacilityAddress\r\n\t\t\t,va.BBL\r\n\t\t\t,va.EnergyDeliveryType\r\n\t\t\t,va.DeliveryTariffRate\r\n\t\t\t,va.BudgetGroupDEMName\r\n\t\t\t,va.RateGroup1\r\n\t\t\t,va.RateGroup2\r\n\t\t\t,va.RateGroup3\r\n\t\t\t,va.RateGroup4\r\n\t\t\t,va.RateGroup5\r\n\t\t\t,va.EnergyUnit\r\n\t\t\t,va.DeliveryTariffEffectiveDate\r\n\t\t\t--,va.RowNumber\r\n\t\t\t--,va.[RowCount]\r\n\t\t\t,va.isActive\r\n\t\t\t, AP.AttributeUpdatedOn\r\n\t\t\tFROM #TempSearchResults va\r\n\t\t\tFULL JOIN [Billing].[AccountProgramAttributeType] AP ON AP.AccountUniqueSeqID = va.UniqueAccountSeqid\r\n\t\t\tFULL JOIN [Billing].[ProgramAttributeType] PA ON AP.[ProgramAttributeTypeSeqid] = PA.[ProgramAttributeTypeSeqID] OR AP.[AttributeStatusSeqid] = PA.[ProgramAttributeTypeSeqID]\r\n\t\t\tLEFT JOIN [Billing].[AttributeTypeOption] AT ON AP.[AttributeTypeOptionSeqid] = AT.[AttributeTypeOptionSeqid] \r\n\t\t\tFULL JOIN [Membership].[EC3Membership] M ON AP.[AuthenticatedUserID] = m.[AuthenticatedUserID]\r\n\t\t\tLEFT JOIN [Billing].[AttributeTypeOption] AST ON AP.AttributeStatusOptionSeqId = AST.[AttributeTypeOptionSeqid]\r\n\t\t\tWHERE va.UniqueAccountSeqid IS NOT NULL\r\n\t\t) src\r\n\t\tPIVOT\r\n\t\t(\r\n\t\t   MIN(typeShortDescription)  \r\n\t\t  FOR attributeType IN ([DemandResponse], [DemarcationBox], [DistributedGenerationType],[IntervalMeter],[Real-TimeMetering],[ElectricVehicleChargingStation],[NetMetered],[High Pressure Gas],[AMI] )\r\n\t\t) piv\r\n\tGROUP BY\r\n\t\tpiv.CurrentAccountNumber  \r\n\t\t,piv.FacilityName\r\n\t\t,piv.FacilityAddress\r\n\t\t,piv.UtilityServiceAddress\r\n\t\t,piv.OecFacilityNumber\r\n\t\t,piv.EnergyDeliveryType\r\n\t\t,piv.UtilityCompany\r\n\t\t,piv.DeliveryTariffRate \r\n\t\t,piv.BudgetGroupDEMName \r\n\t\t,piv.AgencyName\r\n\t\t,piv.AgencyCodeOEC\r\nEND;"
        }
      ]
    }
  ]
}
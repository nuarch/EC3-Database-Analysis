{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "CrisNationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_CRIS_PreProcessMergeAccountBillingAdjustmentRecords",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_CRIS_PreProcessMergeAccountBillingAdjustmentRecords",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to preprocess and merge account billing adjustment records for a utility company. It operates within the "
        },
        {
          "type": "text",
          "text": "CrisNationalGridWest",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " schema and is primarily concerned with handling billing adjustments for gas accounts. The procedure performs several key tasks: it validates and merges billing adjustment records, updates records with the latest account information, and calculates various billing metrics. The procedure is intended to be executed after spanned records are processed and moved to the adjustment gas table."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple complex SQL operations, including "
                },
                {
                  "type": "text",
                  "text": "TRUNCATE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "INSERT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "UPDATE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "JOIN",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " operations across several tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure contains intricate business logic for calculating billing amounts and adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It handles a significant amount of data aggregation and transformation, which requires careful management of data integrity and consistency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure includes conditional logic and multiple updates to ensure the latest account information is applied."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on predefined tables within the database schema."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validation and Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by truncating the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table to ensure it is ready for new data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It inserts merged billing adjustment records into the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table. This involves aggregating data from the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingAdjustmentCrisGasTemp",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table, grouped by "
                },
                {
                  "type": "text",
                  "text": "BillingPeriodRevision",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "text": "AccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure calculates various billing metrics, such as "
                },
                {
                  "type": "text",
                  "text": "PaidAdjustmentAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "TotalNetPaidAdjustmentCalc",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "OriginalBilledAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "RevisedBilledAmount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". These calculations consider whether the billing is spanned and adjust amounts accordingly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Account Information Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure updates the "
                },
                {
                  "type": "text",
                  "text": "UploadAccountBillingAdjustmentCrisGas",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table with the latest account sequence IDs and other account-related information by joining with the "
                },
                {
                  "type": "text",
                  "text": "Billing.Account",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Adjustment of Prior Period Transactions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It updates records to exclude prior gas charge amounts from current period calculations, ensuring accurate billing adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs final updates to ensure all necessary fields are populated with the correct data, including handling of prior period adjustments."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure processes potentially large volumes of data, which can impact performance. Efficient indexing on the involved tables is crucial to optimize query performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins and Aggregations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of multiple joins and aggregations can be resource-intensive. Ensuring that the database server has adequate resources and that queries are optimized is important."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If this procedure is executed concurrently by multiple processes, it could lead to contention issues. Proper transaction management and isolation levels should be considered."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves truncating and inserting data, which poses a risk of data loss if not managed correctly. Proper backup and recovery strategies should be in place."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling mechanisms. Implementing error handling to capture and log errors would improve robustness."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Assumptions on Data Consistency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that data in the source tables is consistent and accurate. Any discrepancies in the source data could lead to incorrect billing adjustments."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the procedure may face scalability challenges. Regular performance reviews and optimizations may be necessary to maintain efficiency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Create date: 06/09/2010 (DHO)\r\n-- Update History:\r\n-- Modify date: 08/30/2011 (PAH)\r\n--\t\t\tThe OriginalBilledAmount,RevisedBilledAmount and NetPaidAdjustment calculations have changed for FY2012. The Arrears and MiscellaneousChargeAmount\r\n--\t\t\twill added to the OriginalBilledAmount(Current period) or RevisedBilledAmount(Adjustments). The\r\n--\t\t\t\t1. OriginalBilledAmount = Upload.GasChargeAmount + Upload.AccountArrears + Upload.MiscellaneousChargeAmount\r\n--\t\t\t\t2. RevisedBilledAmount = Upload.GasChargeAmount + AccountBillingCrisGas.AccountArrears + AccountBillingCrisGas.MiscellaneousChargeAmount\r\n--\t\t\t\t3. NetPaidAdjustment = Upload.CurrentAccountBalance - Upload.SpannedGasChargeAmount-Upload.AccountArrears-Upload.MiscellaneousChargeAmount\r\n-- Modify date: 06/25/2011 (PAH)\r\n--\t\t\tThis will change to use National Grid reported cancellations instead of going back to EC3 billing\r\n--\t\t\tNetChangeDollars = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.RevisedBilledAmount - ab.RevisedBilledAmount,\r\n--\t\t\tCancelBilledAmount= -1 * ab.RevisedBilledAmount,-- CancelBilledAmount\r\n--\t\t\tCancelTherms =-1 * ab.AccountEnergyUsage,--CancelTherms\r\n--\t\t\tNetChangeTherms =RevisedTherms - ab.AccountEnergyUsage,\r\n--\t\t\tOriginalBilledAmount =ab.OriginalBilledAmount,\r\n--\t\t\tCancelCCF =-1 * abcg.BilledCCF,--CancelCCF\r\n--\t\t\tNetChangeCCF =RevisedCCF - abcg.BilledCCF,\r\n--\t\t\tPriorPeriodAccountBalance = isnull(ab.TotalAmountDue,0)\r\n-- Description:\tMerge Account Billing Ajustment records with the same account number and same billing period revision\r\n--\t\t\t\tThis procedure should be called after spanned records are processed and moved to adjustment gas table.\r\n-- UPDATE\tzd\t2018-11-21\tI added a filter to target only latest current account when stting the AccountSeqID\r\n--\t\t\t\t\t\t\tThis modification will help process to choose the rigt accountSeqID\r\n-- UPDATE   VY  2018-12-10  Modified for UniqueAccountSeqID\r\n-- =============================================\r\nCREATE PROCEDURE [CrisNationalGridWest].[usp_CRIS_PreProcessMergeAccountBillingAdjustmentRecords]\r\nAS\r\nBEGIN\r\n\t/*\r\n\tPseudo:\r\n\tif there are two transaction records with the same activity date time and transaction code\r\n\t\treturn error \r\n\tInsert merged BI record into temp table\r\n\tIn adjustment record,overwrite latest record (biggest activity date) with information from merge data temp table; remove all other records.\r\n\t\r\n If there is BC record with no BI record forthe same period\r\n\t\treturn error\r\n\tInsert merged BC record into temp table\r\n\tUpdate \"Cancel\" columns with data from temp table\r\n\tRemove BC records\r\n\t*/\r\n\tDECLARE @errMessage AS VARCHAR(500);\r\n\t/*********************************************************************\r\n\t 1. Merge BI records group by account number and billing perio revision\r\n\t***********************************************************************/\r\n\t/* \r\n\t\t1.1 validate CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas \r\n\t*/\r\n\tTRUNCATE TABLE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas;\r\n\r\n\tINSERT INTO CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\t\t(IsProcessed,\r\n\t\tNumberOfTransactions,\r\n\t\tBillingPeriod,\r\n\t\tBillingPeriodRevision,\r\n\t\tCancelLastRebillPeriod,\r\n\t\tFirstBillingPeriodCanceled,\r\n\t\tIsSpannedBilling,\r\n\t\tNumberOfBillingPeriod,\r\n\t\tUtilityCompanySeqid,\r\n\t\tAccountSeqid,\r\n\t\tAccountBillingSeqid,\r\n\t\tAccountBillingCrisGasSeqid,\r\n\t\tAccountInvoiceBillingGroup,\r\n\t\tAccountNumber,\r\n\t\tOriginalAccountNumber,\r\n\t\tMeterReadWorkDay,\r\n\t\tAccountBillingStatus,\r\n\t\tPreviousAccountBillingStatus,\r\n\t\tAccountBillingStatusCodePeriod,\r\n\t\tSpecialLedgerAccountNUmber,\r\n\t\tGasRateCode,\r\n\t\tBillFrequency,\r\n\t\tEstimatedOrActualBillingCode,\r\n\t\tPaidAdjustmentAmount,\r\n\t\tTotalNetPaidAdjustmentCalc,\r\n\t\tGasChargeAmount,\r\n\t\tRevisedGasChargeAmount,\r\n\t\tOriginalBilledAmount,\r\n\t\tRevisedBilledAmount,\r\n\t\tCancelBilledAmount,\r\n\t\tNetChangeDollars,\r\n\t\tOriginalTherms,\r\n\t\tRevisedTherms,\r\n\t\tCancelTherms,\r\n\t\tNetChangeTherms,\r\n\t\tThermFactor,\r\n\t\tOriginalCCF,\r\n\t\tRevisedCCF,\r\n\t\tCancelCCF,\r\n\t\tNetChangeCCF,\r\n\t\tFromDate,\r\n\t\tToDate,\r\n\t\tBillingDays,\r\n\t\tNumberOfMeters,\r\n\t\tCommodityChargeAmount,\r\n\t\tDeliveryChargeAmount,\r\n\t\tMTACommodityTax,\r\n\t\tMTADeliveryTax,\r\n\t\tSalesTax,\r\n\t\tSystemBenefitsCharge,\r\n\t\tRetailDecouplingMechanismCharge,\r\n\t\tDeliveryRateSurcharge,\r\n\t\tRealTimeNormalizationCharge,\r\n\t\tLatePaymentCharge,\r\n\t\tPaperBillCharge,\r\n\t\tPriorPeriodAccountBalance,\r\n\t\tAccountArrears,\r\n\t\tTerminationBalance,\r\n\t\tTotalPaymentsPosted,\r\n\t\tCurrentAccountBalance,\r\n\t\tDateLastPayment,\r\n\t\tMiscellaneousChargeAmount,\r\n\t\tMiscellaneousChargeType,\r\n\t\tMiscellaneousCreditAmount,\r\n\t\tMiscellaneousCreditType,\r\n\t\tMiscellaneousCreditPaymentBillingPeriod,\r\n\t\tSpannedGasChargeAmount,\r\n\t\tSpannedBilledCCF,\r\n\t\tSpannedBilledTherms,\r\n\t\tSpannedBillingPeriodRevision,\r\n\t\tSpannedFirstBillingPeriodCanceled,\r\n\t\tSpannedFromDate,\r\n\t\tSpannedToDate,\r\n\t\tBillRenderDate,\r\n\t\tPostMarkDate,\r\n\t\tDatePaymentDue,\r\n\t\tDateAcceptanceIntoOEC,\r\n\t\tNotes,\r\n\t\tAuthenticatedUserID)\r\n\tSELECT \r\n\t\t'N' as IsProcessed,\r\n\t\ttrans.NumberOfTransactions,\r\n\t\ttrans.BillingPeriod,\r\n\t\ttrans.BillingPeriodRevision,\r\n\t\ttrans.BillingPeriod as CancelLastRebillPeriod,\r\n\t\ttrans.FirstBillingPeriodCanceled,\r\n\t\ttrans.IsSpannedBilling,\r\n\t\ttrans.NumberOfBillingPeriod,\r\n\t\ttrans.UtilityCompanySeqid,\r\n\t\tnull as AccountSeqid,\r\n\t\tnull as AccountBillingSeqid,\r\n\t\tnull as AccountBillingCrisGasSeqid,\r\n\t\ttrans.AccountInvoiceBillingGroup,\r\n\t\ttrans.AccountNumber,\r\n\t\ttrans.AccountNumber as OriginalAccountNumber,\r\n\t\ttrans.MeterReadWorkDay,\r\n\t\t'AC' as AccountBillingStatus,\r\n\t\t'46' as PreviousAccountBillingStatus,\r\n\t\ttrans.BillingPeriod as AccountBillingStatusCodePeriod,\r\n\t\ttrans.SpecialLedgerAccountNumber,\r\n\t\ttrans.GasRateCode,\r\n\t\ttrans.BillFrequency,\r\n\t\ttrans.EstimatedOrActualBillingCode,\r\n\t\tcase \r\n\t\t\twhen trans.IsSpannedBilling ='Y' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.CurrentAccountBalance - trans.SpannedGasChargeAmount-trans.AccountArrears-trans.MiscellaneousChargeAmount\r\n\t\t\twhen trans.IsSpannedBilling ='N' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.CurrentAccountBalance - trans.GasChargeAmount-trans.AccountArrears-trans.MiscellaneousChargeAmount \r\n\t\t\telse 0\r\n\t\tend as PaidAdjustmentAmount,\r\n\t\tcase \r\n\t\t\twhen trans.IsSpannedBilling ='Y' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.CurrentAccountBalance - trans.SpannedGasChargeAmount-trans.AccountArrears-trans.MiscellaneousChargeAmount\r\n\t\t\twhen trans.IsSpannedBilling ='N' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.CurrentAccountBalance - trans.GasChargeAmount-trans.AccountArrears-trans.MiscellaneousChargeAmount\r\n\t\t\telse 0\r\n\t\tend as TotalNetPaidAdjustmentCalc,\r\n\t\tcase \r\n\t\t\twhen trans.IsSpannedBilling ='Y' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.SpannedGasChargeAmount\r\n\t\t\twhen trans.IsSpannedBilling ='N' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.GasChargeAmount\r\n\t\t\telse 0\r\n\t\tend as GasChargeAmount,\r\n\t\ttrans.GasChargeAmount as RevisedGasChargeAmount,\r\n\t\tcase \r\n\t\t\twhen trans.IsSpannedBilling ='Y' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.SpannedGasChargeAmount + trans.AccountArrears+trans.MiscellaneousChargeAmount\r\n\t\t\twhen trans.IsSpannedBilling ='N' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.GasChargeAmount + trans.AccountArrears+trans.MiscellaneousChargeAmount\r\n\t\t\telse 0\r\n\t\tend as OriginalBilledAmount,\r\n\t\ttrans.GasChargeAmount + trans.AccountArrears+trans.MiscellaneousChargeAmount as RevisedBilledAmount,\r\n\t\t0 as CancelBilledAmount,\r\n\t\t0 as NetChangeDollars,\r\n\t\tcase \r\n\t\t\twhen trans.IsSpannedBilling ='Y' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.SpannedBilledTherms\r\n\t\t\twhen trans.IsSpannedBilling ='N' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.BilledTherms \r\n\t\t\telse 0\r\n\t\tend as OriginalTherms,\r\n\t\ttrans.BilledTherms as RevisedTherms,\r\n\t\t0 as CancelTherms,\r\n\t\t0 as NetChangeTherms,\r\n\t\ttrans.ThermFactor,\r\n\t\tcase \r\n\t\t\twhen trans.IsSpannedBilling ='Y' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.SpannedBilledCCF\r\n\t\t\twhen trans.IsSpannedBilling ='N' and trans.BillingPeriod = trans.BillingPeriodRevision then trans.BilledCCF \r\n\t\t\telse 0\r\n\t\tend as OriginalCCF,\r\n\t\ttrans.BilledCCF as RevisedCCF,\r\n\t\t0 as CancelCCF,\r\n\t\t0 as NetChangeCCF,\r\n\t\ttrans.FromDate,\r\n\t\ttrans.ToDate,\r\n\t\ttrans.BillingDays,\r\n\t\ttrans.NumberOfMeters,\r\n\t\ttrans.CommodityChargeAmount,\r\n\t\ttrans.DeliveryChargeAmount,\r\n\t\ttrans.MTACommodityTax,\r\n\t\ttrans.MTADeliveryTax,\r\n\t\ttrans.SalesTax,\r\n\t\ttrans.SystemBenefitsCharge,\r\n\t\ttrans.RetailDecouplingMechanismCharge,\r\n\t\ttrans.DeliveryRateSurcharge,\r\n\t\ttrans.RealTimeNormalizationCharge,\r\n\t\ttrans.LatePaymentCharge,\r\n\t\ttrans.PaperBillCharge,\r\n\t\t0 as PriorPeriodAccountBalance,\r\n\t\ttrans.AccountArrears,\r\n\t\ttrans.TerminationBalance,\r\n\t\ttrans.TotalPaymentsPosted,\r\n\t\ttrans.CurrentAccountBalance,\r\n\t\ttrans.DateLastPayment,\r\n\t\ttrans.MiscellaneousChargeAmount,\r\n\t\ttrans.MiscellaneousChargeType,\r\n\t\tnull as MiscellaneousCreditAmount,\r\n\t\tnull as MiscellaneousCreditType,\r\n\t\tnull as MiscellaneousCreditPaymentBillingPeriod,\r\n\t\ttrans.SpannedGasChargeAmount,\r\n\t\ttrans.SpannedBilledCCF,\r\n\t\ttrans.SpannedBilledTherms,\r\n\t\ttrans.SpannedBillingPeriodRevision,\r\n\t\ttrans.SpannedFirstBillingPeriodCanceled,\r\n\t\ttrans.SpannedFromDate,\r\n\t\ttrans.SpannedToDate,\r\n\t\ttrans.BillRenderDate,\r\n\t\ttrans.BillRenderDate as PostMarkDate,\r\n\t\tdbo.CalculateRelativeDatePlusDays(trans.BillRenderDate,10) as DatePaymentDue,\r\n\t\ttrans.BillRenderDate as DateAcceptanceIntoOEC,\r\n\t\ttrans.Notes,\r\n\t\t1 as AuthenticatedUserID\r\n\t\tFROM (SELECT \r\n\t\t\t\tMIN(UtilityCompanySeqid) AS UtilityCompanySeqid,MIN(AccountInvoiceBillingGroup) AS AccountInvoiceBillingGroup,AccountNumber,\r\n\t\t\t\tMIN(MeterReadWorkDay) AS MeterReadWorkDay,BillingPeriodRevision,MIN(FirstBillingPeriodCanceled) AS FirstBillingPeriodCanceled,\r\n\t\t\t\tMIN(NumberOfBillingPeriod) AS NumberOfBillingPeriod,MIN(FromDate) AS FromDate,MAX(ToDate) AS ToDate,MIN(BillingDays) AS BillingDays,\r\n\t\t\t\tMIN(EstimatedOrActualBillingCode) AS EstimatedOrActualBillingCode,\r\n\t\t\t\tSUM(CurrentAccountBalance) AS CurrentAccountBalance,\r\n\t\t\t\tSUM(GasChargeAmount) AS GasChargeAmount,\r\n\t\t\t\tSUM(AccountArrears) AS AccountArrears,\r\n\t\t\t\tSUM(MiscellaneousChargeAmount) \r\n\t\t\t\tAS MiscellaneousChargeAmount,\r\n\t\t\t\tCOUNT(*) AS NumberOfTransactions,\r\n\t\t\t\tSUM(BilledCCF) AS BilledCCF,\r\n\t\t\t\tSUM(BilledTherms) AS BilledTherms,\r\n\t\t\t\tSUM(CommodityChargeAmount) AS CommodityChargeAmount,\r\n\t\t\t\tSUM(DeliveryChargeAmount) AS DeliveryChargeAmount,\r\n\t\t\t\tSUM(MTACommodityTax) AS MTACommodityTax,\r\n\t\t\t\tSUM(MTADeliveryTax) AS MTADeliveryTax,\r\n\t\t\t\tSUM(SalesTax) AS SalesTax,\r\n\t\t\t\tSUM(SystemBenefitsCharge) AS SystemBenefitsCharge,\r\n\t\t\t\tSUM(RetailDecouplingMechanismCharge) \r\n\t\t\t\tAS RetailDecouplingMechanismCharge,\r\n\t\t\t\tSUM(DeliveryRateSurcharge) AS DeliveryRateSurcharge,\r\n\t\t\t\tSUM(RealTimeNormalizationCharge) AS RealTimeNormalizationCharge,\r\n\t\t\t\tSUM(LatePaymentCharge) AS LatePaymentCharge,\r\n\t\t\t\tSUM(PaperBillCharge) AS PaperBillCharge,\r\n\t\t\t\tMAX(IsSpannedBilling) AS IsSpannedBilling,\r\n\t\t\t\tMIN(UtilityServiceAccountName) AS UtilityServiceAccountName,\r\n\t\t\t\tMIN(UtilityServiceAddress) AS UtilityServiceAddress,\r\n\t\t\t\tMIN(Borough) AS Borough,MIN(Zipcode) AS Zipcode,MIN(State) AS State,\r\n\t\t\t\tMIN(SpecialLedgerAccountNUmber) AS SpecialLedgerAccountNumber,MIN(GasRateCode) AS GasRateCode,MIN(BillFrequency) AS BillFrequency,\r\n\t\t\t\tMIN(ISNULL(PaidAdjustmentAmount,0)) AS PaidAdjustmentAmount,\r\n\t\t\t\tMIN(ISNULL(TotalNetPaidAdjustmentCalc,0)) AS TotalNetPaidAdjustmentCalc,\r\n\t\t\t\tMIN(TerminationBalance) AS TerminationBalance,\r\n\t\t\t\tMAX(TotalPaymentsPosted) AS TotalPaymentsPosted,\r\n\t\t\t\tMAX(DateLastPayment) AS DateLastPayment,\r\n\t\t\t\tMIN(DISTINCT MiscellaneousChargeType) AS MiscellaneousChargeType,\r\n\t\t\t\tMIN(DISTINCT SpannedGasChargeAmount) AS SpannedGasChargeAmount,\r\n\t\t\t\tMIN(DISTINCT SpannedBilledCCF) AS SpannedBilledCCF,\r\n\t\t\t\tMIN(DISTINCT SpannedBilledTherms) AS SpannedBilledTherms,\r\n\t\t\t\tMIN(DISTINCT SpannedBillingPeriodRevision) AS SpannedBillingPeriodRevision,\r\n\t\t\t\tMAX(DISTINCT SpannedFirstBillingPeriodCanceled) AS SpannedFirstBillingPeriodCanceled,\r\n\t\t\t\tMIN(DISTINCT SpannedFromDate) AS SpannedFromDate,\r\n\t\t\t\tMAX(DISTINCT SpannedToDate) AS SpannedToDate,\r\n\t\t\t\tMIN(DISTINCT Notes) AS Notes,\r\n\t\t\t\tmax(ThermFactor) as ThermFactor,\r\n\t\t\t\tmin(BillRenderDate) as BillRenderDate,\r\n\t\t\t\tmin(NumberOfMeters) as NumberOfMeters,\r\n\t\t\t\tmin(BillingPeriod) as BillingPeriod,\r\n\t\t\t\tSUM(RevisedGasChargeAmount) AS RevisedGasChargeAmount\r\n\t\t\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGasTemp\r\n\t\t\tGROUP BY BillingPeriodRevision,AccountNumber\r\n\t\t) as trans order by trans.BillingPeriodRevision DESC,trans.AccountNumber\r\n\r\n\t--where condition is added to target latest current accounts\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET AccountSeqid = Billing.Account.AccountSeqid,\r\n\tUniqueAccountSeqid = Billing.Account.UniqueAccountSeqid /* Added on 12/10/2018 */\r\n\tFROM CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\t\tINNER JOIN Billing.Account ON CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber = Billing.Account.OriginalAccountNumber\r\n\t\tAND CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.UtilityCompanySeqid = Billing.Account.UtilityAccountProvider\r\n\t\tAND CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountInvoiceBillingGroup = Billing.Account.CurrentInvoiceAccountGroup\r\n\tWHERE Account.AccountSeqid IN \r\n\t\t(SELECT MAX(aa.AccountSeqid) AccountSeqid\r\n\t\tFROM Billing.Account AS aa \r\n\t\tWHERE aa.IsCurrentRecord = 'Y'\r\n\t\tGROUP BY aa.CurrentAccountNumber)\r\n\r\n\t--\tSetup sequence ids and derive the RevisedBilledAmount = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.RevisedGasChargeAmount + abcg.AccountArrears + abcg.MiscellaneousChargeAmount\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET OriginalAccountNumber = ab.OriginalAccountNumber\r\n\t\t,AccountSeqid = ab.AccountSeqid\r\n\t\t,UniqueAccountSeqid = ab.UniqueAccountSeqId /* Added on 12/10/2018*/\r\n\t\t,AccountBillingSeqid = ab.AccountBillingSeqid\r\n\t\t,AccountBillingCrisGasSeqid = abcg.AccountBillingCrisGasSeqid\r\n\t\t,AccountBillingStatus = Billing.Account.AccountStatus\r\n\t\t,PreviousAccountBillingStatus = Billing.Account.AccountPreviousStatus\r\n\t\t,AccountBillingStatusCodePeriod = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriod\r\n\t\t,Notes = 'Adjustment - ' + CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.Notes\r\n\t\t,PriorPeriodAccountBalance = ISNULL(ab.TotalAmountDue,0)\r\n\t\t,RevisedBilledAmount = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.RevisedGasChargeAmount\r\n\t\t + abcg.AccountArrears + abcg.MiscellaneousChargeAmount\r\n\t\t,PriorAccountArrears = abcg.AccountArrears\r\n\t\t,PriorMiscellaneousChargeAmount = abcg.MiscellaneousChargeAmount\r\n\tFROM Billing.AccountBilling AS ab\r\n\t\tINNER JOIN \r\n\t\tBilling.Account ON /* ab.AccountSeqid = Billing.Account.AccountSeqid \r\n\t\tAND ab.AccountSeqid = Billing.Account.AccountSeqid */ \t\t/* Comment out on 12/11/2018 */\r\n\t\tab.UniqueAccountSeqId = Billing.Account.UniqueAccountSeqid and Billing.Account.IscurrentRecord = 'Y' /* Added on 12/10/2018 */\r\n\t\tINNER JOIN CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas \r\n\t\tON ab.BillingPeriodRevision = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision \r\n\t\tAND Billing.Account.OriginalAccountNumber = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountNumber\r\n\t\tAND ab.CurrentInvoiceAccountBillingGroup = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.AccountInvoiceBillingGroup\r\n\t\tAND ab.UtilityCompanySeqid = CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas.UtilityCompanySeqid\r\n\t\tINNER JOIN Billing.AccountBillingCrisGas AS abcg ON ab.BillingPeriodRevision = abcg.BillingPeriodRevision\r\n\t\tAND ab.AccountBillingSeqid = abcg.AccountBillingSeqid\r\n\tWHERE (UploadAccountBillingAdjustmentCrisGas.BillingPeriodRevision <> UploadAccountBillingAdjustmentCrisGas.BillingPeriod);\r\n\r\n\t-- When National Grid reports a current period transaction and prior period current transaction(s). They are appropriate adjustments to the \r\n\t-- account but aggregate amount should be excluded from the calculation of the current period transaction(s).\r\n\r\n\tUPDATE CrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas\r\n\tSET ExcludePriorGasChargeAmount = epgca.ExcludePriorGasChargeAmount\r\n\tFROM (SELECT AccountNumber,BillingPeriod,SUM(PriorCurrentGasChargeAmount) AS ExcludePriorGasChargeAmount\r\n\t\tFROM CrisNationalGridWest.uvw_CRISAccountBillsWithAdjustmentsNotReflectedOnCurrentBill\r\n\t\tGROUP BY AccountNumber,BillingPeriod) as epgca inner join \r\n\t\tCrisNationalGridWest.UploadAccountBillingAdjustmentCrisGas as u on\r\n\t\tepgca.AccountNumber = u.AccountNumber and\r\n\t\tepgca.BillingPeriod = u.BillingPeriodRevision;\r\nEND;"
        }
      ]
    }
  ]
}
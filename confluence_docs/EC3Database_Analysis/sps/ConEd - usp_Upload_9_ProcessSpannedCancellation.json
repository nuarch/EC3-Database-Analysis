{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "ConEd",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Upload_9_ProcessSpannedCancellation",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Upload_9_ProcessSpannedCancellation",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process cancellations of spanned billing periods for Con Edison utility accounts. It performs several key operations: it processes spanned data into a summary table, ensures billing period revisions are correct, updates records with cancellation information, and inserts cancellations without rebilling. The procedure involves complex calculations and data manipulations to handle billing adjustments and cancellations effectively."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to the following reasons:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple steps with intricate logic and calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses a cursor to iterate over records, which adds complexity and potential performance overhead."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs numerous calculations and updates across several tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves conditional logic and multiple nested operations, including function calls and complex SQL statements."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This stored procedure does not take any input parameters. It operates on data already present in the database tables, specifically targeting records in the "
        },
        {
          "type": "text",
          "text": "ConEd.UploadConEdisonCancellationTempSummarySpanned",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " and related tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Process Spanned Data",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Initializes variables and sets default values."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Uses a cursor to iterate over records in "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonCancellationTempSummarySpanned",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " where "
                        },
                        {
                          "type": "text",
                          "text": "DeltaNumberOfPeriods",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is greater than 1."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each record, it calculates various billing and cancellation metrics, such as monthly percentages, billing days, and amounts."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts calculated data into "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonCancellationSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ensure Correct Billing Period Revisions",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "BillingPeriodRevision",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " in "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonCancellationSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to ensure it does not exceed the current "
                        },
                        {
                          "type": "text",
                          "text": "BillingPeriod",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Update Records with Cancellation Information",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Joins "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonCancellationSummary",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " with "
                        },
                        {
                          "type": "text",
                          "text": "UploadAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to update records with aggregated cancellation data."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Insert Cancellations Without Rebill",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts new records into "
                        },
                        {
                          "type": "text",
                          "text": "UploadConEdisonAccountBillingAdjustmentGas",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " for cancellations that have not been rebilled, ensuring no duplicates with existing records."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Cursor Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a cursor can lead to performance issues, especially with large datasets, as it processes rows one at a time."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure performs numerous calculations and function calls, which can be resource-intensive."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Scans",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure may cause full table scans, particularly in the absence of appropriate indexes, leading to slower performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple updates and inserts, which could lead to locking and blocking issues in a high-concurrency environment."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Complex calculations and updates increase the risk of data integrity issues if not handled correctly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Performance Bottlenecks",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of cursors and complex logic can lead to performance bottlenecks, especially with large volumes of data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the procedure may not scale well due to its complexity and reliance on cursors."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Maintenance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The high complexity and lack of documentation make the procedure difficult to maintain and understand for future developers or DBAs."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\t<Author,,Name>\r\n-- Create date: <Create Date,,>\r\n-- Description:\t<Description,,>\r\n-- =============================================\r\nCREATE PROCEDURE [ConEd].[usp_Upload_9_ProcessSpannedCancellation]\r\nAS \r\n    BEGIN\r\n\t\r\n\t/*\r\n\tSteps:\r\n\t1. put spanned data into UploadConEdisonCancellationSummary\r\n\t2. Make sure that the max BillingPeriodRevision is less than or equal to the current BillingPeriod\r\n\t3. Update record with cancellation information\r\n\t4. Insert cancellation without rebill\r\n\t*/\r\n\r\n\t/*\r\n\t1) put spanned data into UploadConEdisonCancellationSummary\r\n\t*/\r\n        BEGIN\r\n  \r\n            DECLARE @UploadConEdisonCancellationTempSummarySpannedSeqid dbo.seqid\r\n--\r\n            DECLARE @Notes dbo.notes\r\n            DECLARE @AccountNumber dbo.acctnum\r\n            DECLARE @FacilityName dbo.UtilityServiceAccountName\r\n            DECLARE @ServiceAddress dbo.addr\r\n            DECLARE @CancelTariffCode dbo.tariff\r\n            DECLARE @PostingDate dbo.PostingDate\r\n--\r\n            DECLARE @NumberOfPeriodsMinusOne dbo.Accumulator\r\n            DECLARE @DeltaNumberOfPeriods dbo.Accumulator\r\n            DECLARE @BillingPeriod dbo.yyyymm \r\n            DECLARE @FirstPeriodCanceled dbo.yyyymm \r\n            DECLARE @CancelThermFactor dbo.ThermsFactor \r\n            DECLARE @FudgedThermFactor dbo.ThermsFactor \r\n            DECLARE @BillingPeriodRevision dbo.yyyymm \r\n            DECLARE @CancelFromDate dbo.yyyymmdd \r\n            DECLARE @CancelToDate dbo.yyyymmdd \r\n            DECLARE @CalculatedBillingPeriodRevision dbo.yyyymm \r\n            DECLARE @CalculatedFromDate dbo.yyyymmdd \r\n            DECLARE @CalculatedToDate dbo.yyyymmdd \r\n            DECLARE @CancelBilledAmount dbo.BillingAmt \r\n            DECLARE @CancelBilledAmountMonthly dbo.BillingAmt \r\n            DECLARE @CancelBilledAmountMonthlySum dbo.BillingAmt \r\n            DECLARE @CancelBilledAmountAverage dbo.BillingAmt \r\n            DECLARE @CancelBilledAmountRemainder dbo.BillingAmt \r\n            DECLARE @CancelBillingPeriodDays dbo.Accumulator \r\n            DECLARE @CancelBillingPeriodDaysAverage dbo.Accumulator \r\n            DECLARE @CancelBillingPeriodDaysRemainder dbo.Accumulator \r\n            DECLARE @CancelTherms dbo.EnergyUnit \r\n            DECLARE @CancelLastPeriodTherms dbo.EnergyUnit \r\n            DECLARE @CancelThermsAverage dbo.EnergyUnit \r\n            DECLARE @CancelThermsRemainder dbo.EnergyUnit \r\n            DECLARE @CancelCCF dbo.EnergyUnit \r\n            DECLARE @CancelCCFAverage dbo.EnergyUnit \r\n            DECLARE @CancelCCFRemainder dbo.EnergyUnit \r\n            DECLARE @CancelSumAverageCCF dbo.EnergyUnit \r\n            DECLARE @idx INT\r\n            DECLARE @StartingBillingPeriodDaysIncrement INT\r\n            DECLARE @StartingBillingPeriodCCFIncrement INT\r\n            DECLARE @StartingBillingPeriodThermsIncrement INT\r\n            DECLARE @IncrementBillingPeriodDays INT\r\n            DECLARE @IncrementBillingPeriodCCF INT\r\n            DECLARE @IncrementBillingPeriodTherms INT\r\n-- \r\n            DECLARE @CancelBilledAmountMonthlyLastPeriod dbo.BillingAmt\r\n            DECLARE @CancelThermsMonthlyLastPeriod dbo.EnergyUnit \r\n            DECLARE @CancelCCFMonthlyLastPeriod dbo.EnergyUnit \r\n\r\n            DECLARE @ApplyMonthlyPercentage dbo.DiscountPercentage\r\n            DECLARE @CancelThermsMonthlySum dbo.EnergyUnit \r\n            DECLARE @CancelThermsMonthly dbo.EnergyUnit \r\n            DECLARE @CancelCCFMonthly dbo.EnergyUnit \r\n            DECLARE @CancelCCFMonthlySum dbo.EnergyUnit \r\n            DECLARE @TotalGasSpannedBilledPercentage dbo.DiscountPercentage\r\n            DECLARE @BillingCycle dbo.MonthlyBillingCycle\r\n            DECLARE @ConEdUtilityCode dbo.Seqid\r\n--\r\n--**************************************************************************************  \r\n--SET DEFAULTS                                                  \r\n--**************************************************************************************\r\n--\r\n--SELECT @BillingPeriod = BillingPeriod FROM ApplicationTimeFrame WHERE (CurrentProcessingPeriod = 'Y')\r\n--\r\n--Set @BillingPeriod = '200607'\r\n            SELECT TOP 1\r\n                    @BillingPeriod = BillingPeriod\r\n            FROM ConEd.UploadConEdisonCancellation\r\n--\r\n            SET @ConEdUtilityCode = 9\r\n            SET @BillingCycle = 'M'\r\n--\r\n            DECLARE SpannedGasBillCursor CURSOR\r\n            FOR\r\n                SELECT  UploadConEdisonCancellationTempSummarySpannedSeqid\r\n                FROM ConEd.UploadConEdisonCancellationTempSummarySpanned\r\n                WHERE   ( DeltaNumberOfPeriods > 1 ) --and @BillingPeriod=@BillingPeriod\r\n--\r\n            OPEN SpannedGasBillCursor;\r\n--\r\n            FETCH NEXT FROM SpannedGasBillCursor INTO @UploadConEdisonCancellationTempSummarySpannedSeqid\r\n--\r\n-- Check @@FETCH_STATUS to see if there are any more rows to fetch.  UploadConEdisonCancellationTempSummarySpannedSeqid\r\n--\r\n            WHILE @@FETCH_STATUS = 0 \r\n                BEGIN\r\n\t--\r\n                    SELECT  @DeltaNumberOfPeriods = DeltaNumberOfPeriods ,\r\n                            @BillingPeriodRevision = BillingPeriodRevision ,\r\n                            @FirstPeriodCanceled = FirstPeriodCanceled ,\r\n                            @CancelFromDate = CancelFromDate ,\r\n                            @CancelToDate = CancelToDate ,\r\n                            @CancelBilledAmount = CancelBilledAmount ,\r\n                            @CancelCCF = CancelCCF ,\r\n                            @CancelTherms = CancelTherms ,\r\n                            @CancelThermFactor = CancelThermFactor ,\r\n                            @CancelBillingPeriodDays = CancelBillingPeriodDays ,\r\n                            @BillingPeriod = BillingPeriod ,\r\n                            @AccountNumber = AccountNumber ,\r\n                            @FacilityName = FacilityName ,\r\n                            @ServiceAddress = ServiceAddress ,\r\n                            @CancelTariffCode = CancelTariffCode ,\r\n                            @PostingDate = PostingDate\r\n                    FROM ConEd.UploadConEdisonCancellationTempSummarySpanned\r\n                    WHERE   ( UploadConEdisonCancellationTempSummarySpannedSeqid = @UploadConEdisonCancellationTempSummarySpannedSeqid ) \r\n\t--\r\n--\tSELECT  'Spanned Information',@DeltaNumberOfPeriods, @BillingPeriodRevision,@FirstPeriodCanceled,@CancelFromDate,@CancelFromDate,@BillingPeriodDays,@BilledAmount,@CCF,@Therms,@ThermFactor,@BillingPeriodDays\r\n\t--\r\n                    SELECT  @TotalGasSpannedBilledPercentage = [dbo].[CalculateTotalGasSpannedBilledPercentage](@BillingCycle,\r\n                                                              @DeltaNumberOfPeriods,\r\n                                                              @FirstPeriodCanceled,\r\n                                                              @BillingPeriodRevision)\r\n\t--select @TotalGasSpannedBilledPercentage\r\n\t\r\n\t-- Correction for zero or negative numbers\r\n                    BEGIN\r\n\t\t--\r\n                        SET @NumberOfPeriodsMinusOne = @DeltaNumberOfPeriods\r\n                            - 1\r\n\t\t--\r\n                        SET @CancelBillingPeriodDaysAverage = ( @CancelBillingPeriodDays\r\n                                                              / @DeltaNumberOfPeriods )\r\n                        SET @CancelBillingPeriodDaysRemainder = @CancelBillingPeriodDays\r\n                            - ( @CancelBillingPeriodDaysAverage\r\n                                * @DeltaNumberOfPeriods )\r\n                        SET @StartingBillingPeriodDaysIncrement = @DeltaNumberOfPeriods\r\n                            - @CancelBillingPeriodDaysRemainder\r\n\t\t--\r\n\t\t--\tInitialize the counters for the n-1 parses\r\n\t\t--\r\n                        SET @CalculatedBillingPeriodRevision = @FirstPeriodCanceled\r\n                        SET @CalculatedFromDate = @CancelFromDate\r\n                        SET @CalculatedToDate = @CancelToDate\r\n                        SET @idx = 0\r\n                        SET @CancelBilledAmountMonthlySum = 0.00\r\n                        SET @CancelThermsMonthlySum = 0\r\n                        SET @CancelCCFMonthlySum = 0\r\n\t\t--\r\n                        WHILE ( @NumberOfPeriodsMinusOne > @idx ) \r\n                            BEGIN\r\n\t\t\t\t--\r\n                                SELECT  @ApplyMonthlyPercentage = [dbo].[CalculateApplyMonthlyPercentageGasSpannedBilled](@CalculatedBillingPeriodRevision,\r\n                                                              @TotalGasSpannedBilledPercentage)\r\n\t\t\t\t--\r\n\t\t\t\t-- Apply the Monthly Percentage to the CCF,Therms and Billed Amount and accumulate the weigthed average units.\r\n\t\t\t\t--\r\n                                SET @CancelBilledAmountMonthly = ROUND(@CancelBilledAmount\r\n                                                              * @ApplyMonthlyPercentage,\r\n                                                              2)\r\n                                SET @CancelBilledAmountMonthlySum = @CancelBilledAmountMonthlySum\r\n                                    + @CancelBilledAmountMonthly\r\n                                SET @CancelThermsMonthly = ROUND(@CancelTherms\r\n                                                              * @ApplyMonthlyPercentage,\r\n                                                              0)\r\n                                SET @CancelThermsMonthlySum = @CancelThermsMonthlySum\r\n                                    + @CancelThermsMonthly\r\n                                SET @CancelCCFMonthly = ROUND(@CancelCCF\r\n                                                              * @ApplyMonthlyPercentage,\r\n                                                              0)\r\n                                SET @CancelCCFMonthlySum = @CancelCCFMonthlySum\r\n                                    + @CancelCCFMonthly\r\n\t\t\t\t--\r\n\t\t\t\t--\tThe Billing Period Projected \"ToDate\" is derived from the table \"dbo.BillingPeriodProjected\" using the utility company seqid and the\r\n\t\t\t\t--\tRevisedBillingPeriod and using the \"EndofPeriodTodate\" as the derived \"Todate\" for the account.\r\n\t\t\t\t--\r\n                                SELECT  @CalculatedToDate = [dbo].[DetermineConEdisonBillingPeriodProjectedToDate](@CalculatedBillingPeriodRevision,\r\n                                                              @CancelTariffCode,\r\n                                                              @ConEdUtilityCode)\r\n\t\t\t\t--\r\n                                SELECT  @Notes = 'Therm factor '\r\n                                        + CAST(@CancelThermFactor AS VARCHAR(6))\r\n                                        + ' for '\r\n                                        + CAST(@DeltaNumberOfPeriods AS VARCHAR(6))\r\n                                        + ' First: ' + @FirstPeriodCanceled\r\n                                        + ' ( ' + @CancelFromDate + ') Last: '\r\n                                        + @BillingPeriodRevision + ' ( '\r\n                                        + @CancelFromDate + '). '\r\n                                        + ' period: '\r\n                                        + @CalculatedBillingPeriodRevision\r\n                                        + ' Month %: '\r\n                                        + CAST(@ApplyMonthlyPercentage AS VARCHAR(10))\r\n                                        + ' - Total %: '\r\n                                        + CAST(@TotalGasSpannedBilledPercentage AS VARCHAR(10))\r\n\t\t\t\t--\r\n\t\t\t\t--  \r\n\t\t\t\t--\r\n                                INSERT  INTO ConEd.UploadConEdisonCancellationSummary\r\n                                        ( AccountUtilityCompanySeqid ,\r\n                                          OriginalAccountNumber ,\r\n                                          NumberOfCancelTransactions ,\r\n                                          NumberOfTransactions ,\r\n                                          DerivedFromSpannedBill ,\r\n                                          BillingPeriod ,\r\n                                          BillingPeriodRevision ,\r\n                                          FirstCanceledBillingPeriod ,\r\n                                          EstimatedOrActualBilling ,\r\n                                          InitialCancelFromDate ,\r\n                                          CurrentBillingToDate ,\r\n                                          NumberOfBillingPeriods ,\r\n                                          TotalBillingDaysRebilled ,\r\n                                          TotalRebilledAmount ,\r\n                                          TotalCanceledAmount ,\r\n                                          PriorRevisedBilledAmount ,\r\n                                          RevisedBilledAmount ,\r\n                                          CanceledBilledAmount ,\r\n                                          AverageRebillCostOfGasCharge ,\r\n                                          AverageRebillThermsFactor ,\r\n                                          BillingDays ,\r\n                                          FromDate ,\r\n                                          ToDate ,\r\n                                          BilledAmount ,\r\n                                          BillingAction ,\r\n                                          ProcessedInTheCurrentPeriod ,\r\n                                          GasRateCode ,\r\n                                          DeliveryChargeAmount ,\r\n                                          TotalCCF ,\r\n                                          TotalTherms ,\r\n                                          ThermsFactor ,\r\n                                          CancelFromDate ,\r\n                                          CancelToDate ,\r\n                                          CancelDeliveryChargeAmount ,\r\n                                          CancelTotalCCF ,\r\n                                          CancelTotalTherms ,\r\n                                          CancelThermsFactor ,\r\n                                          CancelBillingDays ,\r\n                                          Notes ,\r\n                                          SpannedBillingPeriodRevision ,\r\n                                          SpannedFirstCanceledBillingPeriod ,\r\n                                          SpannedBilledAmount ,\r\n                                          SpannedCCF ,\r\n                                          SpannedThermFactor ,\r\n                                          SpannedTherm ,\r\n                                          SpannedMonthlyPercentage ,\r\n                                          SpannedTotalPercentage ,\r\n                                          BillingDate ,\r\n                                          ProcessEffectiveDate ,\r\n                                          FacilityName ,\r\n                                          ServiceAddress\r\n                                        )\r\n                                        SELECT  '9' ,\r\n                                                @AccountNumber ,  --  UploadConEdisonAccountTempSummarySPanned.AccountNumber,  \r\n                                                1 , --  NumberOfCancelTransactions\r\n                                                1 , --  NumberOfTransactions\r\n                                                'Y' ,  -- DerivedFromSpannedBill = 'Y'\r\n                                                BillingPeriod ,\r\n                                                @CalculatedBillingPeriodRevision , -- UploadConEdisonAccountTempSummarySPanned.BillingPeriodRevision, \r\n                                                @CalculatedBillingPeriodRevision , -- UploadConEdisonAccountTempSummarySPanned.FirstPeriodCanceled, \r\n                                                'ACT' ,  -- EstimatedOrActualBilling needs to be upodated\r\n                                                @CancelFromDate ,  -- UploadConEdisonAccountTempSummarySPanned.FromDate AS InitialCancelFromDate, \r\n                                                @CancelToDate , --  UploadConEdisonAccountTempSummarySPanned.ToDate AS CurrentBillingToDate,\r\n                                                [dbo].[CalculateDeltaBillingPeriods]([dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(@CalculatedFromDate,\r\n                                                              @CancelTariffCode,\r\n                                                              @ConEdUtilityCode),\r\n                                                              @BillingCycle),\r\n                                                              [dbo].DetermineConEdisonBillingPeriodProjected(@CalculatedToDate,\r\n                                                              @CancelTariffCode,\r\n                                                              @ConEdUtilityCode),\r\n                                                              @BillingCycle) , --UploadConEdisonAccountTempSummarySPanned.DeltaNumberOfPeriods, \r\n                                                [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate,\r\n                                                              @CalculatedToDate) ,-- UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays AS TotalBillingDaysRebilled, \r\n                                                0 , --  UploadConEdisonAccountTempSummarySPanned.BilledAmount AS TotalRebilledAmount, \r\n                                                @CancelBilledAmountMonthly , -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS TotalCanceledAmount,\r\n                                                0 AS PriorRevisedBilledAmount ,\r\n                                                0 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount, 0), \r\n                                                0 , -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0), \r\n                                                0 AS AverageRebillCostOfGasCharge ,\r\n                                                1.00 AS AverageRebillThermsFactor ,\r\n                                                0 ,-- IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n                                                NULL ,  -- UploadConEdisonAccountTempSummarySPanned.FromDate ,\r\n                                                NULL , -- UploadConEdisonAccountTempSummarySPanned.ToDate, \r\n                                                @CancelBilledAmountMonthly , --  (IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) as  - IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0)) as BilledAmount,\r\n                                                CASE WHEN @BillingPeriod = @CalculatedBillingPeriodRevision\r\n                                                     THEN 'O'\r\n                                                     ELSE 'A'\r\n                                                END , -- as BillingAction, \r\n                                                'N' AS ProcessedInTheCurrentPeriod ,\r\n                                                @CancelTariffCode ,\r\n                                                @CancelBilledAmountMonthly , --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) AS DeliveryChargeAmount, \r\n                                                0 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.CCF,0) AS TotalCCF, \r\n                                                0 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.Therms,0) AS TotalTherms, \r\n                                                1.000 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.ThermFactor,1.0) AS ThermsFactor,\r\n                                                @CalculatedFromDate , --  UploadConEdisonCancellationTempSummary.CancelFromDate, \r\n                                                @CalculatedToDate , --  UploadConEdisonCancellationTempSummary.CancelToDate, \r\n                                                @CancelBilledAmountMonthly , --  IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS CancelDeliveryChargeAmount, \r\n                                                @CancelCCFMonthly , --  IsNull(UploadConEdisonCancellationTempSummary.CancelCCF,0) AS CancelTotalCCF, \r\n                                                @CancelThermsMonthly , --  IsNull(UploadConEdisonCancellationTempSummary.CancelTherms,0) AS CancelTotalTherms, \r\n                                                CASE @CancelCCFMonthly\r\n                                                  WHEN 0 THEN 1.0000\r\n                                                  ELSE ROUND(@CancelThermsMonthly\r\n                                                             * 1.0\r\n                                                             / @CancelCCFMonthly,\r\n                                                             4)\r\n                                                END , --  IsNull(UploadConEdisonCancellationTempSummary.CancelThermFactor,1.0) AS CancelThermsFactor\r\n                                                [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate,\r\n                                                              @CalculatedToDate) , -- IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n                                                @Notes ,\r\n                                                @BillingPeriodRevision ,\r\n                                                @FirstPeriodCanceled ,\r\n                                                @CancelBilledAmount ,\r\n                                                @CancelCCF ,\r\n                                                @CancelThermFactor ,\r\n                                                @CancelTherms ,\r\n                                                @ApplyMonthlyPercentage ,\r\n                                                @TotalGasSpannedBilledPercentage ,\r\n                                                [dbo].ConvertDateToYYYYMMDD(@PostingDate) ,\r\n                                                [dbo].ConvertDateToYYYYMMDD(GETDATE()) ,\r\n                                                FacilityName ,\r\n                                                ServiceAddress\r\n                                        FROM ConEd.UploadConEdisonCancellationTempSummarySpanned\r\n                                        WHERE   ( UploadConEdisonCancellationTempSummarySpannedSeqid = @UploadConEdisonCancellationTempSummarySpannedSeqid ) \r\n\r\n\t\t\t\t--\r\n                                SET @CancelSumAverageCCF = @CancelSumAverageCCF\r\n                                    + @CancelCCFAverage \t  \r\n                                SET @idx = @idx + 1\r\n\t\t\t\t--\r\n\t\t\t\t--\tCalculate the next the Revised Billing Period row.\r\n                                SELECT  @CalculatedBillingPeriodRevision = [dbo].[CalculateNextBillingPeriod](@CalculatedBillingPeriodRevision,\r\n                                                              @BillingCycle)\r\n\t\t\t\t--\tThis will derive the new Revised Billing Period row's \"FromDate\"\r\n                                SELECT  @CalculatedFromDate = [dbo].[DetermineConEdisonBillingPeriodProjectedFromDate](@CalculatedBillingPeriodRevision,\r\n                                                              @CancelTariffCode,\r\n                                                              @ConEdUtilityCode)\r\n\t\t\t\t--\r\n\t\t\t\t--\tProcess the next Revised Billing Period row\r\n\t\t\t\t--\r\n                            END\r\n\t\t--\r\n\t\t--\tFinish up the last period's processing\r\n\t\t--\r\n\t\t--\tUse the (Nth -1) periods @CalculatedToDate as the \"FromDate\" and the acutal \"ToDate\" from the spanned record as the \"ToDate\"\r\n\t\t--\r\n                        SELECT  @CalculatedFromDate = @CalculatedToDate\r\n                        SELECT  @CalculatedToDate = @CancelToDate\r\n\t\t--\r\n\t\t--\t@ApplyMonthlyPercentage is used for the notes purposes only\r\n\t\t--\r\n                        SELECT  @ApplyMonthlyPercentage = [dbo].[CalculateApplyMonthlyPercentageGasSpannedBilled](@CalculatedBillingPeriodRevision,\r\n                                                              @TotalGasSpannedBilledPercentage)\r\n\t\t--\r\n\t\t--\tDerive the net changes to avoid rounding errors\r\n\t\t--\r\n                        SET @CancelBilledAmountMonthlyLastPeriod = @CancelBilledAmount\r\n                            - @CancelBilledAmountMonthlySum\r\n                        SET @CancelThermsMonthlyLastPeriod = @CancelTherms\r\n                            - @CancelThermsMonthlySum\r\n                        SET @CancelCCFMonthlyLastPeriod = @CancelCCF\r\n                            - @CancelCCFMonthlySum\r\n\r\n                    END\r\n\t--\r\n                    SELECT  @Notes = 'Therm factor '\r\n                            + CAST(@CancelThermFactor AS VARCHAR(6)) + ' for '\r\n                            + CAST(@DeltaNumberOfPeriods AS VARCHAR(6))\r\n                            + ' First: ' + @FirstPeriodCanceled + ' ( '\r\n                            + @CancelFromDate + ') Last: '\r\n                            + @BillingPeriodRevision + ' ( ' + @CancelFromDate\r\n                            + '). ' + ' period: '\r\n                            + @CalculatedBillingPeriodRevision + ' Month %: '\r\n                            + CAST(@ApplyMonthlyPercentage AS VARCHAR(10))\r\n                            + ' - Total %: '\r\n                            + CAST(@TotalGasSpannedBilledPercentage AS VARCHAR(10))\r\n\t--\r\n                    INSERT  INTO ConEd.UploadConEdisonCancellationSummary\r\n                            ( AccountUtilityCompanySeqid ,\r\n                              OriginalAccountNumber ,\r\n                              NumberOfCancelTransactions ,\r\n                              NumberOfTransactions ,\r\n                              DerivedFromSpannedBill ,\r\n                              BillingPeriod ,\r\n                              BillingPeriodRevision ,\r\n                              FirstCanceledBillingPeriod ,\r\n                              EstimatedOrActualBilling ,\r\n                              InitialCancelFromDate ,\r\n                              CurrentBillingToDate ,\r\n                              NumberOfBillingPeriods ,\r\n                              TotalBillingDaysRebilled ,\r\n                              TotalRebilledAmount ,\r\n                              TotalCanceledAmount ,\r\n                              PriorRevisedBilledAmount ,\r\n                              RevisedBilledAmount ,\r\n                              CanceledBilledAmount ,\r\n                              AverageRebillCostOfGasCharge ,\r\n                              AverageRebillThermsFactor ,\r\n                              BillingDays ,\r\n                              FromDate ,\r\n                              ToDate ,\r\n                              BilledAmount ,\r\n                              BillingAction ,\r\n                              ProcessedInTheCurrentPeriod ,\r\n                              GasRateCode ,\r\n                              DeliveryChargeAmount ,\r\n                              TotalCCF ,\r\n                              TotalTherms ,\r\n                              ThermsFactor ,\r\n                              CancelFromDate ,\r\n                              CancelToDate ,\r\n                              CancelDeliveryChargeAmount ,\r\n                              CancelTotalCCF ,\r\n                              CancelTotalTherms ,\r\n                              CancelThermsFactor ,\r\n                              CancelBillingDays ,\r\n                              Notes ,\r\n                              SpannedBillingPeriodRevision ,\r\n                              SpannedFirstCanceledBillingPeriod ,\r\n                              SpannedBilledAmount ,\r\n                              SpannedCCF ,\r\n                              SpannedThermFactor ,\r\n                              SpannedTherm ,\r\n                              SpannedMonthlyPercentage ,\r\n                              SpannedTotalPercentage ,\r\n                              BillingDate ,\r\n                              ProcessEffectiveDate ,\r\n                              FacilityName ,\r\n                              ServiceAddress\r\n                            )\r\n                            SELECT  '9' ,\r\n                                    @AccountNumber ,  --  UploadConEdisonAccountTempSummarySPanned.AccountNumber,\r\n                                    1 , --  NumberOfCancelTransactions\r\n                                    1 , --  NumberOfTransactions\r\n                                    'Y' ,  -- DerivedFromSpannedBill = 'Y'\r\n                                    BillingPeriod ,\r\n                                    @CalculatedBillingPeriodRevision , -- UploadConEdisonAccountTempSummarySPanned.BillingPeriodRevision, \r\n                                    @CalculatedBillingPeriodRevision , -- UploadConEdisonAccountTempSummarySPanned.FirstPeriodCanceled, \r\n                                    'ACT' ,  -- EstimatedOrActualBilling needs to be upodated\r\n                                    @CancelFromDate ,  -- UploadConEdisonAccountTempSummarySPanned.FromDate AS InitialCancelFromDate, \r\n                                    @CancelToDate , --  UploadConEdisonAccountTempSummarySPanned.ToDate AS CurrentBillingToDate,\r\n                                    [dbo].[CalculateDeltaBillingPeriods]([dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(@CalculatedFromDate,\r\n                                                              @CancelTariffCode,\r\n                                                              @ConEdUtilityCode),\r\n                                                              @BillingCycle),\r\n                                                              [dbo].DetermineConEdisonBillingPeriodProjected(@CalculatedToDate,\r\n                                                              @CancelTariffCode,\r\n                                                              @ConEdUtilityCode),\r\n                                                              @BillingCycle) , --UploadConEdisonAccountTempSummarySPanned.DeltaNumberOfPeriods, \r\n                                    [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate,\r\n                                                              @CalculatedToDate) , -- UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays AS TotalBillingDaysRebilled, \r\n                                    0 , --  UploadConEdisonAccountTempSummarySPanned.BilledAmount AS TotalRebilledAmount, \r\n                                    @CancelBilledAmountMonthlyLastPeriod , -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS TotalCanceledAmount,\r\n                                    0 AS PriorRevisedBilledAmount ,\r\n                                    0 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount, 0), \r\n                                    0 , -- IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0), \r\n                                    0 AS AverageRebillCostOfGasCharge ,\r\n                                    1.00 AS AverageRebillThermsFactor ,\r\n                                    0 , --IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n                                    NULL ,  -- UploadConEdisonAccountTempSummarySPanned.FromDate ,\r\n                                    NULL , -- UploadConEdisonAccountTempSummarySPanned.ToDate, \r\n                                    @CancelBilledAmountMonthlyLastPeriod , --  (IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) as  - IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0)) as BilledAmount,\r\n                                    CASE WHEN @BillingPeriod = @CalculatedBillingPeriodRevision\r\n                                         THEN 'O'\r\n                                         ELSE 'A'\r\n                                    END , -- 'O' as BillingAction, \r\n                                    'N' AS ProcessedInTheCurrentPeriod ,\r\n                                    @CancelTariffCode ,\r\n                                    @CancelBilledAmountMonthlyLastPeriod , --  IsNull(UploadConEdisonAccountTempSummarySPanned.BilledAmount,0) AS DeliveryChargeAmount, \r\n                                    0 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.CCF,0) AS TotalCCF, \r\n                                    0 , --  IsNull(UploadConEdisonAccountTempSummarySPanned.Therms,0) AS TotalTherms, \r\n                                    1.0 ,\r\n                                    @CalculatedFromDate , --  UploadConEdisonCancellationTempSummary.CancelFromDate, \r\n                                    @CalculatedToDate , --  UploadConEdisonCancellationTempSummary.CancelToDate, \r\n                                    0 , --  IsNull(UploadConEdisonCancellationTempSummary.CancelBilledAmount,0) AS CancelDeliveryChargeAmount, \r\n                                    @CancelCCFMonthlyLastPeriod , --  IsNull(UploadConEdisonCancellationTempSummary.CancelCCF,0) AS CancelTotalCCF, \r\n                                    @CancelThermsMonthlyLastPeriod , --  IsNull(UploadConEdisonCancellationTempSummary.CancelTherms,0) AS CancelTotalTherms, \r\n                                    CASE @CancelCCFMonthlyLastPeriod\r\n                                      WHEN 0 THEN 1.0000\r\n                                      ELSE ROUND(@CancelThermsMonthlyLastPeriod\r\n                                                 * 1.0\r\n                                                 / @CancelCCFMonthlyLastPeriod,\r\n                                                 4)\r\n                                    END ,--  IsNull(UploadConEdisonCancellationTempSummary.CancelThermFactor,1.0) AS CancelThermsFactor\r\n                                    [dbo].[CalculateNumberOfBillingDays](@CalculatedFromDate,\r\n                                                              @CalculatedToDate) ,-- IsNull(UploadConEdisonAccountTempSummarySPanned.BillingPeriodDays,0), \r\n                                    @Notes ,\r\n                                    @BillingPeriodRevision ,\r\n                                    @FirstPeriodCanceled ,\r\n                                    @CancelBilledAmount ,\r\n                                    @CancelCCF ,\r\n                                    @CancelThermFactor ,\r\n                                    @CancelTherms ,\r\n                                    @ApplyMonthlyPercentage ,\r\n                                    @TotalGasSpannedBilledPercentage ,\r\n                                    [dbo].ConvertDateToYYYYMMDD(@PostingDate) ,\r\n                                    [dbo].ConvertDateToYYYYMMDD(GETDATE()) ,\r\n                                    FacilityName ,\r\n                                    ServiceAddress\r\n                            FROM ConEd.UploadConEdisonCancellationTempSummarySpanned\r\n                            WHERE   ( UploadConEdisonCancellationTempSummarySpannedSeqid = @UploadConEdisonCancellationTempSummarySpannedSeqid ) \r\n\r\n                    FETCH NEXT FROM SpannedGasBillCursor INTO @UploadConEdisonCancellationTempSummarySpannedSeqid\r\n                END\r\n\r\n            CLOSE SpannedGasBillCursor;\r\n            DEALLOCATE SpannedGasBillCursor;\r\n\r\n\r\n\t\r\n        END  -- 1 ends\r\n\r\n  \r\n  /*\r\n  2) Make sure that the max BillingPeriodRevision is less than or equal to the current BillingPeriod\r\n  */  \r\n        BEGIN\r\n  \r\n            UPDATE  ConEd.UploadConEdisonCancellationSummary\r\n            SET     BillingPeriodRevision = CASE WHEN BillingPeriodRevision > BillingPeriod\r\n                                                 THEN BillingPeriod\r\n                                                 ELSE BillingPeriodRevision\r\n                                            END\r\n            WHERE   ( BillingPeriod < BillingPeriodRevision )\r\n        END -- 2 ends\r\n  \r\n  /*\r\n  3) Update record with cancellation information\r\n  */\r\n        BEGIN\r\n            UPDATE  UploadAdjustmentGas\r\n            SET     UploadAdjustmentGas.[NumberOfTransactions] = UploadAdjustmentGas.[NumberOfTransactions]\r\n                    + CancelSummary.[NumberOfTransactions] ,\r\n                    UploadAdjustmentGas.[NumberOfCancelTransactions] = CancelSummary.[NumberOfTransactions] ,\r\n                    UploadAdjustmentGas.[TotalCanceledAmount] = CancelSummary.[TotalCanceledAmount] ,\r\n                    UploadAdjustmentGas.[CancelFromDate] = CancelSummary.[CancelFromDate] ,\r\n                    UploadAdjustmentGas.[CancelToDate] = CancelSummary.[CancelToDate] ,\r\n                    UploadAdjustmentGas.[CancelTotalCCF] = CancelSummary.[CancelTotalCCF] ,\r\n                    UploadAdjustmentGas.[CancelTotalTherms] = CancelSummary.[CancelTotalTherms] ,\r\n                    UploadAdjustmentGas.[CancelThermsFactor] = CancelSummary.[CancelThermsFactor] ,\r\n                    UploadAdjustmentGas.[CancelBillingDays] = CancelSummary.[CancelBillingDays] ,\r\n                    UploadAdjustmentGas.[Notes] = CAST(( CASE UploadAdjustmentGas.[Notes]\r\n                                                           WHEN NULL THEN ''\r\n                                                           ELSE 'Rebill: '\r\n                                                              + UploadAdjustmentGas.[Notes]\r\n                                                              + ' '\r\n                                                         END )\r\n                    + ( CASE CancelSummary.[Notes]\r\n                          WHEN NULL THEN ''\r\n                          ELSE 'Cancel: ' + CancelSummary.[Notes]\r\n                        END ) AS VARCHAR(300))\r\n            FROM ConEd.UploadConEdisonAccountBillingAdjustmentGas AS UploadAdjustmentGas\r\n                    INNER JOIN ( SELECT UploadConEdisonCancellationSummary.OriginalAccountNumber ,\r\n                                        UploadConEdisonCancellationSummary.BillingPeriodRevision ,\r\n                                        COUNT(*) AS NumberOfTransactions ,        -- ,[NumberOfTransactions] \r\n                                        0 AS NumberOfRebilledTransactions , -- ,[NumberOfRebillTransactions]             \r\n                                        COUNT(*) AS NumberOfCancelTransactions , -- ,[NumberOfCancelTransactions]\r\n                                        SUM(TotalCanceledAmount) AS TotalCanceledAmount ,\r\n                                        MIN(UploadConEdisonCancellationSummary.CancelFromDate) AS CancelFromDate ,     --               ,<CancelFromDate, yyyymmdd,>\r\n                                        MAX(UploadConEdisonCancellationSummary.CancelToDate) AS CancelToDate ,     --               ,<CancelToDate, yyyymmdd,>\r\n                                        SUM(UploadConEdisonCancellationSummary.CancelTotalCCF) AS CancelTotalCCF ,     --               ,<CancelTotalCCF, EnergyUnit,>\r\n                                        SUM(UploadConEdisonCancellationSummary.CancelTotalTherms) CancelTotalTherms ,     --               ,<CancelTotalTherms, EnergyUnit,>\r\n                                        MIN(UploadConEdisonCancellationSummary.CancelThermsFactor) CancelThermsFactor ,     --               ,<CancelThermsFactor, ThermsFactor,>\r\n                                        dbo.CalculateNumberOfBillingDays(MIN(UploadConEdisonCancellationSummary.CancelFromDate),\r\n                                                              MAX(UploadConEdisonCancellationSummary.CancelToDate)) AS CancelBillingDays ,   --               ,<CancelBillingDays, int,>\r\n                                        MAX(UploadConEdisonCancellationSummary.Notes) AS notes\r\n                                 FROM ConEd.UploadConEdisonCancellationSummary\r\n                                 GROUP BY UploadConEdisonCancellationSummary.OriginalAccountNumber ,\r\n                                        UploadConEdisonCancellationSummary.BillingPeriodRevision\r\n                               ) AS CancelSummary ON UploadAdjustmentGas.OriginalAccountNumber = CancelSummary.OriginalAccountNumber\r\n                                                     AND UploadAdjustmentGas.BillingPeriodRevision = cancelSummary.BillingPeriodRevision\r\n        END -- end 3\r\n\r\n\t/*\r\n\t4) Insert cancellation without rebill\r\n\t*/\r\n        BEGIN\r\n            INSERT  INTO ConEd.[UploadConEdisonAccountBillingAdjustmentGas]\r\n                    ( [AdjustedAccount] ,\r\n                      [AccountUtilityCompanySeqid] ,\r\n                      [NumberOfTransactions] ,\r\n                      [NumberOfRebillTransactions] ,\r\n                      [NumberOfCancelTransactions] ,\r\n                      [OriginalAccountNumber] ,\r\n                      [BillingPeriod] ,\r\n                      [BillingPeriodRevision] ,\r\n                      [FirstCanceledBillingPeriod] ,\r\n                      [EstimatedOrActualBilling] ,\r\n                      [InitialCancelFromDate] ,\r\n                      [CurrentBillingToDate] ,\r\n                      [NumberOfBillingPeriods] ,\r\n                      [TotalBillingDaysRebilled] ,\r\n                      [TotalRebilledAmount] ,\r\n                      [TotalCanceledAmount] ,\r\n                      [AverageRebillCostOfGasCharge] ,\r\n                      [AverageRebillThermsFactor] ,\r\n                      [BillingDays] ,\r\n                      [BillingDate] ,\r\n                      [ToDate] ,\r\n                      [FromDate] ,\r\n                      [BillingAction] ,\r\n                      [ProcessedInTheCurrentPeriod] ,\r\n                      [GasRateCode] ,\r\n                      [TotalCCF] ,\r\n                      [TotalTherms] ,\r\n                      [ThermsFactor] ,\r\n                      [CancelFromDate] ,\r\n                      [CancelToDate] ,\r\n                      [CancelTotalCCF] ,\r\n                      [CancelTotalTherms] ,\r\n                      [CancelThermsFactor] ,\r\n                      [CancelBillingDays] ,\r\n                      [ProcessEffectiveDate] ,\r\n                      [DerivedFromSpannedBill] ,\r\n                      [SpannedBillingPeriodRevision] ,\r\n                      [SpannedFirstCanceledBillingPeriod] ,\r\n                      [SpannedBilledAmount] ,\r\n                      [SpannedCCF] ,\r\n                      [SpannedThermFactor] ,\r\n                      [SpannedTherm] ,\r\n                      [SpannedMonthlyPercentage] ,\r\n                      [SpannedTotalPercentage] ,\r\n                      [Notes] ,\r\n                      [AuthenticatedUserID] ,\r\n                      [DateAdded] ,\r\n                      [LastUpdate] ,\r\n                      [FacilityName] ,\r\n                      [ServiceAddress]\r\n\r\n               \r\n                    )\r\n                    SELECT  NULL ,     --               (<AdjustedAccount, seqid,>\r\n                            9 ,     --               ,<AccountUtilityCompanySeqid, seqid,>\r\n                            COUNT(*) ,        -- ,[NumberOfTransactions] \r\n                            0 , -- ,[NumberOfRebillTransactions]                  \r\n                            COUNT(*) , -- ,[NumberOfCancelTransactions]      \r\n                            UploadConEdisonCancellationSummary.OriginalAccountNumber ,     --                 ,<OriginalAccountNumber, acctnum,>\r\n                            MAX(UploadConEdisonCancellationSummary.BillingPeriod) ,      --               ,<BillingPeriod, BillingPeriod,>    \r\n                            UploadConEdisonCancellationSummary.BillingPeriodRevision ,   --               ,<BillingPeriodRevision, BillingPeriodRevision,>\r\n                            [dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(MIN(UploadConEdisonCancellationSummary.CancelFromDate),\r\n                                                              MIN(UploadConEdisonCancellationSummary.GasRateCode),\r\n                                                              9), 'M') ,     --               ,<FirstCanceledBillingPeriod, yyyymm,>\r\n                            [dbo].[DetermineConEdisonActualOrEstimatedBilling](UploadConEdisonCancellationSummary.OriginalAccountNumber,\r\n                                                              UploadConEdisonCancellationSummary.BillingPeriodRevision) ,      --               ,<EstimatedOrActualBilling, varchar(3),>\r\n                            MIN(UploadConEdisonCancellationSummary.InitialCancelFromDate) ,      --               ,<InitialCancelFromDate, yyyymmdd,>\r\n                            MAX(UploadConEdisonCancellationSummary.CurrentBillingToDate) ,      --               ,<CurrentBillingToDate, yyyymmdd,>\r\n                            [dbo].[CalculateDeltaBillingPeriods]([dbo].[CalculateNextBillingPeriod]([dbo].DetermineConEdisonBillingPeriodProjected(MIN(UploadConEdisonCancellationSummary.CancelFromDate),\r\n                                                              MIN(UploadConEdisonCancellationSummary.GasRateCode),\r\n                                                              9), 'M'),\r\n                                                              [dbo].DetermineConEdisonBillingPeriodProjected(MAX(UploadConEdisonCancellationSummary.CancelToDate),\r\n                                                              MAX(UploadConEdisonCancellationSummary.GasRateCode),\r\n                                                              9), 'M') ,    --               ,<NumberOfBillingPeriods, int,>     \r\n                            dbo.CalculateNumberOfBillingDays(MIN(UploadConEdisonCancellationSummary.FromDate),\r\n                                                             MAX(UploadConEdisonCancellationSummary.ToDate)) ,     --                 ,<TotalBillingDaysRebilled, int,>\r\n                            SUM(UploadConEdisonCancellationSummary.TotalRebilledAmount) ,     --                 ,<TotalRebilledAmount, money,>\r\n                            SUM(UploadConEdisonCancellationSummary.TotalCanceledAmount) ,     --                 ,<TotalCanceledAmount, money,>\r\n                            AVG(UploadConEdisonCancellationSummary.CostOfGasCharge) ,     --                 ,<AverageRebillCostOfGasCharge, money,>\r\n                            AVG(UploadConEdisonCancellationSummary.ThermsFactor) ,     --               ,<AverageRebillThermsFactor, ThermsFactor,>\r\n                            0 ,     --               ,<BillingDays, int,>\r\n                            MAX(UploadConEdisonCancellationSummary.BillingDate) ,     --               ,<BillingDate, int,>\r\n                            MAX(UploadConEdisonCancellationSummary.ToDate) ,     --               ,<ToDate, yyyymmdd,>\r\n                            MIN(UploadConEdisonCancellationSummary.FromDate) ,     --               ,<FromDate, yyyymmdd,>\r\n                            CASE WHEN MAX(UploadConEdisonCancellationSummary.BillingPeriod) = MIN(UploadConEdisonCancellationSummary.BillingPeriodRevision)\r\n                                 THEN 'O'\r\n                                 ELSE 'A'\r\n                            END ,     --                ,<BillingAction, BillingAction,>\r\n                            'N' ,     --      !!!         ,<ProcessedInTheCurrentPeriod, yesno,>\r\n                            MAX(UploadConEdisonCancellationSummary.GasRateCode) ,  -- PAH      ,<GasRateCode, varchar(3),>\r\n                            SUM(UploadConEdisonCancellationSummary.TotalCCF) ,     --               ,<TotalCCF, EnergyUnit,>\r\n                            SUM(UploadConEdisonCancellationSummary.TotalTherms) ,     --               ,<TotalTherms, EnergyUnit,>\r\n                            MIN(UploadConEdisonCancellationSummary.ThermsFactor) ,     --               ,<ThermsFactor, ThermsFactor,>\r\n                            MIN(UploadConEdisonCancellationSummary.CancelFromDate) ,     --                 ,<CancelFromDate, yyyymmdd,>\r\n                            MAX(UploadConEdisonCancellationSummary.CancelToDate) ,     --               ,<CancelToDate, yyyymmdd,>\r\n                            SUM(UploadConEdisonCancellationSummary.CancelTotalCCF) ,     --                 ,<CancelTotalCCF, EnergyUnit,>\r\n                            SUM(UploadConEdisonCancellationSummary.CancelTotalTherms) ,     --                 ,<CancelTotalTherms, EnergyUnit,>\r\n                            MIN(UploadConEdisonCancellationSummary.CancelThermsFactor) ,     --                 ,<CancelThermsFactor, ThermsFactor,>\r\n                            dbo.CalculateNumberOfBillingDays(MIN(UploadConEdisonCancellationSummary.CancelFromDate),\r\n                                                             MAX(UploadConEdisonCancellationSummary.CancelToDate)) ,     --               ,<CancelBillingDays, int,>\r\n                            [dbo].ConvertDateToYYYYMMDD(GETDATE()) ,  --               ,<ProcessEffectiveDate, varchar(8),>\r\n                            MAX(UploadConEdisonCancellationSummary.DerivedFromSpannedBill) ,\r\n                            MAX(UploadConEdisonCancellationSummary.SpannedBillingPeriodRevision) ,\r\n                            MAX(UploadConEdisonCancellationSummary.SpannedFirstCanceledBillingPeriod) ,\r\n                            CASE WHEN MAX(UploadConEdisonCancellationSummary.SpannedBilledAmount) > 0\r\n                                 THEN MAX(UploadConEdisonCancellationSummary.SpannedBilledAmount)\r\n                                 ELSE MIN(UploadConEdisonCancellationSummary.SpannedBilledAmount)\r\n                            END AS SpannedBilledAmount ,\r\n                            CASE WHEN MAX(UploadConEdisonCancellationSummary.SpannedCCF) > 0\r\n                                 THEN MAX(UploadConEdisonCancellationSummary.SpannedCCF)\r\n                                 ELSE MIN(UploadConEdisonCancellationSummary.SpannedCCF)\r\n                            END AS SpannedCCF ,\r\n                            MAX(UploadConEdisonCancellationSummary.SpannedThermFactor) ,\r\n                            CASE WHEN MAX(UploadConEdisonCancellationSummary.SpannedTherm) > 0\r\n                                 THEN MAX(UploadConEdisonCancellationSummary.SpannedTherm)\r\n                                 ELSE MIN(UploadConEdisonCancellationSummary.SpannedTherm)\r\n                            END AS SpannedTherm ,\r\n                            MIN(UploadConEdisonCancellationSummary.SpannedMonthlyPercentage) ,\r\n                            MIN(UploadConEdisonCancellationSummary.SpannedTotalPercentage) ,\r\n                            MAX(UploadConEdisonCancellationSummary.Notes) ,\r\n                            MAX(UploadConEdisonCancellationSummary.AuthenticatedUserID) ,\r\n                            GETDATE() ,\r\n                            GETDATE() ,\r\n                            MIN(FacilityName) ,\r\n                            MIN(ServiceAddress)\r\n                    FROM ConEd.UploadConEdisonCancellationSummary\r\n                    WHERE   UploadConEdisonCancellationSummarySeqid NOT IN (\r\n                            SELECT  UploadConEdisonCancellationSummarySeqid\r\n                            FROM ConEd.UploadConEdisonCancellationSummary\r\n                                   AS cancelSum\r\n                                    INNER JOIN ConEd.[UploadConEdisonAccountBillingAdjustmentGas]\r\n                                   AS adj ON cancelSum.BillingPeriodRevision = adj.BillingPeriodRevision\r\n                                              AND cancelSum.OriginalAccountNumber = adj.OriginalAccountNumber )\r\n                    GROUP BY UploadConEdisonCancellationSummary.OriginalAccountNumber ,\r\n                            UploadConEdisonCancellationSummary.BillingPeriodRevision    \r\n  \r\n        END -- 4 ends  \r\n\r\n    END"
        }
      ]
    }
  ]
}
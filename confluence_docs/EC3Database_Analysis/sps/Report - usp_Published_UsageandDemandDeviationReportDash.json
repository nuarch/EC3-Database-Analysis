{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_UsageandDemandDeviationReportDash",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_UsageandDemandDeviationReportDash",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report on energy usage and demand deviations for a specified billing period. It retrieves data related to energy consumption and demand for current and previous billing periods, calculates deviations, and logs the report usage. The procedure is part of a reporting system that helps in analyzing energy consumption patterns and deviations over time."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple nested queries and joins across different tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It calculates various metrics and deviations, requiring complex arithmetic operations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses dynamic data retrieval based on input parameters and conditional logic."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves logging and auditing operations."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(75)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which the report is generated, formatted as 'YYYYMM'."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC AS VARCHAR(MAX)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The agency code used to filter data specific to an agency."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MinDeviation AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The minimum usage deviation percentage to filter the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@MinDemandDeviation AS INT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The minimum demand deviation percentage to filter the results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@IsAgencyUser AS BIT = 0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A flag indicating if the user is an agency user, affecting the billing period selection logic."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to avoid locking issues and initializes the stored procedure name for logging purposes."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Billing Period Adjustment",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the user is an agency user ("
                },
                {
                  "type": "text",
                  "text": "@IsAgencyUser = 1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "), the procedure retrieves the current processing period from the "
                },
                {
                  "type": "text",
                  "text": "Billing.ApplicationTimeFrame",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It logs the report usage by calling another stored procedure, "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", with relevant parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Billing Period Calculations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It calculates the current, one-year-ago, two-years-ago, and three-years-ago billing periods using a helper function "
                },
                {
                  "type": "text",
                  "text": "CalcBillingPeriodYearPrior",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The main query retrieves and calculates various metrics such as actual usage, demand, adjusted 30-day usage, and deviations for the current and previous billing periods. It involves:"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Joining multiple tables to gather necessary data."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Calculating deviations and averages for usage and demand."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Filtering results based on the minimum deviation thresholds."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The results are ordered by a custom sort order and current year actual usage in descending order."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve performance by reducing locking but may lead to dirty reads."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Joins",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins, which can be resource-intensive, especially with large datasets."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Arithmetic Operations",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Extensive use of arithmetic operations for deviation calculations can impact performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Proper indexing on the joined columns and frequently filtered columns can enhance performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging Overhead",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The logging operation may introduce additional overhead, especially if the logging table is heavily accessed."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " may result in reading uncommitted data, leading to potential inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Null Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure contains several "
                },
                {
                  "type": "text",
                  "text": "CASE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " statements that handle nulls, but improper handling could lead to unexpected results."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the dataset grows, the complexity and number of joins may lead to performance degradation."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could lead to unhandled exceptions and failures."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of dynamic SQL or user inputs without proper validation could expose the system to SQL injection risks, although this procedure does not directly use dynamic SQL."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_UsageandDemandDeviationReportDash]\n(\r\n\t@EmailAddress AS VARCHAR(75)\r\n\t,@PublishedBillingPeriod AS VARCHAR(6)\r\n\t,@AgencyCodeOEC AS VARCHAR(MAX)\r\n\t,@MinDeviation AS INT\r\n\t,@MinDemandDeviation AS INT\r\n\t,@IsAgencyUser AS BIT = 0\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @spname VARCHAR(100) = OBJECT_NAME(@@PROCID);\r\n\t\r\n\tIF (@IsAgencyUser = 1)\r\n\tBEGIN\r\n\t\tSELECT @PublishedBillingPeriod = PublishedBillingPeriod FROM Billing.ApplicationTimeFrame WHERE CurrentProcessingPeriod = 'Y';\r\n\tEND;\r\n\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t\t@ReportName = @spname,\r\n\t\t@StoredProcName = @spname,\r\n\t\t@RequestedBy = @EmailAddress,  \r\n\t\t@prmPublishedBillingPeriod = @PublishedBillingPeriod,\r\n\t\t@prmBillingPeriod = NULL,\r\n\t\t@prmAgency_ies = @AgencyCodeOEC,\r\n\t\t@prmFacilityNumber_s = NULL,\r\n\t\t@prmStartingBillingPeriod = NULL,\r\n\t\t@prmEndingBillingPeriod = NULL;\r\n\r\n\tDECLARE @CurrentBillingPeriod AS VARCHAR(6), @BillingPeriodOneYearAgo AS VARCHAR(6), @BillingPeriodTwoYearsAgo AS VARCHAR(6)\r\n\t\t,@BillingPeriodThreeYearsAgo AS VARCHAR(6), @MonthName AS VARCHAR(30);\r\n\r\n\tSELECT @MonthName = DATENAME(MM, @PublishedBillingPeriod + '01'), @CurrentBillingPeriod = @PublishedBillingPeriod;\r\n\tSELECT @BillingPeriodOneYearAgo = dbo.CalcBillingPeriodYearPrior(@PublishedBillingPeriod);\r\n\tSELECT @BillingPeriodTwoYearsAgo = dbo.CalcBillingPeriodYearPrior(@BillingPeriodOneYearAgo);\r\n\tSELECT @BillingPeriodThreeYearsAgo = dbo.CalcBillingPeriodYearPrior(@BillingPeriodTwoYearsAgo);\r\n\r\n\tSELECT PublishedBillingPeriod\r\n\t\t,FiscalYear\r\n\t\t,EnergyType\r\n\t\t,EnergyUnit\r\n\t\t,Utility\r\n\t\t,OECID\r\n\t\t,Account_\r\n\t\t,TariffClass\r\n\t\t,Facility_Name\r\n\t\t,Facility_Address\r\n\t\t,Borough\r\n\t\t,AccountSeqid\r\n\t\t,Zipcode\r\n\t\t,CY_ActualUsage AS CY_Act_Usage\r\n\t\t,CY_BDs\r\n\t\t,ROUND(CY_Adj_30Day_Usage,0) AS CY_Adj_30Day_Usage\r\n\t\t,CY_DMD\r\n\t\t,CY_AE\r\n\t\t,CY_HDD\r\n\t\t,CY_CDD\r\n\t\t,CASE CY_ActualUsage WHEN NULL THEN NULL WHEN 0 THEN NULL ELSE '$ ' + CAST(CONVERT(DECIMAL(10, 2), RevisedBilledAmount/CY_ActualUsage) AS VARCHAR(30)) END AS [CY___Unit_Usage]\r\n\t\t,PY_ActualUsage AS PY_Act_Usage\r\n\t\t,PY_BDs\r\n\t\t,ROUND(PY_Adj_30Day_Usage,0) AS PY_Adj_30Day_Usage\r\n\t\t,PY_DMD\r\n\t\t,PY_AE\r\n\t\t,PY_HDD\r\n\t\t,PY_CDD\r\n\t\t,CAST(ROUND(usageDeviation1,0) AS VARCHAR(30))+ ' %'\tAS [CY_Usage_Deviation__]\r\n\t\t,SUBSTRING( CAST(ROUND(demandDeviation1,0) AS VARCHAR(30)),0,CHARINDEX('.',demandDeviation1)) +' %'\tAS [CY_DMD_Deviation__]\r\n\t\t,ROUND(Y_AVG_ActualUsage,0) AS [C3Y_AVG_Act_Usage]\r\n\t\t,ROUND(Y_AVG_BDs,0) AS [C3Y_AVG_BDs]\r\n\t\t,ROUND(Y_AVG_AdjustedUsage,0) AS [C3Y_AVG_Adj_30Day_Usage]\r\n\t\t,ROUND(Y_AVG_DemandUsage,0) AS [C3Y_AVG_DMD]\r\n\t\t,Y_AE AS [C3Y_AE]\r\n\t\t,ROUND(Y_AVG_HDD,0) AS [C3Y_AVG_HDD]\r\n\t\t,ROUND(Y_AVG_CDD,0) AS [C3Y_AVG_CDD]\r\n\t\t,CAST(ROUND(usageDeviation2 ,0) AS VARCHAR(30))+ ' %'\tAS [C3Y_AVG_Usage_Deviation__]\r\n\t\t,CAST(ROUND(demandDeviation2 ,0) AS VARCHAR(30))+ ' %'\tAS [C3Y_AVG_DMD_Deviation__]\r\n\tFROM (SELECT DISTINCT crrnt.PublishedBillingPeriod\r\n\t\t\t,crrnt.FiscalYear\r\n\t\t\t,crrnt.EnergyType\r\n\t\t\t,crrnt.EnergyUnit\r\n\t\t\t,crrnt.UtilityCompany AS Utility\r\n\t\t\t,crrnt.OecFacilityNumber AS OECID\r\n\t\t\t,crrnt.CurrentAccountNumber AS Account_\t\t\t\r\n\t\t\t,crrnt.DeliveryTariffRate AS TariffClass\r\n\t\t\t,crrnt.FacilityName AS Facility_Name\r\n\t\t\t,crrnt.Address1 AS Facility_Address\r\n\t\t\t,crrnt.Borough\r\n\t\t\t,crrnt.AccountSeqid\r\n\t\t\t,crrnt.Zipcode\r\n\t\t\t,CASE crrnt.EnergyType WHEN 'GAS' THEN NULL ELSE crrnt.AccountDemandUsage END AS CY_DMD\r\n\t\t\t,crrnt.AccountEnergyUsage AS CY_ActualUsage\r\n\t\t\t,crrnt.RevisedBilledAmount\r\n\t\t\t,crrnt.BillingPeriodDays AS CY_BDs\r\n\t\t\t,CAST(crrnt.AccountEnergyUsage AS DECIMAL(18, 2))*30/CAST(crrnt.BillingPeriodDays AS DECIMAL(18, 2)) AS CY_Adj_30Day_Usage\r\n\t\t\t,crrnt.ActualOrEstimated AS CY_AE\r\n\t\t\t,crrnt.BaseHeatingDegreeDays AS CY_HDD\r\n\t\t\t,crrnt.BaseCoolingDegreeDays AS CY_CDD\r\n\t\t\t,CASE crrnt.EnergyType WHEN 'GAS' THEN NULL ELSE proir.AccountDemandUsage END AS PY_DMD\r\n\t\t\t,proir.AccountEnergyUsage AS PY_ActualUsage\r\n\t\t\t,proir.BillingPeriodDays AS PY_BDs\r\n\t\t\t,CAST(proir.AccountEnergyUsage AS DECIMAL(18, 2)) * 30/CAST(proir.BillingPeriodDays AS DECIMAL(18, 2)) AS PY_Adj_30Day_Usage\r\n\t\t\t,proir.ActualOrEstimated AS PY_AE\r\n\t\t\t,proir.BaseHeatingDegreeDays AS PY_HDD\r\n\t\t\t,proir.BaseCoolingDegreeDays AS PY_CDD\r\n\t\t\t,CASE WHEN proir.AccountEnergyUsage = 0 AND  crrnt.AccountEnergyUsage = 0 THEN 0 \r\n\t\t\t\tWHEN proir.AccountEnergyUsage = 0 AND  crrnt.AccountEnergyUsage <> 0 THEN 100 \r\n\t\t\t\tELSE (((CAST(crrnt.AccountEnergyUsage AS DECIMAL(18, 2))*30/CAST(crrnt.BillingPeriodDays AS DECIMAL(18, 2))) - (CAST(proir.AccountEnergyUsage AS DECIMAL(18, 2)) * 30/CAST(proir.BillingPeriodDays AS DECIMAL(18, 2))))*100/(CAST(proir.AccountEnergyUsage AS DECIMAL(18, 2)) * 30/CAST(proir.BillingPeriodDays AS DECIMAL(18, 2)))) END AS usageDeviation1\r\n\t\t\t,CASE WHEN proir.AccountDemandUsage = 0 AND  crrnt.AccountDemandUsage = 0 THEN 0 \r\n\t\t\t\tWHEN proir.AccountDemandUsage = 0 AND  crrnt.AccountDemandUsage <> 0 THEN 100 \r\n\t\t\t\tWHEN proir.AccountDemandUsage IS NULL THEN NULL \r\n\t\t\t\tELSE ((CONVERT(DECIMAL(18, 2), crrnt.AccountDemandUsage) - CONVERT(DECIMAL(18, 2), proir.AccountDemandUsage))*100/CONVERT(DECIMAL(18, 2), proir.AccountDemandUsage))END AS demandDeviation1\r\n\t\t\t,(avgrg.avgAccountDemandUsage) AS Y_AVG_DemandUsage\r\n\t\t\t,(avgrg.avgAccountEnergyUsage) AS Y_AVG_ActualUsage\r\n\t\t\t,avgrg.avgBillingPeriodDays AS Y_AVG_BDs\r\n\t\t\t,avgrg.avgAdjusted AS Y_AVG_AdjustedUsage\r\n\t\t\t,avgrg.AorE AS Y_AE\r\n\t\t\t,avgrg.avgHDD AS Y_AVG_HDD\r\n\t\t\t,avgrg.avgCDD AS Y_AVG_CDD\r\n\t\t\t,CASE avgrg.avgAdjusted WHEN 0 THEN 0 ELSE (((CAST(crrnt.AccountEnergyUsage AS DECIMAL(18, 2))*30/CAST(crrnt.BillingPeriodDays AS DECIMAL(18, 2))) - avgrg.avgAdjusted )*100/avgrg.avgAdjusted)END AS usageDeviation2\r\n\t\t\t,CASE avgrg.avgAccountDemandUsage WHEN 0 THEN 0 WHEN NULL THEN NULL ELSE ((CAST(crrnt.AccountDemandUsage AS DECIMAL(18, 2)) - avgrg.avgAccountDemandUsage)*100/avgrg.avgAccountDemandUsage)END AS demandDeviation2\r\n\t\t\t,CASE crrnt.UtilityCompany+crrnt.EnergyType WHEN 'NYPAELE' THEN '1' WHEN 'NGrid WestGAS' THEN '2'  WHEN 'Con EdisonGAS' THEN '3' WHEN 'Con EdisonSTM' THEN '4' ELSE '5' END AS sortorder\r\n\t\tFROM (SELECT DISTINCT utri.[Description] AS DeliveryTariffRate\r\n\t\t\t\t,alrdfcp.BillingPeriodDays\r\n\t\t\t\t,@PublishedBillingPeriod AS PublishedBillingPeriod\r\n\t\t\t\t,alrdfcp.FiscalYear\r\n\t\t\t\t,alrdfcp.FiscalYear AS CurrentFiscalYear\r\n\t\t\t\t,SUBSTRING(dbo.CreatePreviousPeriod(alrdfcp.FiscalYear + '01', 'Y'), 1, 4) AS PriorFiscalYear\r\n\t\t\t\t,alrdfcp.CurrentAccountNumber\r\n\t\t\t\t,alrdfcp.OriginalAccountNumber\r\n\t\t\t\t,alrdfcp.UniqueAccountSeqid AS AccountSeqid\r\n\t\t\t\t,alrdfcp.EnergyType\r\n\t\t\t\t,alrdfcp.UtilityCompany\r\n\t\t\t\t,f.OecFacilityNumber\r\n\t\t\t\t,f.FacilityName\r\n\t\t\t\t,f.Address1\r\n\t\t\t\t,f.Borough\t\t\t\t\r\n\t\t\t\t,f.Zipcode\r\n\t\t\t\t,alrdfcp.RevisedBilledAmount\r\n\t\t\t\t,alrdfcp.AccountDemandUsage\r\n\t\t\t\t,alrdfcp.AccountEnergyUsage\r\n\t\t\t\t,alrdfcp.ActualOrEstimated\r\n\t\t\t\t,ddb.BaseCoolingDegreeDays\r\n\t\t\t\t,ddb.BaseHeatingDegreeDays\r\n\t\t\t\t,utri.EnergyUnit\r\n\t\t\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS UA\r\n\t\t\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AgencyCodeOEC = UA.AgencyCodeOEC\r\n\t\t\t\tINNER JOIN Factors.DegreeDayBase AS ddb ON ddb.BillingPeriod = alrdfcp.BillingPeriod\r\n\t\t\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = alrdfcp.FacilitySeqid\r\n\t\t\t\tINNER JOIN Billing.UtilityTariffRateInformation AS utri ON utri.UtilityTariffRateInformationSeqid = alrdfcp.UtilityTariffRateInformationSeqid\r\n\t\t\tWHERE alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\tAND alrdfcp.BillingPeriod IN (@CurrentBillingPeriod) AND alrdfcp.BillingMonth = @MonthName AND alrdfcp.BillingPeriodDays <> 0) AS crrnt\r\n\t\t\tINNER JOIN (SELECT DISTINCT alrdfcp.DeliveryTariffRate\r\n\t\t\t\t\t\t\t,alrdfcp.BillingPeriodDays\r\n\t\t\t\t\t\t\t,@PublishedBillingPeriod AS PublishedBillingPeriod\r\n\t\t\t\t\t\t\t,alrdfcp.FiscalYear\r\n\t\t\t\t\t\t\t,alrdfcp.FiscalYear AS CurrentFiscalYear\r\n\t\t\t\t\t\t\t,SUBSTRING(dbo.CreatePreviousPeriod(alrdfcp.FiscalYear + '01', 'Y'), 1, 4) AS PriorFiscalYear\r\n\t\t\t\t\t\t\t,alrdfcp.CurrentAccountNumber\r\n\t\t\t\t\t\t\t,alrdfcp.OriginalAccountNumber\r\n\t\t\t\t\t\t\t,alrdfcp.AccountSeqid\r\n\t\t\t\t\t\t\t,alrdfcp.EnergyType\r\n\t\t\t\t\t\t\t,alrdfcp.UtilityCompany\r\n\t\t\t\t\t\t\t,f.OecFacilityNumber\r\n\t\t\t\t\t\t\t,f.FacilityName\r\n\t\t\t\t\t\t\t,f.Address1\r\n\t\t\t\t\t\t\t,f.Borough\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t,f.Zipcode\r\n\t\t\t\t\t\t\t,alrdfcp.AccountEnergyUsage\r\n\t\t\t\t\t\t\t,alrdfcp.AccountDemandUsage\r\n\t\t\t\t\t\t\t,alrdfcp.ActualOrEstimated\r\n\t\t\t\t\t\t\t,ddb.BaseCoolingDegreeDays\r\n\t\t\t\t\t\t\t,ddb.BaseHeatingDegreeDays\r\n\t\t\t\t\t\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS UA\r\n\t\t\t\t\t\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AgencyCodeOEC = UA.AgencyCodeOEC\r\n\t\t\t\t\t\t\tINNER JOIN Factors.DegreeDayBase AS ddb ON ddb.BillingPeriod = alrdfcp.BillingPeriod\r\n\t\t\t\t\t\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = alrdfcp.FacilitySeqid\r\n\t\t\t\t\t\tWHERE alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\t\t\t\tAND alrdfcp.BillingPeriod IN (@BillingPeriodOneYearAgo) AND alrdfcp.BillingMonth = @MonthName\r\n\t\t\t\t\t\t\tAND alrdfcp.BillingPeriodDays <> 0) AS proir ON crrnt.CurrentAccountNumber = proir.CurrentAccountNumber\r\n\t\t\t\tINNER JOIN (SELECT alrdfcp.CurrentAccountNumber\r\n\t\t\t\t\t\t\t\t,AVG(CAST(alrdfcp.AccountDemandUsage AS DECIMAL(18, 2))) AS avgAccountDemandUsage\r\n\t\t\t\t\t\t\t\t,AVG(CAST(alrdfcp.AccountEnergyUsage AS DECIMAL(18, 2))) AS avgAccountEnergyUsage\r\n\t\t\t\t\t\t\t\t,AVG(CAST(alrdfcp.BillingPeriodDays AS DECIMAL(18, 2))) AS avgBillingPeriodDays\r\n\t\t\t\t\t\t\t\t,AVG(CAST(alrdfcp.AccountEnergyUsage AS DECIMAL(18, 2)) * CAST(30 AS DECIMAL(18, 2))/CAST(alrdfcp.BillingPeriodDays AS DECIMAL(18, 2))) AS avgAdjusted\r\n\t\t\t\t\t\t\t\t,AVG(CAST(ddb.BaseCoolingDegreeDays AS DECIMAL(18, 2))) AS avgCDD\r\n\t\t\t\t\t\t\t\t,AVG(CAST(ddb.BaseHeatingDegreeDays AS DECIMAL(18, 2))) AS avgHDD\t\r\n\t\t\t\t\t\t\t\t,CASE (SUM( CASE alrdfcp.ActualOrEstimated WHEN 'ACT' THEN 0 ELSE 1 END )) WHEN '0' THEN 'ACT' ELSE 'EST' END AS AorE\r\n\t\t\t\t\t\tFROM Billing.uftn_TableGetAgencyChildrenByAgencyCodeOEC(@AgencyCodeOEC, @EmailAddress) AS UA\r\n\t\t\t\t\t\t\tINNER JOIN Published.TemporalAccountLevelRawDataForCurrentPeriod AS alrdfcp ON alrdfcp.AgencyCodeOEC = UA.AgencyCodeOEC\r\n\t\t\t\t\t\t\tINNER JOIN Billing.Facility AS f ON f.FacilitySeqid = alrdfcp.FacilitySeqid\r\n\t\t\t\t\t\t\tINNER JOIN Factors.DegreeDayBase AS ddb ON ddb.BillingPeriod = alrdfcp.BillingPeriod\r\n\t\t\t\t\t\tWHERE alrdfcp.EffectiveStartPeriod <= @PublishedBillingPeriod AND alrdfcp.EffectiveEndPeriod > @PublishedBillingPeriod\r\n\t\t\t\t\t\t\tAND alrdfcp.BillingPeriod IN (@BillingPeriodOneYearAgo, @BillingPeriodTwoYearsAgo, @BillingPeriodThreeYearsAgo)\r\n\t\t\t\t\t\t\tAND alrdfcp.BillingMonth = @MonthName AND alrdfcp.BillingPeriodDays <> 0 AND CAST(alrdfcp.BillingPeriodDays AS DECIMAL(18, 2)) <> 0\r\n\t\t\t\t\t\tGROUP BY alrdfcp.CurrentAccountNumber) AS avgrg  ON crrnt.CurrentAccountNumber = avgrg.CurrentAccountNumber\r\n\t\t\tWHERE crrnt.BillingPeriodDays <> 0 AND proir.BillingPeriodDays <> 0\t\t\t\t\r\n\t\t) AS R\r\n\tWHERE R.usageDeviation1 >= @MinDeviation OR R.demandDeviation1 >= @MinDemandDeviation\r\n\tORDER BY R.sortorder, R.CY_ActualUsage DESC;\r\nEND;"
        }
      ]
    }
  ]
}
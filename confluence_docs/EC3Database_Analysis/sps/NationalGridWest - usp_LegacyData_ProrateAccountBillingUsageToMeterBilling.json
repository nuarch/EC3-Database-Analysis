{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "NationalGridWest",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_LegacyData_ProrateAccountBillingUsageToMeterBilling",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_LegacyData_ProrateAccountBillingUsageToMeterBilling",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to distribute therms (a unit of heat energy) across multiple meters associated with a single account. It handles both active and cancellation records, depending on the input parameter. The procedure calculates the prorated therms for each meter based on the meter's CCF (hundred cubic feet) usage relative to the total CCF usage for the account during a specific billing period. The calculated therms are then updated back into the respective tables."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure involves multiple steps, including conditional logic, data aggregation, and updates based on calculated values. The complexity arises from the need to handle both active and cancellation records, perform calculations, and ensure data integrity through rounding adjustments."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@isCancelRecord BIT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This parameter determines whether the procedure should process active records ("
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") or cancellation records ("
                },
                {
                  "type": "text",
                  "text": "1",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "). It guides the selection of the source table and the target table for updates."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Table Declaration",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": A table variable "
                },
                {
                  "type": "text",
                  "text": "@t",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is declared to temporarily store meter data for processing. It includes fields for account and meter identifiers, usage data, and calculated therms."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Based on the "
                },
                {
                  "type": "text",
                  "text": "@isCancelRecord",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter, the procedure inserts data into "
                },
                {
                  "type": "text",
                  "text": "@t",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " from either "
                },
                {
                  "type": "text",
                  "text": "UploadLegacyKeyspanWestMeter",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " or "
                },
                {
                  "type": "text",
                  "text": "UploadLegacyKeyspanWestMeterCancellation",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ". It selects accounts with multiple meters for a given billing period."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Therms Calculation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "For each meter, the procedure calculates "
                        },
                        {
                          "type": "text",
                          "text": "calTherms",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " using the formula: "
                        },
                        {
                          "type": "text",
                          "text": "(CCF / Total CCF) * Total Therms",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If the total CCF for an account and billing period is zero, "
                        },
                        {
                          "type": "text",
                          "text": "calTherms",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is set to zero."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "The calculated therms are rounded to the nearest integer."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Rounding Adjustment",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": To address rounding discrepancies, the procedure adjusts the "
                },
                {
                  "type": "text",
                  "text": "calTherms",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for the meter with the highest CCF within each account and billing period to ensure the sum of "
                },
                {
                  "type": "text",
                  "text": "calTherms",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " matches the original total therms."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Update",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The calculated therms are updated back into the original tables ("
                },
                {
                  "type": "text",
                  "text": "UploadLegacyKeyspanWestMeter",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " or "
                },
                {
                  "type": "text",
                  "text": "UploadLegacyKeyspanWestMeterCancellation",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") based on the "
                },
                {
                  "type": "text",
                  "text": "@isCancelRecord",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " parameter."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Table Usage",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a table variable ("
                },
                {
                  "type": "text",
                  "text": "@t",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ") is efficient for small to moderate datasets but may not perform well with large datasets due to memory constraints."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Subqueries",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The repeated use of subqueries for calculating sums could impact performance, especially if the dataset is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Indexing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Ensuring that the source tables have appropriate indexes on "
                },
                {
                  "type": "text",
                  "text": "AccountNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "text": "BillingPeriodRevision",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "text": "MeterNumber",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can improve the performance of data retrieval and updates."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that the sum of "
                },
                {
                  "type": "text",
                  "text": "CCF",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is never zero unless explicitly handled. If this assumption is violated, it could lead to incorrect calculations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": If the procedure is executed concurrently for the same accounts, it could lead to race conditions or data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of a table variable may not scale well with very large datasets, potentially leading to memory pressure."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure lacks explicit error handling, which could result in unhandled exceptions or silent failures if unexpected data conditions occur."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "-- =============================================\n-- Author:\t\tDerek Ho\r\n-- Create date: <Create Date,,>\r\n-- Description:\tDistribute therms for multimeter account\r\n-- =============================================\r\nCREATE PROCEDURE [NationalGridWest].[usp_LegacyData_ProrateAccountBillingUsageToMeterBilling]\r\n\t@isCancelRecord BIT -- 1: yes, 0:no\r\nAS\r\nBEGIN\r\n\r\n-- create table for multi meter account\r\nDECLARE @t TABLE\r\n(\r\n\ttId INT IDENTITY(1,1),\r\n\tUploadLegacyKeyspanWestMeterSeqid INT,\r\n\tAccountNumber VARCHAR(15), \r\n\tMeterNumber VARCHAR(10), \r\n\tCCF int, \r\n\tTherms int, \r\n\tBillingPeriodRevision VARCHAR(6),\r\n\tcalTherms float\r\n) \r\n\r\n-- Get multi meter account\r\n-- data must be inserted in this order: account number, billing period, ccf and meterNumber. \r\nIF(@isCancelRecord = 0) \r\nBEGIN\r\n\tINSERT INTO @t (UploadLegacyKeyspanWestMeterSeqid, AccountNumber, MeterNumber, CCF, Therms, BillingPeriodRevision, calTherms)\r\n\tSELECT UploadLegacyKeyspanWestMeterSeqid, AccountNumber, MeterNumber, CCF, Therms, BillingPeriodRevision, 0\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeter\r\n\tWHERE AccountNumber IN\r\n\t(\r\n\t\tSELECT AccountNumber FROM\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeter\r\n\t\tGROUP BY AccountNumber, BillingPeriodRevision\r\n\t\tHAVING COUNT(meterNumber)>1\r\n\t) ORDER BY AccountNumber, BillingPeriodRevision, CCF, MeterNumber\r\nEND\r\nELSE\r\nBEGIN\r\n\tINSERT INTO @t (UploadLegacyKeyspanWestMeterSeqid, AccountNumber, MeterNumber, CCF, Therms, BillingPeriodRevision, calTherms)\r\n\tSELECT UploadLegacyKeyspanWestMeterCancellationSeqid, AccountNumber, MeterNumber, CCF, Therms, BillingPeriodRevision, 0\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeterCancellation\r\n\tWHERE AccountNumber IN\r\n\t(\r\n\t\tSELECT AccountNumber FROM\r\n\t\tNationalGridWest.UploadLegacyKeyspanWestMeterCancellation\r\n\t\tGROUP BY AccountNumber, BillingPeriodRevision\r\n\t\tHAVING COUNT(meterNumber)>1\r\n\t) ORDER BY AccountNumber, BillingPeriodRevision, CCF, MeterNumber\r\nEND\r\n\r\n\r\n\r\n--  calculated therm = total therm * ccf / total ccf for each account\r\nUPDATE t1\r\n\tSET t1.calTherms = \r\n\tCASE \r\n\t\tWHEN\r\n\t\t(\r\n\t\t\tSELECT SUM(CCF) \r\n\t\t\tFROM @t AS t2\r\n\t\t\tWHERE t1.AccountNumber = t2.AccountNumber \r\n\t\t\tAND t1.BillingPeriodRevision = t2.BillingPeriodRevision\r\n\t\t) = 0\r\n\t\tTHEN 0 -- if the sum(ccf) is 0, then the calTherm is also 0\r\n\t\telse \r\n\t\tROUND(\r\n\t\t\tCAST(t1.CCF AS FLOAT)\r\n\t\t\t/ \r\n\t\t\t(\r\n\t\t\t\tSELECT SUM(CCF) \r\n\t\t\t\tFROM @t AS t2\r\n\t\t\t\tWHERE t1.AccountNumber = t2.AccountNumber \r\n\t\t\t\tAND t1.BillingPeriodRevision = t2.BillingPeriodRevision\r\n\t\t\t)\r\n\t\t\t*\r\n\t\t\t(\r\n\t\t\t\tSELECT SUM(Therms) \r\n\t\t\t\tFROM @t AS t2\r\n\t\t\t\tWHERE t1.AccountNumber = t2.AccountNumber \r\n\t\t\t\tAND t1.BillingPeriodRevision = t2.BillingPeriodRevision\r\n\t\t\t) \r\n\t\t\t,\r\n\t\t\t0 -- round to int\r\n\t\t)\r\n\tEND -- end case\r\nFROM @t AS t1\r\n\r\n\r\n-- because numbers are rounded to int. The difference in the sum is added to the meter with the biggest ccf\r\nUPDATE t1\r\nSET calTherms = calTherms\r\n\t+ \r\n\t(\r\n\t\tSELECT (SUM(therms) - SUM(calTherms))\r\n\t\tFROM @t AS t2\r\n\t\tWHERE t1.AccountNumber = t2.AccountNumber\r\n\t\tAND t1.BillingPeriodRevision = t2.BillingPeriodRevision\r\n\t)\r\nFROM @t AS t1\r\nWHERE t1.tId =\r\n\t(\r\n\t\tSELECT MAX(t3.tId)\r\n\t\tFROM @t AS t3\r\n\t\tWHERE t1.AccountNumber = t3.AccountNumber\r\n\t\tAND t1.BillingPeriodRevision = t3.BillingPeriodRevision\r\n\t)\r\n\r\n\r\n\r\n-- update NationalGridWest.UploadLegacyKeyspanWestMeter with prorated therms\r\nIF(@isCancelRecord = 0) -- false\r\nBEGIN\r\n\tUPDATE Meter\r\n\tSET Meter.Therms = t.CalTherms \r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeter AS Meter\r\n\tINNER JOIN @t AS t\r\n\tON Meter.UploadLegacyKeyspanWestMeterSeqid = t.UploadLegacyKeyspanWestMeterSeqid \r\n\r\nEND\r\nELSE\r\nBEGIN\r\n\tUPDATE MeterCancellation\r\n\tSET MeterCancellation.Therms = t.calTherms\r\n\tFROM NationalGridWest.UploadLegacyKeyspanWestMeterCancellation AS MeterCancellation\r\n\tINNER JOIN @t AS t\r\n\tON MeterCancellation.UploadLegacyKeyspanWestMeterCancellationSeqid = t.UploadLegacyKeyspanWestMeterSeqid \r\n\r\nend\r\n\r\nEND -- end procedure"
        }
      ]
    }
  ]
}
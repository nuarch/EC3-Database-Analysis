{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Budget",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Create_ActualExpenditureData_2_AddActualData",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Create_ActualExpenditureData_2_AddActualData",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to process actual expenditure data for budget reports. It aggregates and inserts various types of expenditure data into the "
        },
        {
          "type": "text",
          "text": "BudgetVersusActualExpendituresByAgencyAndServiceClassification",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " table. The procedure handles different expenditure types, including total expenditures, tenant charges, Encore charges, refunds, and retroactive chargebacks. It also performs validation checks to ensure data integrity."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The procedure is complex due to its extensive use of conditional logic, multiple data sources, and numerous insert operations. It involves intricate calculations and validations, making it challenging to maintain and understand without a deep understanding of the underlying business logic and data structures."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@BillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period for which the actual expenditure data is being processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod BillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Represents the billing period that is published and used for reporting purposes."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scenario Type Identification",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by determining the current budget and projection scenario type IDs from the "
                },
                {
                  "type": "text",
                  "text": "Syn_BudgetDB_Budget_ScenarioType",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " table."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Expenditure Data Processing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Total Expenditure",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Inserts total expenditure data for the specified billing period, excluding certain account groups temporarily."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Validation",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Validates that the total expenditure matches the sum of individual components."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Tenant Charges",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Adds tenant charge data to the total expenditure."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Encore Charges",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Inserts Encore allocation charges."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Refunds and Retroactive Chargebacks",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Processes refunds and retroactive chargebacks, adding them to the total expenditure."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Other Expenditure Types",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ": Inserts data for other expenditure types, including tenant charges, NYPA energy, demand, and reactive power."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Validation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Performs multiple validation checks to ensure that the total expenditure matches the sum of its components and that all accounts have necessary tariff codes and agency information."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Special Cases",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Handles specific cases for certain billing periods, inserting predefined values for refunds."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Volume",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure processes large volumes of data, which can impact performance. Indexing on frequently queried columns can help improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Complex Queries",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of multiple subqueries and joins can lead to performance bottlenecks. Optimizing these queries and ensuring efficient execution plans is crucial."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Transaction Management",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not explicitly manage transactions, which could lead to partial updates in case of failure. Implementing transaction control can ensure data consistency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies heavily on the integrity of the underlying data. Any discrepancies in the source data can lead to incorrect calculations and validations."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Hardcoded Values",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of hardcoded values for special cases can lead to maintenance challenges and potential errors if not updated correctly."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure uses "
                },
                {
                  "type": "text",
                  "text": "RAISERROR",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " for error handling, which may not provide sufficient context for debugging. Implementing more detailed error logging could improve troubleshooting."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure does not account for concurrent executions, which could lead to race conditions or data contention issues."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As data volume grows, the procedure may face scalability challenges. Regular performance reviews and optimizations are necessary to ensure continued efficiency."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "--************************************************************************************************************\n\t\t--* Name:\t\t\t\tusp_Create_ActualExpenditureData_2_AddActualData\r\n\t\t--*\r\n\t\t--* Description:\t\tthis SP processes actual data for Budget Reports processing.  \r\n\t\t--*\t\t\t\t\t\tANY UPDATE MADE HERE SHOULD ALSO BE DONE IN THE the view where the same calculation exist as in this SP.\r\n\t\t--*\t\t\t\t\t\tsee uvw_TenantChargeActualExpenditureAllocationByBillingPeriod\r\n\t\t--*\r\n\t\t--* AUTHOR:\t\t\t\tDerek Ho\r\n\t\t--* Created On:   \r\n\t\t--************************************************************************************************************\r\n\t\t--* Date\t\tTech\tDescription of Change\r\n\t\t--* ----------\t---\t\t-------------------------------------------------------------\r\n\t\t--* 2015-09-18\t ZD\t\tUpdated to get tenant charge scenerio type id from IsCurrentProjection\r\n\t\t--*\t\t\t\t\t\tThis change is requested by Stuart Barth\r\n\t\t--* 2016-01-13  MB-ZD\tChanged the synonym name from [Budget].[CurrentFiscalYearBudget] to dbo.Syn_BudgetDB_Scenarios_BaseBudgetStagingByAgency\r\n\t\t--*\t\t\t\t\t\tand [Budget].[TenantCharges] also with dbo.Syn_BudgetDB_Scenarios_TenantCharges\r\n\t\t--* 2016-06-03  MB\t\tAdded exception for 2.1 Insert record for \"Total\" expenditure\r\n\t\t--*\t\t\t\t\t\tDEMBudgetGroup 63 was missing from 201603 and 201604 so Stuart asked us to exclude it from the totals so it doens't fail the validation \r\n\t\t--*\t\t\t\t\t\tthis needs to be handled progrmatically in the future and we need to build safe guards against it \r\n\t\t--************************************************************************************************************\r\n\r\n\r\nCREATE PROCEDURE [Budget].[usp_Create_ActualExpenditureData_2_AddActualData]\r\n\t\r\n\t@BillingPeriod BillingPeriod,\r\n\t@PublishedBillingPeriod BillingPeriod\r\nAS\r\nBEGIN\r\n\r\n\tDECLARE @ScenarioTypeSeqId int\r\n\t\r\n\tSET @ScenarioTypeSeqId = ( SELECT   MAX(ScenarioTypeSeqid)\r\n                                   FROM  dbo.Syn_BudgetDB_Budget_ScenarioType\r\n                                   WHERE    IsCurrentBudget = 'Y'\r\n                                 )\r\n\r\n\t\r\n\tDECLARE @ProjectionScenarioTypeSeqId INT\r\n\tSET @ProjectionScenarioTypeSeqId = ( SELECT   MAX(ScenarioTypeSeqid)\r\n                                   FROM  dbo.Syn_BudgetDB_Budget_ScenarioType\r\n                                   WHERE    IsCurrentProjection = 'Y'\r\n                                 )\r\n\t/*\r\n\t2.1 total expenditure\r\n\t2.2 other expenditure type\r\n\t2.3 validation\r\n\t2.4 calculate for parent(s) in the expenditure type tree\r\n\t\r\n\t*/\r\n\tDECLARE @TotalExpenditureSeqID INT = 19\r\n\t\r\n\tDECLARE @ActualExpenditurePeriod BillingPeriod\r\n\tDECLARE @FiscalBeginning BillingPeriod\r\n\tSET @ActualExpenditurePeriod = @BillingPeriod\r\n\tSET @FiscalBeginning =  dbo.CreateFiscalYearPeriod(@BillingPeriod, 'S')\r\n\t\r\n\t-- 2.0 check if all accounts have tariff code\r\n\tIF(EXISTS(SELECT UtilityTariffRateInformationSeqid FROM Billing.Account\r\nWHERE UtilityTariffRateInformationSeqid IS NULL))\r\n\tBEGIN\t\t\r\n\t\tRAISERROR('There are accounts that do not have service classification code', 12, 1)\r\n\tEND\r\n\t\r\n\t\r\n\r\n\r\n\t-- 2.1\tInsert record for \"Total\" expenditure\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    \r\n\t\t  @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  @TotalExpenditureSeqID, -- total\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(actualData.ManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountEnergyUsage) AS currentMonthUsage,\t\t  \r\n\t\t  SUM(actualData.PaidAdjustmentAmount) AS currentMonthPaidAdjustmentAmount, \t  \r\n\t\t  'Y',\r\n\t\t  null\t  \r\n\tFROM EIAP.uvw_AgencyBillingPeriodActualExpenditureForAllEnergy AS actualData\r\n\tWHERE BillingPeriod = @ActualExpenditurePeriod\r\n-- TEMPRORARY for 201603 and 201604\r\nAND actualData.CurrentInvoiceAccountGroup <> 49 --AND actualData.BillingPeriod = '201607'\r\n--AND actualData.BudgetGroupDEM <> '63' AND actualData.BillingPeriod = '201603'\r\n\tGROUP BY AgencyCodeOEC\r\n\tORDER BY AgencyCodeOEC\r\n\r\n\t-- validate total \r\n\tIF(\r\n\t(\r\n\t\tSELECT SUM(ManualPaymentOverrideAmount) ManualPaymentOverrideAmount\r\n\t\tFROM billing.AccountBilling\r\n\t\tINNER JOIN billing.Account\r\n\t\t ON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\t\t INNER JOIN Billing.UtilityTariffRateInformation AS utri ON utri.UtilityTariffRateInformationSeqid = Account.UtilityTariffRateInformationSeqid\r\n\t\tWHERE BillingPeriodRevision = @ActualExpenditurePeriod AND billing.account.AccountStatus <> 'EP'\r\n\t\tand Billing.AccountBilling.BillingPeriod = Billing.AccountBilling.LastPeriodModified\r\nand Billing.AccountBilling.BillingPeriodRevision = Billing.AccountBilling.LastPeriodModified\r\n-- TEMPRORARY for 201603 and 201604\r\nAND CurrentInvoiceAccountGroup <> 49 --AND BillingPeriod = '201607'\r\n--AND utri.BudgetGroupDEM<>'63' AND BillingPeriod= '201603'\r\n\t) \r\n\t<>\r\n\t(\r\n\t\tSELECT SUM(actualData.CurrentMonthActualDollars) FROM budget.\t\tBudgetVersusActualExpendituresByAgencyAndServiceClassification AS actualData\r\n\tWHERE BillingPeriod = @ActualExpenditurePeriod)\r\n\t)\r\n\tBEGIN\r\n\t\tRAISERROR('Validate total $ amount fail', 12, 1)\r\n\tEND\r\n\t\r\n\tIF(EXISTS(SELECT * FROM Billing.Account AS a\r\nWHERE AgencyAccount IS NULL))\r\n\tBEGIN\r\n\t\tRAISERROR('Agency is missing for certain account record', 12, 1)\r\n\r\n\tEND\r\n\r\n\tIF(EXISTS(SELECT ManualPaymentOverrideAmount, BudgetGroupDEM,  ManualPaymentOverrideAmount - (EnergyDollars + DemandDollars + FacilityPointDollars + PaidAdjustmentAmount + ReactivePowerDollars), *\r\n\tFROM\r\n\t[Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS actualData\r\n\tWHERE ABS(ManualPaymentOverrideAmount - (EnergyDollars + DemandDollars + FacilityPointDollars + PaidAdjustmentAmount +  ReactivePowerDollars) ) > 0.5\r\n\tAND BillingPeriod = @ActualExpenditurePeriod))\r\n\tBEGIN\r\n\t\tRAISERROR('validation NYPA view fail', 12, 1)\r\n\tend\r\n\r\n\t --add tenant charge to agency total\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t( PublishedBillingPeriod ,\r\n\t  BillingPeriod ,\r\n\t  BudgetVersusExpenditureTypeSeqID,\r\n\t  AgencyCodeOEC,\r\n\t  CurrentMonthActualDollars,\r\n\t  CurrentMonthActualUsage,\r\n\t  IsSourceOfFundingGroupData,\r\n\t  EnergyDeliveryType\r\n\t)\r\n\tSELECT  \r\n\t\t\t@PublishedBillingPeriod ,\r\n\t\t\t  @ActualExpenditurePeriod ,\r\n\t\t\t  @TotalExpenditureSeqID, -- total\r\n\t\t\t  OECAgencyCode ,\r\n\t\t\t  \r\n\t\t\tSUM(actualData.tncManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t\tSUM(actualData.tncAccountEnergyUsage) AS currentMonthUsage,\t\t  \r\n\t\t\t'Y',\r\n\t\t\tnull \r\n\tFROM Budget.uvw_TenantChargeActualExpenditureAllocationByBillingPeriod AS actualData\r\n\twhere actualData.BillingPeriodRevision = @ActualExpenditurePeriod \r\n\tGROUP BY OECAgencyCode \r\n\t\r\n\t-- encore total\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  @TotalExpenditureSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.EncoreAllocationCharge) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\t\t  \r\n\t\t  'Y',\r\n\t\t  null\t\t\r\n\tFROM Budget.uvw_EncoreActualExpenditureAllocationByBillingPeriod AS actualData\r\n\twhere actualData.BillingPeriod = @ActualExpenditurePeriod \r\n\tGROUP BY actualData.AgencyCodeOEC\r\n\r\n\r\n\r\n\t-- data ignored in published data will be included in the budget report as paid adjustment. This was added to handle 10 m refund.\r\n\t--INSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t--\t\t( PublishedBillingPeriod ,\r\n\t--\t\t  BillingPeriod ,\r\n\t--\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t--\t\t  AgencyCodeOEC,\r\n\t--\t\t  CurrentMonthActualDollars,\r\n\t--\t\t  CurrentMonthActualUsage,\r\n\t--\t\t  CurrentMonthPaidAdjustment,\r\n\t--\t\t  IsSourceOfFundingGroupData,\r\n\t--\t\t  EnergyDeliveryType\r\n\t--\t\t)\r\n\t--SELECT\r\n --     @PublishedBillingPeriod ,\r\n\t--  @ActualExpenditurePeriod ,\r\n\t--  @TotalExpenditureSeqID, -- total\r\n\t--  AgencyCodeOEC ,\r\n\t--  SUM(billing.AccountBilling.ManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t--  0 AS currentMonthUsage,\r\n\t--  SUM(billing.AccountBilling.ManualPaymentOverrideAmount) AS currentMonthPaidAdjustmentAmount, \t  \r\n\t--  'Y',\r\n\t--  null\t  \r\n\t--FROM billing.AccountBilling\r\n\t--INNER JOIN billing.Account\r\n\t--ON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\t--INNER JOIN Billing.AgencyDivision \r\n\t--ON Billing.Account.AgencyAccount = Billing.AgencyDivision.AgencyDivisionSeqid\r\n\t--WHERE AccountBillingStatus = 'EP'\r\n\t--and Billing.AccountBilling.BillingPeriodRevision = @ActualExpenditurePeriod \r\n\t--GROUP BY AgencyCodeOEC\r\n\t--ORDER BY AgencyCodeOEC\r\n\t\r\n\t-- add refund to the total\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  @TotalExpenditureSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.AgencyRefundCheckAmount) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\t\t  \r\n\t\t  'Y',\r\n\t\t  null\t\t\r\n\tFROM CrisNationalGridWest.uvw_AgencyRefundCheckTotalAmount AS actualData\r\n\twhere actualData.BillingPeriod = @ActualExpenditurePeriod \r\n\tGROUP BY actualData.AgencyCodeOEC\r\n\t\r\n\t-- add retroactive charge back\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    \r\n\t\t  @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  @TotalExpenditureSeqID,\r\n\t\t  ad.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.RetroactiveChargeBackAmount) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\t\t  \r\n\t\t  'Y',\r\n\t\t  null\t\t\r\n\tFROM [Billing].[AccountBillingRetroactiveChargeBack] AS actualData\r\n\tINNER JOIN Billing.AgencyDivision AS ad\r\n\tON actualData.AgencyDivisionSeqID = ad.agencydivisionSeqID\r\n\twhere actualData.PublishedBillingPeriod = @ActualExpenditurePeriod \r\n\tGROUP BY ad.AgencyCodeOEC\r\n\t\r\n\t-- 2.2 \tInsert record other expenditure type\r\n\r\n\t-- a. All except electricity, Encore and tenant charge\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(actualData.ManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountEnergyUsage) AS currentMonthUsage,\r\n\t\t   SUM(actualData.PaidAdjustmentAmount) AS currentMonthPaidAdjustmentAmount, \t  \r\n\t\t  'Y',\r\n\t\t  actualData.EnergyDeliveryType\t\t   \r\n\tFROM EIAP.uvw_AgencyBillingPeriodActualExpenditureForAllEnergy AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.EnergyDeliveryType = map.EnergyDeliveryType AND actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (15, 16, 17, 30) and actualData.BillingPeriodRevision = @ActualExpenditurePeriod \r\n\tGROUP BY AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, actualData.EnergyDeliveryType\t \r\n\tORDER BY AgencyCodeOEC\r\n\t\r\n\t\r\n\t\r\n\t-- b.1 tenant charge \r\n\t\r\n\t-- b.1 tenant charge except NYPA electricity. NYPA tenant charge for electricity will need to get split into usage and demand\t\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\t\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  OECAgencyCode ,\r\n\t\t  SUM(actualData.tncManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.tncAccountEnergyUsage) AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  actualData.EnergyDeliveryType\t\t\r\n\tFROM Budget.uvw_TenantChargeActualExpenditureAllocationByBillingPeriod AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.EnergyDeliveryType = map.EnergyDeliveryType AND actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tINNER JOIN budget.BudgetVersusExpenditureType expType\r\n\tON map.BudgetVersusExpenditureTypeSeqID = expType.BudgetVersusExpenditureTypeSeqid\t\t\r\n\tWHERE DataType = 'energy' AND expType.BudgetVersusExpenditureTypeSeqid NOT IN (1, 4, 9)\r\n\tand actualData.BillingPeriodRevision = @ActualExpenditurePeriod \r\n\tGROUP BY map.BudgetVersusExpenditureTypeSeqID, actualData.OECAgencyCode, actualData.EnergyDeliveryType\r\n\r\n\t\r\n\t\r\n\t\r\n\tDECLARE @NYPATenant TABLE\r\n\t(\r\n\t\tAgencyCodeOEC AgencyCodeOEC,\r\n\t\tBillingPeriodRevision BillingPeriod,\r\n\t\tEnergyDollar MONEY,\r\n\t\tDemandDollar MONEY,\r\n\t\tPaidAdjustment MONEY,\r\n\t\tReactivePowerDollar MONEY,\r\n\t\tEnergyUsage FLOAT,\r\n\t\tDemandUsage FLOAT,\r\n\t\tBudgetGroupDEM int\r\n\t)\r\n\t\r\n\r\n---- Calculation here is also in uvw_TenantChargeActualExpenditureAllocationByBillingPeriod view\r\n---- Any change done here in this calculation should be reflected in the view too\r\n\tINSERT INTO @NYPATenant\r\n\t        ( AgencyCodeOEC ,\r\n\t          BillingPeriodRevision ,\r\n\t          EnergyDollar ,\r\n\t          DemandDollar ,\r\n\t          PaidAdjustment ,\r\n\t          ReactivePowerDollar ,\r\n\t          EnergyUsage ,\r\n\t          DemandUsage,\r\n\t          BudgetGroupDEM\r\n\t        )\r\n\tSELECT \r\n\t\ttenantPercentage.OECAgencyCode,\r\n\t\tBillingPeriodRevision,\r\n\t\tEnergyDollars * tenantPercentage.TenantChargePercentage,\r\n        DemandDollars * tenantPercentage.TenantChargePercentage,\r\n        PaidAdjustmentAmount * tenantPercentage.TenantChargePercentage,\r\n        ReactivePowerDollars * tenantPercentage.TenantChargePercentage,\r\n        AccountEnergyUsage * tenantPercentage.TenantChargePercentage,\r\n        AccountDemandUsage * tenantPercentage.TenantChargePercentage,\r\n        DCASData.BudgetGroupDEM \r\n FROM [Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS DCASData\r\n        INNER JOIN dbo.Syn_BudgetDB_Scenarios_TenantCharges tenantPercentage ON dcasdata.AgencyCodeOEC = tenantPercentage.DCASAgencyCode\r\n WHERE  BillingPeriod = @ActualExpenditurePeriod\r\n        and tenantPercentage.ScenarioTypeSeqid =  @ProjectionScenarioTypeSeqId\r\n\t\r\n\t-- tenant NYPA energy\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  CurrentMonthPaidAdjustment,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT \r\n\t\t  @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.EnergyDollar) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.EnergyUsage) AS currentMonthUsage,\r\n\t\t  0 AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n    FROM \r\n\t@NYPATenant AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (1, 4, 9)  -- nypa energy \r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, map.EnergyDeliveryType\r\n\t\r\n\t\r\n\t-- tenant NYPA demand\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  CurrentMonthPaidAdjustment,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.DemandDollar) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.DemandUsage) AS currentMonthUsage,\r\n\t\t  0 AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n  FROM \r\n\t@NYPATenant AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (2, 5, 10)  -- nypa demand \r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, map.EnergyDeliveryType\r\n\t\r\n\t\r\n\t-- tenant reactive power\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  CurrentMonthPaidAdjustment,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.ReactivePowerDollar) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\r\n\t\t  0 AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n\tFROM \r\n\t@NYPATenant AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (3,6, 11)  -- reactive power\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, map.EnergyDeliveryType\r\n\t\r\n\t-- tenant paid adjustment\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  CurrentMonthPaidAdjustment,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(PaidAdjustment) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\r\n\t\t  SUM(PaidAdjustment) AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n  FROM \r\n\t@NYPATenant AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (27,28, 29)  -- paid adjustment\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, map.EnergyDeliveryType\r\n\t\r\n\t-- add tenant paid adjustment amount to total\r\n\t\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\t\t  \r\n\t\t  CurrentMonthPaidAdjustment,\r\n\t\t  IsSourceOfFundingGroupData\r\n\r\n\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  19,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  0 AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\r\n\t\t  SUM(PaidAdjustment) AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y'\r\n\tFROM \r\n\t@NYPATenant AS actualData\r\n\tGROUP BY actualData.AgencyCodeOEC\r\n\t\r\n\r\n\tPRINT 'Encore ....'\r\n\t-- c. encore \r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  18,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.EncoreAllocationCharge) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n\tFROM Budget.uvw_EncoreActualExpenditureAllocationByBillingPeriod AS actualData\r\n\twhere BillingPeriod = @ActualExpenditurePeriod\r\n\tGROUP BY actualData.AgencyCodeOEC, EnergyDeliveryType\r\n\t\r\n\t\r\n\t-- d. electricty energy\r\n\t\r\n\t-- nypa electricity\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.EnergyDollars) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountEnergyUsage) AS currentMonthUsage,\r\n\t\t  0 AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n\tFROM \r\n    [Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (1, 4, 9)  -- nypa energy \r\n\tand actualData.BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, map.EnergyDeliveryType\r\n\t\r\n\r\n\t-- NYPA adjustment\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.PaidAdjustmentAmount) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\r\n\t\t  SUM(actualData.PaidAdjustmentAmount) AS currentMonthPaidAdjustmentAmount, \t\t  \r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n  FROM [Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (27, 28,29)  -- nypa adjustment \r\n\tand actualData.BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, map.EnergyDeliveryType\r\n\r\n\t-- non-nypa elec energy\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(actualData.ManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountEnergyUsage) AS currentMonthUsage,\r\n\t\t  SUM(actualData.PaidAdjustmentAmount) AS currentMonthPaidAdjustmentAmount, \t  \r\n\t\t  'Y',\r\n\t\t  actualData.EnergyDeliveryType\t\t   \r\n\tFROM EIAP.uvw_AgencyBillingPeriodActualExpenditureForAllEnergy AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.EnergyDeliveryType = map.EnergyDeliveryType AND actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (23, 25) -- nonnypa elec energy \r\n\tand BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, actualData.EnergyDeliveryType\t \r\n\tORDER BY AgencyCodeOEC\r\n\t\r\n\t-- solar energy\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(actualData.ManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountEnergyUsage) AS currentMonthUsage,\r\n\t\t  SUM(actualData.PaidAdjustmentAmount) AS currentMonthPaidAdjustmentAmount, \t  \r\n\t\t  'Y',\r\n\t\t  actualData.EnergyDeliveryType\t\t   \r\n\tFROM EIAP.uvw_AgencyBillingPeriodActualExpenditureForAllEnergy AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.EnergyDeliveryType = map.EnergyDeliveryType AND actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (34) -- solar energy --used to be 33 -- updated zd \r\n\tand BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, actualData.EnergyDeliveryType\t \r\n\tORDER BY AgencyCodeOEC\r\n\t\t\t\r\n\t-- e. electricity demand\r\n\t\r\n\t-- nypa electricity demand\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.DemandDollars) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountDemandUsage) AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\r\n  FROM [Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (2, 5, 10) -- demand \r\n\tand BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, EnergyDeliveryType\r\n\t\r\n\t-- non-nypa elec demand\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(0) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountDemandUsage) AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  actualData.EnergyDeliveryType\t\t   \r\n\tFROM EIAP.uvw_AgencyBillingPeriodActualExpenditureForAllEnergy AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.EnergyDeliveryType = map.EnergyDeliveryType AND actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (24, 26) -- nonnypa elec energy demand\r\n\tand actualData.BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, actualData.EnergyDeliveryType\t \r\n\tORDER BY AgencyCodeOEC\r\n\t\r\n\t-- solar demand\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(0) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountDemandUsage) AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  actualData.EnergyDeliveryType\t\t   \r\n\tFROM EIAP.uvw_AgencyBillingPeriodActualExpenditureForAllEnergy AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.EnergyDeliveryType = map.EnergyDeliveryType AND actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID = 35 -- solar demand --used to be 34 updated zd\r\n\tand actualData.BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, actualData.EnergyDeliveryType\t \r\n\tORDER BY AgencyCodeOEC\r\n\r\n\t-- refund\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  31,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.AgencyRefundCheckAmount) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\t\t  \r\n\t\t  'Y',\r\n\t\t  null\t\t\r\n\tFROM CrisNationalGridWest.uvw_AgencyRefundCheckTotalAmount AS actualData\r\n\twhere actualData.BillingPeriod = @ActualExpenditurePeriod \r\n\tGROUP BY actualData.AgencyCodeOEC\r\n\r\n\r\n\t-- retroactive charge back\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\tSELECT    \r\n\t\t  @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  32,\r\n\t\t  ad.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.RetroactiveChargeBackAmount) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\t\t  \r\n\t\t  'Y',\r\n\t\t  null\t\t\r\n\tFROM [Billing].[AccountBillingRetroactiveChargeBack] AS actualData\r\n\tINNER JOIN Billing.AgencyDivision AS ad\r\n\tON actualData.AgencyDivisionSeqID = ad.agencydivisionSeqID\r\n\twhere actualData.PublishedBillingPeriod = @ActualExpenditurePeriod \r\n\tGROUP BY ad.AgencyCodeOEC\r\n\t\r\n\t-- g. NYPA electricity reactive power\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\t\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.ReactivePowerDollars) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.AccountReactivePowerEnergy) AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n  FROM [Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (3, 6, 11) -- reactive power\r\n\tand  BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, EnergyDeliveryType\r\n\t\r\n\t\r\n\t-- NYPA facility point\r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t( PublishedBillingPeriod ,\r\n\t\t  BillingPeriod ,\r\n\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t  AgencyCodeOEC,\r\n\t\t  CurrentMonthActualDollars,\r\n\t\t  CurrentMonthActualUsage,\r\n\t\t  IsSourceOfFundingGroupData,\r\n\t\t  EnergyDeliveryType\r\n\t\t)\r\n\t\tSELECT \r\n\t\t@PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t   map.BudgetVersusExpenditureTypeSeqID,\r\n\t\t  actualData.AgencyCodeOEC ,\r\n\t\t  SUM(actualData.FacilityPointDollars) AS currentMonthExpenditure, \r\n\t\t  SUM(actualData.DeliveryStreetLightingFacilityPoints) AS currentMonthUsage,\r\n\t\t  'Y',\r\n\t\t  EnergyDeliveryType\t\t\r\n\tFROM [Budget].[uvw_NypaAgencyDivisionLevelBillingComponentAnalysis] AS actualData\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON actualData.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tWHERE map.BudgetVersusExpenditureTypeSeqID IN (12) -- facility point \r\n\tand BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY actualData.AgencyCodeOEC, map.BudgetVersusExpenditureTypeSeqID, EnergyDeliveryType\r\n\t\r\n\r\n\t-- g. record ignored in \r\n\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  CurrentMonthPaidAdjustment,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\t\tSELECT\r\n\t\t  @PublishedBillingPeriod ,\r\n\t\t  @ActualExpenditurePeriod ,\r\n\t\t  expType.BudgetVersusExpenditureTypeSeqid, -- total\r\n\t\t  AgencyCodeOEC ,\r\n\t\t  SUM(billing.AccountBilling.ManualPaymentOverrideAmount) AS currentMonthExpenditure, \r\n\t\t  0 AS currentMonthUsage,\r\n\t\t  SUM(billing.AccountBilling.ManualPaymentOverrideAmount) AS currentMonthPaidAdjustmentAmount, \t  \r\n\t\t  'Y',\r\n\t\t  map.EnergyDeliveryType\r\n\tFROM billing.AccountBilling\r\n\tINNER JOIN billing.Account\r\n\tON Billing.AccountBilling.AccountSeqid = Billing.Account.AccountSeqid\r\n\tINNER JOIN Billing.AgencyDivision \r\n\tON Billing.Account.AgencyAccount = Billing.AgencyDivision.AgencyDivisionSeqid\r\n\tINNER JOIN billing.UtilityTariffRateInformation\r\n\tON billing.account.UtilityTariffRateInformationSeqid = Billing.UtilityTariffRateInformation.UtilityTariffRateInformationSeqid\r\n\tINNER JOIN budget.BudgetVersusExpenditureTypeMapBudgetGroup AS map\r\n\tON billing.UtilityTariffRateInformation.BudgetGroupDEM = map.BudgetGroupDEMSeqID\r\n\tINNER JOIN budget.BudgetVersusExpenditureType AS expType\r\n\tON map.BudgetVersusExpenditureTypeSeqID = expType.BudgetVersusExpenditureTypeSeqid\r\n\tWHERE AccountBillingStatus = 'EP' AND expType.DataType = 'adjustment'\r\n\tand BillingPeriodRevision = @ActualExpenditurePeriod\r\n\tGROUP BY AgencyCodeOEC, EXPType.BudgetVersusExpenditureTypeSeqid, map.EnergyDeliveryType\r\n\tORDER BY AgencyCodeOEC\r\n\r\n\r\n\r\n\t/**/\r\n\r\n\t --handle special case refund for \r\n\t -- USE FOR THE SPESIFIC PERIOD AND COMMENT OUT AFTER GENERATING THE REPORTS\r\n\tif(@PublishedBillingPeriod  = '201510')\r\n\tBEGIN\r\n\t\t-- THIS BLOCK INSERTS THE INDIVIDUAL ITEMS NEXT BLOCK INSERTS THE AMOUNT FOR TOTALS\r\n\t\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\t\t\tvalues\r\n\t\t\t( \r\n\t\t\t\t@PublishedBillingPeriod ,\r\n\t\t\t\t  @ActualExpenditurePeriod ,\r\n\t\t\t\t  31,\r\n\t\t\t\t  '040001' ,\r\n\t\t\t\t  '-29339.92', \r\n\t\t\t\t  0 ,\t\t  \r\n\t\t\t\t  'Y',\r\n\t\t\t\t  null\t\t\r\n\t\t\t)\r\n\t\t\r\n\r\n\t\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\t( PublishedBillingPeriod ,\r\n\t\t\t  BillingPeriod ,\r\n\t\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t\t\t  AgencyCodeOEC,\r\n\t\t\t  CurrentMonthActualDollars,\r\n\t\t\t  CurrentMonthActualUsage,\r\n\t\t\t  IsSourceOfFundingGroupData,\r\n\t\t\t  EnergyDeliveryType\r\n\t\t\t)\r\n\t\t\tvalues\r\n\t\t\t( \r\n\t\t\t\t@PublishedBillingPeriod ,\r\n\t\t\t\t  @ActualExpenditurePeriod ,\r\n\t\t\t\t  @TotalExpenditureSeqID,\r\n\t\t\t\t  '040001' ,\r\n\t\t\t\t  '-29339.92', \r\n\t\t\t\t  0 ,\t\t  \r\n\t\t\t\t  'Y',\r\n\t\t\t\t  null\t\t\r\n\t\t\t)\r\n\r\n\tEND\r\n\r\n\r\n\r\n\r\n\t/**/\r\n\r\n\t-- handle special case refund for \r\n\t--if(@PublishedBillingPeriod  = '201402')\r\n\t--begin\r\n\t--\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t--\t\t( PublishedBillingPeriod ,\r\n\t--\t\t  BillingPeriod ,\r\n\t--\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t--\t\t  AgencyCodeOEC,\r\n\t--\t\t  CurrentMonthActualDollars,\r\n\t--\t\t  CurrentMonthActualUsage,\r\n\t--\t\t  IsSourceOfFundingGroupData,\r\n\t--\t\t  EnergyDeliveryType\r\n\t--\t\t)\r\n\t--\t\tvalues\r\n\t--\t\t( \r\n\t--\t\t\t@PublishedBillingPeriod ,\r\n\t--\t\t\t  @ActualExpenditurePeriod ,\r\n\t--\t\t\t  31,\r\n\t--\t\t\t  '040001' ,\r\n\t--\t\t\t  '-1274392', \r\n\t--\t\t\t  0 ,\t\t  \r\n\t--\t\t\t  'Y',\r\n\t--\t\t\t  null\t\t\r\n\t--\t\t)\r\n\t\t\r\n\r\n\t--\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t--\t\t( PublishedBillingPeriod ,\r\n\t--\t\t  BillingPeriod ,\r\n\t--\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t--\t\t  AgencyCodeOEC,\r\n\t--\t\t  CurrentMonthActualDollars,\r\n\t--\t\t  CurrentMonthActualUsage,\r\n\t--\t\t  IsSourceOfFundingGroupData,\r\n\t--\t\t  EnergyDeliveryType\r\n\t--\t\t)\r\n\t--\t\tvalues\r\n\t--\t\t( \r\n\t--\t\t\t@PublishedBillingPeriod ,\r\n\t--\t\t\t  @ActualExpenditurePeriod ,\r\n\t--\t\t\t  @TotalExpenditureSeqID,\r\n\t--\t\t\t  '040001' ,\r\n\t--\t\t\t  '-1274392', \r\n\t--\t\t\t  0 ,\t\t  \r\n\t--\t\t\t  'Y',\r\n\t--\t\t\t  null\t\t\r\n\t--\t\t)\r\n\r\n\t--\t\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t--\t\t( PublishedBillingPeriod ,\r\n\t--\t\t  BillingPeriod ,\r\n\t--\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t--\t\t  AgencyCodeOEC,\r\n\t--\t\t  CurrentMonthActualDollars,\r\n\t--\t\t  CurrentMonthActualUsage,\r\n\t--\t\t  IsSourceOfFundingGroupData,\r\n\t--\t\t  EnergyDeliveryType\r\n\t--\t\t)\r\n\t--\t\tvalues\r\n\t--\t\t( \r\n\t--\t\t\t@PublishedBillingPeriod ,\r\n\t--\t\t\t  @ActualExpenditurePeriod ,\r\n\t--\t\t\t  31,\r\n\t--\t\t\t  '856001' ,\r\n\t--\t\t\t  '-1209070', \r\n\t--\t\t\t  0,\t\t  \r\n\t--\t\t\t  'Y',\r\n\t--\t\t\t  null\t\t\r\n\t--\t\t)\r\n\t\t\r\n\r\n\t--\tINSERT INTO budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t--\t\t( PublishedBillingPeriod ,\r\n\t--\t\t  BillingPeriod ,\r\n\t--\t\t  BudgetVersusExpenditureTypeSeqID,\r\n\t--\t\t  AgencyCodeOEC,\r\n\t--\t\t  CurrentMonthActualDollars,\r\n\t--\t\t  CurrentMonthActualUsage,\r\n\t--\t\t  IsSourceOfFundingGroupData,\r\n\t--\t\t  EnergyDeliveryType\r\n\t--\t\t)\r\n\t--\t\tvalues\r\n\t--\t\t( \r\n\t--\t\t\t@PublishedBillingPeriod ,\r\n\t--\t\t\t  @ActualExpenditurePeriod ,\r\n\t--\t\t\t  @TotalExpenditureSeqID,\r\n\t--\t\t\t  '856001' ,\r\n\t--\t\t\t  '-1209070', \r\n\t--\t\t\t  0,\t\t  \r\n\t--\t\t\t  'Y',\r\n\t--\t\t\t  null\t\t\r\n\t--\t\t)\r\n\r\n\t--END\r\n  \r\n    \r\n\r\n\t-- 2.3 validation\r\n\tIF(EXISTS(\r\n\t\tSELECT dataValidation.totalSum, dataValidation.otherExpSum, ABS(dataValidation.totalSum - dataValidation.otherExpSum) AS discrepancy, AgencyCodeOEC \r\n\t\tFROM\r\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\tSUM(CASE WHEN BudgetVersusExpenditureTypeSeqID = 19 THEN CurrentMonthActualDollars ELSE 0 end) totalSum, \r\n\t\t\tAgencyCodeOEC, \r\n\t\t\tSUM(CASE WHEN BudgetVersusExpenditureTypeSeqID <> 19 AND BudgetVersusExpenditureTypeSeqID <> 8 AND BudgetVersusExpenditureTypeSeqID <> 20 AND BudgetVersusExpenditureTypeSeqID <> 14 then CurrentMonthActualDollars ELSE 0 end) otherExpSum\r\n\r\n\t\t\tFROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\tWHERE BillingPeriod = @billingPeriod AND PublishedBillingPeriod = @publishedBillingPeriod\r\n\t\t\tGROUP BY AgencyCodeOEC\r\n\t\t) dataValidation\r\n\t\tWHERE ABS(totalSum - otherExpSum) > 0.4\r\n\t))\r\n\tbegin\r\n\t\tRAISERROR('Actual data validation failed', 12, 1)\r\n\tEND\r\n\t\r\n\tIF(EXISTS(\r\n\t\tSELECT dataValidation.totalSum, dataValidation.otherExpSum, ABS(dataValidation.totalSum - dataValidation.otherExpSum) AS discrepancy, AgencyCodeOEC \r\n\t\tFROM\r\n\t\t(\r\n\t\t\tSELECT \r\n\t\t\tSUM(CASE WHEN BudgetVersusExpenditureTypeSeqID = 19 THEN CurrentMonthPaidAdjustment ELSE 0 end) totalSum, \r\n\t\t\tAgencyCodeOEC, \r\n\t\t\tSUM(CASE WHEN BudgetVersusExpenditureTypeSeqID <> 19 AND BudgetVersusExpenditureTypeSeqID <> 8 AND BudgetVersusExpenditureTypeSeqID <> 20 AND BudgetVersusExpenditureTypeSeqID <> 14 then CurrentMonthPaidAdjustment ELSE 0 end) otherExpSum\r\n\r\n\t\t\tFROM budget.BudgetVersusActualExpendituresByAgencyAndServiceClassification\r\n\t\t\tWHERE BillingPeriod = @billingPeriod AND PublishedBillingPeriod = @publishedBillingPeriod\r\n\t\t\tGROUP BY AgencyCodeOEC\r\n\t\t) dataValidation\r\n\t\tWHERE ABS(totalSum - otherExpSum) > 0.4\r\n\t))\r\n\tbegin\r\n\t\tRAISERROR('Actual data paid adjustment validation failed', 12, 1)\r\n\tEND\r\n\r\nEND"
        }
      ]
    }
  ]
}
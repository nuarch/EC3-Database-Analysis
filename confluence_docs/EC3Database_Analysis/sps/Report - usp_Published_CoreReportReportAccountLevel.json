{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Report",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_Published_CoreReportReportAccountLevel",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Medium",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "usp_Published_CoreReportReportAccountLevel",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to generate a report at the account level for a specified billing period and agency code. It logs the usage of the report and retrieves data from a table that contains fiscal year pivot data related to agency facilities and account dollars and usage. The procedure supports filtering by agency code and checks the effective period of the data against the specified billing period."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: Medium"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity level is considered medium due to the following factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves conditional logic to handle different scenarios based on the input parameters."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It interacts with multiple database objects, including a logging procedure and a user-defined function."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It performs a join operation and applies filters based on dynamic conditions."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@EmailAddress AS VARCHAR(256)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The email address of the user requesting the report. It is used to log the report usage and to filter data based on agency access."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The billing period for which the report is generated. It is used to filter the data based on the effective start and end periods."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC AS VARCHAR(6)",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The agency code used to filter the data. If the value is '*', it indicates that data for all agencies should be retrieved."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by setting "
                },
                {
                  "type": "text",
                  "text": "NOCOUNT ON",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to prevent the message indicating the number of rows affected by a SQL statement. It sets the transaction isolation level to "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to allow dirty reads, which can improve performance by reducing locking overhead."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logging",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It logs the usage of the report by calling the "
                },
                {
                  "type": "text",
                  "text": "usp_AddReportUsageLog",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " procedure, passing relevant parameters such as the report name, stored procedure name, and the email address of the requester."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Agency Code Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": It determines the agency code pattern for filtering. If "
                },
                {
                  "type": "text",
                  "text": "@AgencyCodeOEC",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is not '*', it appends a '%' wildcard to allow for partial matches."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Retrieval",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If "
                        },
                        {
                          "type": "text",
                          "text": "@AgencyCodeOEC",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is not '*', it retrieves data from the "
                        },
                        {
                          "type": "text",
                          "text": "Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " table, joining it with the result of the "
                        },
                        {
                          "type": "text",
                          "text": "uftn_TableGetAgencyByEmailAddressAgencyAccessAction",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " function to filter based on agency access."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "If "
                        },
                        {
                          "type": "text",
                          "text": "@AgencyCodeOEC",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " is '*', it retrieves data without filtering by agency code, but still checks the effective period against the billing period."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The data is filtered to include only records where the "
                },
                {
                  "type": "text",
                  "text": "EffectiveStartPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is less than or equal to the "
                },
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " and the "
                },
                {
                  "type": "text",
                  "text": "EffectiveEndPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " is greater than the "
                },
                {
                  "type": "text",
                  "text": "@PublishedBillingPeriod",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED Isolation Level",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This can improve performance by reducing locking overhead but may lead to reading uncommitted or dirty data."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Wildcard Filtering",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Using a wildcard ('%') in the "
                },
                {
                  "type": "text",
                  "text": "LIKE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clause can lead to full table scans, which may impact performance if the dataset is large."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Join Operation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The join with the user-defined function result can be costly if the function returns a large dataset or if it is not optimized."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Dirty Reads",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of "
                },
                {
                  "type": "text",
                  "text": "READ UNCOMMITTED",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " can lead to reading uncommitted data, which might not be suitable for all business scenarios."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Wildcard Performance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of '%' in the "
                },
                {
                  "type": "text",
                  "text": "LIKE",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " clause can degrade performance, especially if the dataset is large and not indexed appropriately."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Function Performance",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The performance of the "
                },
                {
                  "type": "text",
                  "text": "uftn_TableGetAgencyByEmailAddressAgencyAccessAction",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " function can impact the overall performance of the procedure if it is not optimized."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Security",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure relies on email-based access control, which may not be sufficient for all security requirements. Proper validation and sanitization of input parameters are crucial to prevent SQL injection attacks."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Report].[usp_Published_CoreReportReportAccountLevel]\n(\r\n\t@EmailAddress AS VARCHAR(256)\r\n\t,@PublishedBillingPeriod AS VARCHAR(6)\r\n\t,@AgencyCodeOEC AS VARCHAR(6)\r\n)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @spname AS VARCHAR(100) = OBJECT_NAME(@@PROCID)\r\n\tEXEC [Audit].usp_AddReportUsageLog\r\n\t@ReportName\t\t\t\t\t= @spname,\r\n    @StoredProcName\t\t\t\t= @spname,\r\n    @RequestedBy\t\t\t\t= @EmailAddress,\r\n    @prmPublishedBillingPeriod\t= @PublishedBillingPeriod,\r\n    @prmBillingPeriod\t\t\t= NULL,\r\n    @prmAgency_ies\t\t\t\t= @AgencyCodeOEC,\r\n    @prmFacilityNumber_s\t\t= NULL,\r\n    @prmStartingBillingPeriod\t= NULL,\r\n    @prmEndingBillingPeriod\t\t= NULL;\r\n\r\n\tDECLARE @AgencyCode AS VARCHAR(7);\r\n\r\n\tSELECT @AgencyCode = case when @AgencyCodeOEC<>'*' then @AgencyCodeOEC+'%' else @AgencyCodeOEC END;\r\n\r\n\tIF (@AgencyCodeOEC<>'*')\r\n\tBEGIN\r\n\t\tSELECT @PublishedBillingPeriod AS PublishedBillingPeriod\r\n\t\t\t,T.AgencyCodeOEC\r\n\t\t\t,T.Seqid AS FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsageSeqid\r\n\t\t\t,T.BillToAgencyCode\r\n\t\t\t,T.AgencyName\r\n\t\t\t,T.OecFacilityNumber\r\n\t\t\t,T.Address1\r\n\t\t\t,T.Borough\r\n\t\t\t,T.[Block]\r\n\t\t\t,T.LotNumber\r\n\t\t\t,T.CityPlanningBIN\r\n\t\t\t,T.JulyRevisedBilledDollars\r\n\t\t\t,T.AugustRevisedBilledDollars\r\n\t\t\t,T.SeptemberRevisedBilledDollars\r\n\t\t\t,T.OctoberRevisedBilledDollars\r\n\t\t\t,T.NovemberRevisedBilledDollars\r\n\t\t\t,T.DecemberRevisedBilledDollars\r\n\t\t\t,T.JanuaryRevisedBilledDollars\r\n\t\t\t,T.FebruaryRevisedBilledDollars\r\n\t\t\t,T.MarchRevisedBilledDollars\r\n\t\t\t,T.AprilRevisedBilledDollars\r\n\t\t\t,T.MayRevisedBilledDollars\r\n\t\t\t,T.JuneRevisedBilledDollars\r\n\t\t\t,T.FiscalYearToDateRevisedBilledDollars\r\n\t\t\t,T.JulyRevisedEnergy\r\n\t\t\t,T.AugustRevisedEnergy\r\n\t\t\t,T.SeptemberRevisedEnergy\r\n\t\t\t,T.OctoberRevisedEnergy\r\n\t\t\t,T.NovemberRevisedEnergy\r\n\t\t\t,T.DecemberRevisedEnergy\r\n\t\t\t,T.JanuaryRevisedEnergy\r\n\t\t\t,T.FebruaryRevisedEnergy\r\n\t\t\t,T.MarchRevisedEnergy\r\n\t\t\t,T.AprilRevisedEnergy\r\n\t\t\t,T.MayRevisedEnergy\r\n\t\t\t,T.JuneRevisedEnergy\r\n\t\t\t,T.FiscalYearToDateRevisedEnergy\r\n\t\t\t,T.JulyRevisedDemand\r\n\t\t\t,T.AugustRevisedDemand\r\n\t\t\t,T.SeptemberRevisedDemand\r\n\t\t\t,T.OctoberRevisedDemand\r\n\t\t\t,T.NovemberRevisedDemand\r\n\t\t\t,T.DecemberRevisedDemand\r\n\t\t\t,T.JanuaryRevisedDemand\r\n\t\t\t,T.FebruaryRevisedDemand\r\n\t\t\t,T.MarchRevisedDemand\r\n\t\t\t,T.AprilRevisedDemand\r\n\t\t\t,T.MayRevisedDemand\r\n\t\t\t,T.JuneRevisedDemand\r\n\t\t\t,T.FiscalYearToDateRevisedDemand\r\n\t\t\t,T.LastUpdate\r\n\t\t\t,T.CurrentFiscalYear\r\n\t\t\t,T.PriorFiscalYear\r\n\t\t\t,T.FiscalYear\r\n\t\t\t,T.EnergyType\r\n\t\tFROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS T\r\n\t\t\tINNER JOIN dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS A ON T.AgencyCodeOEC = A.AgencyCodeOEC\t\t\r\n\t\tWHERE T.AgencyCodeOEC LIKE @AgencyCode\r\n\t\t\tAND (T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod);\r\n\tEND;\r\n\tELSE\r\n\tBEGIN\r\n\t\tSELECT @PublishedBillingPeriod AS PublishedBillingPeriod\r\n\t\t\t,T.AgencyCodeOEC\r\n\t\t\t,T.Seqid AS FiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsageSeqid\r\n\t\t\t,T.BillToAgencyCode\r\n\t\t\t,T.AgencyName\r\n\t\t\t,T.OecFacilityNumber\r\n\t\t\t,T.Address1\r\n\t\t\t,T.Borough\r\n\t\t\t,T.[Block]\r\n\t\t\t,T.LotNumber\r\n\t\t\t,T.CityPlanningBIN\r\n\t\t\t,T.JulyRevisedBilledDollars\r\n\t\t\t,T.AugustRevisedBilledDollars\r\n\t\t\t,T.SeptemberRevisedBilledDollars\r\n\t\t\t,T.OctoberRevisedBilledDollars\r\n\t\t\t,T.NovemberRevisedBilledDollars\r\n\t\t\t,T.DecemberRevisedBilledDollars\r\n\t\t\t,T.JanuaryRevisedBilledDollars\r\n\t\t\t,T.FebruaryRevisedBilledDollars\r\n\t\t\t,T.MarchRevisedBilledDollars\r\n\t\t\t,T.AprilRevisedBilledDollars\r\n\t\t\t,T.MayRevisedBilledDollars\r\n\t\t\t,T.JuneRevisedBilledDollars\r\n\t\t\t,T.FiscalYearToDateRevisedBilledDollars\r\n\t\t\t,T.JulyRevisedEnergy\r\n\t\t\t,T.AugustRevisedEnergy\r\n\t\t\t,T.SeptemberRevisedEnergy\r\n\t\t\t,T.OctoberRevisedEnergy\r\n\t\t\t,T.NovemberRevisedEnergy\r\n\t\t\t,T.DecemberRevisedEnergy\r\n\t\t\t,T.JanuaryRevisedEnergy\r\n\t\t\t,T.FebruaryRevisedEnergy\r\n\t\t\t,T.MarchRevisedEnergy\r\n\t\t\t,T.AprilRevisedEnergy\r\n\t\t\t,T.MayRevisedEnergy\r\n\t\t\t,T.JuneRevisedEnergy\r\n\t\t\t,T.FiscalYearToDateRevisedEnergy\r\n\t\t\t,T.JulyRevisedDemand\r\n\t\t\t,T.AugustRevisedDemand\r\n\t\t\t,T.SeptemberRevisedDemand\r\n\t\t\t,T.OctoberRevisedDemand\r\n\t\t\t,T.NovemberRevisedDemand\r\n\t\t\t,T.DecemberRevisedDemand\r\n\t\t\t,T.JanuaryRevisedDemand\r\n\t\t\t,T.FebruaryRevisedDemand\r\n\t\t\t,T.MarchRevisedDemand\r\n\t\t\t,T.AprilRevisedDemand\r\n\t\t\t,T.MayRevisedDemand\r\n\t\t\t,T.JuneRevisedDemand\r\n\t\t\t,T.FiscalYearToDateRevisedDemand\r\n\t\t\t,T.LastUpdate\r\n\t\t\t,T.CurrentFiscalYear\r\n\t\t\t,T.PriorFiscalYear\r\n\t\t\t,T.FiscalYear\r\n\t\t\t,T.EnergyType\r\n\t\tFROM Published.TemporalFiscalYearPivotByAgencyFacilityAndAccountDollarsAndUsage AS T\r\n\t\t\tINNER JOIN dbo.uftn_TableGetAgencyByEmailAddressAgencyAccessAction(@EmailAddress) AS A ON T.AgencyCodeOEC = A.AgencyCodeOEC\r\n\t\tWHERE T.EffectiveStartPeriod <= @PublishedBillingPeriod AND T.EffectiveEndPeriod > @PublishedBillingPeriod;\r\n\tEND;\r\nEND;"
        }
      ]
    }
  ]
}
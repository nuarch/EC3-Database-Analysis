{
  "version": 1,
  "type": "doc",
  "content": [
    {
      "type": "bodiedExtension",
      "attrs": {
        "extensionType": "com.atlassian.confluence.macro.core",
        "extensionKey": "details",
        "parameters": {
          "macroParams": {
            "hidden": {
              "value": "true"
            }
          },
          "macroMetadata": {
            "schemaVersion": {
              "value": "1"
            },
            "title": "Page Properties"
          }
        }
      },
      "content": [
        {
          "type": "table",
          "attrs": {
            "isNumberColumnEnabled": false,
            "layout": "default"
          },
          "content": [
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Schema Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Nypa",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Stored Procedure Name",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "usp_PreProcessingVerifyAccountsAndMetersExistence",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "tableRow",
              "content": [
                {
                  "type": "tableHeader",
                  "attrs": {
                    "colspan": 1,
                    "background": "#f4f5f7",
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "Complexity Level",
                          "type": "text",
                          "marks": [
                            {
                              "type": "strong"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "tableCell",
                  "attrs": {
                    "colspan": 1,
                    "rowspan": 1
                  },
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "text": "High",
                          "type": "text"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "1. Overview"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The stored procedure "
        },
        {
          "type": "text",
          "text": "[Nypa].[usp_PreProcessingVerifyAccountsAndMetersExistence]",
          "marks": [
            {
              "type": "code"
            }
          ]
        },
        {
          "type": "text",
          "text": " is designed to verify the existence of accounts and meters within a utility billing system. It processes data related to accounts and meters, checks for discrepancies, and updates relevant tables to reflect the current state of account and meter exchanges. The procedure involves inserting, deleting, and updating records across multiple tables, and it handles specific business rules related to account and meter exchanges."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "2. Complexity Level: High"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The complexity of this stored procedure is high due to several factors:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It involves multiple table operations, including inserts, deletes, and updates."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It uses temporary tables and joins across several tables."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "It includes business logic that handles specific conditions and exceptions."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "The procedure interacts with a significant number of columns and tables, indicating a complex data structure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "3. Input Parameters"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "@Status INT OUTPUT",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": This is an output parameter used to indicate the success or failure of the procedure. A value of "
                },
                {
                  "type": "text",
                  "text": "0",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " indicates success, while a non-zero value indicates failure."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "4. Business Logic and Workflow"
        }
      ]
    },
    {
      "type": "orderedList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Initialization",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure begins by declaring a variable "
                },
                {
                  "type": "text",
                  "text": "@UploadNYPAReconcileExchangeProcessTransactionVerificationCount",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": " to track the number of rows processed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Preparation",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": "
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "It truncates two tables: "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileAccountExistence",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileAccountMeterExistence",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": ", clearing them for fresh data insertion."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Insertion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts data from "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAAccountBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileAccountExistence",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts data from "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAMeterBilling",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " into "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileAccountMeterExistence",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Cleansing",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Deletes records from "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileAccountExistence",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileAccountMeterExistence",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " based on specific join conditions with "
                        },
                        {
                          "type": "text",
                          "text": "Billing.AccountExchangeMeterTrack",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " and "
                        },
                        {
                          "type": "text",
                          "text": "Common.ExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Handles specific business rules, such as removing accounts with exchange code 'AX' and utility company ID 7."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Creates a temporary table "
                        },
                        {
                          "type": "text",
                          "text": "#ReviewExchangeProcessTransactionVerification",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to store data from "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.uvw_ExchangeProcessTransactionVerification",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Deletes correctable fatal errors from this temporary table."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Final Updates",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Inserts remaining records from the temporary table into "
                        },
                        {
                          "type": "text",
                          "text": "Nypa.UploadNYPAReconcileExchangeProcessTransactionVerification",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": "."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Updates "
                        },
                        {
                          "type": "text",
                          "text": "Common.ExchangeData",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to mark records as processed based on the severity of errors."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Output",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ":"
                }
              ]
            },
            {
              "type": "bulletList",
              "content": [
                {
                  "type": "listItem",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Sets "
                        },
                        {
                          "type": "text",
                          "text": "@Status",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to "
                        },
                        {
                          "type": "text",
                          "text": "0",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "text": " to indicate successful execution unless errors are detected."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "5. Performance Considerations"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Truncation and Deletion",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Frequent truncation and deletion operations can be resource-intensive and may lock tables, affecting performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Joins and Indexes",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple joins, which can be optimized with appropriate indexing strategies to improve performance."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Temporary Tables",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The use of temporary tables can impact memory usage and should be monitored for performance implications."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "6. Potential Issues or Risks"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Data Integrity",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure involves multiple delete operations, which could lead to data loss if not carefully managed."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Concurrency",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": Truncating tables and performing bulk operations can lead to locking issues, affecting concurrent access to the database."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Error Handling",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": The procedure assumes that certain errors are correctable, which may not always be the case, leading to potential data inconsistencies."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalability",
                  "marks": [
                    {
                      "type": "strong"
                    }
                  ]
                },
                {
                  "type": "text",
                  "text": ": As the volume of data grows, the performance of this procedure may degrade, necessitating further optimization or refactoring."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "7. Stored Procedure Definition"
        }
      ]
    },
    {
      "type": "codeBlock",
      "attrs": {
        "language": "sql"
      },
      "content": [
        {
          "type": "text",
          "text": "CREATE PROCEDURE [Nypa].[usp_PreProcessingVerifyAccountsAndMetersExistence] @Status INT  OUTPUT\n   \r\n AS --**************************************************************************************\r\n--* Name:         \r\n--*\r\n--* Description:  Verify accounts and meters existence\r\n--*\t\t\t\t  \r\n--*               \r\n--* Database:     OEC\r\n--*\r\n--* Return:\t        0  Success\r\n--*                 1 Failures\r\n--*\r\n--* AUTHOR:      Peter Heller\r\n--* Created On:   04/10/2009\r\n--**************************************************************************************\r\n--* Date         Tech Description of Change\r\n--* ---------- ----  -------------------------------------------------------------\r\n--* 04/10/2009 PAH  First Version\r\n--* 10/31/2013 PAH  Remove account \"AX\" where the current account number is being reused from one\r\n--*\t\t\t\t\tthat was previously turned off\r\n--* 2016-10-06\tzd\tintegrated new exchange processing\r\n--* 2018-12-13  VY  Modified for UniqueAccountSeqID\r\n--***************************************************************************************\r\n--\r\n-- This proceedure will insert NYPA missing accounts and meters as a 46 exchange.\r\n--\r\ndeclare @UploadNYPAReconcileExchangeProcessTransactionVerificationCount int\r\n--\r\nTruncate table Nypa.UploadNYPAReconcileAccountExistence\r\nTruncate table Nypa.UploadNYPAReconcileAccountMeterExistence\r\n--\r\n--DBCC CHECKIDENT ('Nypa.UploadNYPAReconcileAccountExistence', RESEED,1)\r\n--\r\n--\r\nINSERT INTO Nypa.UploadNYPAReconcileAccountExistence\r\n\t\t(UtilityCompanyId, AccountBillingGroup, CurrentAccountBillingInvoiceContractBudgetLine, AccountUtilityCompanySeqid, CurrentAccountNumber, \r\n\t\tOriginalAccountNumber, PreviousBillingPeriod, BillingPeriod, RevisedBillingPeriod, NextBillingPeriod, AgencyAccount, AccountSeqid, \r\n\t\tUniqueAccountSeqID /*added on 12/13/2018 */, AccountStatus, \r\n\t\tAccountPreviousStatus, AccountStatusCodePeriod, ExhangeCode, ExhangeFileSeqid, BillCreationDate, ExchangeEffectiveTransactionDate, \r\n\t\tBillingAction, FromDate, ToDate, BillingAmount, CancelBillingAmount, NetBillingAmount, PenaltyBillingAmount, PenaltyPaidAmount, \r\n\t\tCancelPenaltyBillingAmount, CancelPenaltyPaidAmount, AccountAmount, FuelAdjustment, CommodityChargeAmount, DeliveryChargeAmount, \r\n\t\tDiscountAmount, DDDAmount, DDDRate, DeliveryEnergyAmount, DeliveryEnergyOffPeakAmount, DeliveryEnergyShoulderAmount, \r\n\t\tDeliveryDemandAmount, DeliveryDemandOffPeakAmount, DeliveryDemandShoulderAmount, DeliveryFacilityPoints, CommodityConsumption, \r\n\t\tCommodityConsumptionOffPeak, CommodityConsumptionShoulder, CommodityDemand, CommodityDemandOffPeak, CommodityDemandShoulder, \r\n\t\tCommodityFacilityPoints, GRTAmount, GRTRate, EnergyCostAdjustment, EnergyCostAdjustmentPercentage, CancelAmount, \r\n\t\tCancelFuelAdjustmentAmount, CancelCommodityChargeAmount, CancelDeliveryCharge, CancelDiscountedAmount, CancelDDDAmount, \r\n\t\tCancelDDDRate, CancelDeliveryConsumption, CancelDeliveryConsumptionOffPeak, CancelDeliveryConsumptionShoulder, CancelDeliveryDemand, \r\n\t\tCancelDeliveryDemandOffPeak, CancelDeliveryDemandShoulder, CancelDeliveryStreetLightingFacilityPoints, CancelCommodityConsumption, \r\n\t\tCancelCommodityConsumptionOffPeak, CancelCommodityConsumptionShoulder, CancelCommodityDemand, CancelCommodityDemandOffPeak, \r\n\t\tCancelCommodityDemandShoulder, CancelCommodityStreetLightingFacilityPoints, CancelGrossReceiptTax, CancelGRTAmount, CancelGRTRate, \r\n\t\tCancelEnergyCostAdjustment, CancelEnergyCostAdjustmentPercentage, ProductionAndDeliveryTariff, BillingPeriodDays, InitialPostingDate, \r\n\t\tAccountDemandUsage, AccountEnergyUsage, CancelAccountDemandUsage, CancelAccountEnergyUsage, IsSeasonalAccount, IsTimeOfDayAccount, \r\n\t\tIsMinimumBilledCharged, MinimumBilledEnergyDollars, MinimumBilledDemandDollars, MaxBilledDemandPeriod, MaxBilledDemandUsage, \r\n\t\tCancelIsMinimumBilledCharged, CancelMinimumBilledEnergyDollars, CancelMinimumBilledDemandDollars, CancelMaxBilledDemandPeriod, \r\n\t\tCancelMaxBilledDemandUsage, IsSpannedPeriodBill, IsRowProcessed, DeliveryFacilityPointsAmount, CancelDeliveryFacilityPointsAmount, \r\n\t\tAuthenticatedUserID, DateAdded, LastUpdate)\r\nSELECT \r\n\t\tUtilityCompanyId, AccountBillingGroup, CurrentAccountBillingInvoiceContractBudgetLine, AccountUtilityCompanySeqid, CurrentAccountNumber, \r\n\t\tOriginalAccountNumber, PreviousBillingPeriod, BillingPeriod, RevisedBillingPeriod, NextBillingPeriod, AgencyAccount, AccountSeqid, \r\n\t\tUniqueAccountSeqID /*added on 12/13/2018 */, AccountStatus, \r\n\t\tAccountPreviousStatus, AccountStatusCodePeriod, ExhangeCode, ExhangeFileSeqid, BillCreationDate, ExchangeEffectiveTransactionDate, \r\n\t\tBillingAction, FromDate, ToDate, BillingAmount, CancelBillingAmount, NetBillingAmount, PenaltyBillingAmount, PenaltyPaidAmount, \r\n\t\tCancelPenaltyBillingAmount, CancelPenaltyPaidAmount, AccountAmount, FuelAdjustment, CommodityChargeAmount, DeliveryChargeAmount, \r\n\t\tDiscountAmount, DDDAmount, DDDRate, DeliveryEnergyAmount, DeliveryEnergyOffPeakAmount, DeliveryEnergyShoulderAmount, \r\n\t\tDeliveryDemandAmount, DeliveryDemandOffPeakAmount, DeliveryDemandShoulderAmount, DeliveryFacilityPoints, CommodityConsumption, \r\n\t\tCommodityConsumptionOffPeak, CommodityConsumptionShoulder, CommodityDemand, CommodityDemandOffPeak, CommodityDemandShoulder, \r\n\t\tCommodityFacilityPoints, GRTAmount, GRTRate, EnergyCostAdjustment, EnergyCostAdjustmentPercentage, CancelAmount, \r\n\t\tCancelFuelAdjustmentAmount, CancelCommodityChargeAmount, CancelDeliveryCharge, CancelDiscountedAmount, CancelDDDAmount, \r\n\t\tCancelDDDRate, CancelDeliveryConsumption, CancelDeliveryConsumptionOffPeak, CancelDeliveryConsumptionShoulder, CancelDeliveryDemand, \r\n\t\tCancelDeliveryDemandOffPeak, CancelDeliveryDemandShoulder, CancelDeliveryStreetLightingFacilityPoints, CancelCommodityConsumption, \r\n\t\tCancelCommodityConsumptionOffPeak, CancelCommodityConsumptionShoulder, CancelCommodityDemand, CancelCommodityDemandOffPeak, \r\n\t\tCancelCommodityDemandShoulder, CancelCommodityStreetLightingFacilityPoints, CancelGrossReceiptTax, CancelGRTAmount, CancelGRTRate, \r\n\t\tCancelEnergyCostAdjustment, CancelEnergyCostAdjustmentPercentage, ProductionAndDeliveryTariff, BillingPeriodDays, InitialPostingDate, \r\n\t\tAccountDemandUsage, AccountEnergyUsage, CancelAccountDemandUsage, CancelAccountEnergyUsage, IsSeasonalAccount, IsTimeOfDayAccount, \r\n\t\tIsMinimumBilledCharged, MinimumBilledEnergyDollars, MinimumBilledDemandDollars, MaxBilledDemandPeriod, MaxBilledDemandUsage, \r\n\t\tCancelIsMinimumBilledCharged, CancelMinimumBilledEnergyDollars, CancelMinimumBilledDemandDollars, CancelMaxBilledDemandPeriod, \r\n\t\tCancelMaxBilledDemandUsage, IsSpannedPeriodBill, IsRowProcessed, DeliveryFacilityPointsAmount, CancelDeliveryFacilityPointsAmount, \r\n\t\tAuthenticatedUserID, DateAdded, LastUpdate\r\nFROM Nypa.UploadNYPAAccountBilling\r\n\r\nDELETE \r\nFROM\tNypa.UploadNYPAReconcileAccountExistence\r\nFROM \tNypa.UploadNYPAReconcileAccountExistence INNER JOIN\r\n\t\tBilling.AccountExchangeMeterTrack ON \r\n\t\tNypa.UploadNYPAReconcileAccountExistence.CurrentAccountNumber = Billing.AccountExchangeMeterTrack.OriginalAccountNumber\r\n\t\t\r\nDELETE \r\nFROM\tNypa.UploadNYPAReconcileAccountExistence\r\nFROM \tNypa.UploadNYPAReconcileAccountExistence INNER JOIN\r\n\t\tCommon.ExchangeData ON \r\n\t\tNypa.UploadNYPAReconcileAccountExistence.CurrentAccountNumber = Common.ExchangeData.CurrentAccountNumber and\r\n\t\tCommon.ExchangeData.ExchangeCode <> '45'\r\n\t\tAND UtilityCompanySeqid = 7\r\n\r\nDELETE \r\nFROM\tNypa.UploadNYPAReconcileAccountExistence\r\nFROM \tNypa.UploadNYPAReconcileAccountExistence INNER JOIN\r\n\t\tCommon.ExchangeData ON \r\n\t\tNypa.UploadNYPAReconcileAccountExistence.CurrentAccountNumber = Common.ExchangeData.OriginalAccountNumber and\r\n\t\tCommon.ExchangeData.ExchangeCode <> '45'\r\n\t\tAND UtilityCompanySeqid = 7\r\n\r\n--SELECT DISTINCT 'Unknown Account',CurrentAccountNumber\r\n--FROM Nypa.UploadNYPAReconcileAccountExistence\r\n--\r\n\r\nINSERT INTO Nypa.UploadNYPAReconcileAccountMeterExistence\r\n\t\t(UtilityCompanySeqid, AccountBillingGroup, PreviousBillingPeriod, BillingPeriod, RevisedBillingPeriod, NextBillingPeriod, IsOriginalBilling, \r\n\t\tCurrentAccountNumber, OriginalAccountNumber, CurrentMeter, OrginalMeter, AssociatedDemandMeter, NumberOfTransactions, \r\n\t\tConsumptionTransactions, DemandTransactions, AccountSeqid, UniqueAccountSeqID /*added on 12/13/2018 */, MeterSeqid, UniqueMeterSeqID /* added on 12/13/2018 */,  AccountExchangeMeterTrackSeqid, MeterBillingSeqid, \r\n\t\tMeterBillingElectricSeqid, MeterBillingAdjustmentElectricSeqid, MeterStatus, MeterPreviousStatus, MeterStatusCodePeriod, ExhangeFileSeqid, \r\n\t\tExchangeCode, ExchangeEffectiveTransactionDate, MeterConstant, MeterTensionCode, MeterBillingAdjustmentTypeElectric, NumberOfDials, \r\n\t\tBillCreationDate, SalesType, UtilityServiceAddress, RecordTypeConsumption, RecordTypeDemand, OrderedReadingCodePairs, \r\n\t\tPreviousPeriodNumberOfEstimatedReadings, ConsumptionReadingCode, DemandReadingCode, MeterType, FromDate, ToDate, \r\n\t\tProductionServiceClass, ProductionServiceClassEffectiveDate, Consumption, ConsumptionFromReading, ConsumptionToReading, \r\n\t\tConsumptionHoursOffPeak, ConsumptionHoursShoulder, Demand, DemandToReading, DemandFromReading, DemandOffPeak, DemandShoulder, \r\n\t\tStreetLightingFacilityPoints, CancelFromDate, CancelToDate, CancelConsumption, CancelConsumptionFromReading, CancelConsumptionToReading, \r\n\t\tCancelConsumptionHoursOffPeak, CancelConsumptionHoursShoulder, CancelDemand, CancelDemandToReading, CancelDemandFromReading, \r\n\t\tCancelDemandOffPeak, CancelDemandShoulder, CancelStreetLightingFacilityPoints, ProductionAndDeliveryTariff, ReadingTypes, CurrentBillingDays, \r\n\t\tAdjustmentBillingDays, ConsumptionToReadingDate, ConsumptionFromReadingDate, DemandToReadingDate, DemandFromReadingDate, \r\n\t\tPostingDate, IsUploadProcessed, ESTOrACT, IsTimeOfDayAccount, AccountName, AccountAddress, BilledDemand, CancelBilledDemand, \r\n\t\tIsSpannedPeriodBill, MeterLocation, EstimatedReading, CurrentPeriodNumberOfEstimatedReadings, AuthenticatedUserID, LastUpdate, DateAdded)\r\nSELECT \r\n\t\tUtilityCompanySeqid, AccountBillingGroup, PreviousBillingPeriod, BillingPeriod, RevisedBillingPeriod, NextBillingPeriod, IsOriginalBilling, \r\n\t\tCurrentAccountNumber, OriginalAccountNumber, CurrentMeter, OrginalMeter, AssociatedDemandMeter, NumberOfTransactions, \r\n\t\tConsumptionTransactions, DemandTransactions, AccountSeqid, UniqueAccountSeqID /*added on 12/13/2018 */, MeterSeqid, UniqueMeterSeqID /* added on 12/13/2018 */, AccountExchangeMeterTrackSeqid, MeterBillingSeqid, \r\n\t\tMeterBillingElectricSeqid, MeterBillingAdjustmentElectricSeqid, MeterStatus, MeterPreviousStatus, MeterStatusCodePeriod, ExhangeFileSeqid, \r\n\t\tExchangeCode, ExchangeEffectiveTransactionDate, MeterConstant, MeterTensionCode, MeterBillingAdjustmentTypeElectric, NumberOfDials, \r\n\t\tBillCreationDate, SalesType, UtilityServiceAddress, RecordTypeConsumption, RecordTypeDemand, OrderedReadingCodePairs, \r\n\t\tPreviousPeriodNumberOfEstimatedReadings, ConsumptionReadingCode, DemandReadingCode, MeterType, FromDate, ToDate, \r\n\t\tProductionServiceClass, ProductionServiceClassEffectiveDate, Consumption, ConsumptionFromReading, ConsumptionToReading, \r\n\t\tConsumptionHoursOffPeak, ConsumptionHoursShoulder, Demand, DemandToReading, DemandFromReading, DemandOffPeak, DemandShoulder, \r\n\t\tStreetLightingFacilityPoints, CancelFromDate, CancelToDate, CancelConsumption, CancelConsumptionFromReading, CancelConsumptionToReading, \r\n\t\tCancelConsumptionHoursOffPeak, CancelConsumptionHoursShoulder, CancelDemand, CancelDemandToReading, CancelDemandFromReading, \r\n\t\tCancelDemandOffPeak, CancelDemandShoulder, CancelStreetLightingFacilityPoints, ProductionAndDeliveryTariff, ReadingTypes, CurrentBillingDays, \r\n\t\tAdjustmentBillingDays, ConsumptionToReadingDate, ConsumptionFromReadingDate, DemandToReadingDate, DemandFromReadingDate, \r\n\t\tPostingDate, IsUploadProcessed, ESTOrACT, IsTimeOfDayAccount, AccountName, AccountAddress, BilledDemand, CancelBilledDemand, \r\n\t\tIsSpannedPeriodBill, MeterLocation, EstimatedReading, CurrentPeriodNumberOfEstimatedReadings, AuthenticatedUserID, LastUpdate, \r\n\t\tDateAdded\r\nFROM \r\n\t\tNypa.UploadNYPAMeterBilling\r\n\r\nDELETE \r\nfrom\tNypa.UploadNYPAReconcileAccountMeterExistence\r\nfrom\tNypa.UploadNYPAReconcileAccountMeterExistence INNER JOIN\r\n\t\tBilling.AccountExchangeMeterTrack ON \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentAccountNumber = Billing.AccountExchangeMeterTrack.OriginalAccountNumber AND \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentMeter = Billing.AccountExchangeMeterTrack.OriginalMeterNumber AND \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.UtilityCompanySeqid = Billing.AccountExchangeMeterTrack.UtilityCompanySeqid\t\r\n\r\nDELETE \r\nfrom\tNypa.UploadNYPAReconcileAccountMeterExistence\r\nFROM\tNypa.UploadNYPAReconcileAccountMeterExistence INNER JOIN\r\n\t\tCommon.ExchangeData ON \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentAccountNumber = Common.ExchangeData.CurrentAccountNumber AND \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentMeter = Common.ExchangeData.CurrentMeterNumber\r\n\t\tWHERE ExchangeData.UtilityCompanySeqid = 7\r\n\t\t\r\nDELETE \r\nfrom\tNypa.UploadNYPAReconcileAccountMeterExistence\r\nfrom\tNypa.UploadNYPAReconcileAccountMeterExistence INNER JOIN\r\n\t\tCommon.ExchangeData ON \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentAccountNumber = Common.ExchangeData.OriginalAccountNumber AND \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentMeter = Common.ExchangeData.OriginalMeterNumber \r\n\t\tWHERE ExchangeData.UtilityCompanySeqid = 7\r\n--\r\n--\tThe account exchange does not have meters associated with the transaction.  This query uses the following tables\r\n--\t\tBilling.AccountExchangeMeterTrack \r\n--\t\tNypa.UploadNYPAReconcileAccountMeterExistence \r\n--\t\tNypa.UploadNYPAExchangeData \r\n--\r\n--\t\tJoining the following to determine the OriginalAccountNumber and OriginalMeterNumber currently existing in EC3 and\r\n--\t\tlinking the CurrentAccountNumber billed to the new CurrentAccountNumber in the exchange data.\r\n--\r\n--\t\t\tBilling.AccountExchangeMeterTrack.OriginalAccountNumber = Nypa.UploadNYPAExchangeData.OriginalAccountNumber\r\n--\t\t\tBilling.AccountExchangeMeterTrack.OriginalMeterNumber = Nypa.UploadNYPAReconcileAccountMeterExistence.CurrentMeter INNER JOIN\r\n--\t\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentAccountNumber = Nypa.UploadNYPAExchangeData.CurrentAccountNumber AND \r\n--\r\nDELETE \r\nfrom\tNypa.UploadNYPAReconcileAccountMeterExistence\r\nFROM     \r\n\t\tBilling.AccountExchangeMeterTrack INNER JOIN\r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence ON \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalMeterNumber = Nypa.UploadNYPAReconcileAccountMeterExistence.CurrentMeter INNER JOIN\r\n\t\tCommon.ExchangeData ON \r\n\t\tNypa.UploadNYPAReconcileAccountMeterExistence.CurrentAccountNumber = Common.ExchangeData.CurrentAccountNumber AND \r\n\t\tBilling.AccountExchangeMeterTrack.OriginalAccountNumber = Common.ExchangeData.OriginalAccountNumber\r\nWHERE \r\n\t\t(Common.ExchangeData.ExchangeCode = 'AX')   \r\n\t\t                                     \t\r\n--SELECT distinct 'Unknown Account-Meter Combination',CurrentAccountNumber, CurrentMeter\r\n--FROM Nypa.UploadNYPAReconcileAccountMeterExistence\r\n--\r\n--\tCheck for any errors in the efile upload and cross check and update the Nypa.UploadNYPAExchangeData with the first byte of the SeverityError.\r\n--\r\n-- Create exchanges from the unknown Accounts ('UA') and known Account unknown Meter combinations ('UM') as the SENY '46' exchange transaction\r\n--\r\n--\r\n--\r\n--  Put code here for Create exchanges\r\n--\r\n--\r\n--\r\nTruncate table Nypa.UploadNYPAReconcileExchangeProcessTransactionVerification\r\n--\r\nSELECT \r\n\t\tDescription, SeverityError, BillingPeriod, ExchangeDataSeqid, ExchangeCode, CurrentAccountNumber, OriginalAccountNumber, \r\n\t\tCurrentMeterNumber, OriginalMeterNumber, AccountExchangeMeterTrackSeqid\r\ninto \r\n\t\t#ReviewExchangeProcessTransactionVerification\r\nFROM \r\n\t\tNypa.uvw_ExchangeProcessTransactionVerification\r\n--\r\n--\tRemove Fatal errors if they are correctable.  The correction below addresses a new account from an account exchange and\r\n--\tlater or that same day has a meter exchange against the new account.\r\n--\r\nDELETE \r\nFROM\t#ReviewExchangeProcessTransactionVerification\r\nFROM \r\n\t\t#ReviewExchangeProcessTransactionVerification INNER JOIN\r\n\t\tCommon.ExchangeData ON \r\n\t\t#ReviewExchangeProcessTransactionVerification.CurrentAccountNumber = Common.ExchangeData.CurrentAccountNumber AND \r\n\t\t#ReviewExchangeProcessTransactionVerification.ExchangeCode <> Common.ExchangeData.ExchangeCode\r\nWHERE \r\n\t\t(SUBSTRING(#ReviewExchangeProcessTransactionVerification.SeverityError, 1, 1) = 'F')\r\n\t\tAND UtilityCompanySeqid=7\r\n\r\n--***************************************************************************************\r\n--* 10/31/2013 PAH  Remove account \"AX\" where the current account number is being reused from one\r\n--*\t\t\t\t\tthat was previously turned off\r\n--***************************************************************************************\r\n\r\nDELETE  FROM #ReviewExchangeProcessTransactionVerification\r\nFROM #ReviewExchangeProcessTransactionVerification AS r\r\n        INNER JOIN Billing.Account AS a ON a.CurrentAccountNumber = r.CurrentAccountNumber\r\n                                           AND a.OriginalAccountNumber = r.CurrentAccountNumber\r\nWHERE   ( r.ExchangeCode = 'AX' )\r\n        AND ( a.AccountStatus = '28' )\r\n--\r\nINSERT INTO Nypa.UploadNYPAReconcileExchangeProcessTransactionVerification\r\n          (Description, SeverityError, BillingPeriod, UploadNYPAExchangeDataSeqid, ExchangeCode, CurrentAccountNumber, OriginalAccountNumber, \r\n          CurrentMeterNumber, OriginalMeterNumber, AccountExchangeMeterTrackSeqid)\r\nSELECT Description, SeverityError, BillingPeriod, ExchangeDataSeqid, ExchangeCode, CurrentAccountNumber, OriginalAccountNumber, \r\n                      CurrentMeterNumber, OriginalMeterNumber, AccountExchangeMeterTrackSeqid\r\nFROM     #ReviewExchangeProcessTransactionVerification\r\n--\r\nSELECT @UploadNYPAReconcileExchangeProcessTransactionVerificationCount = @@rowcount\r\n--\r\nSELECT @Status = 0\r\n--\r\nIF (@UploadNYPAReconcileExchangeProcessTransactionVerificationCount <> 0)\r\n  BEGIN\r\n\tUPDATE\tCommon.ExchangeData\r\n\tSET  \r\n\t\t\tIsProcessed = SUBSTRING(Nypa.UploadNYPAReconcileExchangeProcessTransactionVerification.SeverityError,1,1)\r\n\tFROM \r\n\t\t\tNypa.UploadNYPAReconcileExchangeProcessTransactionVerification INNER JOIN\r\n\t\t\tCommon.ExchangeData ON \r\n\t\t\tNypa.UploadNYPAReconcileExchangeProcessTransactionVerification.UploadNYPAExchangeDataSeqid = Common.ExchangeData.ExchangeDataSeqid\r\n\t\t\tAND Nypa.UploadNYPAReconcileExchangeProcessTransactionVerification.BillingPeriod = Common.ExchangeData.BillingPeriod\r\n\t\t\tAND ExchangeDataSeqid =7\r\n  END\r\n--\r\nDROP TABLE #ReviewExchangeProcessTransactionVerification"
        }
      ]
    }
  ]
}